<!DOCTYPE article
PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with MathML3 v1.3 20210610//EN" "JATS-archivearticle1-3-mathml3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.3" xml:lang="en" article-type="research-article"><?properties open_access?><processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats"><restricted-by>pmc</restricted-by></processing-meta><front><journal-meta><journal-id journal-id-type="nlm-ta">Sensors (Basel)</journal-id><journal-id journal-id-type="iso-abbrev">Sensors (Basel)</journal-id><journal-id journal-id-type="publisher-id">sensors</journal-id><journal-title-group><journal-title>Sensors (Basel, Switzerland)</journal-title></journal-title-group><issn pub-type="epub">1424-8220</issn><publisher><publisher-name>MDPI</publisher-name></publisher></journal-meta>
<article-meta><article-id pub-id-type="pmid">40006402</article-id><article-id pub-id-type="pmc">PMC11860033</article-id><article-id pub-id-type="doi">10.3390/s25041174</article-id><article-id pub-id-type="publisher-id">sensors-25-01174</article-id><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title>NELD-EC: Neighborhood-Effective-Line-Density-Based Euclidean Clustering for Point Cloud Segmentation</article-title></title-group><contrib-group><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-3512-0147</contrib-id><name><surname>Su</surname><given-names>Zhigang</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Conceptualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/conceptualization/">Conceptualization</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Methodology" vocab-term-identifier="https://credit.niso.org/contributor-roles/methodology/">Methodology</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Validation" vocab-term-identifier="https://credit.niso.org/contributor-roles/validation/">Validation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Formal analysis" vocab-term-identifier="https://credit.niso.org/contributor-roles/formal-analysis/">Formal analysis</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Resources" vocab-term-identifier="https://credit.niso.org/contributor-roles/resources/">Resources</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x02013; original draft" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-original-draft/">Writing &#x02013; original draft</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x02013; review &#x00026; editing" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-review-editing/">Writing &#x02013; review &#x00026; editing</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Supervision" vocab-term-identifier="https://credit.niso.org/contributor-roles/supervision/">Supervision</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Project administration" vocab-term-identifier="https://credit.niso.org/contributor-roles/project-administration/">Project administration</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Funding acquisition" vocab-term-identifier="https://credit.niso.org/contributor-roles/funding-acquisition/">Funding acquisition</role><xref rid="af1-sensors-25-01174" ref-type="aff">1</xref><xref rid="c1-sensors-25-01174" ref-type="corresp">*</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0009-0000-3616-9930</contrib-id><name><surname>Du</surname><given-names>Shixing</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Software" vocab-term-identifier="https://credit.niso.org/contributor-roles/software/">Software</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Formal analysis" vocab-term-identifier="https://credit.niso.org/contributor-roles/formal-analysis/">Formal analysis</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Investigation" vocab-term-identifier="https://credit.niso.org/contributor-roles/investigation/">Investigation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Data curation" vocab-term-identifier="https://credit.niso.org/contributor-roles/data-curation/">Data curation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x02013; original draft" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-original-draft/">Writing &#x02013; original draft</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x02013; review &#x00026; editing" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-review-editing/">Writing &#x02013; review &#x00026; editing</role><xref rid="af1-sensors-25-01174" ref-type="aff">1</xref></contrib><contrib contrib-type="author"><name><surname>Hao</surname><given-names>Jingtang</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Software" vocab-term-identifier="https://credit.niso.org/contributor-roles/software/">Software</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Validation" vocab-term-identifier="https://credit.niso.org/contributor-roles/validation/">Validation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Investigation" vocab-term-identifier="https://credit.niso.org/contributor-roles/investigation/">Investigation</role><xref rid="af1-sensors-25-01174" ref-type="aff">1</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-4515-7218</contrib-id><name><surname>Han</surname><given-names>Bing</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Validation" vocab-term-identifier="https://credit.niso.org/contributor-roles/validation/">Validation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Data curation" vocab-term-identifier="https://credit.niso.org/contributor-roles/data-curation/">Data curation</role><xref rid="af1-sensors-25-01174" ref-type="aff">1</xref></contrib><contrib contrib-type="author"><name><surname>Ge</surname><given-names>Peng</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Resources" vocab-term-identifier="https://credit.niso.org/contributor-roles/resources/">Resources</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Data curation" vocab-term-identifier="https://credit.niso.org/contributor-roles/data-curation/">Data curation</role><xref rid="af2-sensors-25-01174" ref-type="aff">2</xref></contrib><contrib contrib-type="author"><name><surname>Wang</surname><given-names>Yue</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Resources" vocab-term-identifier="https://credit.niso.org/contributor-roles/resources/">Resources</role><xref rid="af3-sensors-25-01174" ref-type="aff">3</xref></contrib></contrib-group><contrib-group><contrib contrib-type="editor"><name><surname>Previtali</surname><given-names>Mattia</given-names></name><role>Academic Editor</role></contrib></contrib-group><aff id="af1-sensors-25-01174"><label>1</label>Sino-European Institute of Aviation Engineering, Civil Aviation University of China, Tianjin 300300, China; <email>du.shix@foxmail.com</email> (S.D.); <email>jthao@cauc.edu.cn</email> (J.H.); <email>b-han@cauc.edu.cn</email> (B.H.)</aff><aff id="af2-sensors-25-01174"><label>2</label>The 38th Research Institute of China Electronics Technology Group Corporation, Hefei 230093, China; <email>gepeng09@gmail.com</email></aff><aff id="af3-sensors-25-01174"><label>3</label>Information Countermeasure Technology Laboratory, Beijing Research Institute of Telemetry, Beijing 100076, China; <email>wangyue@brit.com.cn</email></aff><author-notes><corresp id="c1-sensors-25-01174"><label>*</label>Correspondence: <email>ssrsu@vip.sina.com</email></corresp></author-notes><pub-date pub-type="epub"><day>14</day><month>2</month><year>2025</year></pub-date><pub-date pub-type="collection"><month>2</month><year>2025</year></pub-date><volume>25</volume><issue>4</issue><elocation-id>1174</elocation-id><history><date date-type="received"><day>04</day><month>12</month><year>2024</year></date><date date-type="rev-recd"><day>08</day><month>2</month><year>2025</year></date><date date-type="accepted"><day>12</day><month>2</month><year>2025</year></date></history><permissions><copyright-statement>&#x000a9; 2025 by the authors.</copyright-statement><copyright-year>2025</copyright-year><license><ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>).</license-p></license></permissions><abstract><p>For the problem that it is difficult to effectively cluster lidar point clouds with irregular shapes and uneven densities, a Neighborhood Effective Line Density (NELD)-based Euclidean Clustering (NELD-EC) algorithm is proposed in this paper. The NELD-EC algorithm first eliminates the interfering points within the neighborhood of the data point by utilizing the distance relationship and calculates the NELD of the data point using the effective neighborhood set without interfering points of the data point. The NELD of a data point is taken as the local density of that data point. Then, the NELD-EC algorithm conducts clustering processing using the NELD of all data points and uses the reciprocal of the harmonic average of the local densities of all data points within each cluster after clustering as the distance threshold for the data points within the cluster. Finally, the NELD-EC algorithm completes the clustering of the point cloud based on the adjusted adaptive distance threshold. The clustering experimental results on simulated point clouds, fixed point clouds, and sequential point clouds indicate that, compared with several other typical Euclidean clustering algorithms, the NELD-EC algorithm requires simpler parameters to be set, is less sensitive to the initial distance threshold, can effectively reduce the occurrence probabilities of over-segmentation and under-segmentation, and has strong stability in clustering performance. The NELD-EC algorithm is more suitable for processing sequential point clouds in actual dynamic and complex scenarios.</p></abstract><kwd-group><kwd>lidar</kwd><kwd>point cloud clustering</kwd><kwd>effective neighborhood</kwd><kwd>adaptive threshold</kwd><kwd>uneven density</kwd></kwd-group><funding-group><award-group><funding-source>Tianjin Municipal Education Commission</funding-source><award-id>2022KJ059</award-id></award-group><award-group><funding-source>Fundamental Research Funds for the Central Universities</funding-source><award-id>3122017111</award-id></award-group><funding-statement>This research was funded by the Tianjin Municipal Education Commission under Grant No. 2022KJ059 and the Fundamental Research Funds for the Central Universities under Grant No. 3122017111.</funding-statement></funding-group></article-meta></front><body><sec sec-type="intro" id="sec1-sensors-25-01174"><title>1. Introduction</title><p>Lidar, an active detection device with high precision and long-range detection capabilities, has been widely applied in fields such as remote sensing, autonomous driving, unmanned aerial vehicle mapping, and robot navigation [<xref rid="B1-sensors-25-01174" ref-type="bibr">1</xref>,<xref rid="B2-sensors-25-01174" ref-type="bibr">2</xref>]. The extremely narrow needle-shaped beam employed by laser radar causes the target information it collects to present in the form of point clouds [<xref rid="B3-sensors-25-01174" ref-type="bibr">3</xref>]. For applications based on lidar, such as target recognition and tracking, it is necessary to separate the point clouds belonging to different targets, that is, to conduct clustering processing on the collected point clouds. Due to the variations in target reflection characteristics and morphologies, point clouds exhibit irregular shapes and non-uniform densities [<xref rid="B4-sensors-25-01174" ref-type="bibr">4</xref>,<xref rid="B5-sensors-25-01174" ref-type="bibr">5</xref>], especially the point clouds collected that reflect large-scale environments [<xref rid="B2-sensors-25-01174" ref-type="bibr">2</xref>,<xref rid="B6-sensors-25-01174" ref-type="bibr">6</xref>], where there are significant density differences between the point clouds of distant and near targets. How to achieve effective clustering of irregular and non-uniform point clouds is a challenging issue in the field of point cloud processing.</p><p>At present, the methods for point cloud clustering mainly comprise model-based methods [<xref rid="B7-sensors-25-01174" ref-type="bibr">7</xref>,<xref rid="B8-sensors-25-01174" ref-type="bibr">8</xref>], density-based methods [<xref rid="B5-sensors-25-01174" ref-type="bibr">5</xref>,<xref rid="B9-sensors-25-01174" ref-type="bibr">9</xref>,<xref rid="B10-sensors-25-01174" ref-type="bibr">10</xref>], distance-based methods [<xref rid="B11-sensors-25-01174" ref-type="bibr">11</xref>,<xref rid="B12-sensors-25-01174" ref-type="bibr">12</xref>,<xref rid="B13-sensors-25-01174" ref-type="bibr">13</xref>,<xref rid="B14-sensors-25-01174" ref-type="bibr">14</xref>], and deep learning-based methods [<xref rid="B15-sensors-25-01174" ref-type="bibr">15</xref>,<xref rid="B16-sensors-25-01174" ref-type="bibr">16</xref>,<xref rid="B17-sensors-25-01174" ref-type="bibr">17</xref>,<xref rid="B18-sensors-25-01174" ref-type="bibr">18</xref>,<xref rid="B19-sensors-25-01174" ref-type="bibr">19</xref>]. Among these clustering methods, the distance-based methods possess the features of simple logic, fast running speed, and wide application scope, and have garnered extensive attention. The Euclidean Clustering (EC) algorithm is a classic clustering method based on Euclidean distance [<xref rid="B11-sensors-25-01174" ref-type="bibr">11</xref>,<xref rid="B20-sensors-25-01174" ref-type="bibr">20</xref>,<xref rid="B21-sensors-25-01174" ref-type="bibr">21</xref>]. This method determines the neighborhood of data points according to the distance threshold and regards data points within the same neighborhood as belonging to the same category, thereby achieving the clustering of point clouds. The magnitude of the distance threshold adopted by the EC algorithm influences the clustering effect of the algorithm. An overly large or small distance threshold will cause the EC algorithm to undergo under- or over-segmentation during the clustering process. When clustering irregular and non-uniform point clouds, it is quite challenging for the EC algorithm to employ a fixed distance threshold to simultaneously avoid the occurrence of under- and over-segmentation.</p><p>To achieve effective clustering of irregular and uneven point clouds, some approaches for dynamically adjusting the distance threshold of the EC algorithm have been put forward [<xref rid="B12-sensors-25-01174" ref-type="bibr">12</xref>,<xref rid="B13-sensors-25-01174" ref-type="bibr">13</xref>,<xref rid="B14-sensors-25-01174" ref-type="bibr">14</xref>,<xref rid="B22-sensors-25-01174" ref-type="bibr">22</xref>,<xref rid="B23-sensors-25-01174" ref-type="bibr">23</xref>], mainly including classification methods and adaptive methods. The classification method divides point cloud data into several regions based on the characteristic of points being denser in the near range and sparser in the far range according to the distance. Different distance thresholds are assigned to each region [<xref rid="B12-sensors-25-01174" ref-type="bibr">12</xref>,<xref rid="B22-sensors-25-01174" ref-type="bibr">22</xref>], or the boundary regions of multi-cluster point clouds are classified [<xref rid="B23-sensors-25-01174" ref-type="bibr">23</xref>]. To a certain extent, the classification method alleviates the clustering problem of uneven point clouds. However, this method is highly directive. For point clouds that do not conform to the characteristic of being denser in the near range and sparser in the far range, this type of method cannot effectively partition the data, thus leading to poor clustering performance. The adaptive method determines the distance threshold based on the distribution of each point in the neighborhood of the data point [<xref rid="B13-sensors-25-01174" ref-type="bibr">13</xref>,<xref rid="B14-sensors-25-01174" ref-type="bibr">14</xref>]. The adaptive method uses the local or relative features of the data point to dynamically adjust the distance threshold, such as the LDT-EC algorithm that employs the local density-based threshold (LDT) [<xref rid="B13-sensors-25-01174" ref-type="bibr">13</xref>], and the RDT-EC algorithm that uses the relative distance-based threshold (RDT) [<xref rid="B14-sensors-25-01174" ref-type="bibr">14</xref>]. The EC algorithm with an adaptive threshold can adapt to the clustering problem of point clouds with different densities. These adaptive methods for determining the distance threshold all require the use of neighborhood information. The neighborhood of the data point is determined by the initial distance threshold. Therefore, the quality of the selection of the initial distance threshold will also affect the subsequent determination of the adaptive distance threshold and indirectly influence the clustering performance of the improved EC algorithm.</p><p>To achieve effective clustering of sparse and uneven point clouds, an effective approach for defining the local density of data points is proposed in this paper. This method eliminates interfering points by exploiting the distance variations among data points within the neighborhood, thereby calculating the local density of data points using only valid points. This density is defined as the Neighborhood Effective Line Density (NELD). As NELD is not influenced by interfering points, it offers a more rational characterization of the local density of data points. Based on the NELD of all data points obtained, a Euclidean clustering method with an adaptive threshold is presented, which is referred to as the NELD-based Euclidean Clustering (NELD-EC) algorithm. The NELD-EC algorithm builds upon the classic EC algorithm [<xref rid="B11-sensors-25-01174" ref-type="bibr">11</xref>] and incorporates the idea of the LDT-EC algorithm in adaptively determining the threshold using local density. The NELD-EC algorithm partitions the point cloud into several sets based on the disparities in local density, and the reciprocal of the harmonic average of the local density of each data point within each set serves as the distance threshold for each point within that set. The NELD-EC algorithm employs these adjusted distance thresholds to carry out clustering on irregular and uneven point clouds. The main innovations of the NELD-EC algorithm lie in:<list list-type="order"><list-item><p>The NELD-EC algorithm regards the cluster of points closest to the data point within the neighborhood as the effective neighborhood points, while the others are treated as interference points. The NELD-EC algorithm utilizes the distance variance of data points within the neighborhood to eliminate the interference points and only employs the effective neighborhood points to compute the local density of the data points. Hence, this local density is insensitive to the selection of the initial distance threshold.</p></list-item><list-item><p>The NELD-EC algorithm partitions the point cloud into several sets in accordance with the local density variance. Points with similar densities are categorized into the same set, and the distance threshold for the data points in each set will be determined based on the local density of the points within that set. The distance threshold adjustment strategy of the NELD-EC algorithm can well address the issue of adaptive setting of distance thresholds for point clouds with different densities and enhance the clustering performance of the NELD-EC algorithm on non-uniform point clouds.</p></list-item></list></p><p>The remaining sections of this paper are structured as follows: <xref rid="sec2-sensors-25-01174" ref-type="sec">Section 2</xref> elaborates in detail the two key points of the density-inhomogeneous point cloud clustering task in this paper and describes and analyzes the existing related methods. The proposed NELD-EC algorithm is presented in <xref rid="sec3-sensors-25-01174" ref-type="sec">Section 3</xref>. In <xref rid="sec4-sensors-25-01174" ref-type="sec">Section 4</xref>, comparative experiments are carried out using simulated data sets, point cloud data collected at fixed points, and sequential point cloud data. It is proved that the proposed algorithm is significantly superior to other classic EC algorithms in terms of initial distance threshold sensitivity, suppression of under-segmentation and over-segmentation capabilities, and clustering effect. The NELD-EC algorithm demonstrates superior performance in clustering irregular and inhomogeneous point clouds. Finally, the conclusions of this paper are presented in <xref rid="sec5-sensors-25-01174" ref-type="sec">Section 5</xref>.</p></sec><sec id="sec2-sensors-25-01174"><title>2. Description of the Problem</title><p>Assume that the point cloud is a set composed of <italic toggle="yes">I</italic> data points in space, denoted as <inline-formula><mml:math id="mm1" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>I</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. Commonly, the point cloud in space is not uniformly distributed but presents a certain aggregation form, that is, the data points are distributed in clusters. Therefore, the point cloud set <italic toggle="yes">P</italic> can also be expressed as <inline-formula><mml:math id="mm2" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, where <italic toggle="yes">M</italic> is the total number of clusters in the point cloud set <italic toggle="yes">P</italic>, <inline-formula><mml:math id="mm3" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> represents the data point set constituting the <italic toggle="yes">m</italic>-th cluster, denoted as <inline-formula><mml:math id="mm4" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>I</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="mm5" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfenced separators="" open="|" close="|"><mml:msub><mml:mi>C</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula> is the number of data points in the set <inline-formula><mml:math id="mm6" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. The function <inline-formula><mml:math id="mm7" overflow="scroll"><mml:mrow><mml:mfenced separators="" open="|" close="|"><mml:mspace width="0.166667em"/><mml:mo>&#x000b7;</mml:mo><mml:mspace width="0.166667em"/></mml:mfenced></mml:mrow></mml:math></inline-formula> indicates the number of data points in the set. The clustering of the point cloud is to correctly assign each data point in the point cloud set <italic toggle="yes">P</italic> to the corresponding cluster set.</p><p>When clustering irregular and non-uniform point clouds, EC-type algorithms are required to adaptively adjust the distance threshold according to the distribution of data points in the neighborhood of the data point. For instance, the LDT-EC algorithm determines the corresponding distance threshold based on the local density of the data point. Consequently, the performance of EC-type algorithms is influenced by the definition of the local density of the data point and the method of calculating the adaptive distance threshold.</p><sec id="sec2dot1-sensors-25-01174"><title>2.1. Definition of the Local Density of Data Point</title><p>There exist multiple definitions regarding the local density of a data point, among which the more mainstream ones fall into two categories: the definitions based on neighborhood and those based on nearest neighbors. The definition based on neighborhood takes the data point <inline-formula><mml:math id="mm8" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as the center and a distance threshold <italic toggle="yes">d</italic> as the radius to determine the neighborhood, and the points within this area constitute the neighborhood set of <inline-formula><mml:math id="mm9" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>
<disp-formula id="FD1-sensors-25-01174"><label>(1)</label><mml:math id="mm10" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi mathvariant="normal">d</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&#x02223;</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02264;</mml:mo><mml:mi>d</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm11" overflow="scroll"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> denotes the Euclidean distance between two points, <inline-formula><mml:math id="mm12" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm13" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, in space. For the convenience of subsequent descriptions, <inline-formula><mml:math id="mm14" overflow="scroll"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is referred to as the <inline-formula><mml:math id="mm15" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>-distance of point <inline-formula><mml:math id="mm16" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. According to the neighborhood set <inline-formula><mml:math id="mm17" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi mathvariant="normal">d</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> of point <inline-formula><mml:math id="mm18" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, the local density of point <inline-formula><mml:math id="mm19" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> can be defined as<disp-formula id="FD2-sensors-25-01174"><label>(2)</label><mml:math id="mm20" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003c1;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mfenced separators="" open="|" close="|"><mml:msub><mml:mi>S</mml:mi><mml:mi mathvariant="normal">d</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mfenced><mml:mrow><mml:mn>4</mml:mn><mml:mi>&#x003c0;</mml:mi><mml:msup><mml:mi>d</mml:mi><mml:mn>3</mml:mn></mml:msup><mml:mo>/</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></disp-formula>
from Equation (<xref rid="FD2-sensors-25-01174" ref-type="disp-formula">2</xref>), the local density of data points based on the neighborhood definition refers to the number of data points per unit volume within the data point&#x02019;s neighborhood.</p><p>Another category of methods for determining the data point set around <inline-formula><mml:math id="mm21" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is to employ the proximity relationship among data points. Commonly used proximity relationships include K-nearest neighbors (KNN), reverse K-nearest neighbors (RNN), etc. The set of K-nearest neighbors of data point <inline-formula><mml:math id="mm22" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is defined as<disp-formula id="FD3-sensors-25-01174"><label>(3)</label><mml:math id="mm23" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi>KNN</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&#x02223;</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02264;</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mi>K</mml:mi></mml:msubsup><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm24" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>K</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> indicates the <italic toggle="yes">K</italic>-th smallest <inline-formula><mml:math id="mm25" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>-distance from data point <inline-formula><mml:math id="mm26" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. By utilizing the K-nearest neighbor set <inline-formula><mml:math id="mm27" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi>KNN</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, the local density of data point <inline-formula><mml:math id="mm28" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> can be defined as<disp-formula id="FD4-sensors-25-01174"><label>(4)</label><mml:math id="mm29" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003c1;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mfenced separators="" open="|" close="|"><mml:msub><mml:mi>S</mml:mi><mml:mi>KNN</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mfenced><mml:mrow><mml:msub><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&#x02208;</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>KNN</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msub><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>Evidently, the local density defined by Equation (<xref rid="FD4-sensors-25-01174" ref-type="disp-formula">4</xref>) can better depict the variations in local density resulting from different distribution patterns of the same number of points near point <inline-formula><mml:math id="mm30" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. On the foundation of Equation (<xref rid="FD4-sensors-25-01174" ref-type="disp-formula">4</xref>), successive improved versions of various local density definitions have been presented [<xref rid="B24-sensors-25-01174" ref-type="bibr">24</xref>,<xref rid="B25-sensors-25-01174" ref-type="bibr">25</xref>]. These enhanced versions either modify the calculation method of the denominator in Equation (<xref rid="FD4-sensors-25-01174" ref-type="disp-formula">4</xref>) or adopt a way of rapidly constructing the neighborhood set, thereby attaining a more rational description of the local density of data point <inline-formula><mml:math id="mm31" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p><p>By comparing Equation (<xref rid="FD1-sensors-25-01174" ref-type="disp-formula">1</xref>) with Equation (<xref rid="FD3-sensors-25-01174" ref-type="disp-formula">3</xref>), it can be observed that the neighbor-hood set <inline-formula><mml:math id="mm32" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi mathvariant="normal">d</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> determined by Equation (<xref rid="FD1-sensors-25-01174" ref-type="disp-formula">1</xref>) employs an identical radius for any data point within the point cloud, whereas the K-nearest neighbor set <inline-formula><mml:math id="mm33" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi>KNN</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> defined by Equation (<xref rid="FD3-sensors-25-01174" ref-type="disp-formula">3</xref>) involves a radius that varies with the selected data point. Nevertheless, both the neighborhood set and the nearest neighbor set are centered on the data point <inline-formula><mml:math id="mm34" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and determine the scope of data points encompassed by the set within a certain radius. This approach of determining nearby points inevitably causes some interfering points to be incorporated into the set. Taking the three-dimensional point cloud data of a certain intersection in the urban area of Sydney as an example, its top view is depicted in <xref rid="sensors-25-01174-f001" ref-type="fig">Figure 1</xref>. As shown in <xref rid="sensors-25-01174-f001" ref-type="fig">Figure 1</xref>, the point cloud data on the horizontal plane consists of multiple clusters. For a given distance threshold <italic toggle="yes">d</italic>, the ideal neighborhood set should be similar to the situation around data point <inline-formula><mml:math id="mm35" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> in the figure. However, in actual data, circumstances similar to those of <inline-formula><mml:math id="mm36" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm37" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> are bound to exist. As illustrated in <xref rid="sensors-25-01174-f001" ref-type="fig">Figure 1</xref>, the clusters <inline-formula><mml:math id="mm38" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm39" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> within the neighborhood of point <inline-formula><mml:math id="mm40" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, and the clusters <inline-formula><mml:math id="mm41" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mn>5</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm42" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mn>7</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> within the neighborhood of point <inline-formula><mml:math id="mm43" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, interfere with the local density calculation of data points <inline-formula><mml:math id="mm44" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm45" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, thereby influencing the subsequent clustering processing of the point cloud. Hence, it is necessary to explore more rational local density calculation methods to realize the elimination of the influence of interfering points on the local density of the data point.</p></sec><sec id="sec2dot2-sensors-25-01174"><title>2.2. Determination of the Adaptive Distance Threshold</title><p>In EC-type algorithms, the adaptive distance threshold can be determined either based on the local density or relative distance.</p><p>The LDT-EC algorithm adaptively determines the distance threshold of data points based on local density. The LDT-EC algorithm computes the local density <inline-formula><mml:math id="mm46" overflow="scroll"><mml:mrow><mml:msub><mml:mi>&#x003c1;</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> of all data points in accordance with the initial distance threshold <italic toggle="yes">d</italic> by Equation (<xref rid="FD2-sensors-25-01174" ref-type="disp-formula">2</xref>) and acquires the local density mean <inline-formula><mml:math id="mm47" overflow="scroll"><mml:mrow><mml:mover accent="true"><mml:mi>&#x003c1;</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula>. The LDT-EC algorithm ascertains the adaptive distance threshold based on the magnitude relationship between the local density <inline-formula><mml:math id="mm48" overflow="scroll"><mml:mrow><mml:msub><mml:mi>&#x003c1;</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> of the data point and the local density mean <inline-formula><mml:math id="mm49" overflow="scroll"><mml:mrow><mml:mover accent="true"><mml:mi>&#x003c1;</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula>: <disp-formula id="FD5-sensors-25-01174"><label>(5)</label><mml:math id="mm50" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mo>+</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:mfenced separators="" open="{" close=""><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:munder><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&#x02208;</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi mathvariant="normal">d</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:munder><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi mathvariant="normal">d</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>&#x003c1;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#x02265;</mml:mo><mml:mover accent="true"><mml:mi>&#x003c1;</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mo movablelimits="true" form="prefix">max</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02223;</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&#x02208;</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi mathvariant="normal">d</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>&#x003c1;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#x0003c;</mml:mo><mml:mover accent="true"><mml:mi>&#x003c1;</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mfenced></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>It is evident from Equation (<xref rid="FD5-sensors-25-01174" ref-type="disp-formula">5</xref>) that for data points with a relatively high local density, their distance threshold <inline-formula><mml:math id="mm51" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mo>+</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> is determined by the mean of the <inline-formula><mml:math id="mm52" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>-distances within the neighborhood of that point. However, for data points with a relatively low local density, their distance threshold <inline-formula><mml:math id="mm53" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mo>+</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> is defined by the maximum <inline-formula><mml:math id="mm54" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>-distance within the neighborhood of the point. Clearly, the distance threshold <inline-formula><mml:math id="mm55" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mo>+</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> determined by Equation (<xref rid="FD5-sensors-25-01174" ref-type="disp-formula">5</xref>) is associated with the local density of data point <inline-formula><mml:math id="mm56" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and the distribution of data points within its neighborhood. As the distribution of data points within the neighborhood of data point <inline-formula><mml:math id="mm57" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> changes, the distance threshold <inline-formula><mml:math id="mm58" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mo>+</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> also adaptively varies. As the local density of data points is influenced by the initial distance threshold, consequently, the selection of the initial distance threshold indirectly affects the adaptive distance threshold <inline-formula><mml:math id="mm59" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mo>+</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula>.</p><p>The RDT-EC algorithm employs the relative distance between data points and the lidar to define the adaptive distance threshold [<xref rid="B14-sensors-25-01174" ref-type="bibr">14</xref>].<disp-formula id="FD6-sensors-25-01174"><label>(6)</label><mml:math id="mm60" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mo>+</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>d</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mfrac></mml:mstyle><mml:mi>d</mml:mi></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm61" overflow="scroll"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> indicates the Euclidean distance between the lidar and the nearest data point in the point cloud, <inline-formula><mml:math id="mm62" overflow="scroll"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is the distance between the data point <inline-formula><mml:math id="mm63" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and the lidar, and <inline-formula><mml:math id="mm64" overflow="scroll"><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow></mml:math></inline-formula> is the adjustment parameter.</p><p>From the above analysis, it is evident that regardless of whether it is the method based on local density or the one based on relative distance, the setting of the adaptive distance threshold relies on the selection of the initial distance threshold. The quality of the initial distance threshold selection influences the determination of the adaptive distance threshold and further affects the clustering effect of the point cloud.</p></sec></sec><sec id="sec3-sensors-25-01174"><title>3. NELD-EC Algorithm</title><p>Given that the initial distance threshold has an impact on the local density of data points and the adaptive distance threshold in the EC-type algorithms, in this section, the method is studied to mitigate the influence of the initial distance threshold, and subsequently, the NELD-EC algorithm is proposed for irregular and uneven point cloud&#x000a0;clustering.</p><sec id="sec3dot1-sensors-25-01174"><title>3.1. Elimination of the Interfering Points Within the Neighborhood</title><p>As previously stated, the existence of interfering points within the neighborhood of a data point affects the value of the local density of the data point. With the increase in the distance threshold, the number of interfering points within the neighborhood will also increase, thereby weakening the descriptive ability of the local density for the data point. Hence, to reduce the influence of the initial distance threshold on the local density, it is necessary to eliminate the interfering points within the neighborhood.</p><p>It can be observed from the example in <xref rid="sensors-25-01174-f001" ref-type="fig">Figure 1</xref> that the interfering points within the neighborhood of the data point are usually farther away from the data point compared to the valid points. Therefore, the interfering points can be distinguished from the valid points from the perspective of distance.</p><p>For the data point <inline-formula><mml:math id="mm65" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, given the initial distance threshold <italic toggle="yes">d</italic>, the neighborhood set <inline-formula><mml:math id="mm66" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi mathvariant="normal">d</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> can be acquired. The distance <inline-formula><mml:math id="mm67" overflow="scroll"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> between the data point <inline-formula><mml:math id="mm68" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and each data point <inline-formula><mml:math id="mm69" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> within the neighborhood set <inline-formula><mml:math id="mm70" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi mathvariant="normal">d</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> is calculated. Without loss of generality, the distances <inline-formula><mml:math id="mm71" overflow="scroll"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> of each data point are quantified with the unit of the smallest non-zero distance<disp-formula id="FD7-sensors-25-01174"><label>(7)</label><mml:math id="mm72" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>&#x003b4;</mml:mi><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="true" form="prefix">min</mml:mo><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x0003e;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:munder><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></disp-formula>
constituting the neighborhood distance set<disp-formula id="FD8-sensors-25-01174"><label>(8)</label><mml:math id="mm73" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02223;</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&#x02208;</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi mathvariant="normal">d</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula>
of the data point <inline-formula><mml:math id="mm74" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p><p><xref rid="sensors-25-01174-f002" ref-type="fig">Figure 2</xref> presents three typical spatial distribution scenarios of data points <inline-formula><mml:math id="mm75" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> when interfering points exist within their neighborhood. <xref rid="sensors-25-01174-f002" ref-type="fig">Figure 2</xref>a represents a relatively conventional spatial distribution, where valid points are relatively concentrated around <inline-formula><mml:math id="mm76" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, while interfering points are distributed in regions farther away. <xref rid="sensors-25-01174-f002" ref-type="fig">Figure 2</xref>b and <xref rid="sensors-25-01174-f002" ref-type="fig">Figure 2</xref>c depict more extreme cases of neighborhood distributions, corresponding to scenarios where a relatively large and small number of interfering points are present, respectively. To establish a distance axis with data point <inline-formula><mml:math id="mm77" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as the origin, the elements of the set <inline-formula><mml:math id="mm78" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula> are mapped onto this axis, as illustrated in <xref rid="sensors-25-01174-f002" ref-type="fig">Figure 2</xref>d&#x02013;f. From the distribution of elements in the set <inline-formula><mml:math id="mm79" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula> along the numerical axis, it can be observed that the <inline-formula><mml:math id="mm80" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>-distances within the neighborhood of data point <inline-formula><mml:math id="mm81" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> exhibit variability. A suitable clustering method, such as the DBSCAN algorithm, can be employed to categorize the elements in <inline-formula><mml:math id="mm82" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula> based on their relative distances. The clustering results for <xref rid="sensors-25-01174-f002" ref-type="fig">Figure 2</xref>d, <xref rid="sensors-25-01174-f002" ref-type="fig">Figure 2</xref>e, and <xref rid="sensors-25-01174-f002" ref-type="fig">Figure 2</xref>f are shown in <xref rid="sensors-25-01174-f002" ref-type="fig">Figure 2</xref>g, <xref rid="sensors-25-01174-f002" ref-type="fig">Figure 2</xref>h, and <xref rid="sensors-25-01174-f002" ref-type="fig">Figure 2</xref>i, respectively. A comparison of the clustering results under the three scenarios indicates that the clusters formed by interfering points are generally positioned farther from the origin, whereas the clusters composed of valid points are typically the closest to the origin.</p><p>For a given data point <inline-formula><mml:math id="mm83" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, assuming that its corresponding neighborhood distance set <inline-formula><mml:math id="mm84" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula> is clustered into <inline-formula><mml:math id="mm85" overflow="scroll"><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> clusters, the set <inline-formula><mml:math id="mm86" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula> can then be expressed in the form of a cluster set as<disp-formula id="FD9-sensors-25-01174"><label>(9)</label><mml:math id="mm87" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mn>1</mml:mn><mml:mi>D</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mn>2</mml:mn><mml:mi>D</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow><mml:mi>D</mml:mi></mml:msubsup><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm88" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mi>D</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> denotes the <italic toggle="yes">m</italic>-th cluster in the set <inline-formula><mml:math id="mm89" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula>. The cluster that is closest to the data point <inline-formula><mml:math id="mm90" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is selected as the effective neighborhood distance set<disp-formula id="FD10-sensors-25-01174"><label>(10)</label><mml:math id="mm91" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>D</mml:mi><mml:mi mathvariant="normal">V</mml:mi></mml:msup><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="false" form="prefix">min</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mi>m</mml:mi><mml:mi>D</mml:mi></mml:msubsup></mml:munder><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mfenced separators="" open="|" close="|"><mml:msubsup><mml:mi>C</mml:mi><mml:mi>m</mml:mi><mml:mi>D</mml:mi></mml:msubsup></mml:mfenced></mml:mfrac></mml:mstyle><mml:msub><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mi>m</mml:mi><mml:mi>D</mml:mi></mml:msubsup></mml:mrow></mml:msub><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></disp-formula>
the set composed of the data points corresponding to the effective neighborhood distance set <inline-formula><mml:math id="mm92" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msup><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula> is referred to as the effective neighborhood set<disp-formula id="FD11-sensors-25-01174"><label>(11)</label><mml:math id="mm93" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfenced separators="" open="{" close="}"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mfenced separators="" open="|" close=""><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>D</mml:mi><mml:mi mathvariant="normal">V</mml:mi></mml:msup><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:math></disp-formula>
the set <inline-formula><mml:math id="mm94" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> fulfills the purpose of eliminating interfering points within the neighborhood of the data point <inline-formula><mml:math id="mm95" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p><p>The effective neighborhood set <inline-formula><mml:math id="mm96" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> obtained after clustering the neighborhood of data point <inline-formula><mml:math id="mm97" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> not only eliminates the impact of interfering points on the local density but also reduces the sensitivity of subsequent processing to the initial distance threshold <italic toggle="yes">d</italic>. When the initial distance threshold <italic toggle="yes">d</italic> increases to a certain extent, the effective points have been completely encompassed within the neighborhood of the data point, and the interfering points within the neighborhood can be identified and removed through clustering. Thus, the initial distance threshold <italic toggle="yes">d</italic> no longer affects the calculation of the local density of the data point.</p><p>When clustering the neighborhood distance set <inline-formula><mml:math id="mm98" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula>, the DBSCAN algorithm requires the determination of two parameters: the minimum number of points minPts and the neighborhood radius eps. To ensure that all density-connected points are merged into the same cluster during the clustering process of <inline-formula><mml:math id="mm99" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula>, all points within the set <inline-formula><mml:math id="mm100" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula> must be regarded as core points, and thus minPts is set to 1. The neighborhood radius eps controls the neighborhood size during DBSCAN clustering and influences the cluster boundaries, meaning that the selection of eps directly affects the ability to accurately identify the valid neighborhood distance set <inline-formula><mml:math id="mm101" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msup><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula>. Using 50 randomly selected data points from the three-dimensional point cloud dataset of an intersection in downtown Sydney, as shown in <xref rid="sensors-25-01174-f001" ref-type="fig">Figure 1</xref>, as the experimental dataset, the smallest non-zero distance <inline-formula><mml:math id="mm102" overflow="scroll"><mml:mrow><mml:mi>&#x003b4;</mml:mi></mml:mrow></mml:math></inline-formula> within each data point&#x02019;s neighborhood is taken as the unit of analysis to examine the variation in the average precision <inline-formula><mml:math id="mm103" overflow="scroll"><mml:mrow><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula>, recall <inline-formula><mml:math id="mm104" overflow="scroll"><mml:mrow><mml:mover accent="true"><mml:mi>R</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula>, and F1 <inline-formula><mml:math id="mm105" overflow="scroll"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula> of the valid neighborhood distance set <inline-formula><mml:math id="mm106" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msup><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula> under different values of eps, as illustrated in <xref rid="sensors-25-01174-f003" ref-type="fig">Figure 3</xref>.</p><p>As observed from <xref rid="sensors-25-01174-f003" ref-type="fig">Figure 3</xref>, at relatively small values of the neighborhood radius eps, the average precision remains close to 100%, indicating that the elements in the valid neighborhood distance set <inline-formula><mml:math id="mm107" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msup><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula> are almost entirely composed of valid points. However, at this stage, the average recall remains at a relatively low level, suggesting that some valid points have not been clustered into <inline-formula><mml:math id="mm108" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msup><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula>. As eps increases, the average recall progressively rises, implying that more valid points are successfully clustered into <inline-formula><mml:math id="mm109" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msup><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula>. When eps reaches a relatively large value, the average recall approaches 100%, indicating that nearly all valid points have been incorporated into <inline-formula><mml:math id="mm110" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msup><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula>. At high recall levels, a gradual decline in average precision is observed, which suggests that an increasing number of interfering points are included in <inline-formula><mml:math id="mm111" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msup><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula>. In summary, excessively small or large values of eps fail to yield a reasonable valid neighborhood distance set <inline-formula><mml:math id="mm112" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msup><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula>, a conclusion that is further supported by the variation in the average F1 with respect to eps. As shown in <xref rid="sensors-25-01174-f003" ref-type="fig">Figure 3</xref>, when eps is set within 9 to 10.5 times the smallest nonzero distance <inline-formula><mml:math id="mm113" overflow="scroll"><mml:mrow><mml:mi>&#x003b4;</mml:mi></mml:mrow></mml:math></inline-formula>, the average F1 remains at a relatively high level. Therefore, when applying the DBSCAN algorithm to cluster the valid neighborhood distance set <inline-formula><mml:math id="mm114" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msup><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula>, the optimal neighborhood radius eps is determined as <inline-formula><mml:math id="mm115" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>10</mml:mn><mml:mi>&#x003b4;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>In this paper, the method for eliminating interfering points within the neighborhood of data point <inline-formula><mml:math id="mm116" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is referred to as the EIP algorithm, with the detailed operational procedure presented in Algorithm 1. For a given data point <inline-formula><mml:math id="mm117" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, the distances between each point in the neighborhood set <inline-formula><mml:math id="mm118" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi mathvariant="normal">d</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and data point <inline-formula><mml:math id="mm119" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> are computed and quantified with the minimum non-zero distance <inline-formula><mml:math id="mm120" overflow="scroll"><mml:mrow><mml:mi>&#x003b4;</mml:mi></mml:mrow></mml:math></inline-formula> to form the neighborhood distance set <inline-formula><mml:math id="mm121" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula>. The DBSCAN algorithm is employed to conduct clustering on the set <inline-formula><mml:math id="mm122" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula>. The minimum number of points, minPts, of the DBSCAN algorithm is set to 1, and the neighborhood radius, eps, is set to 10<inline-formula><mml:math id="mm123" overflow="scroll"><mml:mrow><mml:mi>&#x003b4;</mml:mi></mml:mrow></mml:math></inline-formula>. After the clustering by the DBSCAN algorithm, the cluster set <inline-formula><mml:math id="mm124" overflow="scroll"><mml:mrow><mml:mfenced separators="" open="{" close="}"><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mi>D</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mi>D</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow><mml:mi>D</mml:mi></mml:msubsup></mml:mfenced></mml:mrow></mml:math></inline-formula> is formed. The cluster closest to the data point <inline-formula><mml:math id="mm125" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is chosen as the valid neighborhood distance set <inline-formula><mml:math id="mm126" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msup><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula>. The data points corresponding to all elements in the set <inline-formula><mml:math id="mm127" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msup><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula> are identified to constitute the valid neighborhood set <inline-formula><mml:math id="mm128" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. Hereby, the elimination of the interfering points within the neighborhood of data point <inline-formula><mml:math id="mm129" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is accomplished.
<array><tbody><tr><td align="left" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1"><bold>Algorithm 1</bold> EIP algorithm</td></tr><tr><td align="left" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Input:</bold> Data point <inline-formula><mml:math id="mm130" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, and the neighborhood set <inline-formula><mml:math id="mm131" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi mathvariant="normal">d</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula><break/><bold>Output:</bold> The valid neighborhood set <inline-formula><mml:math id="mm132" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula><break/><list list-type="simple"><list-item><label>&#x02003;1:</label><p>Calculate the distances between each point within the neighborhood set <inline-formula><mml:math id="mm133" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi mathvariant="normal">d</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and the data point <inline-formula><mml:math id="mm134" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, and construct the neighborhood distance set <inline-formula><mml:math id="mm135" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula> by quantizing all the distances with the smallest non-zero distance <inline-formula><mml:math id="mm136" overflow="scroll"><mml:mrow><mml:mi>&#x003b4;</mml:mi></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>&#x02003;2:</label><p>Utilize the DBSCAN algorithm for clustering processing of the set <inline-formula><mml:math id="mm137" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula>. Set the neighborhood radius eps <inline-formula><mml:math id="mm138" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>=</mml:mo><mml:mn>10</mml:mn><mml:mi>&#x003b4;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and the minimum number of points minpts = 1 for the DBSCAN algorithm.</p></list-item><list-item><label>&#x02003;3:</label><p>Based on the clustering results <inline-formula><mml:math id="mm139" overflow="scroll"><mml:mrow><mml:mfenced separators="" open="{" close="}"><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mi>D</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mi>D</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow><mml:mi>D</mml:mi></mml:msubsup></mml:mfenced></mml:mrow></mml:math></inline-formula> of the DBSCAN algorithm, select the cluster that is closest to the data point <inline-formula><mml:math id="mm140" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as the valid neighborhood distance set <inline-formula><mml:math id="mm141" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msup><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>&#x02003;4:</label><p>Identify the corresponding data points for the elements of the set <inline-formula><mml:math id="mm142" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msup><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula> and constitute the valid neighborhood set <inline-formula><mml:math id="mm143" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> based on them.</p></list-item></list></td></tr></tbody></array></p></sec><sec id="sec3dot2-sensors-25-01174"><title>3.2. Calculation of the Local Density</title><p>The valid neighborhood set <inline-formula><mml:math id="mm144" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> can fully reflect the distribution of data points around the data point <inline-formula><mml:math id="mm145" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, and it can be employed to compute the local density of the data point <inline-formula><mml:math id="mm146" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. To mitigate the dependence of the local density on the initial distance threshold, the local density of the data point <inline-formula><mml:math id="mm147" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is calculated in the form of Equation (<xref rid="FD4-sensors-25-01174" ref-type="disp-formula">4</xref>), i.e.,<disp-formula id="FD12-sensors-25-01174"><label>(12)</label><mml:math id="mm148" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003c1;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mfenced separators="" open="|" close="|"><mml:mrow><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfenced><mml:mrow><mml:msub><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msub><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></disp-formula>
the local density is termed NELD in this paper. Compared with Equation (<xref rid="FD4-sensors-25-01174" ref-type="disp-formula">4</xref>), Equation (<xref rid="FD12-sensors-25-01174" ref-type="disp-formula">12</xref>) is free from the influence of interfering points and is more capable of fully depicting the distribution of data points in the vicinity of data point <inline-formula><mml:math id="mm149" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p><p>For the computation of the local density of data point <inline-formula><mml:math id="mm150" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, a special situation needs to be taken into account: there are no other data points within the neighborhood defined by the initial distance threshold <italic toggle="yes">d</italic> of data point <inline-formula><mml:math id="mm151" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, that is, the neighborhood set <inline-formula><mml:math id="mm152" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi mathvariant="normal">d</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> is an empty set. For such data points, it is advisable to set their local density directly to zero, i.e., <inline-formula><mml:math id="mm153" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003c1;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></sec><sec id="sec3dot3-sensors-25-01174"><title>3.3. Determination of the Adaptive Distance Threshold</title><p>Calculate the local densities of all the data points of the point cloud. After normalizing with the maximum local density, a local density set is formed as<disp-formula id="FD13-sensors-25-01174"><label>(13)</label><mml:math id="mm154" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="fraktur">R</mml:mi><mml:mo>=</mml:mo><mml:mfenced separators="" open="{" close="}"><mml:mrow><mml:msub><mml:mi>&#x003c1;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mfenced separators="" open="|" close=""><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#x02208;</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:math></disp-formula>
perform clustering processing on the local density set <inline-formula><mml:math id="mm300" overflow="scroll"><mml:mrow><mml:mi mathvariant="fraktur">R</mml:mi></mml:mrow></mml:math></inline-formula>. The DBSCAN algorithm is still adopted for clustering, with the minimum number of points within the neighborhood, minpts, set as 1 and the neighborhood radius, eps, set as 0.1. Based on the local density distribution of the data points, <inline-formula><mml:math id="mm155" overflow="scroll"><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>&#x003c1;</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> clusters can be formed. It is expedient to represent the local density set <inline-formula><mml:math id="mm301" overflow="scroll"><mml:mrow><mml:mi mathvariant="fraktur">R</mml:mi></mml:mrow></mml:math></inline-formula> in the form of cluster classes as<disp-formula id="FD14-sensors-25-01174"><label>(14)</label><mml:math id="mm156" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="fraktur">R</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mn>1</mml:mn><mml:mi>&#x003c1;</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mn>2</mml:mn><mml:mi>&#x003c1;</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>&#x003c1;</mml:mi></mml:msub></mml:mrow><mml:mi>&#x003c1;</mml:mi></mml:msubsup><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
where the set <inline-formula><mml:math id="mm157" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mi>&#x003c1;</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> denotes the <italic toggle="yes">m</italic>-th cluster formed by local densities. For the density class <inline-formula><mml:math id="mm158" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mi>&#x003c1;</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>, the data points within it have similar local densities. Therefore, the same adaptive distance threshold can be defined for all the data points within the set <inline-formula><mml:math id="mm159" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mi>&#x003c1;</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> as<disp-formula id="FD15-sensors-25-01174"><label>(15)</label><mml:math id="mm160" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mi>m</mml:mi><mml:mo>+</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mfenced separators="" open="|" close="|"><mml:msubsup><mml:mi>C</mml:mi><mml:mi>m</mml:mi><mml:mi>&#x003c1;</mml:mi></mml:msubsup></mml:mfenced></mml:mfrac></mml:mstyle><mml:msub><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:msub><mml:mi>&#x003c1;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mi>m</mml:mi><mml:mi>&#x003c1;</mml:mi></mml:msubsup></mml:mrow></mml:msub><mml:msubsup><mml:mi>&#x003c1;</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></disp-formula>
evidently, Equation (<xref rid="FD15-sensors-25-01174" ref-type="disp-formula">15</xref>) employs the reciprocal of the harmonic average data of all elements in the set <inline-formula><mml:math id="mm161" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mi>&#x003c1;</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> as the adaptive distance threshold for the corresponding data points.</p><p>By means of Equation (<xref rid="FD15-sensors-25-01174" ref-type="disp-formula">15</xref>), an appropriate adaptive distance threshold can be as-signed to each data point, making preparations for the subsequent clustering of the point cloud.</p></sec><sec id="sec3dot4-sensors-25-01174"><title>3.4. NELD-EC Algorithm</title><p>The NELD-EC algorithm improves the method of determining the distance threshold based on the EC algorithm. During the clustering process, the allocation strategy of data points still adopts the same strategy as the EC algorithm. The specific process of the NELD-EC algorithm is summarized as Algorithm 2.</p><p>The NELD-EC algorithm process is divided into two phases: data preparation and data point allocation. The data preparation phase is mainly constituted by steps 1 to 6 of Algorithm 2. In the data preparation phase, the neighborhood set of each data point <inline-formula><mml:math id="mm162" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is initially determined based on the initial distance threshold <italic toggle="yes">d</italic>, and the interfering points are eliminated from the neighborhood set to form the corresponding valid neighborhood set <inline-formula><mml:math id="mm163" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. Subsequently, the NELD of the data point is computed using the valid neighborhood set <inline-formula><mml:math id="mm164" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, and all the NELDs of the data points constitute the local density set <inline-formula><mml:math id="mm3012" overflow="scroll"><mml:mrow><mml:mi mathvariant="fraktur">R</mml:mi></mml:mrow></mml:math></inline-formula>. The local density set <inline-formula><mml:math id="mm303" overflow="scroll"><mml:mrow><mml:mi mathvariant="fraktur">R</mml:mi></mml:mrow></mml:math></inline-formula> is clustered according to density, and for each density cluster, its adaptive threshold <inline-formula><mml:math id="mm165" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mo>+</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> is determined and used as the adaptive distance threshold <inline-formula><mml:math id="mm166" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mo>+</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> for all the data points within the cluster. Finally, the valid neighborhood set of each data point is re-determined based on its adaptive distance threshold <inline-formula><mml:math id="mm167" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mo>+</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula>. Thus far, the data preparation for the NELD-EC algorithm has been accomplished.</p><p>Steps 7 to 16 of Algorithm 2 constitute the data point allocation phase of the NELD-EC algorithm. The data point allocation phase mainly operates on the set <inline-formula><mml:math id="mm168" overflow="scroll"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. The set <inline-formula><mml:math id="mm169" overflow="scroll"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is composed of data points in the point cloud set <italic toggle="yes">P</italic> whose local density is not zero. This set is used to temporarily store the data points to be allocated in the data point allocation phase. Once the allocation of one cluster of data is completed, the data points of this cluster are deleted from the set <inline-formula><mml:math id="mm170" overflow="scroll"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, as indicated in step 15. When all the data points in the set <inline-formula><mml:math id="mm171" overflow="scroll"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> have been allocated, the set <inline-formula><mml:math id="mm172" overflow="scroll"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> becomes an empty set, and the corresponding clustering process comes to an end. The clustering of each cluster is achieved through steps 9 to 14 of Algorithm 2. Select any data point <inline-formula><mml:math id="mm173" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> from the set <inline-formula><mml:math id="mm174" overflow="scroll"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as the starting point of the new cluster <inline-formula><mml:math id="mm175" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, incorporate this point and its neighborhood set <inline-formula><mml:math id="mm176" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi mathvariant="normal">d</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> into <inline-formula><mml:math id="mm177" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, and simultaneously form the temporary set <inline-formula><mml:math id="mm178" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> from the neighborhood set <inline-formula><mml:math id="mm179" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi mathvariant="normal">d</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. Subsequently, select a data point <inline-formula><mml:math id="mm180" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> from the set <inline-formula><mml:math id="mm181" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, and merge the data points in the neighborhood set <inline-formula><mml:math id="mm182" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi mathvariant="normal">d</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> that do not belong to the set <inline-formula><mml:math id="mm183" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> into the sets <inline-formula><mml:math id="mm184" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm185" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, respectively. Then, the data point <inline-formula><mml:math id="mm186" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is removed from the set <inline-formula><mml:math id="mm187" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. Repeat the operations on the data points in the set <inline-formula><mml:math id="mm188" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> until the set <inline-formula><mml:math id="mm189" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is an empty set. At this time, the neighborhood sets of all the data points in the set <inline-formula><mml:math id="mm190" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> are included within the set <inline-formula><mml:math id="mm191" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, and the clustering task for this cluster is accomplished.
<array><tbody><tr><td align="left" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1"><bold>Algorithm 2</bold> NELD-EC algorithm.</td></tr><tr><td align="left" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Input:</bold> Point cloud set <inline-formula><mml:math id="mm192" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>I</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, and the initial distance threshold <italic toggle="yes">d</italic><break/><bold>Output:</bold> Clusters after clustering <inline-formula><mml:math id="mm193" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula><break/><list list-type="simple"><list-item><label>&#x000a0;&#x000a0;&#x000a0;1:</label><p>Based on the initial distance threshold <italic toggle="yes">d</italic>, utilize Algorithm 1 to eliminate the interfering points within the neighborhood of each data point in the point cloud set <italic toggle="yes">P</italic>, and acquire the corresponding valid neighborhood set <inline-formula><mml:math id="mm194" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>&#x000a0;&#x000a0;&#x000a0;2:</label><p>Create a duplicate of the point cloud set <italic toggle="yes">P</italic>, namely <inline-formula><mml:math id="mm195" overflow="scroll"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, and eliminate the data points from the set <inline-formula><mml:math id="mm196" overflow="scroll"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> whose valid neighborhood set <inline-formula><mml:math id="mm197" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> is an empty set.</p></list-item><list-item><label>&#x000a0;&#x000a0;&#x000a0;3:</label><p>Based on Equation (<xref rid="FD12-sensors-25-01174" ref-type="disp-formula">12</xref>), compute the local density of each data point in the set <inline-formula><mml:math id="mm198" overflow="scroll"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, and normalize all the local densities with the maximum local density to construct the local density set <inline-formula><mml:math id="mm305" overflow="scroll"><mml:mrow><mml:mi mathvariant="fraktur">R</mml:mi></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>&#x000a0;&#x000a0;&#x000a0;4:</label><p>Using the DBSCAN algorithm, the set <inline-formula><mml:math id="mm306" overflow="scroll"><mml:mrow><mml:mi mathvariant="fraktur">R</mml:mi></mml:mrow></mml:math></inline-formula> is clustered, with the neighborhood radius eps = 0.1 and the minimum point count minpts = 1, resulting in the density clustering result <inline-formula><mml:math id="mm199" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="fraktur">R</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mi>&#x003c1;</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mi>&#x003c1;</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>&#x003c1;</mml:mi></mml:msub></mml:mrow><mml:mi>&#x003c1;</mml:mi></mml:msubsup><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>&#x000a0;&#x000a0;&#x000a0;5:</label><p>For each density cluster <inline-formula><mml:math id="mm200" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mi>&#x003c1;</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>, the adaptive threshold <inline-formula><mml:math id="mm201" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mo>+</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> of this cluster is calculated by Equation (<xref rid="FD15-sensors-25-01174" ref-type="disp-formula">15</xref>), and this threshold is assigned to each data point <inline-formula><mml:math id="mm202" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mo>+</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> within the cluster.</p></list-item><list-item><label>&#x000a0;&#x000a0;&#x000a0;6:</label><p>According to the adaptive distance threshold <inline-formula><mml:math id="mm203" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mo>+</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> of each <inline-formula><mml:math id="mm204" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> within the set <inline-formula><mml:math id="mm205" overflow="scroll"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, the valid neighborhood set <inline-formula><mml:math id="mm206" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> of this data point is redefined.</p></list-item><list-item><label>&#x000a0;&#x000a0;&#x000a0;7:</label><p>Set the total number of clusters to zero, with <inline-formula><mml:math id="mm207" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>M</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>&#x000a0;&#x000a0;&#x000a0;8:</label><p><bold>while</bold> the set <inline-formula><mml:math id="mm208" overflow="scroll"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is not an empty set <bold>do</bold></p></list-item><list-item><label>&#x000a0;&#x000a0;&#x000a0;9:</label><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<inline-formula><mml:math id="mm209" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>M</mml:mi><mml:mo>=</mml:mo><mml:mi>M</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, initialize the <italic toggle="yes">M</italic>-th cluster set <inline-formula><mml:math id="mm210" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and the temporary set <inline-formula><mml:math id="mm211" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>&#x000a0;10:</label><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;In the set <inline-formula><mml:math id="mm212" overflow="scroll"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, select any data point <inline-formula><mml:math id="mm213" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> randomly. Incorporate both <inline-formula><mml:math id="mm214" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and its valid neighborhood set <inline-formula><mml:math id="mm215" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> into the set <inline-formula><mml:math id="mm216" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, and simultaneously incorporate the set <inline-formula><mml:math id="mm217" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> into the set <inline-formula><mml:math id="mm218" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>&#x000a0;11:</label><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<bold>while</bold> the set <inline-formula><mml:math id="mm219" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is not an empty set <bold>do</bold></p></list-item><list-item><label>&#x000a0;12:</label><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;Choose any data point <inline-formula><mml:math id="mm220" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> randomly from the set <inline-formula><mml:math id="mm221" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, and add the data points in its effective neighborhood set <inline-formula><mml:math id="mm222" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> that do not belong to the set <inline-formula><mml:math id="mm223" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> to both the set <inline-formula><mml:math id="mm224" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and the set <inline-formula><mml:math id="mm225" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> respectively.</p></list-item><list-item><label>&#x000a0;13:</label><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;Remove the data point <inline-formula><mml:math id="mm226" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> from the temporary set <inline-formula><mml:math id="mm227" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>&#x000a0;14:</label><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<bold>end while</bold></p></list-item><list-item><label>&#x000a0;15:</label><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;Remove the data points from the temporary set <inline-formula><mml:math id="mm228" overflow="scroll"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>temp</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> that are contained in the set <inline-formula><mml:math id="mm229" overflow="scroll"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>&#x000a0;16:</label><p><bold>end while</bold></p></list-item></list></td></tr></tbody></array></p></sec><sec id="sec3dot5-sensors-25-01174"><title>3.5. Complexity Analysis</title><p>The computational and spatial complexity of the NELD-EC algorithm is analyzed based on the details of each step.</p><p>The NELD-EC algorithm first requires performing a neighborhood search for all data points in the point cloud using the initial distance threshold. Assuming the number of data points in the spatial point cloud is <italic toggle="yes">I</italic>, the computational complexity of the neighborhood search varies depending on the implementation method. When using a brute-force search approach, the computational complexity is <inline-formula><mml:math id="mm230" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. However, when employing spatial indexing structures such as KD-Tree or Ball Tree, the computational complexity for low-dimensional spatial point cloud datasets can be reduced to <inline-formula><mml:math id="mm231" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:mi>I</mml:mi><mml:mo form="prefix">log</mml:mo><mml:mi>I</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>After the NELD-EC algorithm completes the initial neighborhood search for all data points, the EIP algorithm is employed to extract the valid neighborhood for each data point. The core component of the EIP algorithm is based on the DBSCAN algorithm. Considering that the computational complexity of DBSCAN is related to the number of elements in the clustered set and that the number of neighboring points varies across different data points, the average number of points within a neighborhood, denoted as <inline-formula><mml:math id="mm232" overflow="scroll"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, is used for computational complexity analysis. When performing a neighborhood search for the elements in the neighborhood distance set <inline-formula><mml:math id="mm233" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula> of a given data point using DBSCAN, the computational complexity of brute-force searching is <inline-formula><mml:math id="mm234" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, while that of using a spatial indexing structure is <inline-formula><mml:math id="mm235" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mn>1</mml:mn></mml:msub><mml:mo form="prefix">log</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mn>1</mml:mn></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. During cluster expansion in the DBSCAN algorithm, since minPts is set to 1, all points are treated as core points, leading to an additional computational complexity of <inline-formula><mml:math id="mm236" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. The computational complexity of selecting valid clusters in the EIP algorithm is <inline-formula><mml:math id="mm237" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. Therefore, the overall computational complexity for eliminating interfering points within the neighborhood of a single data point is <inline-formula><mml:math id="mm238" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. The total computational complexity involved in filtering the valid neighborhood set <inline-formula><mml:math id="mm239" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> for all data points in the point cloud dataset is <inline-formula><mml:math id="mm240" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:mi>I</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>Defining the average number of data points in the valid neighborhood set as <inline-formula><mml:math id="mm241" overflow="scroll"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, the computational complexity of calculating the NELD for all data points in the NELD-EC algorithm is approximately <inline-formula><mml:math id="mm242" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:mi>I</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mn>2</mml:mn></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. When performing density clustering based on the NELD of all data points, the DBSCAN algorithm is utilized again, where the computational complexity of the neighborhood search is <inline-formula><mml:math id="mm243" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> for brute-force searching or <inline-formula><mml:math id="mm244" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:mi>I</mml:mi><mml:mo form="prefix">log</mml:mo><mml:mi>I</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> when using a spatial indexing structure. The computational complexity of cluster expansion is <inline-formula><mml:math id="mm245" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, resulting in an overall computational complexity of <inline-formula><mml:math id="mm246" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> for the density clustering process.</p><p>The computational complexity introduced by defining the adaptive threshold <inline-formula><mml:math id="mm247" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mo>+</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> for each data point in the NELD-EC algorithm is approximately <inline-formula><mml:math id="mm248" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:mi>I</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. The process of redefining the valid neighborhood set <inline-formula><mml:math id="mm249" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> based on the adaptive threshold <inline-formula><mml:math id="mm250" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mo>+</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> involves a computational complexity of <inline-formula><mml:math id="mm251" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> for brute-force searching or <inline-formula><mml:math id="mm252" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:mi>I</mml:mi><mml:mo form="prefix">log</mml:mo><mml:mi>I</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> when using a spatial indexing structure. Assuming that the average number of elements in the redefined valid neighborhood set <inline-formula><mml:math id="mm253" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mi mathvariant="normal">V</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> is <inline-formula><mml:math id="mm254" overflow="scroll"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, the computational complexity introduced by the cluster expansion step in the NELD-EC algorithm is <inline-formula><mml:math id="mm255" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:mi>I</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mn>3</mml:mn></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>In summary, when the NELD-EC algorithm determines neighborhoods using a brute-force search approach, the computational complexity is <inline-formula><mml:math id="mm256" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. Generally, the number of data points in a spatial point cloud, <italic toggle="yes">I</italic>, is significantly larger than the average number of points within a neighborhood. When a spatial indexing method is employed for neighborhood determination, the overall computational complexity is primarily influenced by the density clustering process. Consequently, under these conditions, the computational complexity of the NELD-EC algorithm remains <inline-formula><mml:math id="mm257" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. However, when an excessively large initial distance threshold is used and the dataset consists of only a few clusters, the average number of neighborhood points, <inline-formula><mml:math id="mm258" overflow="scroll"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm259" overflow="scroll"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="mm260" overflow="scroll"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, is no longer significantly smaller than the total number of data points <italic toggle="yes">I</italic> in the spatial point cloud. In this case, if the NELD-EC algorithm employs a spatial indexing approach for neighborhood determination, the computational complexity becomes <inline-formula><mml:math id="mm261" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:mi>I</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi>I</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mo form="prefix">log</mml:mo><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mo>+</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>+</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mn>2</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mn>3</mml:mn></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>From the analysis of computational complexity, it can be observed that the density of a spatial point cloud or the density variation between clusters only affects the values of the average number of neighborhood points, <inline-formula><mml:math id="mm262" overflow="scroll"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm263" overflow="scroll"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="mm264" overflow="scroll"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>I</mml:mi><mml:mo stretchy="false">&#x000af;</mml:mo></mml:mover><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, but does not alter the complexity expression itself. From this perspective, it can also be inferred that the NELD-EC algorithm is capable of clustering not only point clouds with relatively uniform inter-cluster densities but also those exhibiting significant density variations among clusters.</p><p>The spatial complexity of the NELD-EC algorithm is primarily determined by the storage requirements for the neighborhood information of data points, resulting in a spatial complexity of <inline-formula><mml:math id="mm265" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:mi>I</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. Additionally, since the algorithm introduces a temporary storage set during the cluster expansion process, the extra spatial complexity incurred does not exceed <inline-formula><mml:math id="mm266" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:mi>I</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. Therefore, the overall spatial complexity of the NELD-EC algorithm remains <inline-formula><mml:math id="mm267" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:mi>I</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></sec></sec><sec id="sec4-sensors-25-01174"><title>4. Experiments and Discussions</title><sec id="sec4dot1-sensors-25-01174"><title>4.1. Experimental Preparation</title><p>In this section, the clustering performance of the NELD-EC algorithm after adopting the adaptive distance threshold on different datasets will be analyzed through several groups of experiments. The clustering algorithms involved in the comparative analysis include the classic EC algorithm [<xref rid="B11-sensors-25-01174" ref-type="bibr">11</xref>], the EC algorithm with classification threshold (CFT-EC) [<xref rid="B22-sensors-25-01174" ref-type="bibr">22</xref>], LDT-EC [<xref rid="B13-sensors-25-01174" ref-type="bibr">13</xref>], and RDT-EC [<xref rid="B14-sensors-25-01174" ref-type="bibr">14</xref>]. Among these algorithms, except for the CFT-EC algorithm, which requires dividing the point cloud intervals and allocating different distance thresholds to different intervals, and the RDT-EC algorithm, which needs to set an additional adjustment parameter, other algorithms only need to be given an initial distance threshold <italic toggle="yes">d</italic> before the experiments. To ensure the fairness of the comparison of the clustering performance of different algorithms, the initial distance threshold of each algorithm is selected as the value that makes the corresponding algorithm&#x02019;s clustering performance optimal.</p><p>To quantitatively evaluate the clustering performance of different algorithms, referring to the F1 score, which is frequently employed as an index for evaluating classification performance in the field of machine learning [<xref rid="B26-sensors-25-01174" ref-type="bibr">26</xref>], the macro F1 score is defined for evaluating the allocation effect of M clusters in point clouds. Similar to the definition of the F1 score, the macro F1 score is defined by the macro precision and macro recall rate. The macro precision is defined as<disp-formula id="FD16-sensors-25-01174"><label>(16)</label><mml:math id="mm268" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>c</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>M</mml:mi></mml:mfrac></mml:mstyle><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:munderover><mml:msub><mml:mi>P</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm269" overflow="scroll"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> represents the precision of the <italic toggle="yes">i</italic>-th cluster. The calculation of this parameter includes the number of data points that are misclassified as belonging to the i-th cluster, thus it can be used to analyze the false positive rate of that cluster. Similarly, the macro recall is defined as<disp-formula id="FD17-sensors-25-01174"><label>(17)</label><mml:math id="mm270" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>c</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>M</mml:mi></mml:mfrac></mml:mstyle><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:munderover><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></disp-formula>
with <inline-formula><mml:math id="mm271" overflow="scroll"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> representing the recall of the <italic toggle="yes">i</italic>-th cluster. The calculation of recall includes not only the correctly clustered data points but also the incorrectly assigned data points. Therefore, recall can reflect the degree of misassigned data points in the cluster, which corresponds to the false negative rate. The macro precision <inline-formula><mml:math id="mm272" overflow="scroll"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>c</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and macro recall <inline-formula><mml:math id="mm273" overflow="scroll"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>c</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> obtained from Equations (<xref rid="FD16-sensors-25-01174" ref-type="disp-formula">16</xref>) and (<xref rid="FD17-sensors-25-01174" ref-type="disp-formula">17</xref>) can be used to define the macro F1 score.<disp-formula id="FD18-sensors-25-01174"><label>(18)</label><mml:math id="mm274" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>F</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>c</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:mo>&#x000d7;</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>c</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi></mml:mrow></mml:msub><mml:mo>&#x000d7;</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>c</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>c</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>c</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></disp-formula>
the closer the macro F1 score is to 1, the more excellent the balance between the macro precision and the macro recall rate of the clustering algorithm, the stronger its ability to address under- and over-segmentation, and the better the comprehensive clustering performance of the clustering algorithm. Therefore, in this paper, the macro F1 score is used to comprehensively describe the situations of false positives and false negatives in point cloud clustering, thereby characterizing the clustering performance of the algorithm.</p></sec><sec id="sec4dot2-sensors-25-01174"><title>4.2. The Clustering Experiments Using Simulated Point Cloud Datasets</title><p>Firstly, the performance of the NELD-EC algorithm in processing irregular and non-uniform point clouds is analyzed by utilizing four public point cloud datasets: Jain, Zelink6, 2sp2glob, and Compound [<xref rid="B27-sensors-25-01174" ref-type="bibr">27</xref>]. The distribution of point clouds in these datasets is shown in <xref rid="sensors-25-01174-f004" ref-type="fig">Figure 4</xref>, where point clouds of different colors represent different clusters. As shown in <xref rid="sensors-25-01174-f004" ref-type="fig">Figure 4</xref>, the Jain dataset consists of two interlaced crescent-shaped clusters with different densities; the Zelink6 dataset contains three clusters with different densities, two of which are located within a low-density annular cluster; the 2sp2glob dataset is composed of four clusters, two of which are intertwined helix-shaped clusters; and the Compound dataset consists of six clusters, including annular clusters, curved clusters, and densely packed clusters with non-uniform density, with some clusters exhibiting nested or adjacent distributions. Clearly, the datasets selected for the experiments all belong to irregular and non-uniform point cloud sets, which present significant challenges for point cloud clustering.</p><p>The four public point cloud datasets are processed using different clustering algorithms, with the parameters used by each algorithm shown in <xref rid="sensors-25-01174-t001" ref-type="table">Table 1</xref>. The classical EC algorithm, LDT-EC algorithm, and NELD-EC algorithm require only the initial distance threshold to be set, whereas the RDT-EC and CFT-EC algorithms require two additional parameters. Both the RDT-EC and CFT-EC algorithms require calibration of the radar position. Additionally, the RDT-EC algorithm requires the setting of an adjustment parameter, while the CFT-EC algorithm requires the setting of the region arc radius. To compare the optimal performance of the different algorithms, the parameters of all algorithms were adjusted according to the specific characteristics of each dataset.</p><p>Five clustering algorithms, using the parameters listed in <xref rid="sensors-25-01174-t001" ref-type="table">Table 1</xref>, were applied to cluster the four-point cloud datasets shown in <xref rid="sensors-25-01174-f004" ref-type="fig">Figure 4</xref>. The resulting point cloud clustering outcomes are presented in <xref rid="sensors-25-01174-f005" ref-type="fig">Figure 5</xref>. In each subplot of <xref rid="sensors-25-01174-f005" ref-type="fig">Figure 5</xref>, different colors are used to represent different categories, with the legend indicating the number of clusters in each subplot. For data points that cannot be assigned to any category, a &#x0201c;*&#x0201d; symbol is used in the subplots of <xref rid="sensors-25-01174-f005" ref-type="fig">Figure 5</xref>. These points are identified as noise and can also be treated as a separate class.</p><p>The classical EC algorithm applied clustering to the four datasets with initial distance thresholds of 2.5 m, 0.07 m, 1.61 m, and 1 m, respectively. The corresponding clustering results are shown in the subplots of the first column of <xref rid="sensors-25-01174-f005" ref-type="fig">Figure 5</xref>. As can be seen from the results, although the EC algorithm selected the optimal initial distance threshold, over-segmentation occurred in the Jain, 2sp2glob, and Compound datasets, while under-segmentation occurred in the Zelink6 dataset. The fixed distance threshold approach used by the EC algorithm is unable to effectively cluster irregular and non-uniform point clouds.</p><p>The LDT-EC algorithm, which adjusts the distance threshold based on local density information, applied initial distance thresholds of 2.5 m, 0.08 m, 1.62 m, and 1.5 m for the four datasets, respectively. The corresponding clustering results are shown in the second column of each subplot in <xref rid="sensors-25-01174-f005" ref-type="fig">Figure 5</xref>. From the clustering results of the LDT-EC algorithm, it can be observed that severe over-segmentation occurred in the Jain and 2sp2glob datasets, with the number of clusters obtained being significantly higher than the actual number of clusters. When processing the Zelink6 dataset, the LDT-EC algorithm experienced over-segmentation within the annular cluster itself and under-segmentation within the two internal clusters, leading to numerous errors in the assignment of data points to clusters. When handling the more complex Compound dataset, the algorithm caused severe over-segmentation of the two circular clusters in the upper left part of the point cloud, with significant boundary effects, and under-segmentation occurred with the two nested point clouds in the lower left region, which were clustered as a single cluster. Therefore, similar to the classical EC algorithm, the LDT-EC algorithm is unable to handle such relatively complex point cloud data.</p><p>The RDT-EC algorithm adaptively adjusts the distance threshold by utilizing the relative position between data points and the radar, and the calculation formula for the distance threshold is presented in Equation (<xref rid="FD6-sensors-25-01174" ref-type="disp-formula">6</xref>). Since the RDT-EC algorithm requires computing the distance between data points and the radar during the clustering process, the positions of the radar in different datasets need to be specified. Considering the characteristic that the data collected by the radar shows a pattern of being denser near and sparser far, the two-dimensional positions of the radar selected in different datasets are (30, 8), (0.45, 0.5), (0, 0), and (10, 5), respectively, with the unit being meters. As a result, the minimum distances between data points and the lidar in the four datasets are 1.45 m, 0.16 m, 7.46 m, and 2.44 m. For different datasets, the initial distance thresholds chosen by the RDT-EC algorithm are 2.1 m, 0.08 m, 1 m, and 1.5 m, respectively, and the corresponding adjustment parameters are 0.15, 0.5, 0.8, and 0.15. Under the conditions of the above parameter settings, the clustering results of the RDT-EC algorithm for the four datasets are shown in the third column of each subplot in <xref rid="sensors-25-01174-f005" ref-type="fig">Figure 5</xref>, where the red &#x0201c;&#x000d7;&#x0201d; indicates the position of the lidar. From the clustering results of the RDT-EC algorithm, it can be observed that the number of clusters after clustering in the Jain dataset is significantly higher than the original two clusters. The root cause of this result lies in the fact that the Jain dataset does not possess the characteristic of being denser near and sparser far, thereby leading to a significant degradation in clustering performance. Under the reasonable setting of the radar position, the Zelink6 dataset exhibits the characteristic of being denser near and sparser far. Therefore, the RDT-EC algorithm performs relatively well in clustering the Zelink6 dataset, but there still exist issues of inaccurate data point allocation for the outer sparser clusters of this dataset. For the 2sp2glob dataset, the clustering effect of the two spiral clusters that are closer to the lidar is not satisfactory. The reason for this problem also lies in the insignificant characteristic of being denser near and sparser far for the data points in these two clusters. For the more complex Compound dataset, a relatively severe under-segmentation phenomenon occurs. Based on the above analysis, it can be seen that the point cloud clustering performance of the RDT-EC algorithm is closely related to the morphological characteristics of the point cloud, and its application has significant limitations.</p><p>The CFT-EC algorithm is also based on the characteristic of denser near and sparser far of data points. It divides data points into several regions according to their distances from the lidar and adopts different distance thresholds in different regions. Regarding the selection of the lidar position, the same setting as that of the RDT-EC algorithm can be adopted. The CFT-EC algorithm divides the Jain, Zelink6, and Compound datasets into two regions. The boundaries of the two regions are arcs centered at the lidar, with radii of 15.32 m, 0.25 m, and 15.80 m, respectively. The 2sp2glob dataset is divided into three regions, and the radii of the two boundary arcs are 16.67 m and 33.33 m, respectively. The distance thresholds within the two regions of the Jain dataset are 2 m and 3 m, respectively. The distance thresholds within the two regions of the Zelink6 dataset are 0.04 m and 0.06 m, respectively. The distance thresholds within the three regions of the 2sp2glob dataset are 0.5 m, 2 m, and 3 m, respectively. The distance thresholds within the two regions of the Compound dataset are 1m and 3m, respectively. Based on the above parameter settings, the CFT-EC algorithm is used to cluster the four datasets, and the corresponding results are shown in each subplot of the fourth column in <xref rid="sensors-25-01174-f005" ref-type="fig">Figure 5</xref>. The red &#x0201c;&#x000d7;&#x0201d; in the figure indicates the position of the lidar, and the red arc indicates the boundary between different regions. From the clustering results, it can be seen that the CFT-EC algorithm presents over-segmentation in the clustering process of the four datasets, indicating that this algorithm is also sensitive to the distribution characteristics of point clouds and has significant limitations in application.</p><p>The NELD-EC algorithm, which determines the adaptive distance threshold based on NELD, selects initial distance thresholds of 8 m, 0.34 m, 2.66 m, and 2 m for the four datasets, respectively. The corresponding clustering results are shown in the subgraphs of the last column of <xref rid="sensors-25-01174-f005" ref-type="fig">Figure 5</xref>. In each subgraph, a point located in the boundary region is selected, and the clustering results of its neighborhood distance set are displayed. After clustering the neighborhood distance set, blue points represent valid points, and red points represent interference points within the corresponding neighborhood distance set. From the clustering results of the neighborhood distance set selected from the data points in each subgraph, it can be seen that for points in the boundary region, the EIP algorithm can successfully distinguish valid points from interference points within the neighborhood, while grouping valid points together, thereby ensuring the performance of the subsequent clustering process. From the clustering results of the NELD-EC algorithm for the four datasets, it can be seen that the NELD-EC algorithm perfectly segmented the clusters of point clouds in the Jain, Zelink6, and 2sp2glob datasets, without over-segmentation or under-segmentation problems. For the more complex-shaped and density-varying Compound dataset, the NELD-EC algorithm is able to perfectly cluster the two nested point clouds in the lower-left region and the embedded point cloud on the right. However, the clustering of the two closely spaced circular point clouds in the upper-left region is not ideal, exhibiting some boundary effects. Additionally, for point clouds with lower density and data points on the edges of certain point clouds, clustering was not achieved, and they were identified as noise. Although the NELD-EC algorithm can handle point clouds with complex shapes and large density variations, it is still affected by boundary effects. Furthermore, this algorithm is unable to cluster extremely sparse point clouds. Compared to the other algorithms, the NELD-EC algorithm&#x02019;s method of determining the distance threshold is more adaptable, requiring no special conditions on the structure of the point clouds, making it more capable of clustering irregular and non-uniform point clouds.</p><p>The clustering performance of each algorithm on the four datasets is further quantified using the corresponding macro F1 scores, based on the clustering results of the algorithms. The macro F1 scores of the various algorithms on the four datasets are shown in <xref rid="sensors-25-01174-t002" ref-type="table">Table 2</xref>. As can be seen from <xref rid="sensors-25-01174-t002" ref-type="table">Table 2</xref>, when the EC algorithm clusters the first three datasets, although it exhibits over-segmentation or under-segmentation issues, the number of misallocated data points is relatively low, resulting in a higher macro F1 score. Particularly, the EC algorithm&#x02019;s clustering of the 2sp2glob dataset has a very small proportion of misclassified points, with the macro F1 score being 0.99, which is very close to a perfect clustering result. The LDT-EC algorithm performs poorly on the Jain and Zelink6 datasets, with corresponding macro F1 scores around 0.85, while its clustering performance on the 2sp2glob dataset is comparable to that of the EC algorithm, yielding a macro F1 score of 0.99. Since none of the four datasets in the experiment exhibit a clear near-dense-far-sparse pattern, both the RDT-EC and CFT-EC algorithms yield lower macro F1 scores on all four datasets, with the lowest score for the RDT-EC algorithm applied to the Jain dataset, around 0.69. For the NELD-EC algorithm, the macro F1 scores for the first three datasets are all 1, indicating perfect clustering on these three datasets. For the more complex point cloud structure of the Compound dataset, all algorithms yield low macro F1 scores, but the NELD-EC algorithm shows significantly better performance than the other algorithms.</p><p>By comparing the clustering results of several algorithms on the Jain, Zelink6, 2sp2glob, and Compound datasets, it can be observed that the RDT-EC and CFT-EC algorithms require a larger number of adjustable parameters and are highly dependent on the distribution characteristics of the point clouds, resulting in limited applicability. In contrast, the EC, LDT-EC, and NELD-EC algorithms only require the initial distance threshold to be set, making parameter adjustment relatively simple. However, when dealing with more complex point cloud data, both the EC and LDT-EC algorithms suffer from significant over-segmentation or under-segmentation issues. The NELD-EC algorithm, which utilizes NELD, better reflects the local density of point clouds. The adaptive distance threshold determined based on this can more effectively reduce the occurrence of over-segmentation or under-segmentation, enabling efficient clustering of irregular and non-uniform point clouds.</p></sec><sec id="sec4dot3-sensors-25-01174"><title>4.3. The Experiments Using the Fixed-Point Collected Dataset</title><p>To further validate the clustering performance of the NELD-EC algorithm proposed in this paper, a comparative analysis was carried out using the Sydney Urban Objects dataset [<xref rid="B28-sensors-25-01174" ref-type="bibr">28</xref>]. The Sydney Urban Objects dataset is a typical fixed-point collected dataset, which consists of point clouds of common urban road scenes collected by the mechanical lidar Velodyne HDL-64E LIDAR in the Central Business District of Sydney, Australia. A certain frame of data from this dataset was selected as the experimental data. After eliminating the data points reflecting the ground, the corresponding three-dimensional point cloud is shown in <xref rid="sensors-25-01174-f006" ref-type="fig">Figure 6</xref>a,b, which shows the projection of this point cloud on the horizontal plane. The origin of the point cloud data is the position of the lidar, indicated by the red &#x0201c;&#x000d7;&#x0201d;. Through the analysis of the experimental data, it was determined that the data contained 25 clusters. The forms and annotations of each cluster are shown in <xref rid="sensors-25-01174-f006" ref-type="fig">Figure 6</xref>b. As can be seen from <xref rid="sensors-25-01174-f006" ref-type="fig">Figure 6</xref>b, the annotated targets involve vehicles, pedestrians, buildings, etc.</p><p>The experimental data originated from the scanning of real scenes by a lidar. Due to the varying distances between the target and the lidar, the point cloud data exhibit distinct density variances, and the relative positional relationships among different clusters are also random. Hence, this experimental data can be utilized to assess the performance of clustering algorithms when processing real-scene data, particularly the clustering capability in dealing with point clouds with remarkable density differences [<xref rid="B27-sensors-25-01174" ref-type="bibr">27</xref>]. This experiment is designed to evaluate the effectiveness of the NELD-EC algorithm in segmenting actual point cloud data and compare the sensitivity of this algorithm to parameter selection with other similar algorithms.</p><p>The EC, LDT-EC, RDT-EC, CFT-EC, and NELD-EC algorithms were applied to cluster the experimental data shown in <xref rid="sensors-25-01174-f006" ref-type="fig">Figure 6</xref>. The parameter settings for each algorithm are presented in <xref rid="sensors-25-01174-t003" ref-type="table">Table 3</xref>. The parameters for each algorithm in <xref rid="sensors-25-01174-t003" ref-type="table">Table 3</xref> were tuned based on the experimental data.</p><p>Based on the parameters in <xref rid="sensors-25-01174-t003" ref-type="table">Table 3</xref>, the clustering results for the point cloud data shown in <xref rid="sensors-25-01174-f006" ref-type="fig">Figure 6</xref> were obtained using each clustering algorithm, as illustrated in the subgraphs of <xref rid="sensors-25-01174-f007" ref-type="fig">Figure 7</xref>. In each subgraph of <xref rid="sensors-25-01174-f007" ref-type="fig">Figure 7</xref>, the red &#x0201c;&#x000d7;&#x0201d; marks the position of the lidar. To visually compare the clustering performance of different algorithms, four identical regions, denoted as Region (A), Region (B), Region (C), and Region (D), are marked with red boxes in the clustering results of the different algorithms, as shown in the subgraphs of <xref rid="sensors-25-01174-f007" ref-type="fig">Figure 7</xref>. The four selected regions for comparison are all areas with higher clustering difficulty.</p><p>The classical EC algorithm selects an initial distance threshold of 1m, and the corresponding clustering results are presented in <xref rid="sensors-25-01174-f007" ref-type="fig">Figure 7</xref>a. In contrast to <xref rid="sensors-25-01174-f006" ref-type="fig">Figure 6</xref>b, the EC algorithm achieves relatively better clustering for regions (B) and (C). Nevertheless, the EC algorithm fails to completely separate the three pedestrians in region (A) and erroneously clusters two of them into one cluster, giving rise to an under-segmentation phenomenon. Regarding region (D), the buildings have a considerable span, and the corresponding point cloud exhibits a distribution characteristic of being &#x0201c;denser near and sparser far&#x0201d;. For the EC algorithm with a fixed distance threshold, the point cloud at the far end of the building is segmented into multiple clusters, leading to a severe over-segmentation phenomenon. Although the EC algorithm selects the optimal initial distance threshold, due to its fixed nature, it is challenging to adapt to the point cloud data with non-uniform density and random position distribution in real road scenes and thus fails to conduct effective clustering processing for complex scenarios.</p><p>In this dataset, the LDT-EC algorithm performs clustering on the experimental data according to the initial distance threshold of 1.4 m, and the corresponding clustering results are presented in <xref rid="sensors-25-01174-f007" ref-type="fig">Figure 7</xref>b. In comparison with <xref rid="sensors-25-01174-f007" ref-type="fig">Figure 7</xref>a, the LDT-EC algorithm has similar issues as the EC algorithm in regions (A) and (D). At the same time, the LDT-EC algorithm presents a severe over-segmentation problem in region (B). Evidently, although the LDT-EC algorithm adopts an adaptive distance threshold, its clustering effect is suboptimal when handling datasets with significant density variances.</p><p>The RDT-EC algorithm adaptively adjusts the distance threshold by exploiting the relative position between the data points and the lidar. In the experiment, the initial distance threshold of this algorithm was selected as 1m, and the adjustment parameter was 0.3. Based on the positional information of the lidar and the distribution information of the dataset, it is known that the minimum distance between the data points and the lidar is 4.23 m. Under the above parameter configuration, the clustering results of the RDT-EC algorithm are depicted in <xref rid="sensors-25-01174-f007" ref-type="fig">Figure 7</xref>c. In contrast to <xref rid="sensors-25-01174-f007" ref-type="fig">Figure 7</xref>a,b, the clustering in region (A) presents the same issues as those in the EC algorithm and the LDT-EC algorithm. Regarding the point cloud clustering in regions (B) and (D), since the point clouds in these two regions exhibit the feature of being dense in proximity and sparse in the distance, which conforms to the application scenario of the RDT-EC algorithm, far superior clustering effects are achieved compared to the EC algorithm and the LDT-EC algorithm. Nevertheless, for region (C), as this region is relatively close to the radar, the corresponding adaptive distance threshold is relatively small. When clustering the point cloud of a single vehicle, due to the dispersion of some point cloud data, it is divided into two clusters, resulting in an over-segmentation phenomenon.</p><p>The CFT-EC algorithm divides the point cloud data into five regions based on their distances from the radar, where the radii of the four demarcating arcs are 7.41 m, 14.82 m, 22.23 m, and 29.64 m, respectively. The distance thresholds for the five regions, from the nearest to the farthest, are set as 1 m, 2 m, 3 m, 4 m, and 5 m respectively. After the experimental data are clustered by the CFT-EC algorithm, the corresponding results are depicted in <xref rid="sensors-25-01174-f007" ref-type="fig">Figure 7</xref>d. The four concentric circular arcs in <xref rid="sensors-25-01174-f007" ref-type="fig">Figure 7</xref>d are the boundaries of the different regions. When comparing <xref rid="sensors-25-01174-f007" ref-type="fig">Figure 7</xref>d with <xref rid="sensors-25-01174-f007" ref-type="fig">Figure 7</xref>c, the clustering effects of the point clouds in the four concerned regions are comparable to those of the RDT-EC algorithm. Both algorithms can achieve relatively good clustering for regions (B) and (D). However, for regions (A) and (C) that are closer to the lidar, they fail to cluster correctly, presenting either over- or under-segmentation.</p><p>The NELD-EC algorithm proposed in this paper sets the initial distance threshold at 1.4 m, and the clustering results of the experimental data are depicted in <xref rid="sensors-25-01174-f007" ref-type="fig">Figure 7</xref>e. As can be seen from <xref rid="sensors-25-01174-f007" ref-type="fig">Figure 7</xref>e, the NELD-EC algorithm effectively segments the point clouds in regions (A), (B), and (C), but there exists a certain degree of over-segmentation in the point cloud of region (D). Observing the point cloud distribution and segmentation results in region (D), it can be noticed that the NELD-EC algorithm exhibits over-segmentation when clustering the point clouds in regions with a relatively sparse distribution. The cause of this issue lies in the relatively small adaptive distance threshold in this region. In comparison with the clustering results of several other algorithms, the NELD-EC algorithm can achieve perfect segmentation of region (A), which cannot be effectively clustered by other algorithms. For regions (B) and (C), the NELD-EC algorithm can also attain the optimal clustering effect. Only when it comes to region (D), the clustering performance of the NELD-EC algorithm slightly deteriorates, but it is still superior to the EC algorithm and the LDT-EC algorithm.</p><p>Through the analysis of the clustering results presented in each subfigure of <xref rid="sensors-25-01174-f007" ref-type="fig">Figure 7</xref>, it can be observed that the clustering effects of different algorithms on the point clouds in regions (A), (B), (C), and (D) vary, as presented in <xref rid="sensors-25-01174-t004" ref-type="table">Table 4</xref>. As is evident from <xref rid="sensors-25-01174-t004" ref-type="table">Table 4</xref>, for the point cloud in region (D), none of the algorithms can achieve effective segmentation. However, for the other three regions, only the NELD-EC algorithm is capable of achieving accurate segmentation, while the other algorithms can only achieve effective segmentation for specific regions.</p><p>Further, the clustering performance of different algorithms was analyzed quantitatively. The macro F1 scores of the corresponding algorithms were calculated based on the clustering results of each subplot in <xref rid="sensors-25-01174-f007" ref-type="fig">Figure 7</xref>, as presented in <xref rid="sensors-25-01174-t005" ref-type="table">Table 5</xref>. It can be observed from <xref rid="sensors-25-01174-t005" ref-type="table">Table 5</xref> that the macro F1 scores of several algorithms all exceed 0.9, suggesting that these algorithms can assign data points in the scene to their respective clusters with relatively high accuracy. The macro F1 score of the NELD-EC algorithm is the highest, reaching 0.955, indicating that when processing the point cloud data collected at a fixed point, this algorithm has the least misassigned data points, and the clusters partitioned are more in line with the actual situation.</p><p>To further analyze the impact of uncertainty in the experimental point cloud on the clustering results, the resampling-based Bootstrap method was used to randomly sample 80% of the data from the fixed-point sampling dataset, with 10 sets of data randomly selected. Different clustering algorithms were then applied to these 10 sets of data, and the 95% confidence intervals of the macro F1 scores for each algorithm were compared based on the clustering results, as shown in <xref rid="sensors-25-01174-t006" ref-type="table">Table 6</xref>. <xref rid="sensors-25-01174-t006" ref-type="table">Table 6</xref> also provides the average macro F1 score for each clustering algorithm, based on the 10 sets of clustering results. As shown in <xref rid="sensors-25-01174-t006" ref-type="table">Table 6</xref>, the NELD-EC algorithm has the highest average macro F1 score of 0.943, while the CFT-EC algorithm has the lowest average macro F1 score of 0.878. Comparing the 95% confidence intervals for each algorithm, the NELD-EC algorithm is in the higher range, with a narrower interval. The confidence interval analysis based on the resampling Bootstrap method shows that the NELD-EC algorithm has a higher and more stable clustering performance.</p><p>As previously stated, the clustering performance of common EC-type algorithms is highly sensitive to the initial distance threshold. However, the NELD-EC algorithm proposed herein is insensitive to the initial distance threshold, thereby making the NELD-EC algorithm more applicable in engineering. To validate this conclusion, the point cloud dataset depicted in <xref rid="sensors-25-01174-f006" ref-type="fig">Figure 6</xref> is still taken as the research object to investigate the impact of the initial distance threshold on the macro F1 score. Due to the fact that the CFT-EC algorithm has initial distance thresholds for multiple regions, which is different from the single initial distance threshold employed by other algorithms, the CFT-EC algorithm is not suitable for analyzing the influence of the initial distance threshold on the macro F1 score. Therefore, in this experiment, the influence of the initial distance threshold on the macro F1 score of the CFT-EC algorithm is not compared.</p><p>The variations in the macro F1 scores of the EC algorithm, the LDT-EC algorithm, the RDT-EC algorithm, and the NELD-EC algorithm for the clustering results of the experimental data when the initial distance threshold varies within the range of 0.6 m to 6.5 m are depicted in <xref rid="sensors-25-01174-f008" ref-type="fig">Figure 8</xref>.</p><p>It can be observed from <xref rid="sensors-25-01174-f008" ref-type="fig">Figure 8</xref> that the variation patterns of the macro F1 scores of the EC algorithm and the LDT-EC algorithm are largely consistent. When the initial distance threshold is selected to be lower than 2 m, both algorithms maintain relatively high macro F1 scores, presenting a superior clustering effect. When the initial distance threshold is higher than 2 m, with the increase in the initial distance threshold, the macro F1 scores of both algorithms keep decreasing continuously. The macro F1 score of the RDT-EC algorithm is more significantly affected by the initial distance threshold, maintaining a high macro F1 score only within a relatively small region, and then it keeps decreasing along with the increase in the initial distance threshold. At higher initial distance thresholds, the macro F1 scores of the EC algorithm, the LDT-EC algorithm, and the RDT-EC algorithm are basically equivalent. The macro F1 score of the NELD-EC algorithm remains at a high level within a wide range of initial distance thresholds. Only when the initial distance threshold is higher than 4 m, does the macro F1 score decline slowly, but it is still much higher than the macro F1 scores of the other three algorithms. Thus, it can be concluded that the clustering performance of the NELD-EC algorithm is insensitive to the selection of the initial distance threshold.</p><p>Further analysis was conducted on the effect of initial distance threshold variations in the 95% confidence interval of the macro F1 score. Based on the macro F1 scores of each algorithm shown in <xref rid="sensors-25-01174-f008" ref-type="fig">Figure 8</xref>, the corresponding 95% confidence intervals of the macro F1 scores were calculated, as shown in <xref rid="sensors-25-01174-t007" ref-type="table">Table 7</xref>. For the urban intersection scene shown in <xref rid="sensors-25-01174-f006" ref-type="fig">Figure 6</xref>, when the initial distance threshold varies between 0.5 m and 6.5 m, the 95% confidence interval for the macro F1 score of the NELD-EC algorithm is [0.8407, 0.9088]. Compared with other clustering algorithms, the 95% confidence interval of the macro F1 score for the NELD-EC algorithm is clearly in a higher range with a narrower interval. This indicates that the clustering performance of the NELD-EC algorithm is relatively insensitive to the selection of the initial distance threshold, and within a wide range of initial distance thresholds, the NELD-EC algorithm is able to maintain a high and stable macro F1 score.</p><p>Based on the clustering results depicted in <xref rid="sensors-25-01174-f007" ref-type="fig">Figure 7</xref>e, a further analysis is conducted on the reason why the clustering performance of the NELD-EC algorithm is not prominently influenced by the initial distance threshold. In the experimental outcomes, six data points are selected and labeled as Point 1, Point 2, Point 3, Point 4, Point 5, and Point 6. When the initial distance threshold is 3 m, the distribution of elements in the neighborhood distance set of each data point on the distance axis is obtained, as shown in <xref rid="sensors-25-01174-f009" ref-type="fig">Figure 9</xref>. On the distance axis of each data point shown in <xref rid="sensors-25-01174-f009" ref-type="fig">Figure 9</xref>, the yellow point serves as the origin of the distance axis and is also the position where the data point is located. The blue and red points, respectively, indicate the valid neighborhood points and interference points detected by Algorithm 1.</p><p>It can be observed from <xref rid="sensors-25-01174-f009" ref-type="fig">Figure 9</xref> that, under the given initial distance threshold condition, there exist interfering points within the neighborhood of the data points. However, these interfering points present a distinct clustering phenomenon with the valid points in terms of distance, where the two types of data points can be distinguished and the interfering points can be eliminated through simple clustering processing. For the initial distance threshold with a wide range of fluctuations, since the interfering points introduced by the change in the neighborhood range can all be identified and removed, the influence of the initial distance threshold on the numerical value of the local density of the data points is weakened. This further enables the clustering performance of the NELD-EC algorithm to remain stable within a large range of values of the initial distance threshold.</p><p>Through the analysis of the clustering results of the fixed-point collection dataset, it can be observed that the NELD-EC algorithm can effectively identify and eliminate the interfering points within the neighborhood of the data point. Hence, this algorithm is insensitive to the initial distance threshold. Consequently, the NELD-EC algorithm can maintain a relatively high clustering performance within a broad range of initial distance threshold values. Simultaneously, the NELD-EC algorithm can effectively eliminate the interfering points within the neighborhood of the data points, and the local density calculated by this algorithm can better reflect the true local information of the data point. The adaptive distance threshold determined by the local density of all the data points within the data set is more rational, thereby the NELD-EC algorithm possesses a more superior clustering performance.</p></sec><sec id="sec4dot4-sensors-25-01174"><title>4.4. The Experiments Using the Sequential Point Cloud Dataset</title><p>To validate the capability of the NELD-EC algorithm in handling sequence point clouds, the publicly available KITTI Odometry dataset [<xref rid="B2-sensors-25-01174" ref-type="bibr">2</xref>] was adopted. The KITTI Odometry dataset is currently the largest dataset for evaluating a computer vision algorithm in the context of autonomous driving scenarios worldwide. It encompasses video data captured by cameras in both color and grayscale, as well as point cloud data collected by lidar. In this part, only the sequential point cloud data captured by lidar within this dataset is utilized for analysis. The total driving distance of the data acquisition platform amounts to 39.2 km, with 10 frames collected per second, resulting in a cumulative total of 41,000 frames. These frames are classified into 22 sequences based on the varying collection scenarios. The point cloud data of each frame within the KITTI Odometry dataset is presented in the vehicle coordinate system, where the lidar serves as the origin, the forward direction parallel to the vehicle body in the horizontal plane is the positive X-axis, the direction perpendicular to the vehicle body and pointing to the left in the horizontal plane is the positive Y-axis, and the upward direction is the positive Z-axis. The point cloud data within the KITTI Odometry dataset encompasses various targets such as automobiles, buildings, and trees. Jens Behley et al. have annotated various targets within the dataset [<xref rid="B29-sensors-25-01174" ref-type="bibr">29</xref>]. In this paper, 3000 frames from sequence #00 and 1000 frames from sequence #10 of the KITTI Odometry dataset were, respectively, selected as the sequential point cloud dataset for this part. Frame-by-frame clustering processing on the sequential point cloud dataset was conducted, and the macro F1 score was calculated for each frame.</p><p>The data of Sequence #00 were collected on urban road sections, where the environment is rather complex and the vehicle density is relatively high. <xref rid="sensors-25-01174-f010" ref-type="fig">Figure 10</xref> presents the annotated point cloud and the corresponding optical image of the 2694th frame of Sequence #00. <xref rid="sensors-25-01174-f010" ref-type="fig">Figure 10</xref>a depicts the horizontal projection of the point cloud data of this frame, where the red &#x0201c;&#x000d7;&#x0201d; indicates the position of the LiDAR, and the black arc arrow represents the turning direction of the acquisition platform. <xref rid="sensors-25-01174-f010" ref-type="fig">Figure 10</xref>b shows the optical image captured by the forward camera of the acquisition platform. As can be seen from <xref rid="sensors-25-01174-f010" ref-type="fig">Figure 10</xref>b, a large number of vehicles are parked on both sides of the road. Within the effective detection range of the LiDAR, as the distance varies, there are considerable differences in the point cloud density and distribution patterns of different vehicles, as shown in <xref rid="sensors-25-01174-f010" ref-type="fig">Figure 10</xref>a.</p><p>To investigate the clustering efficacy of different algorithms when handling sequential point cloud data, the initial distance thresholds of the EC algorithm, LDT-EC algorithm, RDT-EC algorithm, and NELD-EC algorithm were all set at 3 m, and the adjustment parameter of the RDT-EC algorithm was set at 0.3. Meanwhile, based on the effective range of the LiDAR, the monitoring area of the CFT-EC algorithm was uniformly divided into five regions, with the distance thresholds of each region set at 2 m, 2.5 m, 3 m, 3.5 m, and 4 m, respectively. For sequence #00, each frame of data can be treated as an experimental sample. Based on the above parameter settings, each frame of sequence #00 was clustered by each algorithm, and the macro F1 score corresponding to the clustering result of that frame was computed. The temporal variations in the macro F1 scores of different algorithms are shown in <xref rid="sensors-25-01174-f011" ref-type="fig">Figure 11</xref>.</p><p>It can be observed from <xref rid="sensors-25-01174-f011" ref-type="fig">Figure 11</xref> that, with the change in time, the macro F1 scores of the five algorithms present obvious fluctuations over time. Particularly around 70 s, 150 s, and 290 s, the macro F1 scores of all the algorithms decrease significantly, suggesting that the point clouds at the corresponding positions are not easy to segment, there are numerous misallocations of data points, and the clustering performance of the algorithms deteriorates. The macro F1 scores of the EC algorithm, LDT-EC algorithm, and RDT-EC algorithm also show a marked reduction around 200 s, while the macro F1 scores of the CFT-EC algorithm and NELD-EC algorithm do not change significantly at this region, indicating that the CFT-EC algorithm and NELD-EC algorithm have superior point cloud clustering performance at this location. Considering the entire time variation interval, the fluctuation of the macro F1 score of the RDT-EC algorithm is more intense, and the fluctuation range of the macro F1 score of the NELD-EC algorithm is the smallest. The results in <xref rid="sensors-25-01174-f011" ref-type="fig">Figure 11</xref> demonstrate that, under the condition of a fixed initial threshold, the macro F1 score of the NELD-EC algorithm is more stably maintained within a higher performance range.</p><p>To quantitatively analyze the performance of different clustering algorithms, statistical analysis was conducted on the macro F1 score arrays obtained from sequence #00 for each algorithm, as shown in <xref rid="sensors-25-01174-t008" ref-type="table">Table 8</xref>. <xref rid="sensors-25-01174-t008" ref-type="table">Table 8</xref> compares the mean, standard deviation, correlation time, maximum value, minimum value, and 95% confidence interval of the macro F1 scores for each algorithm. The optimal values for each parameter are highlighted in blue in <xref rid="sensors-25-01174-t008" ref-type="table">Table 8</xref>. As seen in <xref rid="sensors-25-01174-t008" ref-type="table">Table 8</xref>, the NELD-EC algorithm has the highest mean macro F1 score, 0.878, while the classical EC algorithm and CFT-EC algorithm have slightly lower mean values, and the LDT-EC algorithm and RDT-EC algorithm have the lowest macro F1 scores. In terms of standard deviation, correlation time, and confidence interval, the NELD-EC algorithm has the smallest standard deviation, the longest correlation time, and the narrowest confidence interval, indicating that the macro F1 score of the NELD-EC algorithm has the least fluctuation, and thus, the clustering performance of the NELD-EC algorithm is the most stable. All algorithms reach a maximum macro F1 score of 1, but there are significant differences in the minimum macro F1 scores, with the minimum macro F1 score of the NELD-EC algorithm being 0.507, much higher than the corresponding values of the other algorithms. Through statistical analysis, it can be seen that when processing sequence #00, the NELD-EC algorithm demonstrates higher and more stable clustering performance.</p><p>Herein, the ability of different algorithms in handling sequence point cloud is further analyzed using sequence #10 from the KITTI Odometry dataset. Sequence #10 was collected in a suburban section close to a highway, mainly featuring straight paths and a low vehicle density. <xref rid="sensors-25-01174-f012" ref-type="fig">Figure 12</xref> presents the annotated point cloud and the corresponding optical image of frame 352 in sequence #10. <xref rid="sensors-25-01174-f012" ref-type="fig">Figure 12</xref>a shows the projection of the point cloud of this frame on the horizontal plane, where the red &#x0201c;&#x000d7;&#x0201d; represents the position of the lidar, and the black arrow indicates the forward direction of the acquisition platform. <xref rid="sensors-25-01174-f012" ref-type="fig">Figure 12</xref>b is the optical image captured by the forward camera of the acquisition platform. In comparison with <xref rid="sensors-25-01174-f010" ref-type="fig">Figure 10</xref>a, there are fewer vehicle targets in <xref rid="sensors-25-01174-f012" ref-type="fig">Figure 12</xref>a, and the point clouds of these vehicles exhibit different degrees of sparsity as the distance from the lidar varies.</p><p>The parameters of each algorithm are adopted with the same values as those when processing sequence #00. The sequence #10 is subjected to frame-by-frame clustering processing, and the macro F1 score of the clustering result of each frame is calculated. The temporal variations in the macro F1 scores of different algorithms are depicted in <xref rid="sensors-25-01174-f013" ref-type="fig">Figure 13</xref>.</p><p>As can be observed from <xref rid="sensors-25-01174-f013" ref-type="fig">Figure 13</xref>, the macro F1 scores of several algorithms exhibited significant fluctuations within the range of 30 s to 90 s, suggesting that the road conditions during this period were rather complex, and the clustering performance of several algorithms declined. During the period from 55 s to 65 s, the clustering performance of all algorithms decreased conspicuously. Among them, the performance of the EC algorithm and the LDT-EC algorithm dropped most significantly, the performance degradation of the RDT-EC algorithm was the least, and the performance of the NELD-EC algorithm was slightly lower than that of the RDT-EC algorithm but superior to that of the other algorithms. Throughout the entire experimental interval, the macro F1 scores of the EC algorithm, the CFT-EC algorithm, and the NELD-EC algorithm remained at a high level for a longer duration. However, when dealing with point cloud clustering in complex road conditions, although the macro F1 score of the NELD-EC algorithm also decreased, the decrease was not as significant as that of the other two algorithms.</p><p>After clustering sequence #10, the statistical parameters of the macro F1 scores for several algorithms are shown in <xref rid="sensors-25-01174-t009" ref-type="table">Table 9</xref>. As seen in <xref rid="sensors-25-01174-t009" ref-type="table">Table 9</xref>, all the statistical parameters of the macro F1 score for the NELD-EC algorithm reach the optimal values. Therefore, compared to the other typical algorithms, the NELD-EC algorithm is more suitable for clustering sequence point cloud data in practical scenarios.</p><p>Through the comparison of the processing results of two different sequence point clouds in the KITTI Odometry dataset by different algorithms, under the fixed initial distance threshold condition, the NELD-EC algorithm is capable of maintaining a relatively high clustering performance. As the surrounding environment of the acquisition platform varies, the clustering performance of the NELD-EC algorithm undergoes some fluctuations, but the fluctuation range is small and the stability is excellent. Therefore, the NELD-EC algorithm is more suitable for processing sequential point cloud data collected from real-world scenarios.</p></sec></sec><sec sec-type="conclusions" id="sec5-sensors-25-01174"><title>5. Conclusions and Outlook</title><p>Regarding the clustering issue of point clouds with irregular shapes and non-uniform densities, a novel Euclidean clustering algorithm is proposed in this paper and is named the NELD-EC algorithm. The NELD-EC algorithm calculates the local density of data points based on the NELD (Neighborhood Effective Local Density) of effective points within the neighborhood of the data point. By using the NELD of data points, it can more accurately describe the point cloud distribution characteristics around the data point. Based on the NELD of all data points, the NELD-EC algorithm provides a method to determine the adaptive distance threshold. Utilizing this adaptive distance threshold can effectively reduce the possibility of over-segmentation and under-segmentation, allowing the NELD-EC algorithm to effectively cluster point clouds with irregular shapes and non-uniform densities.</p><p>The results of comparative experiments on clustering using simulated point clouds, point clouds collected at fixed points, and sequential point clouds indicate that, in comparison with other classical EC-type algorithms, the clustering performance of the NELD-EC algorithm is insensitive to the selection of the initial distance threshold and has no specific requirements regarding the structure of the point clouds to be processed. When dealing with sequential point clouds, the NELD-EC algorithm can maintain a relatively high clustering performance, with a small fluctuation range and strong stability. The experimental results demonstrate that the parameter setting of the NELD-EC algorithm is straightforward and it can adaptively handle point clouds with complex structures, making it applicable for clustering data collected in actual scenarios.</p><p>The NELD-EC algorithm is a distance-based clustering algorithm, which is inevitably affected by boundary effects. The strength of the boundary effect is also related to the density differences between clusters. A more detailed statistical analysis of the NELD-EC algorithm requires exploring methods to reduce the boundary effect, which will be one of the key areas for future research.</p><p>In this paper, when processing sequential point clouds, the NELD-EC algorithm performs clustering on each frame individually. This method neglects the correlation between frames in the sequential point clouds, resulting in redundant calculations during clustering, which reduces the real-time performance of the algorithm when processing sequential point clouds. Utilizing the correlation between consecutive frames of the sequential point clouds, or incorporating semantic information [<xref rid="B30-sensors-25-01174" ref-type="bibr">30</xref>,<xref rid="B31-sensors-25-01174" ref-type="bibr">31</xref>], will help improve the precision and efficiency of the NELD-EC algorithm in processing sequential point clouds. Future research can focus on these aspects.</p><p>The NELD-EC algorithm effectively clusters point clouds with relatively complex structures, but there is still considerable room for improvement in terms of both performance and applicability. It may be considered to combine it with other algorithms, such as differential entropy [<xref rid="B32-sensors-25-01174" ref-type="bibr">32</xref>], to improve the detection of interference points within the neighborhood of data points, enhancing the clustering performance of the NELD-EC algorithm and extending its applicability to a wider range of point clouds.</p></sec></body><back><fn-group><fn><p><bold>Disclaimer/Publisher&#x02019;s Note:</bold> The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.</p></fn></fn-group><notes><title>Author Contributions</title><p>Conceptualization, Z.S.; methodology, Z.S.; software, S.D. and J.H.; validation, Z.S., J.H. and B.H.; formal analysis, Z.S. and S.D.; investigation, S.D. and J.H.; resources, Z.S., P.G. and Y.W.; data curation, S.D., B.H. and P.G.; writing&#x02014;original draft preparation, Z.S. and S.D.; writing&#x02014;review and editing, Z.S. and S.D.; supervision, Z.S.; project administration, Z.S.; funding acquisition, Z.S. All authors have read and agreed to the published version of the manuscript.</p></notes><notes><title>Institutional Review Board Statement</title><p>Not applicable.</p></notes><notes><title>Informed Consent Statement</title><p>Not applicable.</p></notes><notes notes-type="data-availability"><title>Data Availability Statement</title><p>Data are contained within the article.</p></notes><notes notes-type="COI-statement"><title>Conflicts of Interest</title><p>The authors declare no conflicts of interest.</p></notes><glossary><title>Abbreviations</title><p>The following abbreviations are used in this manuscript:
<array><tbody><tr><td align="left" valign="middle" rowspan="1" colspan="1">EC</td><td align="left" valign="middle" rowspan="1" colspan="1">Euclidean Clustering</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">LDT</td><td align="left" valign="middle" rowspan="1" colspan="1">Local Density-based Threshold</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">LDT-EC</td><td align="left" valign="middle" rowspan="1" colspan="1">LDT-based Euclidean Clustering</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">RDT</td><td align="left" valign="middle" rowspan="1" colspan="1">Relative Distance-based Threshold</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">RDT-EC</td><td align="left" valign="middle" rowspan="1" colspan="1">RDT-based Euclidean Clustering</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">NELD</td><td align="left" valign="middle" rowspan="1" colspan="1">Neighborhood Effective Line Density</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">NELD-EC</td><td align="left" valign="middle" rowspan="1" colspan="1">NELD-based Euclidean Clustering</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">KNN</td><td align="left" valign="middle" rowspan="1" colspan="1">K-Nearest Neighbors</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">RNN</td><td align="left" valign="middle" rowspan="1" colspan="1">Reverse K-Nearest Neighbors</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">DBSCAN</td><td align="left" valign="middle" rowspan="1" colspan="1">Density-based Spatial Clustering of Applications with Noise</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">CFT</td><td align="left" valign="middle" rowspan="1" colspan="1">Classification Threshold</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">CFT-EC</td><td align="left" valign="middle" rowspan="1" colspan="1">CFT-based Euclidean Clustering</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">KITTI</td><td align="left" valign="middle" rowspan="1" colspan="1">Karlsruhe Institute of Technology and Toyota Technological Institute at Chicago</td></tr></tbody></array></p></glossary><ref-list><title>References</title><ref id="B1-sensors-25-01174"><label>1.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>de Ramos</surname><given-names>D.C.</given-names></name>
<name><surname>Ferreira</surname><given-names>L.R.</given-names></name>
<name><surname>Santos</surname><given-names>M.M.D.</given-names></name>
<name><surname>Teixeira</surname><given-names>E.L.S.</given-names></name>
<name><surname>Yoshioka</surname><given-names>L.R.</given-names></name>
<name><surname>Justo</surname><given-names>J.F.</given-names></name>
<name><surname>Malik</surname><given-names>A.W.</given-names></name>
</person-group><article-title>Evaluation of Cluster Algorithms for Radar-Based Object Recognition in Autonomous and Assisted Driving</article-title><source>Sensors</source><year>2024</year><volume>24</volume><elocation-id>7219</elocation-id><pub-id pub-id-type="doi">10.3390/s24227219</pub-id><pub-id pub-id-type="pmid">39598997</pub-id>
</element-citation></ref><ref id="B2-sensors-25-01174"><label>2.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Geiger</surname><given-names>A.</given-names></name>
<name><surname>Lenz</surname><given-names>P.</given-names></name>
<name><surname>Urtasun</surname><given-names>R.</given-names></name>
</person-group><article-title>Are we ready for autonomous driving? The kitti vision benchmark suite</article-title><source>Proceedings of the 2012 IEEE Conference on Computer Vision and Pattern Recognition</source><conf-loc>Providence, RI, USA</conf-loc><conf-date>16&#x02013;21 June 2012</conf-date><fpage>3354</fpage><lpage>3361</lpage></element-citation></ref><ref id="B3-sensors-25-01174"><label>3.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Arnold</surname><given-names>E.</given-names></name>
<name><surname>Al-Jarrah</surname><given-names>O.Y.</given-names></name>
<name><surname>Dianati</surname><given-names>M.</given-names></name>
<name><surname>Fallah</surname><given-names>S.</given-names></name>
<name><surname>Oxtoby</surname><given-names>D.</given-names></name>
<name><surname>Mouzakitis</surname><given-names>A.</given-names></name>
</person-group><article-title>A survey on 3d object detection methods for autonomous driving applications</article-title><source>IEEE Trans. Intell. Transp. Syst.</source><year>2019</year><volume>20</volume><fpage>3782</fpage><lpage>3795</lpage><pub-id pub-id-type="doi">10.1109/TITS.2019.2892405</pub-id></element-citation></ref><ref id="B4-sensors-25-01174"><label>4.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Zhao</surname><given-names>T.</given-names></name>
<name><surname>Li</surname><given-names>L.</given-names></name>
<name><surname>Tian</surname><given-names>T.</given-names></name>
<name><surname>Ma</surname><given-names>J.</given-names></name>
<name><surname>Tian</surname><given-names>J.</given-names></name>
</person-group><article-title>APUNet: Attention-guided upsampling network for sparse and non-uniform point cloud</article-title><source>Pattern Recognit.</source><year>2023</year><volume>143</volume><fpage>109796</fpage><pub-id pub-id-type="doi">10.1016/j.patcog.2023.109796</pub-id></element-citation></ref><ref id="B5-sensors-25-01174"><label>5.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Wang</surname><given-names>Z.</given-names></name>
<name><surname>Fang</surname><given-names>X.</given-names></name>
<name><surname>Jiang</surname><given-names>Y.</given-names></name>
<name><surname>Ji</surname><given-names>H.</given-names></name>
<name><surname>Wang</surname><given-names>B.</given-names></name>
<name><surname>Huang</surname><given-names>Z.</given-names></name>
</person-group><article-title>The Improvement of Density Peaks Clustering Algorithm and Its Application to Point Cloud Segmentation of LiDAR</article-title><source>Sensors</source><year>2024</year><volume>24</volume><elocation-id>5693</elocation-id><pub-id pub-id-type="doi">10.3390/s24175693</pub-id><pub-id pub-id-type="pmid">39275604</pub-id>
</element-citation></ref><ref id="B6-sensors-25-01174"><label>6.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Quadros</surname><given-names>A.J.</given-names></name>
</person-group><article-title>Representing 3D Shape in Sparse Range Images for Urban Object Classification</article-title><source>Ph.D. Thesis</source><publisher-name>The University of Sydney</publisher-name><publisher-loc>Sydney, Australia</publisher-loc><year>2013</year></element-citation></ref><ref id="B7-sensors-25-01174"><label>7.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Schnabel</surname><given-names>R.</given-names></name>
<name><surname>Wahl</surname><given-names>R.</given-names></name>
<name><surname>Klein</surname><given-names>R.</given-names></name>
</person-group><article-title>Efficient RANSAC for point-cloud shape detection</article-title><source>Proceedings of the Computer Graphics Forum</source><publisher-name>Wiley Online Library</publisher-name><publisher-loc>Hoboken, NJ, USA</publisher-loc><year>2007</year><volume>Volume 26</volume><fpage>214</fpage><lpage>226</lpage></element-citation></ref><ref id="B8-sensors-25-01174"><label>8.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Bouveyron</surname><given-names>C.</given-names></name>
<name><surname>Brunet-Saumard</surname><given-names>C.</given-names></name>
</person-group><article-title>Model-based clustering of high-dimensional data: A review</article-title><source>Comput. Stat. Data Anal.</source><year>2014</year><volume>71</volume><fpage>52</fpage><lpage>78</lpage><pub-id pub-id-type="doi">10.1016/j.csda.2012.12.008</pub-id></element-citation></ref><ref id="B9-sensors-25-01174"><label>9.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Ester</surname><given-names>M.</given-names></name>
<name><surname>Kriegel</surname><given-names>H.P.</given-names></name>
<name><surname>Sander</surname><given-names>J.</given-names></name>
<name><surname>Xu</surname><given-names>X.</given-names></name>
</person-group><article-title>A density-based algorithm for discovering clusters in large spatial databases with noise</article-title><source>Proceedings of the KDD&#x02019;96: Proceedings of the Second International Conference on Knowledge Discovery and Data Mining</source><conf-loc>Portland, OR, USA</conf-loc><conf-date>2&#x02013;4 August 1996</conf-date><volume>Volume 96</volume><fpage>226</fpage><lpage>231</lpage></element-citation></ref><ref id="B10-sensors-25-01174"><label>10.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Rodriguez</surname><given-names>A.</given-names></name>
<name><surname>Laio</surname><given-names>A.</given-names></name>
</person-group><article-title>Clustering by fast search and find of density peaks</article-title><source>Science</source><year>2014</year><volume>344</volume><fpage>1492</fpage><lpage>1496</lpage><pub-id pub-id-type="doi">10.1126/science.1242072</pub-id><pub-id pub-id-type="pmid">24970081</pub-id>
</element-citation></ref><ref id="B11-sensors-25-01174"><label>11.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Rusu</surname><given-names>R.B.</given-names></name>
</person-group><article-title>Semantic 3D object maps for everyday manipulation in human living environments</article-title><source>KI-K&#x000fc;nstliche Intell.</source><year>2010</year><volume>24</volume><fpage>345</fpage><lpage>348</lpage><pub-id pub-id-type="doi">10.1007/s13218-010-0059-6</pub-id></element-citation></ref><ref id="B12-sensors-25-01174"><label>12.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Sun</surname><given-names>Z.</given-names></name>
<name><surname>Li</surname><given-names>Z.</given-names></name>
<name><surname>Liu</surname><given-names>Y.</given-names></name>
</person-group><article-title>An improved lidar data segmentation algorithm based on euclidean clustering</article-title><source>Proceedings of the 11th International Conference on Modelling, Identification and Control (ICMIC2019)</source><conf-loc>Tianjin, China</conf-loc><conf-date>13&#x02013;15 July 2019</conf-date><publisher-name>Springer</publisher-name><publisher-loc>Berlin/Heidelberg, Germany</publisher-loc><year>2020</year><fpage>1119</fpage><lpage>1130</lpage></element-citation></ref><ref id="B13-sensors-25-01174"><label>13.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Tian</surname><given-names>Q.</given-names></name>
<name><surname>Bai</surname><given-names>R.</given-names></name>
<name><surname>Li</surname><given-names>D.</given-names></name>
</person-group><article-title>Point cloud segmentation of scattered workpieces based on improved euclidean clustering</article-title><source>Laser Optoelectron. Prog.</source><year>2017</year><volume>54</volume><fpage>121</fpage><lpage>133</lpage></element-citation></ref><ref id="B14-sensors-25-01174"><label>14.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Zong</surname><given-names>C.</given-names></name>
<name><surname>Wen</surname><given-names>L.</given-names></name>
<name><surname>He</surname><given-names>L.</given-names></name>
</person-group><article-title>Object detection based on Euclidean clustering algorithm with 3D laser scanner</article-title><source>J. Jilin Univ. (Eng. Technol. Ed.)</source><year>2020</year><volume>50</volume><fpage>107</fpage><lpage>113</lpage></element-citation></ref><ref id="B15-sensors-25-01174"><label>15.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Qi</surname><given-names>C.R.</given-names></name>
<name><surname>Su</surname><given-names>H.</given-names></name>
<name><surname>Mo</surname><given-names>K.</given-names></name>
<name><surname>Guibas</surname><given-names>L.J.</given-names></name>
</person-group><article-title>Pointnet: Deep learning on point sets for 3d classification and segmentation</article-title><source>Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition</source><conf-loc>Honolulu, HI, USA</conf-loc><conf-date>21&#x02013;26 July 2017</conf-date><fpage>652</fpage><lpage>660</lpage></element-citation></ref><ref id="B16-sensors-25-01174"><label>16.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Qi</surname><given-names>C.R.</given-names></name>
<name><surname>Yi</surname><given-names>L.</given-names></name>
<name><surname>Su</surname><given-names>H.</given-names></name>
<name><surname>Guibas</surname><given-names>L.J.</given-names></name>
</person-group><article-title>Pointnet++: Deep hierarchical feature learning on point sets in a metric space</article-title><source>Proceedings of the 31st International Conference on Neural Information Processing Systems</source><conf-loc>Long Beach, CA, USA</conf-loc><conf-date>4&#x02013;9 December 2017</conf-date><fpage>5105</fpage><lpage>5114</lpage></element-citation></ref><ref id="B17-sensors-25-01174"><label>17.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Yang</surname><given-names>J.</given-names></name>
<name><surname>Gan</surname><given-names>R.</given-names></name>
<name><surname>Luo</surname><given-names>B.</given-names></name>
<name><surname>Wang</surname><given-names>A.</given-names></name>
<name><surname>Shi</surname><given-names>S.</given-names></name>
<name><surname>Du</surname><given-names>L.</given-names></name>
</person-group><article-title>An Improved Method for Individual Tree Segmentation in Complex Urban Scene Based on Using Multispectral LiDAR by Deep Learning</article-title><source>IEEE J. Sel. Top. Appl. Earth Obs. Remote Sens.</source><year>2024</year><volume>17</volume><fpage>6561</fpage><lpage>6576</lpage><pub-id pub-id-type="doi">10.1109/JSTARS.2024.3373395</pub-id></element-citation></ref><ref id="B18-sensors-25-01174"><label>18.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Lin</surname><given-names>Y.</given-names></name>
<name><surname>Vosselman</surname><given-names>G.</given-names></name>
<name><surname>Cao</surname><given-names>Y.</given-names></name>
<name><surname>Yang</surname><given-names>M.Y.</given-names></name>
</person-group><article-title>Active and incremental learning for semantic ALS point cloud segmentation</article-title><source>ISPRS J. Photogramm. Remote Sens.</source><year>2020</year><volume>169</volume><fpage>73</fpage><lpage>92</lpage><pub-id pub-id-type="doi">10.1016/j.isprsjprs.2020.09.003</pub-id></element-citation></ref><ref id="B19-sensors-25-01174"><label>19.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Zhan</surname><given-names>L.</given-names></name>
<name><surname>Li</surname><given-names>W.</given-names></name>
<name><surname>Min</surname><given-names>W.</given-names></name>
</person-group><article-title>FA-ResNet: Feature affine residual network for large-scale point cloud segmentation</article-title><source>Int. J. Appl. Earth Obs. Geoinf.</source><year>2023</year><volume>118</volume><fpage>103259</fpage><pub-id pub-id-type="doi">10.1016/j.jag.2023.103259</pub-id></element-citation></ref><ref id="B20-sensors-25-01174"><label>20.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Cao</surname><given-names>Y.</given-names></name>
<name><surname>Wang</surname><given-names>Y.</given-names></name>
<name><surname>Xue</surname><given-names>Y.</given-names></name>
<name><surname>Zhang</surname><given-names>H.</given-names></name>
<name><surname>Lao</surname><given-names>Y.</given-names></name>
</person-group><article-title>FEC: Fast Euclidean clustering for point cloud segmentation</article-title><source>Drones</source><year>2022</year><volume>6</volume><elocation-id>325</elocation-id><pub-id pub-id-type="doi">10.3390/drones6110325</pub-id></element-citation></ref><ref id="B21-sensors-25-01174"><label>21.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Rusu</surname><given-names>R.B.</given-names></name>
<name><surname>Cousins</surname><given-names>S.</given-names></name>
</person-group><article-title>3d is here: Point cloud library (pcl)</article-title><source>Proceedings of the 2011 IEEE International Conference on Robotics and Automation</source><conf-loc>Shanghai, China</conf-loc><conf-date>9&#x02013;13 May 2011</conf-date><fpage>1</fpage><lpage>4</lpage></element-citation></ref><ref id="B22-sensors-25-01174"><label>22.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Liu</surname><given-names>C.</given-names></name>
<name><surname>Zhao</surname><given-names>J.</given-names></name>
<name><surname>Liu</surname><given-names>Z.</given-names></name>
<name><surname>Wang</surname><given-names>X.</given-names></name>
<name><surname>Lai</surname><given-names>K.</given-names></name>
</person-group><article-title>Improved lidar obstacle detection method based on Euclidean clustering</article-title><source>Laser Optoelectron. Prog.</source><year>2020</year><volume>57</volume><fpage>201105</fpage></element-citation></ref><ref id="B23-sensors-25-01174"><label>23.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Qu</surname><given-names>J.</given-names></name>
<name><surname>Li</surname><given-names>S.</given-names></name>
<name><surname>Li</surname><given-names>Y.</given-names></name>
<name><surname>Liu</surname><given-names>L.</given-names></name>
</person-group><article-title>Research on railway obstacle detection method based on developed Euclidean clustering</article-title><source>Electronics</source><year>2023</year><volume>12</volume><elocation-id>1175</elocation-id><pub-id pub-id-type="doi">10.3390/electronics12051175</pub-id></element-citation></ref><ref id="B24-sensors-25-01174"><label>24.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Zhang</surname><given-names>A.</given-names></name>
<name><surname>Yu</surname><given-names>H.</given-names></name>
<name><surname>Huan</surname><given-names>Z.</given-names></name>
<name><surname>Yang</surname><given-names>X.</given-names></name>
<name><surname>Zheng</surname><given-names>S.</given-names></name>
<name><surname>Gao</surname><given-names>S.</given-names></name>
</person-group><article-title>SMOTE-RkNN: A hybrid re-sampling method based on SMOTE and reverse k-nearest neighbors</article-title><source>Inf. Sci.</source><year>2022</year><volume>595</volume><fpage>70</fpage><lpage>88</lpage><pub-id pub-id-type="doi">10.1016/j.ins.2022.02.038</pub-id></element-citation></ref><ref id="B25-sensors-25-01174"><label>25.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Li</surname><given-names>C.</given-names></name>
<name><surname>Ding</surname><given-names>S.</given-names></name>
<name><surname>Xu</surname><given-names>X.</given-names></name>
<name><surname>Hou</surname><given-names>H.</given-names></name>
<name><surname>Ding</surname><given-names>L.</given-names></name>
</person-group><article-title>Fast density peaks clustering algorithm based on improved mutual K-nearest-neighbor and sub-cluster merging</article-title><source>Inf. Sci.</source><year>2023</year><volume>647</volume><fpage>119470</fpage><pub-id pub-id-type="doi">10.1016/j.ins.2023.119470</pub-id></element-citation></ref><ref id="B26-sensors-25-01174"><label>26.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Lin</surname><given-names>T.Y.</given-names></name>
<name><surname>Maire</surname><given-names>M.</given-names></name>
<name><surname>Belongie</surname><given-names>S.</given-names></name>
<name><surname>Hays</surname><given-names>J.</given-names></name>
<name><surname>Perona</surname><given-names>P.</given-names></name>
<name><surname>Ramanan</surname><given-names>D.</given-names></name>
<name><surname>Doll&#x000e1;r</surname><given-names>P.</given-names></name>
<name><surname>Zitnick</surname><given-names>C.L.</given-names></name>
</person-group><article-title>Microsoft coco: Common objects in context</article-title><source>Proceedings of the Computer Vision&#x02013;ECCV 2014: 13th European Conference</source><conf-loc>Zurich, Switzerland</conf-loc><conf-date>6&#x02013;12 September 2014</conf-date><comment>Proceedings, Part V 13</comment><publisher-name>Springer</publisher-name><publisher-loc>Berlin/Heidelberg, Germany</publisher-loc><year>2014</year><fpage>740</fpage><lpage>755</lpage></element-citation></ref><ref id="B27-sensors-25-01174"><label>27.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Wang</surname><given-names>Y.</given-names></name>
<name><surname>Qian</surname><given-names>J.</given-names></name>
<name><surname>Hassan</surname><given-names>M.</given-names></name>
<name><surname>Zhang</surname><given-names>X.</given-names></name>
<name><surname>Zhang</surname><given-names>T.</given-names></name>
<name><surname>Yang</surname><given-names>C.</given-names></name>
<name><surname>Zhou</surname><given-names>X.</given-names></name>
<name><surname>Jia</surname><given-names>F.</given-names></name>
</person-group><article-title>Density peak clustering algorithms: A review on the decade 2014&#x02013;2023</article-title><source>Expert Syst. Appl.</source><year>2024</year><volume>238</volume><fpage>121860</fpage><pub-id pub-id-type="doi">10.1016/j.eswa.2023.121860</pub-id></element-citation></ref><ref id="B28-sensors-25-01174"><label>28.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Quadros</surname><given-names>A.</given-names></name>
<name><surname>Underwood</surname><given-names>J.</given-names></name>
<name><surname>Douillard</surname><given-names>B.</given-names></name>
</person-group><source>Sydney Urban Objects Dataset</source><publisher-name>Australian Centre for Field Robotics, Univertsity of Sydney</publisher-name><publisher-loc>Sydney, Australia</publisher-loc><year>2013</year></element-citation></ref><ref id="B29-sensors-25-01174"><label>29.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Behley</surname><given-names>J.</given-names></name>
<name><surname>Garbade</surname><given-names>M.</given-names></name>
<name><surname>Milioto</surname><given-names>A.</given-names></name>
<name><surname>Quenzel</surname><given-names>J.</given-names></name>
<name><surname>Behnke</surname><given-names>S.</given-names></name>
<name><surname>Stachniss</surname><given-names>C.</given-names></name>
<name><surname>Gall</surname><given-names>J.</given-names></name>
</person-group><article-title>Semantickitti: A dataset for semantic scene understanding of lidar sequences</article-title><source>Proceedings of the IEEE/CVF International Conference on Computer Vision</source><conf-loc>Seoul, Republic of Korea</conf-loc><conf-date>27 October&#x02013;2 November 2019</conf-date><fpage>9297</fpage><lpage>9307</lpage></element-citation></ref><ref id="B30-sensors-25-01174"><label>30.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Ding</surname><given-names>B.</given-names></name>
</person-group><article-title>LENet: Lightweight and efficient LiDAR semantic segmentation using multi-scale convolution attention</article-title><source>arXiv</source><year>2023</year><pub-id pub-id-type="arxiv">2301.04275</pub-id></element-citation></ref><ref id="B31-sensors-25-01174"><label>31.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Li</surname><given-names>R.</given-names></name>
<name><surname>Li</surname><given-names>S.</given-names></name>
<name><surname>Chen</surname><given-names>X.</given-names></name>
<name><surname>Ma</surname><given-names>T.</given-names></name>
<name><surname>Gall</surname><given-names>J.</given-names></name>
<name><surname>Liang</surname><given-names>J.</given-names></name>
</person-group><article-title>Tfnet: Exploiting temporal cues for fast and accurate lidar semantic segmentation</article-title><source>Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition</source><conf-loc>Seattle, WA, USA</conf-loc><conf-date>17&#x02013;21 June 2024</conf-date><fpage>4547</fpage><lpage>4556</lpage></element-citation></ref><ref id="B32-sensors-25-01174"><label>32.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Barberi</surname><given-names>E.</given-names></name>
<name><surname>Cucinotta</surname><given-names>F.</given-names></name>
<name><surname>Forss&#x000e9;n</surname><given-names>P.E.</given-names></name>
<name><surname>Sfravara</surname><given-names>F.</given-names></name>
</person-group><article-title>DECI: A Differential Entropy-Based Compactness Index for Point Clouds Analysis: Method and Potential Applications</article-title><source>Eng. Proc.</source><year>2023</year><volume>56</volume><elocation-id>273</elocation-id><pub-id pub-id-type="doi">10.3390/ASEC2023-15808</pub-id></element-citation></ref></ref-list></back><floats-group><fig position="float" id="sensors-25-01174-f001"><label>Figure 1</label><caption><p>Top view of a portion of the 3D point cloud at an intersection in the Sydney urban area.</p></caption><graphic xlink:href="sensors-25-01174-g001" position="float"/></fig><fig position="float" id="sensors-25-01174-f002"><label>Figure 2</label><caption><p>Spatial distribution of neighborhood data points containing interfering points: (<bold>a</bold>) Regular case. (<bold>b</bold>) Case with a large number of interfering points. (<bold>c</bold>) Case with a small number of interfering points. (<bold>d</bold>) Distribution of elements in the neighborhood distance set along the distance axis in the regular case. (<bold>e</bold>) Distribution of elements in the neighborhood distance set along the distance axis when a large number of interfering points are present. (<bold>f</bold>) Distribution of elements in the neighborhood distance set along the distance axis when a small number of interfering points are present. (<bold>g</bold>) Clustering results in the regular case. (<bold>h</bold>) Clustering results when a large number of interfering points are present. (<bold>i</bold>) Clustering results when a small number of interfering points are present.</p></caption><graphic xlink:href="sensors-25-01174-g002" position="float"/></fig><fig position="float" id="sensors-25-01174-f003"><label>Figure 3</label><caption><p>Identification performance of the valid distance set as a function of the neighborhood radius eps.</p></caption><graphic xlink:href="sensors-25-01174-g003" position="float"/></fig><fig position="float" id="sensors-25-01174-f004"><label>Figure 4</label><caption><p>The point cloud distributions and truth labels of four public simulated datasets: (<bold>a</bold>) Jain. (<bold>b</bold>) Zelink6. (<bold>c</bold>) 2sp2glob. (<bold>d</bold>) Compound.</p></caption><graphic xlink:href="sensors-25-01174-g004" position="float"/></fig><fig position="float" id="sensors-25-01174-f005"><label>Figure 5</label><caption><p>Clustering results of several algorithms on four public datasets.</p></caption><graphic xlink:href="sensors-25-01174-g005" position="float"/></fig><fig position="float" id="sensors-25-01174-f006"><label>Figure 6</label><caption><p>Point cloud distribution of the fixed-point collected dataset: (<bold>a</bold>) 3D distribution of the unlabeled point cloud. (<bold>b</bold>) Projection of the labeled point cloud on the horizontal plane.</p></caption><graphic xlink:href="sensors-25-01174-g006" position="float"/></fig><fig position="float" id="sensors-25-01174-f007"><label>Figure 7</label><caption><p>The clustering results of the fixed-point collected dataset by several algorithms: (<bold>a</bold>) EC. (<bold>b</bold>) LDT-EC. (<bold>c</bold>) RDT-EC. (<bold>d</bold>) CFT-EC. (<bold>e</bold>) NELD-EC.</p></caption><graphic xlink:href="sensors-25-01174-g007" position="float"/></fig><fig position="float" id="sensors-25-01174-f008"><label>Figure 8</label><caption><p>The impact of the initial distance threshold on the clustering performance of different algorithms.</p></caption><graphic xlink:href="sensors-25-01174-g008" position="float"/></fig><fig position="float" id="sensors-25-01174-f009"><label>Figure 9</label><caption><p>Detection of the interfering points in the neighborhood distance set.</p></caption><graphic xlink:href="sensors-25-01174-g009" position="float"/></fig><fig position="float" id="sensors-25-01174-f010"><label>Figure 10</label><caption><p>The 2694th frame of Sequence #00: (<bold>a</bold>) Projection of the annotated point cloud on the horizontal plane. (<bold>b</bold>) Optical image in front of the acquisition platform.</p></caption><graphic xlink:href="sensors-25-01174-g010" position="float"/></fig><fig position="float" id="sensors-25-01174-f011"><label>Figure 11</label><caption><p>The temporal variations in the macro F1 scores of the clustering results for each algorithm in each frame of sequence #00.</p></caption><graphic xlink:href="sensors-25-01174-g011" position="float"/></fig><fig position="float" id="sensors-25-01174-f012"><label>Figure 12</label><caption><p>The 352nd frame of Sequence #10: (<bold>a</bold>) Projection of the annotated point cloud on the horizontal plane. (<bold>b</bold>) Optical image in front of the acquisition platform.</p></caption><graphic xlink:href="sensors-25-01174-g012" position="float"/></fig><fig position="float" id="sensors-25-01174-f013"><label>Figure 13</label><caption><p>The temporal variations in the macro F1 scores of the clustering results for each algorithm in each frame of sequence #10.</p></caption><graphic xlink:href="sensors-25-01174-g013" position="float"/></fig><table-wrap position="float" id="sensors-25-01174-t001"><object-id pub-id-type="pii">sensors-25-01174-t001_Table 1</object-id><label>Table 1</label><caption><p>Parameter settings for clustering algorithms on four public datasets.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Algorithm</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Parameters</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Jain</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Zelink6</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">2sp2glob</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Compound</th></tr></thead><tbody><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">EC</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Initial Distance Threshold (m)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">2.5</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.07</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1.61</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">LDT-EC</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Initial Distance Threshold (m)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">2.5</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.08</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1.62</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1.5</td></tr><tr><td rowspan="3" align="center" valign="middle" style="border-bottom:solid thin" colspan="1">RDT-EC</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Radar Position (m)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">(30, 8)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">(0.45, 0.5)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">(0, 0)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">(10, 5)</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Initial Distance Threshold (m)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">2.1</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.08</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1.5</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Adjustment Parameter</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.15</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.5</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.8</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.15</td></tr><tr><td rowspan="3" align="center" valign="middle" style="border-bottom:solid thin" colspan="1">CFT-EC</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Radar Position (m)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">(30, 8)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">(0.45, 0.5)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">(0, 0)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">(10, 5)</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Arc Radius of Region (m)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">15.32</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.25</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">16.67, 33.33</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">15.80</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Initial Distance Threshold (m)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">2, 3</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.04, 0.06</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.5, 2, 3</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1, 3</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">NELD-EC</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Initial Distance Threshold (m)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">8</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.34</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">2.66</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">2.0</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-01174-t002"><object-id pub-id-type="pii">sensors-25-01174-t002_Table 2</object-id><label>Table 2</label><caption><p>Macro F1 scores of clustering results for several algorithms on four public datasets (optimal values are highlighted in blue).</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Algorithm</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Jain</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Zelink6</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">2sp2glob</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Compound</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">EC</td><td align="center" valign="middle" rowspan="1" colspan="1">0.91</td><td align="center" valign="middle" rowspan="1" colspan="1">0.89</td><td align="center" valign="middle" rowspan="1" colspan="1">0.99</td><td align="center" valign="middle" rowspan="1" colspan="1">0.75</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">LDT-EC</td><td align="center" valign="middle" rowspan="1" colspan="1">0.86</td><td align="center" valign="middle" rowspan="1" colspan="1">0.83</td><td align="center" valign="middle" rowspan="1" colspan="1">0.99</td><td align="center" valign="middle" rowspan="1" colspan="1">0.78</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">RDT-EC</td><td align="center" valign="middle" rowspan="1" colspan="1">0.69</td><td align="center" valign="middle" rowspan="1" colspan="1">0.81</td><td align="center" valign="middle" rowspan="1" colspan="1">0.82</td><td align="center" valign="middle" rowspan="1" colspan="1">0.65</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">CFT-EC</td><td align="center" valign="middle" rowspan="1" colspan="1">0.84</td><td align="center" valign="middle" rowspan="1" colspan="1">0.88</td><td align="center" valign="middle" rowspan="1" colspan="1">0.83</td><td align="center" valign="middle" rowspan="1" colspan="1">0.77</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">NELD-EC</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">1.00</named-content>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">1.00</named-content>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">1.00</named-content>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">0.81</named-content>
</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-01174-t003"><object-id pub-id-type="pii">sensors-25-01174-t003_Table 3</object-id><label>Table 3</label><caption><p>Parameter settings for clustering the fixed-point collection dataset using different algorithms.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Algorithm</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Parameters</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Value</th></tr></thead><tbody><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">EC</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Initial Distance Threshold (m)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">LDT-EC</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Initial Distance Threshold (m)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1.4</td></tr><tr><td rowspan="2" align="center" valign="middle" style="border-bottom:solid thin" colspan="1">RDT-EC</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Initial Distance Threshold (m)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Adjustment Parameter</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.3</td></tr><tr><td rowspan="2" align="center" valign="middle" style="border-bottom:solid thin" colspan="1">CFT-EC</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Arc Radius of Region (m)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">7.41, 14.82, 22.23, 29.64</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Initial Distance Threshold (m)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1, 2, 3, 4, 5</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">NELD-EC</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Initial Distance Threshold (m)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1.4</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-01174-t004"><object-id pub-id-type="pii">sensors-25-01174-t004_Table 4</object-id><label>Table 4</label><caption><p>The clustering effects of several algorithms on point clouds of different regions.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Algorithm</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Region (A)</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Region (B)</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Region (C)</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Region (D)</th></tr></thead><tbody><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">EC</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Under-Segmentation</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Accurate Segmentation</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Accurate Segmentation</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Over- and Under-Segmentation</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">LDT-EC</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Under-Segmentation</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Over-Segmentation</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Accurate Segmentation</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Over- and Under-Segmentation</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">RDT-EC</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Under-Segmentation</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Accurate Segmentation</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Over-Segmentation</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Over- and Under-Segmentation</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">CFT-EC</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Under-Segmentation</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Accurate Segmentation</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Over-Segmentation</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Over- and Under-Segmentation</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">NELD-EC</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Accurate Segmentation</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Accurate Segmentation</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Accurate Segmentation</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Over- and Under-Segmentation</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-01174-t005"><object-id pub-id-type="pii">sensors-25-01174-t005_Table 5</object-id><label>Table 5</label><caption><p>The macro F1 scores of the clustering results of the fixed-point collected dataset by several algorithms (optimal values are highlighted in blue).</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Algorithm</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Macro F1 Scores</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">EC</td><td align="center" valign="middle" rowspan="1" colspan="1">0.910</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">LDT-EC</td><td align="center" valign="middle" rowspan="1" colspan="1">0.909</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">RDT-EC</td><td align="center" valign="middle" rowspan="1" colspan="1">0.911</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">CFT-EC</td><td align="center" valign="middle" rowspan="1" colspan="1">0.911</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">NELD-EC</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">0.955</named-content>
</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-01174-t006"><object-id pub-id-type="pii">sensors-25-01174-t006_Table 6</object-id><label>Table 6</label><caption><p>Statistical parameters of stability for clustering results of each algorithm on multiple sampled datasets.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Algorithm</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Mean</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Confidence Interval</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">EC</td><td align="center" valign="middle" rowspan="1" colspan="1">0.907</td><td align="center" valign="middle" rowspan="1" colspan="1">[0.8939, 0.9209]</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">LDT-EC</td><td align="center" valign="middle" rowspan="1" colspan="1">0.909</td><td align="center" valign="middle" rowspan="1" colspan="1">[0.9073, 0.9103]</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">RDT-EC</td><td align="center" valign="middle" rowspan="1" colspan="1">0.902</td><td align="center" valign="middle" rowspan="1" colspan="1">[0.8921, 0.9110]</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">CFT-EC</td><td align="center" valign="middle" rowspan="1" colspan="1">0.878</td><td align="center" valign="middle" rowspan="1" colspan="1">[0.8608, 0.8945]</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">NELD-EC</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.943</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">[0.9329, 0.9521]</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-01174-t007"><object-id pub-id-type="pii">sensors-25-01174-t007_Table 7</object-id><label>Table 7</label><caption><p>Results of the perturbation of the initial distance threshold on the macro F1 score confidence interval of the clustering algorithms.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Algorithm</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Confidence Interval</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">EC</td><td align="center" valign="middle" rowspan="1" colspan="1">[0.5812, 0.7576]</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">LDT-EC</td><td align="center" valign="middle" rowspan="1" colspan="1">[0.5580, 0.7504]</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">RDT-EC</td><td align="center" valign="middle" rowspan="1" colspan="1">[0.5409, 0.7404]</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">NELD-EC</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">[0.8407, 0.9088]</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-01174-t008"><object-id pub-id-type="pii">sensors-25-01174-t008_Table 8</object-id><label>Table 8</label><caption><p>The statistical parameters of macro F1 scores corresponding to different algorithms on sequence #00 (optimal values are highlighted in blue).</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Algorithm</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Mean</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Standard Deviation</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Correlation Time</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Maximum</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Minimum</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Confidence Interval</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">EC</td><td align="center" valign="middle" rowspan="1" colspan="1">0.717</td><td align="center" valign="middle" rowspan="1" colspan="1">0.14137</td><td align="center" valign="middle" rowspan="1" colspan="1">144.38</td><td align="center" valign="middle" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">1</named-content>
</td><td align="center" valign="middle" rowspan="1" colspan="1">0.302</td><td align="center" valign="middle" rowspan="1" colspan="1">[0.7123, 0.7217]</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">LDT-EC</td><td align="center" valign="middle" rowspan="1" colspan="1">0.692</td><td align="center" valign="middle" rowspan="1" colspan="1">0.16624</td><td align="center" valign="middle" rowspan="1" colspan="1">141.77</td><td align="center" valign="middle" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">1</named-content>
</td><td align="center" valign="middle" rowspan="1" colspan="1">0.203</td><td align="center" valign="middle" rowspan="1" colspan="1">[0.6861, 0.6979]</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">RDT-EC</td><td align="center" valign="middle" rowspan="1" colspan="1">0.623</td><td align="center" valign="middle" rowspan="1" colspan="1">0.19692</td><td align="center" valign="middle" rowspan="1" colspan="1">136.34</td><td align="center" valign="middle" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">1</named-content>
</td><td align="center" valign="middle" rowspan="1" colspan="1">0.212</td><td align="center" valign="middle" rowspan="1" colspan="1">[0.6160, 0.6300]</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">CFT-EC</td><td align="center" valign="middle" rowspan="1" colspan="1">0.754</td><td align="center" valign="middle" rowspan="1" colspan="1">0.13999</td><td align="center" valign="middle" rowspan="1" colspan="1">144.98</td><td align="center" valign="middle" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">1</named-content>
</td><td align="center" valign="middle" rowspan="1" colspan="1">0.344</td><td align="center" valign="middle" rowspan="1" colspan="1">[0.7490, 0.7590]</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">NELD-EC</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">0.878</named-content>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">0.09086</named-content>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">148.36</named-content>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">1</named-content>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">0.507</named-content>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">[0.8747, 0.8813]</named-content>
</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-01174-t009"><object-id pub-id-type="pii">sensors-25-01174-t009_Table 9</object-id><label>Table 9</label><caption><p>The statistical parametersof macro F1 scores corresponding to different algorithms on sequence #10 (optimal values are highlighted in blue).</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Algorithm</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Mean</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Standard Deviation</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Correlation Time</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Maximum</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Minimum</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Confidence Interval</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">EC</td><td align="center" valign="middle" rowspan="1" colspan="1">0.877</td><td align="center" valign="middle" rowspan="1" colspan="1">0.18646</td><td align="center" valign="middle" rowspan="1" colspan="1">47.78</td><td align="center" valign="middle" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">1</named-content>
</td><td align="center" valign="middle" rowspan="1" colspan="1">0.303</td><td align="center" valign="middle" rowspan="1" colspan="1">[0.8513, 0.8647]</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">LDT-EC</td><td align="center" valign="middle" rowspan="1" colspan="1">0.861</td><td align="center" valign="middle" rowspan="1" colspan="1">0.19213</td><td align="center" valign="middle" rowspan="1" colspan="1">47.57</td><td align="center" valign="middle" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">1</named-content>
</td><td align="center" valign="middle" rowspan="1" colspan="1">0.326</td><td align="center" valign="middle" rowspan="1" colspan="1">[0.8541, 0.8679]</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">RDT-EC</td><td align="center" valign="middle" rowspan="1" colspan="1">0.858</td><td align="center" valign="middle" rowspan="1" colspan="1">0.12187</td><td align="center" valign="middle" rowspan="1" colspan="1">48.97</td><td align="center" valign="middle" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">1</named-content>
</td><td align="center" valign="middle" rowspan="1" colspan="1">0.333</td><td align="center" valign="middle" rowspan="1" colspan="1">[0.8536, 0.8624]</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">CFT-EC</td><td align="center" valign="middle" rowspan="1" colspan="1">0.904</td><td align="center" valign="middle" rowspan="1" colspan="1">0.14628</td><td align="center" valign="middle" rowspan="1" colspan="1">48.67</td><td align="center" valign="middle" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">1</named-content>
</td><td align="center" valign="middle" rowspan="1" colspan="1">0.326</td><td align="center" valign="middle" rowspan="1" colspan="1">[0.8988, 0.9092]</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">NELD-EC</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">0.918</named-content>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">0.10396</named-content>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">49.19</named-content>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">1</named-content>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">0.486</named-content>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<named-content content-type="color: #0000FF">[0.9143, 0.9217]</named-content>
</td></tr></tbody></table></table-wrap></floats-group></article>