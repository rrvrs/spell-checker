<!DOCTYPE article
PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with MathML3 v1.3 20210610//EN" "JATS-archivearticle1-3-mathml3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.3" xml:lang="en" article-type="research-article"><?properties open_access?><processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats"><restricted-by>pmc</restricted-by></processing-meta><front><journal-meta><journal-id journal-id-type="nlm-ta">Sensors (Basel)</journal-id><journal-id journal-id-type="iso-abbrev">Sensors (Basel)</journal-id><journal-id journal-id-type="publisher-id">sensors</journal-id><journal-title-group><journal-title>Sensors (Basel, Switzerland)</journal-title></journal-title-group><issn pub-type="epub">1424-8220</issn><publisher><publisher-name>MDPI</publisher-name></publisher></journal-meta>
<article-meta><article-id pub-id-type="pmid">40006309</article-id><article-id pub-id-type="pmc">PMC11859830</article-id><article-id pub-id-type="doi">10.3390/s25041080</article-id><article-id pub-id-type="publisher-id">sensors-25-01080</article-id><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title>Cross-Domain Communication Method Based on Load Balancing for SDNs</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Wang</surname><given-names>Xiaomao</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Conceptualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/conceptualization/">Conceptualization</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Methodology" vocab-term-identifier="https://credit.niso.org/contributor-roles/methodology/">Methodology</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Software" vocab-term-identifier="https://credit.niso.org/contributor-roles/software/">Software</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Investigation" vocab-term-identifier="https://credit.niso.org/contributor-roles/investigation/">Investigation</role><xref rid="af1-sensors-25-01080" ref-type="aff">1</xref><xref rid="c1-sensors-25-01080" ref-type="corresp">*</xref></contrib><contrib contrib-type="author"><name><surname>Zhou</surname><given-names>Yi</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Methodology" vocab-term-identifier="https://credit.niso.org/contributor-roles/methodology/">Methodology</role><xref rid="af1-sensors-25-01080" ref-type="aff">1</xref></contrib><contrib contrib-type="author"><name><surname>Dan</surname><given-names>Feng</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Methodology" vocab-term-identifier="https://credit.niso.org/contributor-roles/methodology/">Methodology</role><xref rid="af1-sensors-25-01080" ref-type="aff">1</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-1496-8923</contrib-id><name><surname>Yang</surname><given-names>Xian</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x02013; original draft" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-original-draft/">Writing &#x02013; original draft</role><xref rid="af2-sensors-25-01080" ref-type="aff">2</xref></contrib></contrib-group><contrib-group><contrib contrib-type="editor"><name><surname>Ghinea</surname><given-names>George</given-names></name><role>Academic Editor</role></contrib></contrib-group><aff id="af1-sensors-25-01080"><label>1</label>Engineering Research Center for Metallurgical Automation and Measurement Technology of Ministry of Education, Wuhan University of Science and Technology, Wuhan 430081, China; <email>zhouyi83@wust.edu.cn</email> (Y.Z.); <email>danfeng@wust.edu.cn</email> (F.D.)</aff><aff id="af2-sensors-25-01080"><label>2</label>Alliance Business School, University of Manchester, Manchester M13 9PL, UK; <email>xian.yang@manchester.ac.uk</email></aff><author-notes><corresp id="c1-sensors-25-01080"><label>*</label>Correspondence: <email>wangxm@wust.edu.cn</email></corresp></author-notes><pub-date pub-type="epub"><day>11</day><month>2</month><year>2025</year></pub-date><pub-date pub-type="collection"><month>2</month><year>2025</year></pub-date><volume>25</volume><issue>4</issue><elocation-id>1080</elocation-id><history><date date-type="received"><day>08</day><month>1</month><year>2025</year></date><date date-type="rev-recd"><day>09</day><month>2</month><year>2025</year></date><date date-type="accepted"><day>10</day><month>2</month><year>2025</year></date></history><permissions><copyright-statement>&#x000a9; 2025 by the authors.</copyright-statement><copyright-year>2025</copyright-year><license><ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>).</license-p></license></permissions><abstract><p>In multi-end-to-end path request planning, the control plane may not be able to meet all path request requirements under limited bandwidth resources. Moreover, suboptimal path planning can lead to localized network congestion, which in turn causes an overall imbalance in network load. Therefore, the multi-domain control plane needs to consider more network resource states during the path selection, such as link weights, load saturation, and resource occupancy rates, in order to select the optimal paths to maximize the satisfaction of data plane requirements while maintaining network load balance. To address such issues, we first derive a cross-domain communication load balancing objective function based on network modeling. Through collaborative processing among multi-domain controllers, the coordinated planning of cross-domain paths and the collaborative installation of flow tables are achieved. Then, we transform the cross-domain path planning problem into a clique-finding problem under a set of backup paths. Finally, we provide a heuristic approximate solution method for this problem. In terms of cross-domain communication, we adopt a collaborative approach among multiple controllers to achieve coordinated planning of cross-domain paths and collaborative installation of flow tables. Simulation results show that our proposed scheme outperforms the traditional method in terms of path allocation success rate, network load balancing degree, and data transmission delay, especially in cross-domain communication under high-density path requests in SDN networks.</p></abstract><kwd-group><kwd>software defined networking (SDN)</kwd><kwd>path selection</kwd><kwd>load balancing</kwd><kwd>cross-domain</kwd></kwd-group><funding-group><award-group><funding-source>the Natural Science Foundation of Hubei Province</funding-source><award-id>2019CFB138</award-id><award-id>2018CFB346</award-id></award-group><funding-statement>This research was supported in part by the Natural Science Foundation of Hubei Province, grant number 2019CFB138 and 2018CFB346.</funding-statement></funding-group></article-meta></front><body><sec sec-type="intro" id="sec1-sensors-25-01080"><title>1. Introduction</title><p>Software defined networking (SDN) belongs to centralized control. During the path allocation process, the control plane needs to consider the selection and optimization of end-to-end paths across the entire network, which puts new demands on the precision of the controller&#x02019;s path selection and its global consideration. The traditional shortest path first (SPF) algorithm can no longer meet these requirements. Firstly, for any flow request, the controller cannot guarantee that there will always be a suitable path to meet the transmission requirements under the current state. Secondly, under bandwidth limitations, the end-to-end path selected based on the whole network topology view is not necessarily optimal. Lastly, even when there is sufficient remaining bandwidth, the selected path may lead to network load imbalance and network congestion.</p><p>In the case of missing flow table entries, the controller may receive multiple end-to-end path requests within an extremely short time. Due to limited network resources, the actual number of paths that can be allocated may not be able to meet all end-to-end path requests. In traditional BGP networks, routers do not consider the overall network load balance when finding routes, whereas in SDN, this new type of network, the overall network load balance is one of the important indicators to consider. When the existing resources are insufficient to meet all path requests, how the controller plans the path allocation scheme to maximize user satisfaction without causing network load imbalance is particularly important. Therefore, each domain controller needs to consider end-to-end flow requests from a global perspective. For multiple end-to-end path requests under limited resources, the controller should be able to select as many available paths as possible while ensuring that the network load is relatively optimal.</p><p>In the aspect of SDN path selection, Zongyu et al. [<xref rid="B1-sensors-25-01080" ref-type="bibr">1</xref>] proposed an integrated optimization approach that combines adaptive load-balancing and heuristic path selection and used a deep learning model to predict the payload data and the convolutional neural network (CNN) model to predict the noise data. Based on the network architecture of the compute-first network (CFN), Bo et al. [<xref rid="B2-sensors-25-01080" ref-type="bibr">2</xref>] analyzed the selection and decision-making process of traffic forwarding paths from edge networks to computing centers in CFN according to the actual enterprise business deployment requirements and combined the technologies of SD-WAN, SRv6, etc., to realize an end-to-end forwarding path selection model in compute-prioritized NICs and put forward an end-to-end forwarding path quality detection method. Li et al. [<xref rid="B3-sensors-25-01080" ref-type="bibr">3</xref>] implemented dynamic selection of a single path and network load balancing by calculating the number of path hops, packet forwarding counts, byte forwarding counts, and port forwarding rates at both ends of the link. Celenlioglu et al. [<xref rid="B4-sensors-25-01080" ref-type="bibr">4</xref>] reduced the controller&#x02019;s time in routing by setting up multiple paths in advance to support multi-path routing in SDN. Ghaffarinejad et al. [<xref rid="B5-sensors-25-01080" ref-type="bibr">5</xref>] combined the concept of load balancing at the application layer in traditional networks with the network layer through the use of SDN, thereby eliminating the traditional central control center. In [<xref rid="B6-sensors-25-01080" ref-type="bibr">6</xref>], Giorgetti et al. introduced OpenFlow concepts to address the optimal path selection problem in optical networks, providing a solution approach for the GMPL problem. [<xref rid="B7-sensors-25-01080" ref-type="bibr">7</xref>] proposed a distributed management program for dynamic path control. Alagitz et al. [<xref rid="B8-sensors-25-01080" ref-type="bibr">8</xref>] proposed a demand-driven DynPaC framework for dynamic management of path allocation tasks. To address the issue of long propagation delays between controllers and switches, Lin et al. [<xref rid="B9-sensors-25-01080" ref-type="bibr">9</xref>] proposed a path label routing method based on OpenFlow. In [<xref rid="B10-sensors-25-01080" ref-type="bibr">10</xref>], Sheu et al. improved the traditional SPF and proposed a path selection algorithm, applying it to SDN networks. In [<xref rid="B11-sensors-25-01080" ref-type="bibr">11</xref>], Huang et al. proposed a new multicast tree-based routing algorithm, proving that the research problem is NP-Hard and providing parameters that are not approximable within <italic toggle="yes">k</italic>. Ankit et al. [<xref rid="B12-sensors-25-01080" ref-type="bibr">12</xref>] proposed the ELBA algorithm for multimedia data, utilizing SDN&#x02019;s dynamic rerouting capabilities to stream different layers of SVC-encoded video on potentially different suitable paths. Lu et al. [<xref rid="B13-sensors-25-01080" ref-type="bibr">13</xref>] proposed a new inter-domain multi-path flow transfer mechanism based on SDN and multi-domain collaboration, designing an information exchange method to maintain network status (e.g., inter-domain topology updates, link loads) through a multi-layer iterative detection method based on BGP notifications and inter-domain collaboration analysis. Rocha et al. [<xref rid="B14-sensors-25-01080" ref-type="bibr">14</xref>] proposed a path computation model, establishing the integration between data path deployments between servers based on the model&#x02019;s principles. Lamali et al. [<xref rid="B15-sensors-25-01080" ref-type="bibr">15</xref>] proposed a corresponding path selection algorithm by considering the bandwidth constraints of each link and ensuring Quality of Service (QoS). In [<xref rid="B16-sensors-25-01080" ref-type="bibr">16</xref>], Trivisonno et al. proposed a method to maximize the number of link requests, which can select the maximum number of links that meet the conditions from multiple specific link requests based on broadband limit conditions. Llopis et al. [<xref rid="B17-sensors-25-01080" ref-type="bibr">17</xref>] improved the processing timeliness of key businesses by identifying paths with minimal delay in real-time and routing important data services to those paths.</p><p>In terms of routing load balancing, Naga Katta et al. [<xref rid="B18-sensors-25-01080" ref-type="bibr">18</xref>] proposed a method to dynamically adjust loads by tracking congestion on the best paths to destinations between adjacent switches within the data plane, thereby achieving better network load balancing by reducing the generality of switches. Salvestrini et al. [<xref rid="B19-sensors-25-01080" ref-type="bibr">19</xref>] achieved dynamic load balancing through distributed controllers and inter-platform signaling in SDN. In [<xref rid="B20-sensors-25-01080" ref-type="bibr">20</xref>], the authors proposed a method to reduce the load on HTTP servers using OpenFlow, mainly by customizing flow routing to reduce network and server response times. In [<xref rid="B21-sensors-25-01080" ref-type="bibr">21</xref>], Mi et al. proposed local routing and management of node status based on controller-based mobile agents, preventing excessive traffic in environments with frequent topology changes and reducing the controller&#x02019;s burden. In [<xref rid="B22-sensors-25-01080" ref-type="bibr">22</xref>], the authors proposed a multi-path routing scheme, using multiple available paths in the network to forward traffic, balancing the network traffic on each path. In [<xref rid="B23-sensors-25-01080" ref-type="bibr">23</xref>], the authors determined the deployment plan for controllers to achieve load balancing among controllers and a minimum total number of controllers by calculating the maximum tolerable delay for communication between switches and controllers, as well as among controllers. In [<xref rid="B24-sensors-25-01080" ref-type="bibr">24</xref>], the authors proposed a load balancing and deployment plan for SDN network controllers by calculating the costs of monitoring module data collection, initial path request, flow table installation, controller information synchronization, and switch reallocation. In [<xref rid="B25-sensors-25-01080" ref-type="bibr">25</xref>], Wang et al. continuously monitored the load of each controller in the network, dynamically changing the matching relationship between controllers and switches, that is, the reallocation of switches, to achieve network load balancing. In [<xref rid="B26-sensors-25-01080" ref-type="bibr">26</xref>], the authors defined domain similarity rules to divide the entire SDN network into multiple highly similar domains, further deploying controllers at the logical centers of each domain to achieve the purpose of balancing network loads. In [<xref rid="B27-sensors-25-01080" ref-type="bibr">27</xref>], Wang et al. modeled and processed the routing and redirection of flows to achieve maximum resource utilization and optimize network loads. In [<xref rid="B28-sensors-25-01080" ref-type="bibr">28</xref>], Yang et al. used the idea of dynamically searching for the optimal path with ant colony algorithms to balance network loads. In [<xref rid="B29-sensors-25-01080" ref-type="bibr">29</xref>], the authors proposed a load balancing algorithm based on symmetric hybrid routing to reduce link selection costs. To enhance the capability of the control plane and improve its robustness, the authors propose a distributed iterative strategy for multi-controller SDN traffic measurement, proven to converge to near-optimal performance, reducing switch load and controller communication [<xref rid="B30-sensors-25-01080" ref-type="bibr">30</xref>].</p><p>With the rapid development of information technology, research in the field of networks has been continuously expanding and deepening, providing a rich background and reference for the study of path allocation in SDNs. In the category of communication technologies, visible light communication (VLC) and visible light laser communication (VLLC) have shown potential. For example, Reference [<xref rid="B31-sensors-25-01080" ref-type="bibr">31</xref>] uses an integrated PD array device to achieve a 2 &#x000d7; 2 MIMO-VLLC link, improving the data rate. Reference [<xref rid="B32-sensors-25-01080" ref-type="bibr">32</xref>] realizes ultra-high-speed short-range transmission through VLLC technology to meet the high-bandwidth requirements of data centers. In the area of the Internet of Things, the wireless multiferroic memristor proposed in Reference [<xref rid="B33-sensors-25-01080" ref-type="bibr">33</xref>] integrates storage, processing, and communication, addressing the power consumption and latency issues of traditional IoT nodes. The network function virtualization (NFV) field has achieved fruitful results. Reference [<xref rid="B34-sensors-25-01080" ref-type="bibr">34</xref>] proposes the SFCDO algorithm based on breadth-first search to optimize the end-to-end latency and resource consumption of SFC deployment. The heuristic closed-loop feedback CLF algorithm in Reference [<xref rid="B35-sensors-25-01080" ref-type="bibr">35</xref>] improves the performance of network services while reducing costs. Reference [<xref rid="B36-sensors-25-01080" ref-type="bibr">36</xref>] proposes effective methods to improve the success rate of SFC orchestration and save bandwidth for the SFC orchestration problem in multi-domain networks. In the field of vehicle-to-everything (V2X), Ref. [<xref rid="B37-sensors-25-01080" ref-type="bibr">37</xref>] solves the interference problem in V2I communication by jointly designing the radar transmit waveform and receive filter bank.</p><p>Against this backdrop, the study of path allocation in SDN is of great significance for optimizing network resources and enhancing performance. It is expected to integrate the achievements of multiple fields and explore better path-allocation strategies.</p><p>Although numerous studies have been conducted in the field of path planning, there are still some unresolved issues. For example, in multi-end-to-end path request planning, the system may not be able to meet all path request requirements under limited bandwidth resources. Additionally, unreasonable path planning may lead to local network congestion and an imbalance in overall network load. Therefore, the multi-domain control plane needs to consider the status of more network resources during the path allocation process, including link weights, bandwidth overbooking factors, load saturation, resource occupancy rates, load skew, etc., in order to select the optimal paths to maximize the satisfaction of data plane requirements while maintaining network load balance. However, current research on cross-domain path selection under multi-end-to-end path requests does not sufficiently consider these factors.</p><p>To address such issues, we first derive a cross-domain communication load balancing objective function based on network modeling. Then, we transform the cross-domain path planning problem into a clique-finding problem under a set of backup paths. Finally, we provide a heuristic approximate solution method for this problem. In terms of cross-domain communication, we adopt a collaborative approach among multiple controllers to achieve coordinated planning of cross-domain paths and collaborative installation of flow tables.</p></sec><sec id="sec2-sensors-25-01080"><title>2. System Model</title><p>This section models the path selection problem and defines relevant variables to provide a foundational theoretical model.</p><p>For any autonomous system (AS) in the data plane of a multi-domain SDN network, it can be equivalent to a connected graph <inline-formula><mml:math id="mm1" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>A</mml:mi><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mfenced><mml:mrow><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm2" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>V</mml:mi><mml:mo>=</mml:mo><mml:mfenced close="}" open="{"><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>&#x022ef;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>N</mml:mi></mml:msub></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula> represents the set of <italic toggle="yes">N</italic> physical nodes (switches or hosts) in the domain and <inline-formula><mml:math id="mm3" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>E</mml:mi><mml:mo>=</mml:mo><mml:mfenced close="}" open="{"><mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula> represents the set of communication links between all nodes, with <inline-formula><mml:math id="mm4" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> representing the link between nodes <italic toggle="yes">i</italic> and <italic toggle="yes">j</italic>. Here, <italic toggle="yes">i</italic> and <italic toggle="yes">j</italic> range from 1 to <italic toggle="yes">N</italic>, and the total number of links in the domain is <inline-formula><mml:math id="mm5" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mo>&#x0003c;</mml:mo><mml:msup><mml:mi>N</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>. The topology of domain <italic toggle="yes">AS</italic> is represented by the topology matrix <italic toggle="yes">C</italic> = [<italic toggle="yes">C<sub>ij</sub></italic>], with <italic toggle="yes">i</italic> and <italic toggle="yes">j</italic> = 1, 2, &#x02026;, <italic toggle="yes">N</italic>, where:<disp-formula id="FD1-sensors-25-01080"><label>(1)</label><mml:math id="mm6" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfenced close="" open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x02004;</mml:mo><mml:mo>&#x02004;</mml:mo><mml:mo>&#x02004;</mml:mo><mml:mo>&#x02004;</mml:mo><mml:mo>&#x02004;</mml:mo><mml:mo>&#x02004;</mml:mo><mml:mo>&#x02004;</mml:mo><mml:mi>i</mml:mi><mml:mi>f</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>n</mml:mi><mml:mi>e</mml:mi><mml:mi>c</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>d</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>t</mml:mi><mml:mi>o</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x02004;</mml:mo><mml:mo>&#x02004;</mml:mo><mml:mo>&#x02004;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>w</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi><mml:mo>&#x02004;</mml:mo><mml:mo>&#x02004;</mml:mo><mml:mo>&#x02004;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02004;</mml:mo><mml:mo>&#x02004;</mml:mo><mml:mo>&#x02004;</mml:mo><mml:mo>&#x02004;</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:math></disp-formula>
and by definition <italic toggle="yes">C<sub>ii</sub></italic> = 1, &#x02200;<italic toggle="yes">i</italic>. The Link Capacity Matrix is defined by <italic toggle="yes">B</italic> = [<italic toggle="yes">B<sub>ij</sub></italic>] for the entire domain, where <italic toggle="yes">B<sub>ij</sub></italic> represents the link capacity of link <italic toggle="yes">e<sub>ij</sub></italic>. Clearly, the larger the value of <italic toggle="yes">B<sub>ij</sub></italic>, the stronger the communication capacity of link <italic toggle="yes">e<sub>ij</sub></italic>, and the more paths that can be allocated through <italic toggle="yes">e<sub>ij</sub></italic>.</p><p>Assume the total number of end-to-end path requests received by the controller at the same time is <italic toggle="yes">R</italic>. For any path request denoted as (<italic toggle="yes">S<sub>r</sub></italic>, <italic toggle="yes">T<sub>r</sub></italic>, <italic toggle="yes">b<sub>r</sub></italic>), where <italic toggle="yes">r</italic> = 1, 2, &#x02026;, <italic toggle="yes">R</italic>, the corresponding path returned by the controller is represented by the vector <inline-formula><mml:math id="mm7" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfenced close="]" open="["><mml:mrow><mml:msubsup><mml:mi>V</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mn>1</mml:mn><mml:mi>r</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mrow><mml:msub><mml:mi>k</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow><mml:mi>r</mml:mi></mml:msubsup></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula>, which consists of <italic toggle="yes">Kr</italic> + 1 (<italic toggle="yes">K<sub>r</sub></italic> &#x0003e; 1) directly connected nodes. These Kr + 1 nodes are connected from the source node <inline-formula><mml:math id="mm8" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mn>0</mml:mn><mml:mi>r</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> to the destination node <inline-formula><mml:math id="mm9" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mrow><mml:msub><mml:mi>k</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow><mml:mi>r</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>. For any path <italic toggle="yes">P<sub>r</sub></italic> at the <italic toggle="yes">k</italic>-th hop, with <italic toggle="yes">k</italic> = 1, 2, &#x02026;, <italic toggle="yes">K<sub>r</sub></italic>, it is from <italic toggle="yes">V<sub>k</sub></italic><sub>&#x02212;1</sub> to <italic toggle="yes">V<sub>k</sub></italic>, and its bandwidth is denoted by <italic toggle="yes">b<sub>r</sub></italic>.</p><p>For autonomous domain <italic toggle="yes">AS</italic>, its average path length is defined as [<xref rid="B38-sensors-25-01080" ref-type="bibr">38</xref>]:<disp-formula id="FD2-sensors-25-01080"><label>(2)</label><mml:math id="mm10" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mi>N</mml:mi><mml:mfenced><mml:mrow><mml:mi>N</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced></mml:mrow></mml:mfrac></mml:mstyle><mml:msub><mml:mstyle mathsize="80%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>i</mml:mi><mml:mo>&#x02260;</mml:mo><mml:mi>j</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>And the domain&#x02019;s internal cohesion degree is [<xref rid="B38-sensors-25-01080" ref-type="bibr">38</xref>]:<disp-formula id="FD3-sensors-25-01080"><label>(3)</label><mml:math id="mm11" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mi>N</mml:mi><mml:mo>&#x022c5;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></disp-formula>
where <italic toggle="yes">N</italic> = |<italic toggle="yes">V</italic>|(<italic toggle="yes">N</italic> &#x0003e; 1) represents the number of domain nodes; <italic toggle="yes">d<sub>ij</sub></italic> represents the shortest path hop count between nodes <italic toggle="yes">i</italic> and <italic toggle="yes">j</italic>. <italic toggle="yes">C<sub>AS</sub></italic> is used to reflect the cohesion degree of domain <italic toggle="yes">AS</italic> towards the logical center node. The larger its value, the more the domain AS is centralized overall, and conversely, the more dispersed the nodes within the domain. For ease of understanding, it can be intuitively considered that: <italic toggle="yes">C<sub>AS</sub></italic> can be understood as the domain&#x02019;s regional edge length, further understood as the domain&#x02019;s regional size or area, and <italic toggle="yes">N</italic> refers to the number of nodes in that area. When <italic toggle="yes">L<sub>AS</sub></italic> is constant and <italic toggle="yes">N</italic> increases, it indicates that the nodes within the domain are diffusing towards the edge, and the nodes within the domain are becoming more dispersed; when <italic toggle="yes">N</italic> decreases, it indicates that the nodes within the domain are contracting towards the center. When <italic toggle="yes">N</italic> is constant and <italic toggle="yes">L<sub>AS</sub></italic> decreases, the nodes within the domain will compress towards the center, and the domain becomes more concentrated; when <italic toggle="yes">L<sub>AS</sub></italic> increases, the domain stretches outward, and the domain becomes more dispersed. The domain&#x02019;s internal cohesion degree reflects the degree to which the nodes within the domain are cohering towards the center.</p><p>At the same time, the migration graph <italic toggle="yes">AS<sub>ij</sub></italic> based on edge <italic toggle="yes">e<sub>ij</sub></italic> is defined, and its migration process is as follows: for any edge <italic toggle="yes">e<sub>ij</sub></italic>, a new larger node is constructed to encompass <italic toggle="yes">i</italic>, <italic toggle="yes">j</italic>, <italic toggle="yes">e<sub>ij</sub></italic> and replace their functions, meaning that all original connections related to <italic toggle="yes">i</italic> and <italic toggle="yes">j</italic> are replaced by the new node. At this time, <italic toggle="yes">AS</italic> will migrate to a new domain, denoted as <italic toggle="yes">AS<sub>ij</sub></italic>. <xref rid="sensors-25-01080-f001" ref-type="fig">Figure 1</xref> further illustrates the migration process based on edge <italic toggle="yes">e<sub>ij</sub></italic>.</p><p>Furthermore, the weight factor <italic toggle="yes">I<sub>ij</sub></italic> for each edge in the domain is defined as:<disp-formula id="FD4-sensors-25-01080"><label>(4)</label><mml:math id="mm12" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mfrac></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
where <italic toggle="yes">A<sub>i</sub></italic> represents the average shortest path value from node <italic toggle="yes">i</italic> to all other nodes in domain <italic toggle="yes">AS<sub>ij</sub></italic>. In Formula (4), the larger the value of <italic toggle="yes">I<sub>ij</sub></italic>, the greater the weight of edge <italic toggle="yes">e<sub>ij</sub></italic>. When the value of <italic toggle="yes">I<sub>ij</sub></italic> is large enough, it is called a key edge. In the path selection process, the larger the value of <italic toggle="yes">I<sub>ij</sub></italic>, the more paths edge <italic toggle="yes">e<sub>ij</sub></italic> should carry.</p><p>For each responding path <italic toggle="yes">Pr</italic>, we define <inline-formula><mml:math id="mm13" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>X</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mfenced close="]" open="["><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula>, where:<disp-formula id="FD5-sensors-25-01080"><label>(5)</label><mml:math id="mm14" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mfenced close="" open="{"><mml:mrow><mml:mtable equalrows="true" equalcolumns="true"><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02004;</mml:mo><mml:mo>&#x02004;</mml:mo><mml:mo>&#x02004;</mml:mo><mml:mo>&#x02004;</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02208;</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mn>0</mml:mn><mml:mo>&#x02004;</mml:mo><mml:mo>&#x02004;</mml:mo><mml:mo>&#x02004;</mml:mo><mml:mo>&#x02004;</mml:mo><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>w</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:math></disp-formula>
and by definition <inline-formula><mml:math id="mm15" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, &#x02200;(<italic toggle="yes">i</italic>, <italic toggle="yes">k</italic>, <italic toggle="yes">r</italic>). When <inline-formula><mml:math id="mm16" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, it means that the <italic toggle="yes">k</italic>-th hop in the allocated path <italic toggle="yes">Pr</italic> uses <italic toggle="yes">e<sub>ij</sub>.</italic></p><p>For any edge <italic toggle="yes">e<sub>ij</sub></italic> in domain <italic toggle="yes">AS</italic>, its load balance degree is represented by <italic toggle="yes">D<sub>ij</sub></italic>, and the calculation method is:<disp-formula id="FD6-sensors-25-01080"><label>(6)</label><mml:math id="mm17" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:mfenced close="|" open="|"><mml:mrow><mml:mi>&#x003be;</mml:mi><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mstyle mathsize="80%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>R</mml:mi></mml:msubsup><mml:msubsup><mml:mstyle mathsize="80%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>K</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow></mml:msubsup><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x022c5;</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mi>&#x003be;</mml:mi><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></disp-formula>
where &#x003be; is the adjustment factor. Since <inline-formula><mml:math id="mm18" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:mfenced close="|" open="|"><mml:mrow><mml:mi>&#x003be;</mml:mi><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mstyle mathsize="80%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>R</mml:mi></mml:msubsup><mml:msubsup><mml:mstyle mathsize="80%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>K</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow></mml:msubsup><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x022c5;</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mi>&#x003be;</mml:mi><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>&#x02264;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, it follows that <inline-formula><mml:math id="mm19" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>0</mml:mn><mml:mo>&#x02264;</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>&#x02264;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, &#x02200;(<italic toggle="yes">i</italic>, <italic toggle="yes">j</italic>). The use of the power operation can more quickly enhance the load balancing degree of low-utilization links and more rapidly reduce the traffic of heavily loaded links.</p><p>It is worth noting that the link load optimization rate in this paper is optimal when it takes the value of 1. When the link load optimization rate is low, the link utilization may be low or high, at which point either the traffic on the link is too low or it has undertaken too much traffic.</p><p>In the multi-domain SDN network, the network load balancing and resource occupation optimization objective function is defined as:<disp-formula id="FD7-sensors-25-01080"><label>(7)</label><mml:math id="mm20" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>D</mml:mi><mml:mi>G</mml:mi></mml:msup><mml:mo>=</mml:mo><mml:msubsup><mml:mstyle mathsize="80%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>&#x003c3;</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:msubsup><mml:msub><mml:mi>&#x003b6;</mml:mi><mml:mi>&#x003c3;</mml:mi></mml:msub><mml:mfenced><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>&#x003c3;</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003bb;</mml:mi><mml:msub><mml:mi>H</mml:mi><mml:mi>&#x003c3;</mml:mi></mml:msub></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:math></disp-formula>
where <italic toggle="yes">M</italic> represents the number of SDN domains, &#x003bb; is the resource proportion weight coefficient. <inline-formula><mml:math id="mm21" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003b6;</mml:mi><mml:mi>&#x003c3;</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <italic toggle="yes">D<sub>&#x003c3;</sub></italic>, and <italic toggle="yes">H<sub>&#x003c3;</sub></italic>, respectively, represent the weight, domain load balance degree, and resource occupation value of the <italic toggle="yes">&#x003c3;</italic>-th domain, and the calculation method of the domain load balance degree is as follows:<disp-formula id="FD8-sensors-25-01080"><label>(8)</label><mml:math id="mm22" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>&#x003c3;</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mstyle><mml:msubsup><mml:mstyle mathsize="80%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:msubsup><mml:msubsup><mml:mstyle mathsize="80%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:msubsup><mml:msubsup><mml:mi>D</mml:mi><mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mi>&#x003c3;</mml:mi></mml:msubsup><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:mi>w</mml:mi></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm23" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>D</mml:mi><mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mi>&#x003c3;</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> represents the load optimization rate of link <italic toggle="yes">e<sub>ij</sub></italic> in the <italic toggle="yes">&#x003c3;</italic>-th domain, <inline-formula><mml:math id="mm24" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>w</mml:mi><mml:mo>=</mml:mo><mml:msubsup><mml:mstyle mathsize="80%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:msubsup><mml:msubsup><mml:mstyle mathsize="80%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:msubsup><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is used to normalize the variable <inline-formula><mml:math id="mm25" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and is used to ensure that <inline-formula><mml:math id="mm26" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>&#x003c3;</mml:mi></mml:msub><mml:mo>&#x02264;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>The calculation method for resource occupation <italic toggle="yes">H<sub>&#x003c3;</sub></italic> is:<disp-formula id="FD9-sensors-25-01080"><label>(9)</label><mml:math id="mm27" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mi>&#x003c3;</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msubsup><mml:mstyle mathsize="80%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>R</mml:mi></mml:msubsup><mml:msubsup><mml:mstyle mathsize="80%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>K</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow></mml:msubsup><mml:msubsup><mml:mstyle mathsize="80%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:msubsup><mml:msubsup><mml:mstyle mathsize="80%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:msubsup><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>To facilitate processing, we assume that the weight of each domain is the same, i.e., let <inline-formula><mml:math id="mm28" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003b6;</mml:mi><mml:mi>&#x003c3;</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>M</mml:mi></mml:mfrac></mml:mstyle><mml:mo>,</mml:mo><mml:mo>&#x02004;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>&#x003c3;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, thus simplifying Formula (7) to:<disp-formula id="FD10-sensors-25-01080"><label>(10)</label><mml:math id="mm29" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>D</mml:mi><mml:mi>G</mml:mi></mml:msup><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mn>2</mml:mn><mml:mi>M</mml:mi></mml:mrow></mml:mfrac></mml:mstyle><mml:msubsup><mml:mstyle mathsize="80%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>&#x003c3;</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:msubsup><mml:msubsup><mml:mstyle mathsize="80%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:msubsup><mml:msubsup><mml:mstyle mathsize="80%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:msubsup><mml:mfenced><mml:mrow><mml:msubsup><mml:mi>D</mml:mi><mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mi>&#x003c3;</mml:mi></mml:msubsup><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:mi>w</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003bb;</mml:mi><mml:msubsup><mml:mstyle mathsize="80%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>R</mml:mi></mml:msubsup><mml:msubsup><mml:mstyle mathsize="80%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>K</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow></mml:msubsup><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>Obviously, in order to maximize Formula (7), it is necessary for <inline-formula><mml:math id="mm30" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>&#x003c3;</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in each domain to be as large as possible and <inline-formula><mml:math id="mm31" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mi>&#x003c3;</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> to be as small as possible. That is, the more balanced the load in each domain, the fewer network resources (path hops) used, and the larger the value of Formula (7). Conversely, the larger the value of Formula (7), the more balanced the network load, and the fewer path hops are occupied.</p><p>Since <inline-formula><mml:math id="mm32" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>&#x003c3;</mml:mi></mml:msub><mml:mo>&#x02264;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm33" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mi>&#x003c3;</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is an integer and the minimum increment is 1, therefore when <italic toggle="yes">&#x003bb;</italic> &#x02265; 1, maximizing Formula (7) is equivalent to prioritizing the selection of paths with the shortest number of hops (i.e., paths with small <inline-formula><mml:math id="mm34" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mi>&#x003c3;</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> values, and <inline-formula><mml:math id="mm35" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mi>&#x003c3;</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> decreases by at least 1 each time) in path planning, and then selecting the most balanced network load path (paths with small <inline-formula><mml:math id="mm36" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>&#x003c3;</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> values) from multiple shortest paths. When 0 &#x0003c; <italic toggle="yes">&#x003bb;</italic> &#x0003c; 1, the increment step length of <inline-formula><mml:math id="mm37" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>&#x003bb;</mml:mi><mml:msub><mml:mi>H</mml:mi><mml:mi>&#x003c3;</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> may not be greater than 1, so (7) does not prioritize the selection of the shortest hop count or optimal load in path planning but comprehensively considers the weighted value <inline-formula><mml:math id="mm38" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>&#x003c3;</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003bb;</mml:mi><mml:msub><mml:mi>H</mml:mi><mml:mi>&#x003c3;</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. When <italic toggle="yes">&#x003bb;</italic> = 0, the path selection process will ignore the resource occupation situation and only consider the network load balance degree. It can be seen that <italic toggle="yes">&#x003bb;</italic> plays a role in dynamically adjusting the proportion of resource occupation and network load.</p></sec><sec id="sec3-sensors-25-01080"><title>3. Cross-Domain Communication Method Based on Load Balancing for SDN Networks</title><p>In actual SDN networks, data are often transmitted across domains, so a complete path from the source node to the destination node will pass through multiple domains. The domain control restriction in SDN means that each domain controller can only plan the paths within its domain, and these paths are often just a part of the complete path, as shown in <xref rid="sensors-25-01080-f002" ref-type="fig">Figure 2</xref> below.</p><p>In <xref rid="sensors-25-01080-f002" ref-type="fig">Figure 2</xref>, the complete path (<italic toggle="yes">S</italic>, <italic toggle="yes">T</italic>) goes through <italic toggle="yes">N</italic> domains, with the source node being node S in domain 1 and the destination node being node <italic toggle="yes">T</italic> in domain <italic toggle="yes">N</italic>.</p><p>When the source node <italic toggle="yes">S</italic> needs to transmit data to the destination node <italic toggle="yes">T</italic>, it sends a path allocation request to controller 1. After receiving the path request, controller 1 first determines the domain <italic toggle="yes">N</italic> to which node <italic toggle="yes">T</italic> belongs based on global information and then learns that data must pass through domain 2 to reach node <italic toggle="yes">T</italic>. At this point, the controller identifies the boundary switch <italic toggle="yes">P</italic><sub>12</sub> between domain 1 and domain 2, then converts the original request path (<italic toggle="yes">S</italic>, <italic toggle="yes">T</italic>) to (<italic toggle="yes">S</italic>, <italic toggle="yes">P</italic><sub>12</sub>), and plans the path <inline-formula><mml:math id="mm39" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mo>&#x02192;</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mn>12</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and installs the flow table, as shown in <xref rid="sensors-25-01080-f003" ref-type="fig">Figure 3</xref>. Data arrives at node <italic toggle="yes">P</italic><sub>12</sub> from <italic toggle="yes">S</italic>, then reaches <italic toggle="yes">P</italic><sub>21</sub>, and at this point, <italic toggle="yes">P</italic><sub>21</sub> continues to request path allocation from controller 2, and so on, as shown in <xref rid="sensors-25-01080-f003" ref-type="fig">Figure 3</xref>.</p><p>In this process, <italic toggle="yes">N</italic> path requests, path planning, and flow table issuance operations occur; initiated by switches <italic toggle="yes">S</italic>, <italic toggle="yes">P</italic><sub>21</sub>, &#x02026;, <italic toggle="yes">P<sub>N</sub></italic><sub>1</sub> (as shown in <xref rid="sensors-25-01080-f004" ref-type="fig">Figure 4</xref>), which is the mainstream method of flow table request and issuance in a multi-domain environment.</p><p>To balance the network load and reduce network communication latency, this paper will improve the above communication process. Taking the same path (<italic toggle="yes">S</italic>, <italic toggle="yes">T</italic>) request and domain scenario as shown in <xref rid="sensors-25-01080-f004" ref-type="fig">Figure 4</xref> as an example, when the source node <italic toggle="yes">S</italic> needs to transmit data to the destination node <italic toggle="yes">T</italic>, it first sends a communication request to controller 1. After receiving the flow table request, controller 1 plans the path and issues the flow table. At the same time, controller 1 directly sends data to controllers 2~<italic toggle="yes">N</italic> via high-speed links (assuming controllers are connected by high-speed links) to inform them that data for (<italic toggle="yes">S</italic>, <italic toggle="yes">T</italic>) will pass through, and then controllers 2~<italic toggle="yes">N</italic> collaborate on path decomposition and planning to allocate the optimal path scheme, i.e., maximizing Formula (7), and pre-issue flow tables to relevant switches within the domain as shown in <xref rid="sensors-25-01080-f005" ref-type="fig">Figure 5</xref>.</p><p>In the above process, only one communication request operation occurs; that is, S sends a request to controller 1, and the other <italic toggle="yes">N</italic> &#x02212; 1 communication request operations are completed by direct communication between controller 1 and controllers 2~<italic toggle="yes">N</italic>. It can be seen that when all switches on the path <italic toggle="yes">S</italic> to <italic toggle="yes">T</italic> lack flow table entries, compared with the traditional method shown in <xref rid="sensors-25-01080-f002" ref-type="fig">Figure 2</xref>, the multi-domain SDN network communication method proposed in this paper reduces the number of network communication request operations, and network load balancing can be achieved through controller collaboration, which helps to reduce the end-to-end latency of network cross-domain communication and the average latency of overall network communication.</p><p>In cross-domain path requests, due to different network topologies, the selection of boundary forwarding nodes will present various situations. For this issue, inter-domain routing can be discussed in three cases:<list list-type="simple"><list-item><label>(1)</label><p>The boundary forwarding node is unique, as shown in <xref rid="sensors-25-01080-f006" ref-type="fig">Figure 6</xref></p></list-item></list></p><p>In this case, all cross-domain communication packets will be directly forwarded to the unique boundary forwarding node, and then the packets will be forwarded to the next autonomous domain by that node. This is a situation where inter-domain routing selection is not required.</p><list list-type="simple"><list-item><label>(2)</label><p>The boundary forwarding links are not unique, and the next hop points to the same autonomous domain (as shown in <xref rid="sensors-25-01080-f007" ref-type="fig">Figure 7</xref>)</p></list-item></list><p>In this case, regardless of the choice of boundary nodes, packets will be forwarded to the next autonomous domain. Macroscopically, the choice of boundary nodes will not affect the total load of the next autonomous domain and cannot achieve inter-domain load balancing. Microscopically, the choice of boundary nodes and their transmission ports determines the data transmission path of packets in the current domain and the next domain, which can affect the balance within the domain.</p><p>For this issue, this paper defines a calculation formula <italic toggle="yes">f</italic>(<italic toggle="yes">h</italic>, <italic toggle="yes">p</italic>, <italic toggle="yes">b</italic>, <italic toggle="yes">r</italic>) for the selection of boundary forwarding nodes and transmission ports for inter-domain routing decisions. Where <italic toggle="yes">h</italic> is the shortest path hop count from the path request node within the domain to the boundary forwarding node, <italic toggle="yes">p</italic> is the number of packet transmissions at the boundary forwarding node, <italic toggle="yes">b</italic> is the byte forwarding count at the boundary forwarding node, and <italic toggle="yes">r</italic> is the port data transmission rate of the boundary forwarding node&#x02019;s inter-domain communication link. The implementation of this formula is a weighted sum of <italic toggle="yes">h</italic>, <italic toggle="yes">p</italic>, <italic toggle="yes">b</italic>, and <italic toggle="yes">r</italic>. The weights are determined by the network administrators of each domain; the larger the value of <italic toggle="yes">f</italic>, the better the link. Since the internal network topologies of different autonomous domains are different, and the application scenarios and requirements are different, it is impossible or very difficult to find a universal boundary calculation selection method that applies to different autonomous domains. In actual applications, <italic toggle="yes">f</italic> can be determined through configuration files and inter-domain controller collaboration to assist in the selection of boundary forwarding links.</p><list list-type="simple"><list-item><label>(3)</label><p>The boundary forwarding links are not unique, and the next hop points to multiple different autonomous domains</p></list-item></list><p>In this topology, the inter-domain routing decision problem can be transformed into a next-domain selection problem. By abstracting each autonomous system as a node, the problem is further converted into a path selection problem based on domain nodes. For example, in <xref rid="sensors-25-01080-f008" ref-type="fig">Figure 8</xref>, when data reaches the boundary of Domain 1, it can choose the next hop to be either Domain 2 or Domain 4. If it is Domain 2, then the data transmission path is 1 -&#x0003e; 2 -&#x0003e; 3 -&#x0003e; 6. If it is Domain 4, the path is 1 -&#x0003e; 4 -&#x0003e; 5 -&#x0003e; 6. During network operation, since the load status of each domain is dynamically changing, the selection of the next domain for data forwarding should also be dynamically determined (for example, if domain 2 is congested, domain 4 should be chosen as the next domain). To address this issue, we set a round-trip delay threshold range <inline-formula><mml:math id="mm40" overflow="scroll"><mml:mrow><mml:mrow><mml:mfenced close="]" open="["><mml:mrow><mml:msub><mml:munder accentunder="true"><mml:mi>&#x003bb;</mml:mi><mml:mo>_</mml:mo></mml:munder><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>&#x003bb;</mml:mi><mml:mo>&#x000af;</mml:mo></mml:mover><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula> (<inline-formula><mml:math id="mm41" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:munder accentunder="true"><mml:mi>&#x003bb;</mml:mi><mml:mo>_</mml:mo></mml:munder><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>&#x0003c;</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>&#x003bb;</mml:mi><mml:mo>&#x000af;</mml:mo></mml:mover><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>) for the selection of the next domain and introduced a domain priority parameter <inline-formula><mml:math id="mm42" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> to dynamically assist in determining the selection of the next domain. Here, <inline-formula><mml:math id="mm43" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> represents the priority of domain <italic toggle="yes">n</italic> relative to domain <italic toggle="yes">m</italic>, that is, the priority value of domain <italic toggle="yes">n</italic> when domain <italic toggle="yes">m</italic> selects the next domain. <inline-formula><mml:math id="mm44" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:munder accentunder="true"><mml:mi>&#x003bb;</mml:mi><mml:mo>_</mml:mo></mml:munder><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm45" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>&#x003bb;</mml:mi><mml:mo>&#x000af;</mml:mo></mml:mover><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> are the minimum and maximum delay thresholds from domain <italic toggle="yes">m</italic> to domain <italic toggle="yes">n</italic>, respectively. For ease of explanation, we define <inline-formula><mml:math id="mm46" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> to represent the communication delay of packet <italic toggle="yes">s</italic> on the path from domain <italic toggle="yes">m</italic> to domain <italic toggle="yes">n</italic> and so on to domain <italic toggle="yes">d</italic>. Then, <inline-formula><mml:math id="mm47" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>d</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> is used to denote the round-trip delay of the packet. During network operation, each domain controller readjusts the domain priority parameters at regular intervals or makes on-demand adjustments to the domain priority parameters when congestion is detected. The adjustment method is:<disp-formula id="FD11-sensors-25-01080"><label>(11)</label><mml:math id="mm48" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>d</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>&#x003bb;</mml:mi><mml:mo>&#x000af;</mml:mo></mml:mover><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:msub><mml:munder accentunder="true"><mml:mi>&#x003bb;</mml:mi><mml:mo>_</mml:mo></mml:munder><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>d</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msubsup></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
where <italic toggle="yes">&#x003b1;</italic> is the adjustment factor, and <italic toggle="yes">s</italic> is the packet sent from domain <italic toggle="yes">n</italic> to domain <italic toggle="yes">d</italic>. It can be seen that the higher the round-trip delay of packet <italic toggle="yes">s</italic>, the faster the priority value of domain <italic toggle="yes">n</italic> decreases, and vice versa, the faster it increases. Combining the domain priority parameter <italic toggle="yes">k</italic> and the <italic toggle="yes">h</italic>, <italic toggle="yes">p</italic>, <italic toggle="yes">b</italic>, and <italic toggle="yes">r</italic> mentioned above, a new calculation formula is redefined for selecting the boundary forwarding link, where <italic toggle="yes">k</italic> is the priority value of the next domain corresponding to the link, and <italic toggle="yes">f</italic> can be most directly implemented as the weighted sum.</p><p>Taking <xref rid="sensors-25-01080-f008" ref-type="fig">Figure 8</xref> as an example, if <inline-formula><mml:math id="mm49" overflow="scroll"><mml:mrow><mml:mrow><mml:mfenced><mml:mrow><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>6</mml:mn></mml:mrow><mml:mi>s</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mn>6</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>s</mml:mi></mml:msubsup></mml:mrow></mml:mfenced><mml:mo>&#x0003e;</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>&#x003bb;</mml:mi><mml:mo>&#x000af;</mml:mo></mml:mover><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> indicates that the path 2 -&#x0003e; 3 -&#x0003e; 6 is congested, then Formula (11) will reduce the priority value <inline-formula><mml:math id="mm50" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> of Domain 2 relative to Domain 1, and the larger the value of <inline-formula><mml:math id="mm51" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>6</mml:mn></mml:mrow><mml:mi>s</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mn>6</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>s</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, the faster the <inline-formula><mml:math id="mm52" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> value will decrease. In this way, we can indirectly reduce the level of network congestion by migrating the load between domains.</p></sec><sec id="sec4-sensors-25-01080"><title>4. Problem Analysis and Algorithm</title><p>Assuming <italic toggle="yes">R</italic> is the number of end-to-end path requests received by domain AS<italic toggle="yes"><sub>i</sub></italic> (<italic toggle="yes">i</italic> = 1, 2, &#x02026;, <italic toggle="yes">M</italic>) at the same time. After inter-domain decomposition, for any end-to-end path request (<italic toggle="yes">S<sub>r</sub></italic>, <italic toggle="yes">T<sub>r</sub></italic>), where 0 &#x0003c; <italic toggle="yes">r</italic> &#x02264; <italic toggle="yes">R</italic>, <italic toggle="yes">r</italic> = 1, 2, &#x02026;, <italic toggle="yes">R</italic>, it is assumed that the controller of AS<italic toggle="yes"><sub>i</sub></italic> stores <italic toggle="yes">p<sub>r</sub></italic> backup optional paths for communication between (<italic toggle="yes">Sr</italic>, <italic toggle="yes">Tr</italic>). For all <italic toggle="yes">R</italic> path requests in domain AS<italic toggle="yes"><sub>i</sub></italic>, the set of backup paths is defined as <inline-formula><mml:math id="mm53" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>A</mml:mi><mml:mi>l</mml:mi><mml:mi>t</mml:mi><mml:mi>P</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:msup><mml:mi>h</mml:mi><mml:mi>R</mml:mi></mml:msup><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msubsup><mml:mi>P</mml:mi><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:msubsup><mml:mo>&#x000a0;</mml:mo><mml:mo>|</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>r</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo></mml:mrow><mml:mo>&#x022ef;</mml:mo><mml:mrow><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo></mml:mrow><mml:mi>R</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, for a given <italic toggle="yes">r</italic>, let <italic toggle="yes">n</italic> = 1, 2, &#x02026;, <italic toggle="yes">p<sub>r</sub></italic>, where <inline-formula><mml:math id="mm54" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> represents the <italic toggle="yes">n</italic>-th (<italic toggle="yes">n</italic> &#x0003c; <italic toggle="yes">p<sub>r</sub></italic>) backup path for path (<italic toggle="yes">S<sub>r</sub></italic>, <italic toggle="yes">T<sub>r</sub></italic>), and the total number of <italic toggle="yes">R</italic> backup paths is <inline-formula><mml:math id="mm55" overflow="scroll"><mml:mrow><mml:mrow><mml:mfenced close="|" open="|"><mml:mrow><mml:mi>A</mml:mi><mml:mi>l</mml:mi><mml:mi>t</mml:mi><mml:mi>P</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:msup><mml:mi>h</mml:mi><mml:mi>R</mml:mi></mml:msup></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:msubsup><mml:mstyle mathsize="80%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>R</mml:mi></mml:msubsup><mml:msub><mml:mi>p</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>Combining the system model, it can be known that the optimal path planning scheme is equivalent to each domain finding the optimal <italic toggle="yes">subset</italic>({<inline-formula><mml:math id="mm56" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>}) from the set of backup paths ({<inline-formula><mml:math id="mm57" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>}) for the communication of <italic toggle="yes">R</italic> end-to-end path requests, and this set can maximize the value of Formula (7).</p><p>Since there are interdependent relationships between each backup path due to the resources they occupy, the method of constructing a new network graph by taking backup optional paths as nodes and the exclusive relationships between backup paths as edges approximates the path selection problem to the problem of finding all cliques in graph theory (the clique problem has strong inapproximability characteristics). We first construct a new path network <italic toggle="yes">G</italic> in the manner of <xref rid="sensors-25-01080-f009" ref-type="fig">Figure 9</xref>a. For any backup optional path <italic toggle="yes">p</italic> corresponding to a node in the generated network, if there exists another backup path <inline-formula><mml:math id="mm58" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>q</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mfenced close="}" open="{"><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:msubsup></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula> and <italic toggle="yes">p</italic> conflicts with <italic toggle="yes">q</italic> in path allocation, then an edge <italic toggle="yes">e<sub>pq</sub></italic> is created in network <italic toggle="yes">G</italic>.</p><p>After the network is constructed, for any clique <italic toggle="yes">c</italic> in network <italic toggle="yes">G</italic> as shown in <xref rid="sensors-25-01080-f009" ref-type="fig">Figure 9</xref>b, including cliques <italic toggle="yes">c</italic><sub>1</sub>, <italic toggle="yes">c</italic><sub>2</sub>, select a node <italic toggle="yes">q</italic> &#x02208; <italic toggle="yes">c</italic>, and <italic toggle="yes">q</italic> is the node in clique <italic toggle="yes">c</italic> that can maximize the value of Formula (7) and is not directly connected to the neighboring cliques. Proceed in this manner, selecting one node from all cliques to form a path allocation set.</p><p>In the above narrative, by constructing a new network graph with backup optional paths as nodes and exclusive relationships between backup paths as edges, the multi-objective optimization path selection problem is approximated to the problem of finding all cliques in graph theory, and the optimal path allocation set is formed by finding the best and non-conflicting paths in each clique. Below, an approximate algorithm for the path planning problem will be given (Algorithm 1).
<array><tbody><tr><td align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1"><bold>Algorithm 1.</bold> Cross-domain Communication Path Assignment (CCPA)</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1"><list list-type="order"><list-item><p>Let <inline-formula><mml:math id="mm59" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:msubsup><mml:mi>P</mml:mi><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>;//Each domain controller defines a set of optional backup paths within the domain, denoted as <inline-formula><mml:math id="mm60" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:msubsup><mml:mi>P</mml:mi><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>. This set is precomputed by each controller and stored in memory.</p></list-item><list-item><p>Let <italic toggle="yes">R</italic>&#x000a0;<inline-formula><mml:math id="mm61" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>;</p></list-item><list-item><p>Let <inline-formula><mml:math id="mm62" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mo>&#x02205;</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>;</p></list-item><list-item><p>Repeat</p></list-item><list-item><p>Fetch the <italic toggle="yes">r</italic>-th path request <italic toggle="yes">P<sub>r</sub></italic>;</p></list-item><list-item><p>Perform domain decomposition on <italic toggle="yes">P<sub>r</sub></italic> to generate a new multi-domain path request <inline-formula><mml:math id="mm63" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>;</p></list-item><list-item><p>Select an path <italic toggle="yes">p</italic> from <italic toggle="yes">S</italic> for the path request <inline-formula><mml:math id="mm64" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> such that <italic toggle="yes">p</italic> is not in <italic toggle="yes">L</italic> and can maximizes Equation (7);</p></list-item><list-item><p>Add <italic toggle="yes">p</italic> to <italic toggle="yes">L</italic>;</p></list-item><list-item><p>Remove <italic toggle="yes">p</italic> from <italic toggle="yes">S</italic>;</p></list-item><list-item><p>For all <inline-formula><mml:math id="mm65" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>&#x02200;</mml:mo><mml:mi>q</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, if <italic toggle="yes">q</italic> conflicts with any path in <italic toggle="yes">L</italic>, remove <italic toggle="yes">q</italic> from <italic toggle="yes">S</italic>;</p></list-item><list-item><p><italic toggle="yes">r</italic>++;</p></list-item><list-item><p>Until |<italic toggle="yes">L</italic>| &#x0003e;= <italic toggle="yes">R</italic> || <inline-formula><mml:math id="mm66" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mo>=</mml:mo><mml:mo>&#x02205;</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula></p></list-item><list-item><p>Output <italic toggle="yes">L</italic>;</p></list-item></list></td></tr></tbody></array></p><p>In the process of path request and selection within each autonomous domain <italic toggle="yes">AS</italic>, for any path request (<italic toggle="yes">S</italic>, <italic toggle="yes">T</italic>) within the domain, it is assumed that <italic toggle="yes">N</italic> paths can be found in <italic toggle="yes">AS</italic>, However, a large portion of these <italic toggle="yes">N</italic> paths are discarded due to excessive hop counts. Define the path&#x02019;s overlength factor <italic toggle="yes">h</italic>, assuming the shortest hop count between nodes <italic toggle="yes">S</italic> and <italic toggle="yes">T</italic> is <italic toggle="yes">H<sub>ST</sub></italic>. In actual path selection, if the path length from <italic toggle="yes">S</italic> to <italic toggle="yes">T</italic> exceeds <italic toggle="yes">H<sub>ST</sub></italic> + <italic toggle="yes">h</italic>, then discard that path. The AS controller can pre-store the backup paths from each source node to the destination node. Obviously, if the total number of backup paths is assumed to be <italic toggle="yes">L</italic>, <italic toggle="yes">L</italic> must be much smaller than <italic toggle="yes">N</italic>. As mentioned above, the path allocation process is actually the process of selecting the optimal path from the set of backup paths. In extreme cases, if there is only one backup path from all source nodes to destination nodes, then without considering the bandwidth, the path allocation will be fixed. And if all backup paths are the shortest paths, then the path allocation result will be consistent with that of the traditional network (paths generated by the Dijkstra algorithm). Since <italic toggle="yes">L</italic> is much smaller than <italic toggle="yes">N</italic>, the computational complexity of the algorithm will not be large, and thus the operational efficiency of the path allocation algorithm will not be poor.</p></sec><sec id="sec5-sensors-25-01080"><title>5. Performance Evaluation</title><sec id="sec5dot1-sensors-25-01080"><title>5.1. Simulation Assumptions</title><p>To verify the feasibility of the load balance-oriented cross-domain communication method proposed in this paper, the simulation will be conducted in a multi-domain environment. The performance indicators of the network include: (1) Path allocation success rate; (2) Network load balance degree; (3) Average delay of cross-domain communication. The path allocation success rate indicates the proportion of successful returns of valid paths by the controller after receiving the path requests. It is worth noting that the bandwidth requested for the allocated path must not exceed the remaining bandwidth of the link; otherwise, the path allocation will not be successful. The network load balance degree represents the load balance of the entire network after the paths are allocated. The average delay of cross-domain communication represents the average delay of all cross-domain data packets from the source node to the destination node.</p><p>In the simulation, the number of nodes in each domain that can send and receive data and the links between nodes are randomly generated. During the topology generation process, for any node, other nodes are randomly selected to connect.</p><p>The bandwidth of each link in the network is randomly generated within the range [5 &#x000d7; 10<sup>4</sup>, 10<sup>5</sup>]. Each end-to-end path request (<italic toggle="yes">S</italic>, <italic toggle="yes">T</italic>) is randomly selected from the network nodes. Additionally, for any path request (<italic toggle="yes">S</italic>, <italic toggle="yes">T</italic>), its bandwidth request is randomly generated within the range [1, 5 &#x000d7; 10<sup>4</sup> &#x000d7; <italic toggle="yes">Linkfactor</italic>], where <italic toggle="yes">Linkfactor</italic> is the network bandwidth request pressure intensity factor, and the value range is set to [0, 1]. The larger the <italic toggle="yes">Linkfactor</italic> is set, the higher the network bandwidth demand is. Conversely, it will have a lower network bandwidth demand.</p><p>Furthermore, for any link, the remaining bandwidth of the link must be greater than the bandwidth requested by the path. This means that when the controller allocates a path, it must consider the bandwidth constraints of each link. The bandwidth requirement of the allocated path should be less than the remaining bandwidth of all the links included in that path.</p><p>The total number of path requests per second in each domain is <italic toggle="yes">N</italic> &#x000d7; (<italic toggle="yes">N</italic> &#x02212; 1) &#x000d7; <italic toggle="yes">NetworkStress</italic>, where <italic toggle="yes">NetworkStress</italic> is the path request pressure factor. Each controller will receive <italic toggle="yes">N</italic> &#x000d7; (<italic toggle="yes">N</italic> &#x02212; 1) &#x000d7; <italic toggle="yes">NetworkStress</italic> randomly generated path requests. The larger the <italic toggle="yes">NetworkStress</italic> is set, the higher the overall network path request pressure intensity is. The network runs 200 times to generate average data for each performance indicator, and the topology is shown in <xref rid="sensors-25-01080-f010" ref-type="fig">Figure 10</xref>. The specific values of each parameter are shown in <xref rid="sensors-25-01080-t001" ref-type="table">Table 1</xref>.</p><p>In the simulation, the shortest path communication method under the traditional cross-domain communication mode as shown in <xref rid="sensors-25-01080-f004" ref-type="fig">Figure 4</xref> (referred to as CD-SPF) and the load balance-oriented cross-domain communication method proposed in this paper as shown in <xref rid="sensors-25-01080-f005" ref-type="fig">Figure 5</xref> are compared.</p><p>In <xref rid="sensors-25-01080-f010" ref-type="fig">Figure 10</xref>, <italic toggle="yes">s</italic>1 to <italic toggle="yes">s</italic>23 are OpenFlow switches, <italic toggle="yes">h</italic>1 to <italic toggle="yes">h</italic>23 are terminal host nodes, and <italic toggle="yes">c</italic>0 to <italic toggle="yes">c</italic>3 are domain controllers. Taking domain 0 as an example, it consists of controller <italic toggle="yes">c</italic>0, switches <italic toggle="yes">s</italic>3, <italic toggle="yes">s</italic>4, s8, <italic toggle="yes">s</italic>9, <italic toggle="yes">s</italic>10, <italic toggle="yes">s</italic>11, <italic toggle="yes">s</italic>12, and terminal nodes <italic toggle="yes">h</italic>8 to <italic toggle="yes">h</italic>15. Other domains are similar and will not be described in detail here.</p><p>The data transmission rate for each switch, terminal node, and controller is set to 100 M. The packet length is a random value between 64 and 1518 bytes. The length of the flow table request packet is set to 64 B, and the length of the flow table installation packet is set to 64&#x02013;128 B. The flow table is distributed using direct communication between the controller and the switch. <xref rid="sensors-25-01080-f011" ref-type="fig">Figure 11</xref> and <xref rid="sensors-25-01080-f012" ref-type="fig">Figure 12</xref> are random screenshots during the simulation process. The thick red lines between the controller and the switch (such as s6, c1 in <xref rid="sensors-25-01080-f012" ref-type="fig">Figure 12</xref>) indicate that the switch is requesting flow tables from the controller (packet-in events) or the controller is updating flow rules to the switch (packet-out events).</p></sec><sec id="sec5dot2-sensors-25-01080"><title>5.2. Simulation Results and Analysis</title><p>To more accurately and intuitively observe the results of path allocation, in the simulation, we assume that during the path allocation process, the requested bandwidth of the allocated path cannot exceed the remaining bandwidth of each link traversed by the path; otherwise, the path allocation is deemed unsuccessful. Additionally, to ensure that domain controllers are actively involved in the communication process, we assume that all switch flow rules become invalid after being used once, meaning that all packets generate a packet-in event. In contrast, traditional network experiments do not have these constraints. It is widely recognized that the shortest path first (SPF) algorithm can identify the shortest communication path in a network. Given its simplicity, efficiency, and intuitiveness, it has consistently served as the benchmark algorithm and a common strategy for path planning in network communications. For multi-domain SDN networks, when factors such as negative domain balancing, multi-path support, and network throughput are not considered, cross-domain shortest path first (CD-SPF) can be regarded as the preferred strategy for path allocation. Due to the different simulation assumptions compared to existing research methods, the simulation only compares with the CD-SPF algorithm to verify its performance metrics in terms of path allocation success rate, network load balancing, end-to-end average latency, and flow table installation time.</p><p>During network operation, the performance metrics of different schemes are tested by varying the network bandwidth request pressure and the path request pressure factor.</p><p><xref rid="sensors-25-01080-f013" ref-type="fig">Figure 13</xref> compares the performance of the proposed method (CCPA) and the CD-SPF algorithm in terms of path allocation success rate. The path allocation success rate fluctuates within the range of [39.7~94.8%]. As the number of path requests increases, the proposed algorithm generally has a higher path allocation success rate than CD-SPF. When <italic toggle="yes">LinkFactor</italic> = 0.1, the difference between the two methods is approximately 5% to 10%, and this gap tends to widen as <italic toggle="yes">NetworkStress</italic> increases. When <italic toggle="yes">LinkFactor</italic> = 0.2, the allocation success rate of CCPA is about 11% higher than the best performance of CD-SPF. The overall trend shows that under different <italic toggle="yes">LinkFactor</italic> values, as the number of path requests increases, the path allocation success rate decreases for both methods. When the number of path requests exceeds a certain value and network resources (bandwidth and number of available links) are limited, the available resources for path allocation decrease with the increase in <italic toggle="yes">LinkFactor</italic> and <italic toggle="yes">NetworkStress</italic>, leading to a lower path allocation success rate, which tends to decrease linearly. This phenomenon indicates that increasing the available network resources or reducing <italic toggle="yes">LinkFactor</italic> and <italic toggle="yes">NetworkStress</italic> can improve the path allocation success rate.</p><p><xref rid="sensors-25-01080-f014" ref-type="fig">Figure 14</xref> compares the proposed method and CD-SPF in terms of network load balancing performance. When <italic toggle="yes">LinkFactor</italic> = 0.1 and <italic toggle="yes">NetworkStress</italic> = 1.0, CCPA achieves a load balancing degree close to 75%, while CD-SPF is around 48%. When <italic toggle="yes">LinkFactor</italic> = 0.2, the network bandwidth request is relatively larger, and as <italic toggle="yes">NetworkStress</italic> increases, CD-SPF&#x02019;s network load balancing degree does not improve significantly, whereas CCPA can maintain a stable increase in network load balancing. The figure shows that under different network bandwidths and path requests, the proposed method achieves a more balanced network load, indicating that CCPA improves the utilization of network bandwidth resources in path allocation.</p><p>Cross-domain path data transmission mainly includes three stages: (1) path request; (2) path selection and flow table installation; (3) packet forwarding. The path selection results are generated by internal calculations of each domain controller, and the calculation time is strongly related to the hardware performance of the controller. In the statistics of end-to-end delay, this simulation ignores computational delay; that is, it disregards the computational delay of the controller in path planning. In terms of packet-in and packet-out events, the flow table request and installation time for CD-SPF (<xref rid="sensors-25-01080-f004" ref-type="fig">Figure 4</xref>) and the proposed method (<xref rid="sensors-25-01080-f005" ref-type="fig">Figure 5</xref>) are shown in <xref rid="sensors-25-01080-f015" ref-type="fig">Figure 15</xref>. CD-SPF has an average latency of about 94 ms in cross-domain communication, while the proposed method is around 42 ms.</p><p>Since the simulation assumes that switch flow rules become invalid after being used once (to simulate a high-density path request environment), all cross-domain communication packet-in events will trigger the domain controller to install flow rules for the switches in the path. Therefore, the cross-domain communication latency will include both flow rules installation latency and cross-domain data transmission latency. <xref rid="sensors-25-01080-f016" ref-type="fig">Figure 16</xref> compares the proposed method and CD-SPF in terms of cross-domain communication latency. To further observe the impact of paths and loads on cross-domain communication, the data difference between <xref rid="sensors-25-01080-f015" ref-type="fig">Figure 15</xref> and <xref rid="sensors-25-01080-f016" ref-type="fig">Figure 16</xref> was used to derive the comparison of cross-domain data transmission delay shown in <xref rid="sensors-25-01080-f017" ref-type="fig">Figure 17</xref>. In the cross-domain data transmission latency comparison chart, it can be seen that when the network pressure is relatively low (for example, <italic toggle="yes">NetworkStress</italic> &#x0003c; 0.8), network resources are relatively abundant. At this time, CD-SPF has some advantages in terms of transmission delay due to the shortest number of path forwarding hops. However, as the number of path requests increases and available network resources become limited, when <italic toggle="yes">NetworkStress</italic> &#x0003e; 1.1, the proposed method has a lower average cross-domain data transmission latency, and when <italic toggle="yes">LinkFactor</italic> = 0.2, the proposed method&#x02019;s performance in latency can surpass CD-SPF more quickly. According to the data results, when network bandwidth is sufficient, CD-SPF can leverage its shortest path advantage, but when the network experiences a certain degree of congestion, CD-SPF&#x02019;s advantage gradually diminishes. In contrast, the proposed load balancing method begins to show its advantages. This is because the proposed method can balance the network load across all links, thereby reducing the overall average transmission delay.</p><p>In summary, our proposed method outperforms the traditional method in terms of path allocation success rate, network load balancing degree, and data transmission delay, especially in cross-domain communication under high-density path requests in SDNs networks.</p></sec></sec><sec sec-type="conclusions" id="sec6-sensors-25-01080"><title>6. Conclusions</title><p>This paper focuses on the cross-domain communication problem based on load balancing in multi-domain SDN networks. Through network modeling, the problem of cross-domain load balancing planning for paths is transformed into a clique-finding problem for backup paths, and an approximate algorithm is provided. Through collaborative processing among multi-domain controllers, the coordinated planning of cross-domain paths and the collaborative installation of flow tables are achieved. Simulation comparisons show that the method proposed in this paper has a significant advantage in cross-domain communication under high-density path requests in SDN networks. In this paper, to more accurately measure the end-to-end delay, we have neglected the computational delay of the controller, which will be addressed in our future work. In future research, we plan to explore the integration of machine learning techniques into cross-domain path selection to enhance the success rate of path allocation and the load balancing rate across domains. Furthermore, we intend to investigate network path allocation strategies tailored to specific industrial fields, enabling the protocol to effectively meet the communication needs of different industrial sectors and better serve the relevant industries, especially the cyber-physical systems with high real-time communication requirements.</p></sec></body><back><fn-group><fn><p><bold>Disclaimer/Publisher&#x02019;s Note:</bold> The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.</p></fn></fn-group><notes><title>Author Contributions</title><p>Conceptualization, X.W.; methodology, X.W., Y.Z. and F.D.; software, X.W. and F.D.; investigation, X.W.; writing&#x02014;original draft preparation, X.W. and F.D.; writing&#x02014;review and editing, Y.Z. and X.Y.; supervision, X.W.; project administration, X.W.; funding acquisition, X.W. and Y.Z. All authors have read and agreed to the published version of the manuscript.</p></notes><notes><title>Institutional Review Board Statement</title><p>Not applicable.</p></notes><notes><title>Informed Consent Statement</title><p>Not applicable.</p></notes><notes notes-type="data-availability"><title>Data Availability Statement</title><p>Data are contained within the article.</p></notes><notes notes-type="COI-statement"><title>Conflicts of Interest</title><p>The authors declare no conflicts of interest.</p></notes><ref-list><title>References</title><ref id="B1-sensors-25-01080"><label>1.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Ye</surname><given-names>Z.</given-names></name>
<name><surname>Sun</surname><given-names>G.</given-names></name>
<name><surname>Guizani</surname><given-names>M.</given-names></name>
</person-group><article-title>ILBPS: An Integrated Optimization Approach Based on Adaptive Load-Balancing and Heuristic Path Selection in SDN</article-title><source>IEEE Internet Things J.</source><year>2024</year><volume>11</volume><fpage>6144</fpage><lpage>6157</lpage><pub-id pub-id-type="doi">10.1109/JIOT.2023.3309832</pub-id></element-citation></ref><ref id="B2-sensors-25-01080"><label>2.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Yuan</surname><given-names>B.</given-names></name>
<name><surname>Li</surname><given-names>H.</given-names></name>
<name><surname>Yu</surname><given-names>H.</given-names></name>
</person-group><article-title>Research on End-to-End Forwarding Path Selection Method for CFN</article-title><source>Proceedings of the 2024 4th International Conference on Information Communication and Software Engineering (ICICSE)</source><conf-loc>Beijing, China</conf-loc><conf-date>10&#x02013;12 May 2024</conf-date><fpage>136</fpage><lpage>140</lpage></element-citation></ref><ref id="B3-sensors-25-01080"><label>3.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Li</surname><given-names>J.</given-names></name>
<name><surname>Chang</surname><given-names>X.</given-names></name>
<name><surname>Ren</surname><given-names>Y.</given-names></name>
<name><surname>Zhang</surname><given-names>Z.</given-names></name>
<name><surname>Wang</surname><given-names>G.</given-names></name>
</person-group><article-title>An Effective Path Load Balancing Mechanism Based On SDN</article-title><source>Proceedings of the IEEE International Conference on Trust, Security and Privacy in Computing and Communications</source><conf-loc>Beijing, China</conf-loc><conf-date>24&#x02013;26 September 2014</conf-date><fpage>527</fpage><lpage>533</lpage></element-citation></ref><ref id="B4-sensors-25-01080"><label>4.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Celenlioglu</surname><given-names>M.R.</given-names></name>
<name><surname>Mantar</surname><given-names>H.A.</given-names></name>
</person-group><article-title>A Scalable Routing and Admission Control Model in Sdn-Based Networks</article-title><source>Proceedings of the Tenth ACM/IEEE Symposium on Architectures for Networking and Communications Systems</source><conf-loc>Marina del Rey, CA, USA</conf-loc><conf-date>20&#x02013;21 October 2014</conf-date><fpage>231</fpage><lpage>232</lpage></element-citation></ref><ref id="B5-sensors-25-01080"><label>5.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Ghaffarinejad</surname><given-names>A.</given-names></name>
<name><surname>Syrotiuk</surname><given-names>V.R.</given-names></name>
</person-group><article-title>Load Balancing in a Campus Network Using Software Defined Networking</article-title><source>Proceedings of the 2014 Third GENI Research and Educational Experiment Workshop</source><conf-loc>Atlanta, GA, USA</conf-loc><conf-date>19&#x02013;20 March 2014</conf-date><fpage>75</fpage><lpage>76</lpage></element-citation></ref><ref id="B6-sensors-25-01080"><label>6.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Giorgetti</surname><given-names>A.</given-names></name>
<name><surname>Cugini</surname><given-names>F.</given-names></name>
<name><surname>Paolucci</surname><given-names>F.</given-names></name>
<name><surname>Castoldi</surname><given-names>P.</given-names></name>
</person-group><article-title>OpenFlow and PCE Architectures in Wavelength Switched Optical Networks</article-title><source>Proceedings of the 2012 16th International Conference on Optical Network Design and Modelling (ONDM)</source><conf-loc>Colchester, UK</conf-loc><conf-date>17&#x02013;20 April 2012</conf-date><fpage>1</fpage><lpage>6</lpage></element-citation></ref><ref id="B7-sensors-25-01080"><label>7.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Basta</surname><given-names>A.</given-names></name>
<name><surname>Blenk</surname><given-names>A.</given-names></name>
<name><surname>Belhaj Hassine</surname><given-names>H.</given-names></name>
<name><surname>Kellerer</surname><given-names>W.</given-names></name>
</person-group><article-title>Towards a Dynamic SDN Virtualization Layer: Control Path Migration Protocol</article-title><source>Proceedings of the 2015 11th International Conference on Network and Service Management (CNSM)</source><conf-loc>Barcelona, Spain</conf-loc><conf-date>9&#x02013;13 November 2015</conf-date><fpage>354</fpage><lpage>359</lpage></element-citation></ref><ref id="B8-sensors-25-01080"><label>8.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Mendiola</surname><given-names>A.</given-names></name>
<name><surname>Astorga</surname><given-names>J.</given-names></name>
<name><surname>Jacob</surname><given-names>E.</given-names></name>
<name><surname>Higuero</surname><given-names>M.</given-names></name>
<name><surname>Urtasun</surname><given-names>A.</given-names></name>
<name><surname>Fuentes</surname><given-names>V.</given-names></name>
</person-group><article-title>DynPaC: A Path Computation Framework for SDN</article-title><source>Proceedings of the 2015 Fourth European Workshop on Software Defined Networks</source><conf-loc>Bilbao, Spain</conf-loc><conf-date>30 September&#x02013;2 October 2015</conf-date><fpage>119</fpage><lpage>120</lpage></element-citation></ref><ref id="B9-sensors-25-01080"><label>9.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Lin</surname><given-names>W.</given-names></name>
<name><surname>Niu</surname><given-names>Y.</given-names></name>
<name><surname>Zhang</surname><given-names>X.</given-names></name>
<name><surname>Wei</surname><given-names>L.</given-names></name>
<name><surname>Zhang</surname><given-names>C.</given-names></name>
</person-group><article-title>Using Path Label Routing in Wide Area Software-Defined Networks with OpenFlow</article-title><source>Proceedings of the 2016 International Conference on Networking and Network Applications (NaNA)</source><conf-loc>Hakodate, Japan</conf-loc><conf-date>23&#x02013;25 July 2016</conf-date><fpage>149</fpage><lpage>154</lpage></element-citation></ref><ref id="B10-sensors-25-01080"><label>10.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Jang-Ping</surname><given-names>S.</given-names></name>
<name><surname>Quan-Xiang</surname><given-names>Z.</given-names></name>
<name><surname>Jagadeesha</surname><given-names>R.</given-names></name>
<name><surname>Yeh-Cheng</surname><given-names>C.</given-names></name>
</person-group><article-title>Efficient Unicast Routing Algorithms in Software-Defined Networking</article-title><source>Proceedings of the 2016 European Conference on Networks and Communications (EuCNC)</source><conf-loc>Athens, Greece</conf-loc><conf-date>27&#x02013;30 June 2016</conf-date><fpage>377</fpage><lpage>381</lpage></element-citation></ref><ref id="B11-sensors-25-01080"><label>11.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Huang</surname><given-names>L.H.</given-names></name>
<name><surname>Huang</surname><given-names>H.J.</given-names></name>
<name><surname>Lin</surname><given-names>C.C.</given-names></name>
<name><surname>Yang</surname><given-names>D.N.</given-names></name>
</person-group><article-title>Scalable and Bandwidth-Efficient Multicast for Software-Defined Networks</article-title><source>Proceedings of the 2014 IEEE Global Communications Conference</source><conf-loc>Austin, TX, USA</conf-loc><conf-date>8&#x02013;12 December 2014</conf-date><fpage>1890</fpage><lpage>1896</lpage></element-citation></ref><ref id="B12-sensors-25-01080"><label>12.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Gangwal</surname><given-names>A.</given-names></name>
<name><surname>Gupta</surname><given-names>M.</given-names></name>
<name><surname>Gaur</surname><given-names>M.S.</given-names></name>
<name><surname>Laxmi</surname><given-names>V.</given-names></name>
<name><surname>Conti</surname><given-names>M.</given-names></name>
</person-group><article-title>ELBA: Efficient Layer Based Routing Algorithm in SDN</article-title><source>Proceedings of the 2016 25th International Conference on Computer Communication and Networks (ICCCN)</source><conf-loc>Waikoloa, HI, USA</conf-loc><conf-date>1&#x02013;4 August 2016</conf-date><fpage>1</fpage><lpage>7</lpage></element-citation></ref><ref id="B13-sensors-25-01080"><label>13.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>You</surname><given-names>L.</given-names></name>
<name><surname>Wei</surname><given-names>L.</given-names></name>
<name><surname>Junzhou</surname><given-names>L.</given-names></name>
<name><surname>Jian</surname><given-names>J.</given-names></name>
<name><surname>Nu</surname><given-names>X.</given-names></name>
</person-group><article-title>An Inter-Domain Multi-Path Flow Transfer Mechanism Based on SDN and Multi-Domain Collaboration</article-title><source>Proceedings of the 2015 IFIP/IEEE International Symposium on Integrated Network Management (IM)</source><conf-loc>Ottawa, ON, Canada</conf-loc><conf-date>11&#x02013;15 May 2015</conf-date><fpage>758</fpage><lpage>761</lpage></element-citation></ref><ref id="B14-sensors-25-01080"><label>14.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Rocha</surname><given-names>L.A.</given-names></name>
<name><surname>Verdi</surname><given-names>F.L.</given-names></name>
</person-group><article-title>MILPFlow: A Toolset for Integration of Computational Modelling and Deployment of Data Paths for SDN</article-title><source>Proceedings of the 2015 IFIP/IEEE International Symposium on Integrated Network Management (IM)</source><conf-loc>Ottawa, ON, Canada</conf-loc><conf-date>11&#x02013;15 May 2015</conf-date><fpage>750</fpage><lpage>753</lpage></element-citation></ref><ref id="B15-sensors-25-01080"><label>15.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Lamali</surname><given-names>M.L.</given-names></name>
<name><surname>Fergani</surname><given-names>N.</given-names></name>
<name><surname>Cohen</surname><given-names>J.</given-names></name>
<name><surname>Pouyllau</surname><given-names>H.</given-names></name>
</person-group><article-title>Path Computation in Multi-Layer Networks: Complexity and Algorithms</article-title><source>Proceedings of the IEEE INFOCOM 2016&#x02014;The 35th Annual IEEE International Conference on Computer Communications</source><conf-loc>San Francisco, CA, USA</conf-loc><conf-date>10&#x02013;14 April 2016</conf-date><fpage>1</fpage><lpage>9</lpage></element-citation></ref><ref id="B16-sensors-25-01080"><label>16.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Trivisonno</surname><given-names>R.</given-names></name>
<name><surname>Vaishnavi</surname><given-names>I.</given-names></name>
<name><surname>Guerzoni</surname><given-names>R.</given-names></name>
<name><surname>Despotovic</surname><given-names>Z.</given-names></name>
<name><surname>Hecker</surname><given-names>A.</given-names></name>
<name><surname>Beker</surname><given-names>S.</given-names></name>
<name><surname>Soldani</surname><given-names>D.</given-names></name>
</person-group><article-title>Virtual Links Mapping in Future SDN-Enabled Networks</article-title><source>Proceedings of the 2013 IEEE SDN for Future Networks and Services (SDN4FNS)</source><conf-loc>Trento, Italy</conf-loc><conf-date>11&#x02013;13 November 2013</conf-date><fpage>1</fpage><lpage>5</lpage></element-citation></ref><ref id="B17-sensors-25-01080"><label>17.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Meseguer Llopis</surname><given-names>J.</given-names></name>
<name><surname>Pieczerak</surname><given-names>J.</given-names></name>
<name><surname>Janaszka</surname><given-names>T.</given-names></name>
</person-group><article-title>Minimizing Latency of Critical Traffic through SDN</article-title><source>Proceedings of the 2016 IEEE International Conference on Networking, Architecture and Storage (NAS)</source><conf-loc>Long Beach, CA, USA</conf-loc><conf-date>8&#x02013;10 August 2016</conf-date><fpage>1</fpage><lpage>6</lpage></element-citation></ref><ref id="B18-sensors-25-01080"><label>18.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Kulkarni</surname><given-names>M.</given-names></name>
<name><surname>Goswami</surname><given-names>B.</given-names></name>
<name><surname>Paulose</surname><given-names>J.</given-names></name>
</person-group><article-title>HULA: Dynamic and Scalable Load Balancing Mechanism for Data Plane of SDN</article-title><source>Proceedings of the 2023 Fifth International Conference on Electrical, Computer and Communication Technologies (ICECCT)</source><conf-loc>Erode, India</conf-loc><conf-date>22&#x02013;24 February 2023</conf-date><fpage>1</fpage><lpage>9</lpage></element-citation></ref><ref id="B19-sensors-25-01080"><label>19.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Salvestrini</surname><given-names>F.</given-names></name>
<name><surname>Carrozzo</surname><given-names>G.</given-names></name>
<name><surname>Ciulli</surname><given-names>N.</given-names></name>
</person-group><article-title>Towards a Distributed SDN Control: Inter-Platform Signaling among Flow Processing Platforms</article-title><source>Proceedings of the 2013 IEEE SDN for Future Networks and Services (SDN4FNS)</source><conf-loc>Trento, Italy</conf-loc><conf-date>11&#x02013;13 November 2013</conf-date><fpage>1</fpage><lpage>7</lpage></element-citation></ref><ref id="B20-sensors-25-01080"><label>20.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Kulkarni</surname><given-names>M.</given-names></name>
<name><surname>Goswami</surname><given-names>B.</given-names></name>
<name><surname>Paulose</surname><given-names>J.</given-names></name>
</person-group><article-title>P4 based Load Balancing Strategies for Large Scale Software-Defined Networks</article-title><source>Proceedings of the 2022 Second International Conference on Advances in Electrical, Computing, Communication and Sustainable Technologies (ICAECT)</source><conf-loc>Bhilai, India</conf-loc><conf-date>21&#x02013;22 April 2022</conf-date><fpage>1</fpage><lpage>7</lpage></element-citation></ref><ref id="B21-sensors-25-01080"><label>21.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Jo</surname><given-names>M.Y.</given-names></name>
<name><surname>Kim</surname><given-names>K.</given-names></name>
</person-group><article-title>A Research on the Regional Routing Scheme Based Mobile Agent for SDN</article-title><source>Proceedings of the 2016 International Conference on Information Networking (ICOIN)</source><conf-loc>Kota Kinabalu, Malaysia</conf-loc><conf-date>13&#x02013;15 January 2016</conf-date><fpage>211</fpage><lpage>213</lpage></element-citation></ref><ref id="B22-sensors-25-01080"><label>22.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Chahlaoui</surname><given-names>F.</given-names></name>
<name><surname>Dahmouni</surname><given-names>H.</given-names></name>
<name><surname>Alami</surname><given-names>H.E.</given-names></name>
</person-group><article-title>Multipath-routing based load-balancing in SDN networks</article-title><source>Proceedings of the 2022 5th Conference on Cloud and Internet of Things (CIoT)</source><conf-loc>Marrakech, Morocco</conf-loc><conf-date>28&#x02013;30 March 2022</conf-date><fpage>180</fpage><lpage>185</lpage></element-citation></ref><ref id="B23-sensors-25-01080"><label>23.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Chaudhary</surname><given-names>R.</given-names></name>
<name><surname>Kumar</surname><given-names>N.</given-names></name>
</person-group><article-title>PARC: Placement Availability Resilient Controller Scheme for Software-Defined Datacenters</article-title><source>IEEE Trans. Veh. Technol.</source><year>2020</year><volume>69</volume><fpage>8985</fpage><lpage>9001</lpage><pub-id pub-id-type="doi">10.1109/TVT.2020.2999072</pub-id></element-citation></ref><ref id="B24-sensors-25-01080"><label>24.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Li</surname><given-names>X.</given-names></name>
<name><surname>Tang</surname><given-names>F.</given-names></name>
<name><surname>Fu</surname><given-names>L.</given-names></name>
<name><surname>Yu</surname><given-names>J.</given-names></name>
<name><surname>Chen</surname><given-names>L.</given-names></name>
<name><surname>Liu</surname><given-names>J.</given-names></name>
<name><surname>Zhu</surname><given-names>Y.</given-names></name>
<name><surname>Yang</surname><given-names>L.</given-names></name>
</person-group><article-title>Optimized Controller Provisioning in Software-Defined LEO Satellite Networks</article-title><source>IEEE Trans. Mob. Comput.</source><year>2023</year><volume>22</volume><fpage>4850</fpage><lpage>4864</lpage><pub-id pub-id-type="doi">10.1109/TMC.2022.3155657</pub-id></element-citation></ref><ref id="B25-sensors-25-01080"><label>25.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Wang</surname><given-names>T.</given-names></name>
<name><surname>Liu</surname><given-names>F.</given-names></name>
<name><surname>Guo</surname><given-names>J.</given-names></name>
<name><surname>Xu</surname><given-names>H.</given-names></name>
</person-group><article-title>Dynamic SDN Controller Assignment in Data Center Networks: Stable Matching with Transfers</article-title><source>Proceedings of the IEEE INFOCOM 2016&#x02014;The 35th Annual IEEE International Conference on Computer Communications</source><conf-loc>San Francisco, CA, USA</conf-loc><conf-date>10&#x02013;14 April 2016</conf-date><fpage>1</fpage><lpage>9</lpage></element-citation></ref><ref id="B26-sensors-25-01080"><label>26.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Yujie</surname><given-names>R.</given-names></name>
<name><surname>Muqing</surname><given-names>W.</given-names></name>
<name><surname>Yiming</surname><given-names>C.</given-names></name>
</person-group><article-title>An Effective Controller Placement Algorithm Based on Clustering in SDN</article-title><source>Proceedings of the 2020 IEEE 6th International Conference on Computer and Communications (ICCC)</source><conf-loc>Chengdu, China</conf-loc><conf-date>11&#x02013;14 December 2020</conf-date><fpage>2294</fpage><lpage>2299</lpage></element-citation></ref><ref id="B27-sensors-25-01080"><label>27.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Wang</surname><given-names>T.</given-names></name>
<name><surname>Chen</surname><given-names>H.</given-names></name>
</person-group><article-title>Optimal Model for Link Failure Foresight Controller Placement in SDN</article-title><source>Proceedings of the 2021 IEEE 4th International Conference on Electronics Technology (ICET)</source><conf-loc>Chengdu, China</conf-loc><conf-date>7&#x02013;10 May 2021</conf-date><fpage>727</fpage><lpage>730</lpage></element-citation></ref><ref id="B28-sensors-25-01080"><label>28.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Yang</surname><given-names>S.</given-names></name>
<name><surname>Shi</surname><given-names>H.</given-names></name>
<name><surname>Zhang</surname><given-names>H.</given-names></name>
</person-group><article-title>Dynamic Load Balancing of Multiple Controller based on Intelligent Collaboration in SDN</article-title><source>Proceedings of the 2020 International Conference on Computer Vision, Image and Deep Learning (CVIDL)</source><conf-loc>Chongqing, China</conf-loc><conf-date>10&#x02013;12 July 2020</conf-date><fpage>354</fpage><lpage>359</lpage></element-citation></ref><ref id="B29-sensors-25-01080"><label>29.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Shaikh</surname><given-names>M.R.R.</given-names></name>
</person-group><article-title>Bayesian Network based Optimal Load Balancing in Software Defined Networks</article-title><source>Proceedings of the 2023 International Conference on Emerging Smart Computing and Informatics (ESCI)</source><conf-loc>Pune, India</conf-loc><conf-date>1&#x02013;3 March 2023</conf-date><fpage>1</fpage><lpage>5</lpage></element-citation></ref><ref id="B30-sensors-25-01080"><label>30.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Yao</surname><given-names>D.</given-names></name>
<name><surname>Ma</surname><given-names>Q.</given-names></name>
<name><surname>Wang</surname><given-names>H.</given-names></name>
<name><surname>Chen</surname><given-names>H.</given-names></name>
<name><surname>Xu</surname><given-names>H.</given-names></name>
</person-group><article-title>Distributed Strategy for Collaborative Traffic Measurement in a Multi-Controller SDN</article-title><source>IEEE Trans. Netw. Sci. Eng.</source><year>2024</year><volume>11</volume><fpage>2450</fpage><lpage>2461</lpage><pub-id pub-id-type="doi">10.1109/TNSE.2023.3271123</pub-id></element-citation></ref><ref id="B31-sensors-25-01080"><label>31.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Zengyi</surname><given-names>X.U.</given-names></name>
<name><surname>Lin</surname><given-names>X.</given-names></name>
<name><surname>Luo</surname><given-names>Z.</given-names></name>
<name><surname>Lin</surname><given-names>Q.</given-names></name>
<name><surname>Zhang</surname><given-names>J.</given-names></name>
<name><surname>Wang</surname><given-names>G.</given-names></name>
<name><surname>Wang</surname><given-names>X.</given-names></name>
<name><surname>Jiang</surname><given-names>F.</given-names></name>
<name><surname>Li</surname><given-names>Z.</given-names></name>
<name><surname>Shi</surname><given-names>J.</given-names></name>
</person-group><article-title>Flexible 2 &#x000d7; 2 multiple access visible light communication system based on an integrated parallel gan/ingan micro-photodetector array module</article-title><source>Photonics Res.</source><year>2024</year><volume>12</volume><fpage>793</fpage><lpage>803</lpage></element-citation></ref><ref id="B32-sensors-25-01080"><label>32.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Chi</surname><given-names>N.</given-names></name>
<name><surname>Niu</surname><given-names>W.</given-names></name>
<name><surname>Zhou</surname><given-names>Y.</given-names></name>
<name><surname>Wang</surname><given-names>J.</given-names></name>
<name><surname>Chen</surname><given-names>H.</given-names></name>
<name><surname>He</surname><given-names>Z.</given-names></name>
</person-group><article-title>Enabling Technologies to Achieve Beyond 500Gbps Optical Intra-connects Based on WDM Visible Light Laser Communication</article-title><source>J. Light. Technol.</source><year>2024</year><pub-id pub-id-type="doi">10.1109/JLT.2024.3486062</pub-id></element-citation></ref><ref id="B33-sensors-25-01080"><label>33.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Wang</surname><given-names>Y.</given-names></name>
<name><surname>Xiao</surname><given-names>R.</given-names></name>
<name><surname>Xiao</surname><given-names>N.</given-names></name>
<name><surname>Wang</surname><given-names>Z.</given-names></name>
<name><surname>Chen</surname><given-names>L.</given-names></name>
<name><surname>Wen</surname><given-names>Y.</given-names></name>
<name><surname>Li</surname><given-names>P.</given-names></name>
</person-group><article-title>Wireless multiferroic memristor with coupled giant impedance and artificial synapse application</article-title><source>Adv. Electron. Mater.</source><year>2022</year><volume>10</volume><fpage>8</fpage><pub-id pub-id-type="doi">10.1002/aelm.202200370</pub-id></element-citation></ref><ref id="B34-sensors-25-01080"><label>34.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Sun</surname><given-names>G.</given-names></name>
<name><surname>Xu</surname><given-names>Z.</given-names></name>
<name><surname>Yu</surname><given-names>H.</given-names></name>
<name><surname>Chen</surname><given-names>X.</given-names></name>
<name><surname>Chang</surname><given-names>V.</given-names></name>
<name><surname>Vasilakos</surname><given-names>A.V.</given-names></name>
</person-group><article-title>Low-Latency and Resource-Efficient Service Function Chaining Orchestration in Network Function Virtualization</article-title><source>IEEE Internet Things J.</source><year>2020</year><volume>7</volume><fpage>5760</fpage><lpage>5772</lpage><pub-id pub-id-type="doi">10.1109/JIOT.2019.2937110</pub-id></element-citation></ref><ref id="B35-sensors-25-01080"><label>35.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Sun</surname><given-names>G.</given-names></name>
<name><surname>Zhu</surname><given-names>G.</given-names></name>
<name><surname>Liao</surname><given-names>D.</given-names></name>
<name><surname>Yu</surname><given-names>H.</given-names></name>
<name><surname>Du</surname><given-names>X.</given-names></name>
<name><surname>Guizani</surname><given-names>M.</given-names></name>
</person-group><article-title>Cost-Efficient Service Function Chain Orchestration for Low-Latency Applications in NFV Networks</article-title><source>IEEE Syst. J.</source><year>2019</year><volume>13</volume><fpage>3877</fpage><lpage>3888</lpage><pub-id pub-id-type="doi">10.1109/JSYST.2018.2879883</pub-id></element-citation></ref><ref id="B36-sensors-25-01080"><label>36.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Sun</surname><given-names>G.</given-names></name>
<name><surname>Li</surname><given-names>Y.</given-names></name>
<name><surname>Liao</surname><given-names>D.</given-names></name>
<name><surname>Chang</surname><given-names>V.</given-names></name>
</person-group><article-title>Service Function Chain Orchestration Across Multiple Domains: A Full Mesh Aggregation Approach</article-title><source>IEEE Trans. Netw. Serv. Manag.</source><year>2018</year><volume>15</volume><fpage>1175</fpage><lpage>1191</lpage><pub-id pub-id-type="doi">10.1109/TNSM.2018.2861717</pub-id></element-citation></ref><ref id="B37-sensors-25-01080"><label>37.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Yao</surname><given-names>Y.</given-names></name>
<name><surname>Shu</surname><given-names>F.</given-names></name>
<name><surname>Cheng</surname><given-names>X.</given-names></name>
<name><surname>Liu</surname><given-names>H.</given-names></name>
<name><surname>Miao</surname><given-names>P.</given-names></name>
<name><surname>Wu</surname><given-names>L.</given-names></name>
</person-group><article-title>Automotive Radar Optimization Design in a Spectrally Crowded V2I Communication Environment</article-title><source>IEEE Trans. Intell. Transp. Syst.</source><year>2023</year><volume>24</volume><fpage>8253</fpage><lpage>8263</lpage><pub-id pub-id-type="doi">10.1109/TITS.2023.3264507</pub-id></element-citation></ref><ref id="B38-sensors-25-01080"><label>38.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Wang</surname><given-names>X.</given-names></name>
<name><surname>Chai</surname><given-names>L.</given-names></name>
<name><surname>Zhou</surname><given-names>Y.</given-names></name>
<name><surname>Dan</surname><given-names>F.</given-names></name>
</person-group><article-title>Dual-Network Task Scheduling in Cyber&#x02013;Physical Systems: A Cooptimization Approach</article-title><source>IEEE Trans. Ind. Inform.</source><year>2021</year><volume>17</volume><fpage>3143</fpage><lpage>3152</lpage><pub-id pub-id-type="doi">10.1109/TII.2020.3010983</pub-id></element-citation></ref></ref-list></back><floats-group><fig position="float" id="sensors-25-01080-f001"><label>Figure 1</label><caption><p>Domain <italic toggle="yes">AS</italic> migrates to <italic toggle="yes">AS<sub>ij</sub></italic>.</p></caption><graphic xlink:href="sensors-25-01080-g001" position="float"/></fig><fig position="float" id="sensors-25-01080-f002"><label>Figure 2</label><caption><p>Communication path of cross-domain.</p></caption><graphic xlink:href="sensors-25-01080-g002" position="float"/></fig><fig position="float" id="sensors-25-01080-f003"><label>Figure 3</label><caption><p>Decomposition of cross-domain path.</p></caption><graphic xlink:href="sensors-25-01080-g003" position="float"/></fig><fig position="float" id="sensors-25-01080-f004"><label>Figure 4</label><caption><p>SDN network cross-domain communication.</p></caption><graphic xlink:href="sensors-25-01080-g004" position="float"/></fig><fig position="float" id="sensors-25-01080-f005"><label>Figure 5</label><caption><p>Path decomposition and planning for multi-controller collaboration.</p></caption><graphic xlink:href="sensors-25-01080-g005" position="float"/></fig><fig position="float" id="sensors-25-01080-f006"><label>Figure 6</label><caption><p>Network topology with a unique boundary forwarding node.</p></caption><graphic xlink:href="sensors-25-01080-g006" position="float"/></fig><fig position="float" id="sensors-25-01080-f007"><label>Figure 7</label><caption><p>The adjacent domains have multiple boundary forwarding nodes.</p></caption><graphic xlink:href="sensors-25-01080-g007" position="float"/></fig><fig position="float" id="sensors-25-01080-f008"><label>Figure 8</label><caption><p>Boundary forwarding nodes are not unique and point to different domains.</p></caption><graphic xlink:href="sensors-25-01080-g008" position="float"/></fig><fig position="float" id="sensors-25-01080-f009"><label>Figure 9</label><caption><p>Clique problem to our path assignment.</p></caption><graphic xlink:href="sensors-25-01080-g009" position="float"/></fig><fig position="float" id="sensors-25-01080-f010"><label>Figure 10</label><caption><p>Network topology.</p></caption><graphic xlink:href="sensors-25-01080-g010" position="float"/></fig><fig position="float" id="sensors-25-01080-f011"><label>Figure 11</label><caption><p>Network communication screenshot 1.</p></caption><graphic xlink:href="sensors-25-01080-g011" position="float"/></fig><fig position="float" id="sensors-25-01080-f012"><label>Figure 12</label><caption><p>Network communication screenshot 2.</p></caption><graphic xlink:href="sensors-25-01080-g012" position="float"/></fig><fig position="float" id="sensors-25-01080-f013"><label>Figure 13</label><caption><p>Comparison of path allocation success rate.</p></caption><graphic xlink:href="sensors-25-01080-g013" position="float"/></fig><fig position="float" id="sensors-25-01080-f014"><label>Figure 14</label><caption><p>Comparison of network load balancing rate.</p></caption><graphic xlink:href="sensors-25-01080-g014" position="float"/></fig><fig position="float" id="sensors-25-01080-f015"><label>Figure 15</label><caption><p>Comparison of flow tables installation delay.</p></caption><graphic xlink:href="sensors-25-01080-g015" position="float"/></fig><fig position="float" id="sensors-25-01080-f016"><label>Figure 16</label><caption><p>Comparison of average cross-domain communication delay.</p></caption><graphic xlink:href="sensors-25-01080-g016" position="float"/></fig><fig position="float" id="sensors-25-01080-f017"><label>Figure 17</label><caption><p>Comparison of average cross-domain data transmission delay.</p></caption><graphic xlink:href="sensors-25-01080-g017" position="float"/></fig><table-wrap position="float" id="sensors-25-01080-t001"><object-id pub-id-type="pii">sensors-25-01080-t001_Table 1</object-id><label>Table 1</label><caption><p>Simulation parameters.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Parameter</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Values</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">Link Bandwidth</td><td align="center" valign="middle" rowspan="1" colspan="1">5 &#x000d7; 10<sup>4</sup>~10<sup>5</sup></td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Path Request Bandwidth</td><td align="center" valign="middle" rowspan="1" colspan="1">1~5 &#x000d7; 10<sup>4</sup></td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">
<italic toggle="yes">NetworkStress</italic>
</td><td align="center" valign="middle" rowspan="1" colspan="1">0.5~1.3</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">
<italic toggle="yes">LinkFactor</italic>
</td><td align="center" valign="middle" rowspan="1" colspan="1">0.1, 0.2</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Path Overlength Factor <italic toggle="yes">h</italic></td><td align="center" valign="middle" rowspan="1" colspan="1">4</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Link Bandwidth Surplus Factor</td><td align="center" valign="middle" rowspan="1" colspan="1">1</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm67" overflow="scroll"><mml:mrow><mml:mi>&#x003bb;</mml:mi></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1</td></tr></tbody></table></table-wrap></floats-group></article>