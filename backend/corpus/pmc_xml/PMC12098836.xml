<!DOCTYPE article
PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with MathML3 v1.3 20210610//EN" "JATS-archivearticle1-3-mathml3.dtd">
<article xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="1.3"><?properties open_access?><processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats"><restricted-by>pmc</restricted-by></processing-meta><front><journal-meta><journal-id journal-id-type="nlm-ta">Sci Rep</journal-id><journal-id journal-id-type="iso-abbrev">Sci Rep</journal-id><journal-title-group><journal-title>Scientific Reports</journal-title></journal-title-group><issn pub-type="epub">2045-2322</issn><publisher><publisher-name>Nature Publishing Group UK</publisher-name><publisher-loc>London</publisher-loc></publisher></journal-meta>
<article-meta><article-id pub-id-type="pmid">40404757</article-id><article-id pub-id-type="pmc">PMC12098836</article-id>
<article-id pub-id-type="publisher-id">2396</article-id><article-id pub-id-type="doi">10.1038/s41598-025-02396-y</article-id><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title>Design of machine learning-based controllers for speed control of PMSM drive</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Tom</surname><given-names>Ashly Mary</given-names></name><xref ref-type="aff" rid="Aff1">1</xref></contrib><contrib contrib-type="author" corresp="yes"><name><surname>Daya</surname><given-names>J. L. Febin</given-names></name><address><email>febindaya.jl@vit.ac.in</email></address><xref ref-type="aff" rid="Aff2">2</xref></contrib><aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/00qzypv28</institution-id><institution-id institution-id-type="GRID">grid.412813.d</institution-id><institution-id institution-id-type="ISNI">0000 0001 0687 4946</institution-id><institution>School of Electrical Engineering, </institution><institution>Vellore Institute of Technology - Chennai Campus, </institution></institution-wrap>Chennai, 600127 India </aff><aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/00qzypv28</institution-id><institution-id institution-id-type="GRID">grid.412813.d</institution-id><institution-id institution-id-type="ISNI">0000 0001 0687 4946</institution-id><institution>Electric Vehicles Incubation, Testing and Research Center, </institution><institution>Vellore Institute of Technology - Chennai Campus, </institution></institution-wrap>Chennai, 600127 India </aff></contrib-group><pub-date pub-type="epub"><day>22</day><month>5</month><year>2025</year></pub-date><pub-date pub-type="pmc-release"><day>22</day><month>5</month><year>2025</year></pub-date><pub-date pub-type="collection"><year>2025</year></pub-date><volume>15</volume><elocation-id>17826</elocation-id><history><date date-type="received"><day>4</day><month>2</month><year>2025</year></date><date date-type="accepted"><day>13</day><month>5</month><year>2025</year></date></history><permissions><copyright-statement>&#x000a9; The Author(s) 2025</copyright-statement><copyright-year>2025</copyright-year><license><ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article&#x02019;s Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article&#x02019;s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>.</license-p></license></permissions><abstract id="Abs1"><p id="Par1">This study presents machine learning (ML)-based controllers for a surface permanent magnet synchronous motor (PMSM) drive system. The ML-based regression techniques like linear regression (LR), support vector machine regression (SVM), feedforward neural network (NN) and advanced NN like Long Short-Term Memory network (LSTM) are explored here in detail. This paper aims to develop an improved vector controller based on machine learning, and to investigate ML algorithms which are not yet been explored for the current control of a PMSM drive. The proposed machine learning-based control approach, which explores the influence of decoupling terms on vector control, is theoretically investigated and simulated in the vector control environment of the PMSM drive. The performance is also evaluated in real-time using the Opal-RT setup. The proposed control approach demonstrates the ability to fulfill the speed tracking requirements in the closed-loop drive system. A comparison of the simulation results between the PI controller and the suggested control algorithms validates the effectiveness of the proposed control algorithms for speed control applications. The performances of the proposed ML-based controllers improved in terms of evaluation metrics, transient peak levels and current responses, when compared to the conventional PI controller.</p></abstract><kwd-group xml:lang="en"><title>Keywords</title><kwd>Controllers</kwd><kwd>Long short-term memory network</kwd><kwd>Machine learning (ML)</kwd><kwd>Neural network</kwd><kwd>Permanent magnet synchronous motor (PMSM)</kwd><kwd>Vector control.</kwd></kwd-group><kwd-group kwd-group-type="npg-subject"><title>Subject terms</title><kwd>Engineering</kwd><kwd>Electrical and electronic engineering</kwd><kwd>Software</kwd></kwd-group><funding-group><award-group><funding-source><institution>Vellore Institute of Technology, Chennai</institution></funding-source></award-group><open-access><p>Open access funding provided by Vellore Institute of Technology.</p></open-access></funding-group><custom-meta-group><custom-meta><meta-name>issue-copyright-statement</meta-name><meta-value>&#x000a9; Springer Nature Limited 2025</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="Sec1"><title>Introduction</title><p id="Par2">Given the growing expense of fuel and environmental problems like global warming and climate change, renewable and sustainable energy solutions are becoming essential. Because they make it easier to use green energy technology, electrical machines are becoming more and more popular<sup><xref ref-type="bibr" rid="CR1">1</xref>&#x02013;<xref ref-type="bibr" rid="CR3">3</xref></sup>. With their unique benefits - such as good torque characteristics, low maintenance costs, fast dynamic response, high energy/mass ratio, better permanent magnet cost, better heat dissipation to the environment, high effectiveness, and long service life - Permanent Magnet Synchronous machines (PMSM) are among the most promising types of AC machines<sup><xref ref-type="bibr" rid="CR1">1</xref>&#x02013;<xref ref-type="bibr" rid="CR9">9</xref></sup>. Therefore, PMSM machines are widely used in many different applications, such as wind power generation, servo drives, aviation, electric and hybrid vehicles (EV/HEV), and home appliances<sup><xref ref-type="bibr" rid="CR1">1</xref>,<xref ref-type="bibr" rid="CR2">2</xref>,<xref ref-type="bibr" rid="CR10">10</xref>,<xref ref-type="bibr" rid="CR11">11</xref></sup>.</p><p id="Par3">Scalar control and vector control are the two most popular approaches for controlling the speed of PMSM motors. The simplicity of the control principle makes the scalar control method ideal for systems that do not require high accuracy. There are two widely used vector control methods: Field Oriented Control (FOC) and Direct Torque Control (DTC). They enhance the effectiveness and quality of PMSM speed control and are widely used because of their key advantages - simplicity in the control structure, ease of operation, reliability, and high efficiency<sup><xref ref-type="bibr" rid="CR1">1</xref>,<xref ref-type="bibr" rid="CR3">3</xref>,<xref ref-type="bibr" rid="CR7">7</xref>,<xref ref-type="bibr" rid="CR12">12</xref></sup>.</p><p id="Par4">In DTC drives, accuracy depends on the flux observer, and in real-world applications, observer accuracy may significantly decrease at low speeds. The dq-axes currents in FOC drives are calculated from measured currents and rotor position, allowing accurate tracking of current commands. Furthermore, the FOC control method can regulate the semiconductor switching power loss and switching frequency better than the typical DTC controller approach, making it more popular in industrial systems. The FOC control method has become increasingly popular in high-performance AC drives during the last two decades, owing to significant advances in power electronics, computers, and microelectronics<sup><xref ref-type="bibr" rid="CR1">1</xref>&#x02013;<xref ref-type="bibr" rid="CR3">3</xref></sup>.</p><p id="Par5">The FOC control approach uses PID (proportional-integral-derivative) or PI (proportional-integral) controllers. These controllers have the advantages of simplicity, ease of construction, and practical applicability. However, because of their sensitivity to system uncertainties, these fixed-gain controllers require an exact model of the system to determine the controller gain values<sup><xref ref-type="bibr" rid="CR5">5</xref>,<xref ref-type="bibr" rid="CR13">13</xref></sup>. The automotive industry continues to use PI controllers in the FOC control approach, despite numerous efforts to replace or improve upon them<sup><xref ref-type="bibr" rid="CR7">7</xref>,<xref ref-type="bibr" rid="CR14">14</xref>&#x02013;<xref ref-type="bibr" rid="CR18">18</xref></sup>.</p><p id="Par6">In comparison to PI/PID controllers, Artificial Intelligence (AI) controllers can be trained with sufficient data. These controllers are capable of performing satisfactorily well even in ill-defined models. These AI controllers include neural network-based controllers, fuzzy-based controllers, and genetic algorithm-based controllers<sup><xref ref-type="bibr" rid="CR12">12</xref></sup>. Major drawbacks are memory space limitations, and the long time required for the training and learning procedure. These issues are taken care of using the graphical processing units (GPU)<sup><xref ref-type="bibr" rid="CR19">19</xref></sup>.</p><p id="Par7">A subset of artificial intelligence (AI), called machine learning (ML) is capable of extracting useful patterns from massive volumes of data or transforming experience into expertise. This technique uses domain knowledge rather than mathematical modeling to create and train an ML model<sup><xref ref-type="bibr" rid="CR20">20</xref>,<xref ref-type="bibr" rid="CR21">21</xref></sup>. The four main categories of machine learning techniques include supervised, semi-supervised, unsupervised, and reinforcement learning. The most popular approach is supervised learning, which is further classified into two categories: regression, which yields continuous output, and classification, which yields discrete output<sup><xref ref-type="bibr" rid="CR22">22</xref>&#x02013;<xref ref-type="bibr" rid="CR24">24</xref></sup>.</p><p id="Par8">The significant advantage of the regression-based approach is its capacity to perform well on minimal datasets<sup><xref ref-type="bibr" rid="CR20">20</xref></sup>. The neural network models also have the capability to learn and adapt to complex correlation problems<sup><xref ref-type="bibr" rid="CR12">12</xref></sup>. The speed control of electric motors can be described and modelled as a regression problem. Some of the most popular ML regression methods are linear regression (LR), decision trees, random forests, support vector machines (SVM), and neural networks (NN)<sup><xref ref-type="bibr" rid="CR25">25</xref>,<xref ref-type="bibr" rid="CR26">26</xref></sup> and few of them are examined in this proposed work. Advanced neural networks or deep learning techniques such as Recurrent Neural Network (RNN), Long Short-Term Memory network (LSTM), bi-directional LSTM, and Gated Recurrent Units (GRU) are also available for regression problems<sup><xref ref-type="bibr" rid="CR24">24</xref>,<xref ref-type="bibr" rid="CR27">27</xref>,<xref ref-type="bibr" rid="CR28">28</xref></sup>, and LSTM is explored in this paper. A review of the existing literature reveals that, to date, only NN models have been investigated and tested to improve the current control of a PMSM drive. This paper attempts to study other regression techniques which are not already addressed in the existing literature, for the current control application in traction drives<sup><xref ref-type="bibr" rid="CR7">7</xref>,<xref ref-type="bibr" rid="CR14">14</xref>,<xref ref-type="bibr" rid="CR29">29</xref>,<xref ref-type="bibr" rid="CR30">30</xref></sup>.</p><p id="Par9">The main objectives of this paper are:</p><p id="Par10">1) To develop an ML-based current controller with simpler circuitry.</p><p id="Par11">2) To explore the potential of several ML regression methods to effectively manage the speed of a PMSM motor drive utilized in electric vehicles (EV).</p><p id="Par12">3) To present an alternative to the conventional controller used in the industry, from the emerging field of Artificial Intelligence.</p><p id="Par13">The novelties of this paper are as follows:</p><p id="Par14">1) This paper proposes to use ML algorithms of different complexity levels such as LR, SVM and LSTM, in addition to existing NN models. The existing literature has explored only NN models till date in speed control application of PMSM drives and we aim to find a better and less complex ML algorithm for the same.</p><p id="Par15">2) The proposed work eliminates the internal circuitry that was necessary for the conventional model to rectify the decoupling inaccuracy in the motor modelling. The proposed ML-based controllers are independent of this requirement; and outperform or at least match the performance of the conventional model. As a result, compared to the conventional model, the proposed models have less circuitry and are cost-effective.</p><p id="Par16">3) To correct decoupling inaccuracy, we propose inclusion of decoupling terms to the ML-based controller inputs; while the conventional FOC technique add them at the end of the current loop through a small inner loop. This step ensures that any unexpected changes in the motor outputs, and thereby the decoupling terms, will be reflected accurately in the ML inputs and thus the control process.</p><p id="Par17">4) With the above step, this paper finds the LR-based controller to be a promising alternative to the PI current controller in the motor drive, based on the statistical performance measures and test results. The LR-based controller outperforms the PI controller by 1.86% in performance parameters and responds 40% faster in the current response. The conventional controller is matched in performance by the SVM and NN-based controllers. LSTM-based controller was explored but found to be in need of more fine-tuning to satisfy the requirements.</p><p id="Par18">The organization of this paper is as follows: theoretical information about PMSM drives, the standard vector control mechanism, the proposed approach, and the machine learning techniques used are discussed in Section II and Section III. Section IV shows the performance analysis of the suggested models under various criteria. Section V presents the result discussions and Section VI gives the conclusion.</p></sec><sec id="Sec2"><title>Conventional methodology</title><sec id="Sec300"><title>PMSM model</title><p id="Par21">The stator voltage equations of the PMSM in the synchronously rotating coordinate system (dq-axes)<sup><xref ref-type="bibr" rid="CR11">11</xref>,<xref ref-type="bibr" rid="CR13">13</xref>,<xref ref-type="bibr" rid="CR29">29</xref>,<xref ref-type="bibr" rid="CR31">31</xref></sup> are given by<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="d33e358">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:\left(\begin{array}{c}{v}_{sd}\\\:{v}_{sq}\end{array}\right)=\left(\begin{array}{cc}{R}_{s}+{L}_{d}\frac{d}{dt}&#x00026;\:-{w}_{e}{L}_{q}\\\:{w}_{e}{L}_{d}&#x00026;\:{R}_{s}+{L}_{q}\frac{d}{dt}\end{array}\right)\left(\begin{array}{c}{i}_{d}\\\:{i}_{q}\end{array}\right)+\left(\begin{array}{c}0\\\:{w}_{e}{\psi\:}_{f}\end{array}\right)$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula></p><p id="Par22">where <italic>v</italic><sub><bold><italic>sd</italic></bold></sub>, <italic>v</italic><sub><bold><italic>sq</italic></bold></sub> are instantaneous stator voltages in dq-axes; <italic>i</italic><sub><bold><italic>dq</italic></bold></sub> are instantaneous stator currents; <italic>R</italic><sub><bold><italic>s</italic></bold></sub>, <italic>L</italic><sub><bold><italic>dq</italic></bold></sub> are the resistance and inductances of the stator winding; <italic>&#x003c9;</italic><sub><bold><italic>e</italic></bold></sub> is the motor speed; and <italic>&#x003c8;</italic><sub><bold><italic>f</italic></bold></sub> is the permanent magnet (rotor) flux linkage.</p><p id="Par23">The electrical torque developed in the PMSM drive is represented by<disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="d33e411">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:Te={J}_{eq}\frac{d{w}_{m}}{dt}+{B}_{a}{w}_{m}\:+{T}_{L}\text{}$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula></p><p id="Par24">where <italic>J</italic><sub><bold><italic>eq</italic></bold></sub>, <italic>B</italic><sub><bold><italic>a</italic></bold></sub> are the motor inertia and the coefficient of friction, respectively; <italic>&#x003c9;</italic><sub><bold><italic>m</italic></bold></sub> is the mechanical rotational speed of the motor; <italic>T</italic><sub><bold><italic>L</italic></bold></sub>, <italic>T</italic><sub><bold><italic>e</italic></bold></sub> are the load torque and the electromagnetic torque of the motor drive, respectively.<disp-formula id="Equ3"><label>3</label><alternatives><tex-math id="d33e450">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:{T}_{e}=\frac{3P}{2}\left[{\psi\:}_{f}{i}_{q}+\left({L}_{d}-{L}_{q}\right){i}_{d}{i}_{q}\right]\text{}$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula></p><p id="Par25">where <italic>P</italic> represents the pole pairs. In case of a surface PMSM motor, <italic>L</italic><sub><bold><italic>d</italic></bold></sub> = <italic>L</italic><sub><bold><italic>q</italic></bold></sub>. Hence the second term becomes zero in (3). The relation between electrical rotor angle <italic>&#x003b8;</italic><sub><bold><italic>e</italic></bold></sub>, and motor speeds <italic>&#x003c9;</italic><sub><bold><italic>m</italic></bold></sub> and <italic>&#x003c9;</italic><sub><bold><italic>e</italic></bold></sub> is given by<disp-formula id="Equ4"><label>4</label><alternatives><tex-math id="d33e492">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:{w}_{e}={w}_{m}*P\text{}$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ5"><label>5</label><alternatives><tex-math id="d33e498">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:{\theta\:}_{e}=\int\:{w}_{e}\:dt\text{}$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula></p></sec><sec id="Sec3"><title>FOC control of PMSM drive</title><p id="Par26">In this method, the current through the stator is split into flux component current and torque component current along the dq-axes. Figure&#x000a0;<xref rid="Fig1" ref-type="fig">1</xref> depicts the schematic of FOC used in the PMSM drive. The conventional FOC method employs two PI controllers in the current loop, one for d-axis current and one for q-axis current.</p><p id="Par27">By rearranging (2) and (3), the transfer function model for designing the controller in speed-loop is obtained as<disp-formula id="Equ6"><label>6</label><alternatives><tex-math id="d33e513">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:{TF}_{w}=\frac{{\psi\:}_{f}.P}{\left({\:B}_{a}+s.{J}_{eq}\right)}$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equ6.gif" position="anchor"/></alternatives></disp-formula></p><p id="Par28">The governing equations for designing the PI controllers in the current loop are provided by rearranging (1). The compensation terms (-<italic>w</italic><sub><bold><italic>e</italic></bold></sub><italic>L</italic><sub><bold><italic>q</italic></bold></sub><italic>i</italic><sub><bold><italic>q</italic></bold></sub>, <italic>w</italic><sub><bold><italic>e</italic></bold></sub><italic>L</italic><sub><bold><italic>d</italic></bold></sub><italic>i</italic><sub><bold><italic>d</italic></bold></sub>, <italic>w</italic><sub><bold><italic>e</italic></bold></sub><italic>&#x003a8;</italic><sub><bold><italic>f</italic></bold></sub>) are ignored in this step. During the control process, the stator current is decoupled into flux and torque current components using the compensation terms. They are eventually combined back to construct the final current-loop control configuration, by being added to the outputs of the d-axis and q-axis PI controllers. This prevents inaccurate results brought on by decoupling<sup><xref ref-type="bibr" rid="CR14">14</xref>,<xref ref-type="bibr" rid="CR15">15</xref>,<xref ref-type="bibr" rid="CR29">29</xref>,<xref ref-type="bibr" rid="CR32">32</xref>,<xref ref-type="bibr" rid="CR33">33</xref></sup>. In the conventional method, the gains of the PI controllers are set with the help of the Ziegler-Nicholas approach<sup><xref ref-type="bibr" rid="CR13">13</xref></sup>.<disp-formula id="Equ7"><label>7</label><alternatives><tex-math id="d33e586">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:{TF}_{id}=\frac{1}{\left({\:R}_{s}+s.{L}_{d}\:\right)}$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equ7.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ8"><label>8</label><alternatives><tex-math id="d33e592">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:{TF}_{iq}=\frac{1}{\left({\:R}_{s}+s.{L}_{q}\right)}\text{}$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equ8.gif" position="anchor"/></alternatives></disp-formula></p></sec><sec id="Sec4"><title>Machine learning algorithms</title><p id="Par29">In this work, the following machine learning algorithms have been used for the regression problem of speed control of a PMSM drive. Even though there are many algorithms available, only the ones listed below generated good-fit models for the problem under discussion.</p><p id="Par30">
<fig id="Fig1"><label>Fig. 1</label><caption><p>Vector control : Conventional approach.</p></caption><graphic xlink:href="41598_2025_2396_Fig1_HTML" id="d33e610"/></fig>
</p><sec id="Sec5"><title>Linear regression (LR)</title><p id="Par31">The linear regression method is a widely used algorithm that represents the relationship between data by drawing a straight line through the data with the least value of Mean Square Error loss<sup><xref ref-type="bibr" rid="CR25">25</xref>,<xref ref-type="bibr" rid="CR26">26</xref>,<xref ref-type="bibr" rid="CR34">34</xref>,<xref ref-type="bibr" rid="CR35">35</xref></sup>. In (9), <italic>y</italic> is the output of the LR model, <italic>x</italic><sub><bold><italic>i</italic></bold></sub> is the input; <italic>&#x003b8;</italic><sub><bold><italic>i</italic></bold></sub> is the weight of each <italic>i</italic><sup>th</sup> input, <italic>&#x003b8;</italic><sub><bold><italic>0</italic></bold></sub> is the bias; and <italic>N</italic> is the total number of features in the dataset<sup><xref ref-type="bibr" rid="CR20">20</xref></sup>.<disp-formula id="Equ9"><label>9</label><alternatives><tex-math id="d33e662">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:y={\theta\:}_{0}+{\sum\:}_{i=1}^{N}{\theta\:}_{i}{x}_{i}\text{}$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equ9.gif" position="anchor"/></alternatives></disp-formula></p></sec><sec id="Sec6"><title>Support vector machine regression (SVM)</title><p id="Par32">The kernel approach of SVM regression maps the independent variables onto a feature space of higher dimension. With this approach, less computing is needed and the dimensionality of the incoming data is irrelevant. The SVM regression method aims to reduce generalization error rather than training error minimization<sup><xref ref-type="bibr" rid="CR20">20</xref>,<xref ref-type="bibr" rid="CR34">34</xref>&#x02013;<xref ref-type="bibr" rid="CR36">36</xref></sup>.</p><p id="Par33">Equation&#x000a0;(<xref rid="Equ10" ref-type="disp-formula">10</xref>) is used to apply SVM regression for a dataset that is linearly separable, and (11) is utilized for a dataset that is non-linearly separable<sup><xref ref-type="bibr" rid="CR25">25</xref></sup>. For inputs <italic>x</italic><sub><bold><italic>i</italic></bold></sub>, contraction coefficient <italic>&#x003b1;</italic><sub><bold><italic>i</italic></bold></sub>, and bias <italic>b</italic>, the output <italic>y</italic> is given by<disp-formula id="Equ10"><label>10</label><alternatives><tex-math id="d33e710">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:y={\sum\:}_{i=1}^{N}\left({\alpha\:}_{i}-{\alpha\:}_{i}^{*}\right).&#x02329;{x}_{i},x&#x0232a;+b$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equ10.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ11"><label>11</label><alternatives><tex-math id="d33e716">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:y={\sum\:}_{i=1}^{N}\left({\alpha\:}_{i}-{\alpha\:}_{i}^{*}\right).K\left({x}_{i},x\right)+b$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equ11.gif" position="anchor"/></alternatives></disp-formula></p><p id="Par34">where <italic>K(x</italic>,<italic> y)</italic> is the kernel function. For linear kernel function,<disp-formula id="Equ12"><label>12</label><alternatives><tex-math id="d33e730">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:K\left(x,y\right)={x}^{{\prime\:}}y$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equ12.gif" position="anchor"/></alternatives></disp-formula></p></sec><sec id="Sec7"><title>Feedforward neural network (NN)</title><p id="Par35">A feedforward neural network (NN) is a type of artificial neural network that only allows information to flow from the input to the output. The artificial neurons of neural networks are modeled after biological brains, and structured into three levels: input, output, and hidden layers between the two. The number of hidden layers decides the depth of the network. Each layer has a bias, while each connection between neurons is represented by a weight<sup><xref ref-type="bibr" rid="CR25">25</xref>,<xref ref-type="bibr" rid="CR26">26</xref>,<xref ref-type="bibr" rid="CR35">35</xref>&#x02013;<xref ref-type="bibr" rid="CR38">38</xref></sup>.</p><p id="Par36">Figure&#x000a0;<xref rid="Fig2" ref-type="fig">2</xref> shows the architecture of a NN model with two inputs and one output, and a single hidden layer with three neurons. Here <italic>x</italic><sub><bold><italic>1</italic></bold></sub>, <italic>x</italic><sub><bold><italic>2</italic></bold></sub> are the inputs and <italic>y</italic> is the output. As seen in Fig.&#x000a0;<xref rid="Fig3" ref-type="fig">3</xref>, the output of an artificial neuron is a function <italic>f</italic> of the sum of bias <italic>b</italic> and all the weights (<italic>w</italic><sub><bold><italic>1</italic></bold></sub> to <italic>w</italic><sub><bold><italic>n</italic></bold></sub>) from inputs (<italic>x</italic><sub><bold><italic>1</italic></bold></sub> to <italic>x</italic><sub><bold><italic>n</italic></bold></sub>)<sup><xref ref-type="bibr" rid="CR19">19</xref>&#x02013;<xref ref-type="bibr" rid="CR21">21</xref></sup>. Activation function <italic>f</italic>, given by (13), is used for normalizing the output of a neuron.<disp-formula id="Equ13"><label>13</label><alternatives><tex-math id="d33e818">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:y\:=\:\:f\left(b+{\sum\:}_{i=1}^{n}{x}_{i}{w}_{i}\right)$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equ13.gif" position="anchor"/></alternatives></disp-formula></p><p id="Par37">
<fig id="Fig2"><label>Fig. 2</label><caption><p>NN architecture.</p></caption><graphic xlink:href="41598_2025_2396_Fig2_HTML" id="d33e832"/></fig>
</p><p id="Par38">
<fig id="Fig3"><label>Fig. 3</label><caption><p>Layout of an artificial neuron.</p></caption><graphic xlink:href="41598_2025_2396_Fig3_HTML" id="d33e842"/></fig>
</p></sec><sec id="Sec8"><title>Long short-term memory network (LSTM)</title><p id="Par39">LSTM is a variation of Recurrent Neural Network (RNN), a commonly used Deep Learning (DL) / advanced NN method for regression or forecasting purposes. One main difference between Feedforward NN and RNN is the presence of feedback loops in the latter, which helps in remembering previous information.</p><p id="Par40">Figure&#x000a0;4(a) gives the LSTM network architecture. The standard architecture includes input, hidden (consisting of LSTM and fully connected layers) and output layers. The LSTM layer is made up of a number of LSTM units connected in sequence. Figure&#x000a0;4(b) shows the layout of a LSTM unit.</p><p id="Par41">The main components of a LSTM unit are the memory cells and the three gates (forget, input, output gates). The memory cell stores the cell state from previous time step, <italic>C</italic><sub><bold><italic>t&#x02212;1</italic></bold></sub>. The forget gate <italic>f</italic><sub><bold><italic>t</italic></bold></sub> decides how much information should be maintained and deleted. The input gate <italic>i</italic><sub><bold><italic>t</italic></bold></sub> decides which portion of the new information should be updated in the memory cell. The output gate <italic>o</italic><sub><bold><italic>t</italic></bold></sub> controls the information going out of the memory cell. Here, <italic>X</italic><sub><bold><italic>t</italic></bold></sub> is the input to the LSTM unit, <italic>h</italic><sub><bold><italic>t</italic></bold></sub> is the output of LSTM cell; <italic>C</italic><sub><bold><italic>t</italic></bold></sub> is the current cell state and <italic>&#x0010c;</italic><sub><bold><italic>t</italic></bold></sub> is the new value to be added to the cell. The LSTM unit is mathematically expressed by (14)-(19)<sup><xref ref-type="bibr" rid="CR25">25</xref>&#x02013;<xref ref-type="bibr" rid="CR28">28</xref>,<xref ref-type="bibr" rid="CR39">39</xref></sup>.<disp-formula id="Equa"><label>14</label><alternatives><tex-math id="d33e912">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:{f}_{t}=\sigma\:\left({W}_{f}\cdot\:\left[{h}_{t-1},{X}_{t}\right]+{b}_{f}\right)$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equa.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equb"><label>15</label><alternatives><tex-math id="d33e918">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:{i}_{t}=\sigma\:\left({W}_{i}\cdot\:\left[{h}_{t-1},{X}_{t}\right]+{b}_{i}\right)$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equb.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equc"><label>16</label><alternatives><tex-math id="d33e924">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:\stackrel{&#x002c7;}{{C}_{t}}=tanh\left({W}_{c}\cdot\:\left[{h}_{t-1},{X}_{t}\right]+{b}_{c}\right)$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equc.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equd"><label>17</label><alternatives><tex-math id="d33e930">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:{o}_{t}=\sigma\:\left({W}_{o}\cdot\:\left[{h}_{t-1},{X}_{t}\right]+{b}_{o}\right)$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equd.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Eque"><label>18</label><alternatives><tex-math id="d33e936">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:{C}_{t}={f}_{t}*{C}_{t-1}+{i}_{t}*\stackrel{&#x002c7;}{{C}_{t}}$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Eque.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equf"><label>19</label><alternatives><tex-math id="d33e942">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:{h}_{t}={o}_{t}*tanh\left({C}_{t}\right)$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equf.gif" position="anchor"/></alternatives></disp-formula></p><p id="Par46">
<fig id="Fig4"><label>Fig. 4</label><caption><p><bold>(a)</bold> LSTM architecture <bold>(b)</bold> Layout of LSTM unit.</p></caption><graphic xlink:href="41598_2025_2396_Fig4_HTML" id="d33e962"/></fig>
</p></sec></sec></sec><sec id="Sec9"><title>Proposed methodology</title><sec id="Sec10"><title>Control approach using ML</title><p id="Par47">The proposed ML-based vector control for the PMSM drive is shown in Fig.&#x000a0;<xref rid="Fig4" ref-type="fig">5</xref>. The proposed approach uses an ML-based controller instead of a PI-based current controller. The speed controller in the outer loop remains the same as in the conventional approach<sup><xref ref-type="bibr" rid="CR13">13</xref>,<xref ref-type="bibr" rid="CR29">29</xref></sup>.</p><p id="Par48">The stages of designing the proposed controller are as follows: (i) dynamic modeling (ii) ML model which is a modified version of the conventional controller approach (iii) training and testing of the ML-based controller<sup><xref ref-type="bibr" rid="CR29">29</xref></sup>. Figure&#x000a0;<xref rid="Fig5" ref-type="fig">6</xref> shows the training and testing environment for ML models.</p></sec><sec id="Sec11"><title>Training process</title><p id="Par49">The Deep Learning Toolbox&#x02122; of MATLAB is used for training and testing the ML models. The PMSM drive is operated under rated conditions with the conventional PI controller with speed variations and disturbances in load to generate a training dataset of 600,000 samples. The test dataset includes a small subset of the training data as well as new independent samples, the sample size ranging from 50,000 to 200,000.</p><p id="Par50">
<fig id="Fig5"><label>Fig. 5</label><caption><p>Proposed ML-based control technique.</p></caption><graphic xlink:href="41598_2025_2396_Fig5_HTML" id="d33e1001"/></fig>
</p><p id="Par51">Figure&#x000a0;<xref rid="Fig6" ref-type="fig">7</xref> shows the layout of the proposed ML models. The current error values, their integrals, and the compensation terms are given as input to the ML block. As LR and SVM are single-output networks, two models are required for estimating the reference voltages in the d-axis and q-axis separately. As NN and LSTM are multi-output networks, a single model takes in all the inputs and generate the two reference voltages.</p><p id="Par52">The LR and SVM blocks were developed in MATLAB/Simulink using the equations discussed in Section II &#x02013; subsection C. The weights and bias values required for the modelling were obtained from the LR and SVM models developed in MATLAB Coder during training process. The layout of LR and SVM models in Simulink is given by Fig.&#x000a0;<xref rid="Fig7" ref-type="fig">8</xref>. LSTM model was developed and validated in MATLAB Coder.</p><p id="Par53">
<fig id="Fig6"><label>Fig. 6</label><caption><p>Framework of proposed ML model.</p></caption><graphic xlink:href="41598_2025_2396_Fig6_HTML" id="d33e1021"/></fig>
</p><p id="Par54">
<fig id="Fig7"><label>Fig. 7</label><caption><p>Proposed ML model layout.</p></caption><graphic xlink:href="41598_2025_2396_Fig7_HTML" id="d33e1031"/></fig>
</p></sec><sec id="Sec12"><title>Dataset</title><p id="Par55">The dataset consists of 6 input variables and 2 output variables, which are displayed in Fig.&#x000a0;<xref rid="Fig6" ref-type="fig">7</xref>. The differences between the desired values of the dq-axis currents and their actual values obtained from the feedback current signals (error values <italic>e</italic><sub><bold><italic>d</italic></bold></sub>, <italic>e</italic><sub><bold><italic>q</italic></bold></sub>) form one set of the inputs. Their integrated values (<italic>s</italic><sub><bold><italic>d</italic></bold></sub>, <italic>s</italic><sub><bold><italic>q</italic></bold></sub>) are the next set of inputs. The compensation or decoupling terms (<italic>d_decoup</italic>,<italic> q_decoup</italic>) are calculated using the actual dq-axis currents and taken in as the last set of inputs. The output variables are dq-axis reference voltages (<italic>v</italic><sub><bold><italic>d</italic></bold></sub><sup><bold><italic>*</italic></bold></sup>, <italic>v</italic><sub><bold><italic>q</italic></bold></sub><sup><bold><italic>*</italic></bold></sup>), which are used in the inverter pulse generation process. The relation between these input and output variables are described in detail in Section II.<disp-formula id="Equ14"><label>20</label><alternatives><tex-math id="d33e1090">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:{s}_{d}=\int\:{e}_{d}\:dt\text{}$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equ14.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ15"><label>21</label><alternatives><tex-math id="d33e1096">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:{s}_{q}=\int\:{e}_{q}\:dt\text{}$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equ15.gif" position="anchor"/></alternatives></disp-formula></p><p id="Par56">As single-output models, linear regression and support vector machine regression require two distinct models for each of the two outputs. The d-axis input variables are given to one LR/SVM model and d-axis reference voltage is obtained. Similarly, the q-axis input variables are given to a second LR/SVM model and q-axis reference voltage is obtained (Fig.&#x000a0;<xref rid="Fig6" ref-type="fig">7</xref>(a)).</p><p id="Par57">Since NN/LSTM model can have multiple outputs, only one NN/LSTM model is needed to produce the two output variables. All the 6 input variables are given into the NN and LSTM-based controllers and the two dq-axis reference voltages are obtained (Fig.&#x000a0;<xref rid="Fig6" ref-type="fig">7</xref>(b)).</p><p id="Par58">By using error values and their integrated values, the aim is to prepare an ML-based model that mimics the PI controller, but in a better way. The difference is in how the compensation terms are placed. The PI controller ignores these terms and they must be added externally to the controller outputs, to avoid decoupling inaccuracy in the motor drive. The proposed ML-based models avoid this external addition process by including the decoupling terms in the initial stage itself. The complexity of the control algorithm can be reduced using this approach. The trained ML controller can simply replace the PI current controllers and the feedback of the decoupling terms, in a PMSM drive.</p></sec><sec id="Sec13"><title>Training and testing data</title><p id="Par59">The training data as well as the testing data are obtained from the simulated model of a PI-controller-driven PMSM drive. The error values and the compensation or decoupling terms (4 of the input variables) are extracted directly from the model while the integrated values of the errors (2 of the input variables) are calculated separately during the data collection process. In the process of gathering the training and testing dataset, the two output variables are taken out of the data point where the compensation terms are applied.</p><p id="Par60">The motor drive is run through rated conditions, variable speeds, and load disturbances, which generates a dataset of 600,000 samples for training purposes. Different test datasets are used for each test situation (variable speed, variable load, constant load and speed, etc.) and all test sets are extracted in the same way the training data is collected. Each test dataset includes a subset of the training data as well as new independent samples, the test sample size hence ranging from 50,000 to 200,000.</p><p id="Par61">The same datasets are used for training and testing all the ML-based models. The data normalization is done by setting the training command accordingly in the MATLAB Coder. Each ML algorithm is prepared for training as mentioned in subsections E to G. Table&#x000a0;<xref rid="Tab1" ref-type="table">1</xref> gives the tuned parameters for each ML model. After offline training for &#x0201c;sequence-to-sequence&#x0201d; regression, a test dataset is used to independently evaluate the ML-based controllers. Following this validation, the trained ML-based controllers are incorporated into the motor drive model, enabling online implementation for real-time system operation.</p></sec><sec id="Sec14"><title>Development of LR-based model</title><p id="Par62">The function <italic>fitrlinear</italic> is used for training the LR regression model in MATLAB. The parameters configured in the training process are <italic>Learner</italic>, <italic>Solver</italic>, <italic>Regularization</italic>, and <italic>Lambda</italic>.</p><p id="Par63">The <italic>Learner</italic> is a linear regression model type that can be set as Linear regression via ordinary least squares (leastsquares), or Support vector machine regression (svm). The <italic>Solver</italic> or objective function minimization technique can be Stochastic gradient descent (SGD), Average stochastic gradient descent (ASGD), Dual SGD, Broyden-Fletcher-Goldfarb-Shanno quasi-Newton algorithm (BFGS), Limited-memory BFGS (LBFGS), or Sparse Reconstruction by Separable Approximation (SpaRSA) method. <italic>Regularization</italic> or complexity penalty type can be set as Lasso or Ridge. <italic>Lambda</italic> is also known as the Regularization term strength and is calculated as the inverse of the training sample size.</p><p id="Par64">After experimenting with different combinations for Learner-Solver-Regularization, the optimum combination is found to be a combination of SpaRSA and LBFGS solvers, least squares learner, lasso and ridge regularizations.</p></sec><sec id="Sec15"><title>Development of SVM-based model</title><p id="Par65">SVM regression models are trained using the function <italic>fitrsvm</italic> in MATLAB. Some of the important parameters for SVM model training are <italic>Solver</italic>,<italic> Kernel function</italic>, and <italic>Kernel scale</italic>.</p><p id="Par66">The <italic>Kernel function</italic> can be a Gaussian, Linear, Radial Basis Function (RBF) or Polynomial. The value of the <italic>Kernel scale</italic> is set to 1, or &#x02018;auto&#x02019;. In the latter case, the software uses a subsampling procedure to select the value. The <italic>Solver</italic> is the optimization routine. It can be Iterative Single Data Algorithm (ISDA), Sequential Minimal Optimization (SMO), or L1 Quadratic Programming (L1QP).</p><p id="Par67">Different combinations for the above parameters are iterated and the SMO is selected as &#x02018;Solver&#x02019;. The linear kernel function of scale 1 is found to be optimal.</p></sec><sec id="Sec16"><title>Development of NN-based model</title><p id="Par68">To train a simple neural network in MATLAB, the <italic>train</italic> function is used with the following parameters specified:</p><p id="Par69">
<list list-type="bullet"><list-item><p id="Par70"><italic>Number of hidden layers</italic> and <italic>Size of each hidden layer</italic>,</p></list-item><list-item><p id="Par71"><italic>Activation function</italic> of each layer,</p></list-item><list-item><p id="Par72"><italic>Training algorithm</italic>.</p></list-item></list>
</p><p id="Par73">A trial-and-error method is followed to select the <italic>number</italic> and <italic>size</italic> of the hidden layers, starting from the minimum values. A satisfactory result was obtained at 1 hidden layer, with 2 neurons.</p><p id="Par74">Hyperbolic tangent sigmoid transfer function and linear function, respectively, work as the hidden layer and output layer <italic>activation functions</italic>.</p><p id="Par75">Levenberg-Marquardt, Bayesian Regulation, Gradient descent, and Resilient back propagation (RPROP) algorithms are some of the <italic>training algorithms</italic> for neural networks in MATLAB, among which the Levenberg-Marquardt algorithm is the fastest and most popular.</p></sec><sec id="Sec201"><title>Development of LSTM-based model</title><p id="Par76">The LSTM model developed in MATLAB has the following training parameters specified:</p><p id="Par77">
<list list-type="bullet"><list-item><p id="Par78"><italic>Number of hidden units</italic>,</p></list-item><list-item><p id="Par79"><italic>Types of layers</italic>,</p></list-item><list-item><p id="Par80"><italic>Gradient threshold</italic>.</p></list-item></list>
</p><p id="Par81">The layers are defined in the following order: input sequence layer, lstm layer, fully connected layers and output regression layer. The solver is set to &#x02018;adam&#x02019; (Adam optimizer), with an initial learning rate of 0.01, a gradient threshold of infinity with the clipping method &#x02018;global-l2norm&#x02019;. A trial-and-error method is followed to select the number hidden units in the lstm layer, and the number of fully-connected layers. Based on the capacity of the work station used, they were finalized to 90 and 2, respectively.</p><p id="Par82">
<table-wrap id="Tab1"><label>Table 1</label><caption><p>Hyperparameter settings for<sc> ML</sc> models.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">ML model</th><th align="left"><sc>H</sc>yperparameter</th><th align="left">Selection</th></tr></thead><tbody><tr><td align="left" rowspan="4">LR</td><td align="left">Learner</td><td align="left">Leastsquares</td></tr><tr><td align="left">Solver</td><td align="left">SparSA&#x02009;+&#x02009;LBFGS</td></tr><tr><td align="left">Regularization</td><td align="left">lasso&#x02009;+&#x02009;ridge</td></tr><tr><td align="left">Lambda</td><td align="left">1 / (Training sample size)</td></tr><tr><td align="left" rowspan="3">SVM</td><td align="left">Kernel function</td><td align="left">Linear</td></tr><tr><td align="left">Kernel scale</td><td align="left">1</td></tr><tr><td align="left">Solver</td><td align="left">SMO</td></tr><tr><td align="left" rowspan="4">NN</td><td align="left">No. of hidden layers</td><td align="left">1</td></tr><tr><td align="left">Size of hidden layers</td><td align="left">2</td></tr><tr><td align="left">Activation function</td><td align="left"><p>Sigmoid function (hidden layer),</p><p>linear function (output layer)</p></td></tr><tr><td align="left">Training algorithm</td><td align="left">Levenberg-Marquardt algorithm</td></tr><tr><td align="left" rowspan="4">LSTM</td><td align="left">No. of hidden units</td><td align="left">90</td></tr><tr><td align="left">No. of fully connected layers</td><td align="left">2</td></tr><tr><td align="left">Solver</td><td align="left">adam</td></tr><tr><td align="left">Gradient Threshold method</td><td align="left">global-l2norm</td></tr></tbody></table></table-wrap>
</p></sec><sec id="Sec18"><title>Evaluation metrics</title><p id="Par83">Mean absolute error (MAE), root mean square error (RMSE), and symmetric mean absolute percentage error (SMAPE) are the metrics used to assess the performance of the trained ML algorithms. These are typical statistical measures for evaluating the effectiveness of time-series based models<sup><xref ref-type="bibr" rid="CR27">27</xref>,<xref ref-type="bibr" rid="CR28">28</xref>,<xref ref-type="bibr" rid="CR39">39</xref>&#x02013;<xref ref-type="bibr" rid="CR46">46</xref></sup>.<disp-formula id="Equ16"><label>22</label><alternatives><tex-math id="d33e1391">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:MAE=\frac{1}{N}{\sum\:}_{i=1}^{N}\left|\left({\stackrel{-}{y}}_{i}-{y}_{i}\right)\right|$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equ16.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ17"><label>23</label><alternatives><tex-math id="d33e1397">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:RMSE=\:\sqrt{\frac{1}{N}{\sum\:}_{i=1}^{N}{\left({\stackrel{-}{y}}_{i}-{y}_{i}\right)}^{2}}$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equ17.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ18"><label>24</label><alternatives><tex-math id="d33e1403">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\:SMAPE=\frac{100\%}{N}{\sum\:}_{i=1}^{N}\frac{\left|\left(\stackrel{-}{{y}_{i}}-{y}_{i}\right)\right|}{\left(\left|\stackrel{-}{{y}_{i}}\right|+\left|{y}_{i}\right|\right)/2}$$\end{document}</tex-math><graphic xlink:href="41598_2025_2396_Article_Equ18.gif" position="anchor"/></alternatives></disp-formula></p><p id="Par84">where <italic>N</italic> is the test sample size; <italic>&#x00233;</italic><sub><bold><italic>i</italic></bold></sub> is the estimated value and <italic>y</italic><sub><bold><italic>i</italic></bold></sub> is the actual value.</p></sec></sec><sec id="Sec19"><title>Performance evaluation of controllers</title><p id="Par85">The conventional model of the speed control system is developed using a MATLAB/Simulink environment to generate the training data. The sampling time is fixed at 1 &#x000b5;sec. The performance comparison of the conventional and proposed methods is conducted using MATLAB Coder. Table&#x000a0;<xref rid="Tab2" ref-type="table">2</xref> gives the PMSM drive parameters<sup><xref ref-type="bibr" rid="CR9">9</xref>,<xref ref-type="bibr" rid="CR13">13</xref></sup>. The testing of the trained ML models is detailed in subsections A to E<sup><xref ref-type="bibr" rid="CR9">9</xref>,<xref ref-type="bibr" rid="CR13">13</xref>,<xref ref-type="bibr" rid="CR29">29</xref></sup>.</p><p id="Par86">
<table-wrap id="Tab2"><label>Table 2</label><caption><p><sc>M</sc>otor parameters for simulation.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Parameter</th><th align="left">
<sc>Value</sc>
</th></tr></thead><tbody><tr><td align="left">Resistance (R)</td><td align="left">2.85 &#x02126;</td></tr><tr><td align="left">Stator inductances (L<sub>d</sub>, L<sub>q</sub>)</td><td align="left">0.005&#x000a0;H</td></tr><tr><td align="left">Coefficient of friction (B<sub>a</sub>)</td><td align="left">1.0 e-4 Nm-s</td></tr><tr><td align="left">Motor inertia (J<sub>eq</sub>)</td><td align="left">8.0 e-4&#x000a0;kg-m<sup>2</sup></td></tr><tr><td align="left">Pole pairs (P)</td><td align="left">4</td></tr><tr><td align="left">Rotor flux linkage (&#x003a8;<sub>f</sub>)</td><td align="left">0.1548&#x000a0;Wb-turms</td></tr><tr><td align="left">Rated speed (&#x003c9;<sub>m</sub>)</td><td align="left">300&#x000a0;rad/s</td></tr></tbody></table></table-wrap>
</p><p id="Par87">
<fig id="Fig8"><label>Fig. 8</label><caption><p>LR/SVM model layout in Simulink.</p></caption><graphic xlink:href="41598_2025_2396_Fig8_HTML" id="d33e1537"/></fig>
</p><sec id="Sec20"><title>Current control evaluation</title><p id="Par88">The d- and q-axis currents are studied for the evaluation of current-loop controllers while keeping a constant speed (300&#x000a0;rad/s) and a constant load torque (5&#x000a0;N.m) for the motor<sup><xref ref-type="bibr" rid="CR9">9</xref>,<xref ref-type="bibr" rid="CR13">13</xref></sup>. The reference voltage outputs of the proposed ML models are compared to the conventional PI controller outputs in Fig.&#x000a0;<xref rid="Fig8" ref-type="fig">9</xref>. The proposed ML-based controllers exhibit reduced transient peaks in the outputs of the controller. The LR-based controller has the least maximum transient peak value for d-axis reference voltage and settles faster than the other controllers. The q-axis reference voltage waveforms of all controllers, except the LR-based controller, settle similarly to those of the PI controller.</p><p id="Par89">The performance of the conventional and ML-based controllers under rated conditions are given in Figs.&#x000a0;<xref rid="Fig9" ref-type="fig">10</xref>, <xref rid="Fig10" ref-type="fig">11</xref>, <xref rid="Fig11" ref-type="fig">12</xref> and <xref rid="Fig12" ref-type="fig">13</xref>. The speed response of the PI controller, as depicted in Fig.&#x000a0;<xref rid="Fig9" ref-type="fig">10</xref>, achieves the desired speed with a settling time of 0.018s and a peak overshoot of 1.15%. In contrast, the LR-based controller exhibits a 1.138% peak overshoot, the SVM-based controller has a 1.147% peak overshoot, and the NN-based controller has a 1.149% peak overshoot for the same settling time. The LSTM-based controller has a 1.189% peak overshoot with 0.0325s as settling time (Table&#x000a0;<xref rid="Tab3" ref-type="table">3</xref>).</p><p id="Par90">
<fig id="Fig9"><label>Fig. 9</label><caption><p>ML-based vs. conventional controller outputs : dq-axis reference voltages <bold>(a)</bold>
<bold><italic>v</italic></bold><sub><bold><italic>sd-ref</italic></bold></sub>
<bold>(b)</bold>
<italic>v</italic><sub><italic>sq-ref</italic></sub>.</p></caption><graphic xlink:href="41598_2025_2396_Fig9_HTML" id="d33e1601"/></fig>
</p><p id="Par91">
<fig id="Fig10"><label>Fig. 10</label><caption><p>ML-based vs. conventional controllers: speed response of the drive.</p></caption><graphic xlink:href="41598_2025_2396_Fig10_HTML" id="d33e1611"/></fig>
</p><p id="Par92">
<table-wrap id="Tab3"><label>Table 3</label><caption><p>Comparison of speed response under rated conditions (Fig.&#x000a0;<xref rid="Fig9" ref-type="fig">10</xref>).</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Description</th><th align="left">
<sc>PI</sc>
</th><th align="left">
<sc>LR</sc>
</th><th align="left">
<sc>SVM</sc>
</th><th align="left">
<sc>NN</sc>
</th><th align="left">
<sc>LSTM</sc>
</th></tr></thead><tbody><tr><td align="left">Peak overshoot (%)</td><td char="." align="char">1.15</td><td char="." align="char">1.138</td><td char="." align="char">1.147</td><td char="." align="char">1.149</td><td char="." align="char">1.189</td></tr><tr><td align="left">Settling time (s)</td><td char="." align="char">0.018</td><td char="." align="char">0.018</td><td char="." align="char">0.018</td><td char="." align="char">0.018</td><td char="." align="char">0.0325</td></tr></tbody></table></table-wrap>
</p><p id="Par93">For PI controller and LR, SVM, NN-based controllers, a maximum torque of 97 Nm is attained during the transient state and then settles to the rated value (5&#x000a0;N.m) at 0.018s. The LSTM-based controller reaches 75 Nm during transient state and settles to 5 Nm at 0.0325s. The torque response is shown in Fig.&#x000a0;<xref rid="Fig10" ref-type="fig">11</xref>.</p><p id="Par94">The current responses for the conventional controller and ML-based controller are shown in Fig.&#x000a0;<xref rid="Fig11" ref-type="fig">12</xref>. The rated current is achieved at 0.011s with the LR-based controller, at 0.035s with LSTM-based controller, and at 0.018s with the other controllers. The transient state peak value of the LR-based controller is 86&#x000a0;A, 70&#x000a0;A for LSTM-based controller and 90&#x000a0;A for the other controllers.</p><p id="Par95">Total Harmonic Distortion (THD) of one phase of the motor currents, for the PI controller and proposed controllers (LR, SVM, NN), were obtained by Fast Fourier Transform (FFT) analysis and are shown in Fig.&#x000a0;<xref rid="Fig12" ref-type="fig">13</xref><sup><xref ref-type="bibr" rid="CR47">47</xref></sup>. The proposed controllers give the same THD of 9.6% as the conventional controller at the steady-state conditions.</p><p id="Par96">
<fig id="Fig11"><label>Fig. 11</label><caption><p>ML-based vs. conventional controllers: Torque response of the drive.</p></caption><graphic xlink:href="41598_2025_2396_Fig11_HTML" id="d33e1719"/></fig>
</p><p id="Par97">
<fig id="Fig12"><label>Fig. 12</label><caption><p>ML-based vs. conventional controllers: 3-phase motor current response.</p></caption><graphic xlink:href="41598_2025_2396_Fig12_HTML" id="d33e1729"/></fig>
</p><p id="Par98">
<fig id="Fig13"><label>Fig. 13</label><caption><p>ML-based vs. conventional controllers: THD analysis of the current responses.</p></caption><graphic xlink:href="41598_2025_2396_Fig13_HTML" id="d33e1740"/></fig>
</p><p id="Par99">
<table-wrap id="Tab4"><label>Table 4</label><caption><p>Comparison of current control performance (Fig.&#x000a0;<xref rid="Fig14" ref-type="fig">14</xref>).</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Settling time (s)</th><th align="left">
<sc>PI</sc>
</th><th align="left">
<sc>LR</sc>
</th><th align="left">
<sc>SVM</sc>
</th><th align="left">
<sc>NN</sc>
</th><th align="left">
<sc>LSTM</sc>
</th></tr></thead><tbody><tr><td align="left">For Id</td><td char="." align="char">0.0085</td><td char="." align="char">0.02</td><td align="left">0. 0085</td><td char="." align="char">0.0085</td><td char="." align="char">0.034</td></tr><tr><td align="left">For Iq</td><td char="." align="char">0.018</td><td char="." align="char">0. 018</td><td align="left">0. 018</td><td char="." align="char">0. 018</td><td char="." align="char">0.033</td></tr></tbody></table></table-wrap>
</p><p id="Par100">
<fig id="Fig14"><label>Fig. 14</label><caption><p>Conventional vs ML-based controllers : dq-axis currents (i<sub>d</sub>, i<sub>q</sub>) of PMSM drive.</p></caption><graphic xlink:href="41598_2025_2396_Fig14_HTML" id="d33e1835"/></fig>
</p><p>Fig. <xref rid="Fig14" ref-type="fig">14</xref> gives a comparison of the dq-axis currents of the conventional and proposed models. At 0.0085s, the d-axis current of a PI controller settles to 0&#x000a0;A, while the q-axis current settles to 5&#x000a0;A, at 0.018s. The SVM-based and NN-based controllers reach the same current values at the same time as the PI controller. The LR-based controller takes 0.02s for the d-axis current to settle at -3&#x000a0;A and 0.018s for the settling of the q-axis current at 5&#x000a0;A. For LSTM-based controller, the dq-axis currents settle at 0.034s and 0.033s respectively (Table&#x000a0;<xref rid="Tab4" ref-type="table">4</xref>).</p><p id="Par101">
<fig id="Fig15"><label>Fig. 15</label><caption><p>ML-based vs. conventional controllers: Speed response for speed variations.</p></caption><graphic xlink:href="41598_2025_2396_Fig15_HTML" id="d33e1853"/></fig>
</p><p id="Par103">
<fig id="Fig16"><label>Fig. 16</label><caption><p>ML-based vs. conventional controllers: Torque response for speed variations.</p></caption><graphic xlink:href="41598_2025_2396_Fig16_HTML" id="d33e1863"/></fig>
</p></sec><sec id="Sec21"><title>Speed control evaluation</title><p id="Par104">To evaluate the effectiveness of the controllers, speed tracking of the PMSM is carried out. The desired speed values are set as 30&#x02013;150&#x02013;300&#x02013;375&#x000a0;rad/s, applied at the time intervals of 0&#x02013;0.05&#x02013;0.1&#x02013;0.15&#x000a0;s, respectively. Figure&#x000a0;<xref rid="Fig15" ref-type="fig">15</xref> gives a comparison of speed responses of all the controllers.</p><p id="Par105">Up to 150&#x000a0;rad/s (50% of rated speed), the PI controller and the LR, SVM and NN-based controllers respond similarly, though the LR-based controller has a slightly higher transient speed peak. LSTM-based controller has speed overshoot compared to other controllers.</p><p id="Par106">Above 150&#x000a0;rad/s (above 50% and up to 125% of rated speed), the responses of the PI controller and the LR, SVM and NN-based controllers are similar. The LR-based controller has the least transient peak at higher speeds. Above rated speed, LSTM-based controller has the highest transient peak and needs more settling time.</p><p id="Par107">As seen from Fig.&#x000a0;16 to <xref rid="Fig16" ref-type="fig">17</xref>, the motor 3-phase currents and torque change at the same instant as the speed changes. The LSTM model has the least transient peak for torque response at speeds above 10% of the rated speed (&#x0003c;&#x02009;30&#x000a0;rad/s). The LR model has the least transient peak for torque response at low speeds (30&#x000a0;rad/s), and the maximum transient peak in torque response at speeds above half the rated speed (&#x0003e;&#x02009;150&#x000a0;rad/s). The current responses of all the controllers are similar to those of the conventional model.</p></sec><sec id="Sec22"><title>Impact of load disturbance</title><p id="Par108">The motor is started at no load and at time step of 0.05s, load of 2.5 Nm is applied. The load is increased by another 2.5 Nm at a time step of 0.07s. Figures&#x000a0;<xref rid="Fig17" ref-type="fig">18</xref> and <xref rid="Fig18" ref-type="fig">19</xref> provides a comparative performance of the torque and speed responses using both PI and ML-based controllers. The machine parameters are same as in Table&#x000a0;<xref rid="Tab2" ref-type="table">2</xref>, except for the load. Figure&#x000a0;<xref rid="Fig17" ref-type="fig">18</xref> demonstrates how the torque responses of drives with ML-based and PI controllers reflect the added load. Figure&#x000a0;<xref rid="Fig18" ref-type="fig">19</xref> illustrates how speed decreases when a load is applied, yet speed is rapidly recovered by the controllers.</p><p id="Par109">
<fig id="Fig17"><label>Fig. 17</label><caption><p>Conventional vs ML-based controllers : Current response for change in speed.</p></caption><graphic xlink:href="41598_2025_2396_Fig17_HTML" id="d33e1908"/></fig>
</p><p id="Par110">
<fig id="Fig18"><label>Fig. 18</label><caption><p>ML-based vs. conventional controllers: Torque response for load variations.</p></caption><graphic xlink:href="41598_2025_2396_Fig18_HTML" id="d33e1918"/></fig>
</p><p id="Par111">
<fig id="Fig19"><label>Fig. 19</label><caption><p>ML-based vs. conventional controllers: Speed response for load variations.</p></caption><graphic xlink:href="41598_2025_2396_Fig19_HTML" id="d33e1928"/></fig>
</p></sec><sec id="Sec23"><title>Robustness of speed loop controller</title><p id="Par112">In real-world situations, the motor inertia and friction factor can alter depending on the load on the EV and the state of the road. The output of the speed loop controller will be affected by this situation. As a case study, twice the friction factor and triple the inertia are considered, while the other conditions are the same as in Table&#x000a0;<xref rid="Tab2" ref-type="table">2</xref>. Figure&#x000a0;<xref rid="Fig19" ref-type="fig">20</xref> gives a comparison of the speed responses of the conventional and the ML-based vector-control approaches.</p><p id="Par113">In comparison to Fig.&#x000a0;<xref rid="Fig9" ref-type="fig">10</xref>, the speed responses of all the controllers, except LSTM-based controller, reach the rated speed at 0.05s. This is because of the higher inertia and friction factors. The LR-based controller has more transient peak in speed response compared to the other controllers, while the SVM-based controller has the least transient peak. The LSTM-based controller failed to settle within the same range as the other controllers.</p><p id="Par114">
<table-wrap id="Tab5"><label>Table 5</label><caption><p>Evaluation metrics for speed response.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left">Metrics</th><th align="left">
<sc>PI</sc>
</th><th align="left">
<sc>LR</sc>
</th><th align="left">
<sc>SVM</sc>
</th><th align="left">
<sc>NN</sc>
</th><th align="left">
<sc>LSTM</sc>
</th></tr></thead><tbody><tr><td align="left" rowspan="3">Rated conditions</td><td align="left">MAE</td><td char="." align="char">10.9072</td><td char="." align="char">
<bold>10.8093</bold>
</td><td char="." align="char">10.9081</td><td char="." align="char">10.9096</td><td char="." align="char">19.9737</td></tr><tr><td align="left">RMSE</td><td char="." align="char">40.6125</td><td char="." align="char">
<bold>40.4614</bold>
</td><td char="." align="char">40.5824</td><td char="." align="char">40.6145</td><td char="." align="char">51.0321</td></tr><tr><td align="left">SMAPE</td><td char="." align="char">5.0976</td><td char="." align="char">
<bold>5.0724</bold>
</td><td char="." align="char">5.0998</td><td char="." align="char">5.0987</td><td char="." align="char">8.4641</td></tr><tr><td align="left" rowspan="3">Speed variations</td><td align="left">MAE</td><td char="." align="char">7.5233</td><td char="." align="char">
<bold>7.3834</bold>
</td><td char="." align="char">7.5518</td><td char="." align="char">7.5232</td><td char="." align="char">10.6317</td></tr><tr><td align="left">RMSE</td><td char="." align="char">18.2025</td><td char="." align="char">
<bold>18.0162</bold>
</td><td char="." align="char">18.2203</td><td char="." align="char">18.2052</td><td char="." align="char">21.8243</td></tr><tr><td align="left">SMAPE</td><td char="." align="char">7.9562</td><td char="." align="char">
<bold>7.8796</bold>
</td><td char="." align="char">7.9181</td><td char="." align="char">7.9581</td><td char="." align="char">11.1613</td></tr><tr><td align="left" rowspan="3">Load disturbances</td><td align="left">MAE</td><td char="." align="char">13.7196</td><td char="." align="char">
<bold>13.6210</bold>
</td><td char="." align="char">13.7124</td><td char="." align="char">13.7269</td><td char="." align="char">21.6626</td></tr><tr><td align="left">RMSE</td><td char="." align="char">40.3968</td><td char="." align="char">
<bold>40.2008</bold>
</td><td char="." align="char">40.3591</td><td char="." align="char">40.4021</td><td char="." align="char">50.9743</td></tr><tr><td align="left">SMAPE</td><td char="." align="char">5.9003</td><td char="." align="char">
<bold>5.8770</bold>
</td><td char="." align="char">5.8998</td><td char="." align="char">5.9030</td><td char="." align="char">8.7705</td></tr></tbody></table></table-wrap>
</p></sec><sec id="Sec24"><title>Evaluation metrics</title><p id="Par115">The performance metrics for different test conditions such as rated speed condition, step speed change and step load change are shown in Table&#x000a0;<xref rid="Tab5" ref-type="table">5</xref> and Fig.&#x000a0;<xref rid="Fig20" ref-type="fig">21</xref>. In each of the three test situations, the LR-based controller provides the lowest values of all the errors. The least error in each set is highlighted in bold. Lesser error values of MAE, RMSE and SMAPE imply better performance of the evaluated model.</p><p id="Par116">
<fig id="Fig20"><label>Fig. 20</label><caption><p>Conventional vs. ML-based controllers : Speed response for larger <italic>J</italic><sub><italic>eq</italic></sub> and <italic>B</italic><sub><italic>a</italic></sub>.</p></caption><graphic xlink:href="41598_2025_2396_Fig20_HTML" id="d33e2187"/></fig>
</p><p id="Par117">
<fig id="Fig21"><label>Fig. 21</label><caption><p>Evaluation metrics for speed response &#x02013; Table&#x000a0;<xref rid="Tab5" ref-type="table">5</xref>.</p></caption><graphic xlink:href="41598_2025_2396_Fig21_HTML" id="d33e2201"/></fig>
</p></sec><sec id="Sec25"><title>Real-time results</title><p id="Par118">The conventional and proposed ML-based controllers are tested using Software-in-loop (SIL) mode on the OpalRT device OP4500. Figure&#x000a0;<xref rid="Fig21" ref-type="fig">22</xref> gives the Opal-RT setup on SIL mode with OP4500 device. Figure&#x000a0;<xref rid="Fig22" ref-type="fig">23</xref> gives the simulation model used to test all the controllers. The ML models have been designed manually using data from the trained models of MATLAB Code. Figures&#x000a0;<xref rid="Fig23" ref-type="fig">24</xref>, <xref rid="Fig24" ref-type="fig">25</xref>, <xref rid="Fig25" ref-type="fig">26</xref> and <xref rid="Fig26" ref-type="fig">27</xref> show the speed and torque responses from the OP4500 device, for the conventional PI controller and the proposed ML-based (LR, SVM, NN) controllers at varying speeds and load conditions. The starting speed is set at 150&#x000a0;rad/s and increased to 300&#x000a0;rad/s at 0.5s timestep. The motor is started on full load and reduced to half load at 0.55s timestep. Compared to the PI controller, the LR-based controller has lesser speed and torque transients when the speed changes. The SVM and NN-based controllers give similar responses as the PI controller.</p><p id="Par119">
<fig id="Fig22"><label>Fig. 22</label><caption><p>Opal-RT physical setup.</p></caption><graphic xlink:href="41598_2025_2396_Fig22_HTML" id="d33e2234"/></fig>
</p><p id="Par120">
<fig id="Fig23"><label>Fig. 23</label><caption><p>Opal-RT model.</p></caption><graphic xlink:href="41598_2025_2396_Fig23_HTML" id="d33e2244"/></fig>
</p><p id="Par121">
<fig id="Fig24"><label>Fig. 24</label><caption><p>PI controller : current, speed, rotor angle and torque responses.</p></caption><graphic xlink:href="41598_2025_2396_Fig24_HTML" id="d33e2254"/></fig>
</p><p id="Par122">
<fig id="Fig25"><label>Fig. 25</label><caption><p>LR controller : current, speed, rotor angle and torque responses.</p></caption><graphic xlink:href="41598_2025_2396_Fig25_HTML" id="d33e2264"/></fig>
</p><p id="Par123">
<fig id="Fig26"><label>Fig. 26</label><caption><p>SVM controller : current, speed, rotor angle and torque responses.</p></caption><graphic xlink:href="41598_2025_2396_Fig26_HTML" id="d33e2274"/></fig>
</p><p id="Par124">
<fig id="Fig27"><label>Fig. 27</label><caption><p>NN controller : current, speed, rotor angle and torque responses.</p></caption><graphic xlink:href="41598_2025_2396_Fig27_HTML" id="d33e2284"/></fig>
</p><p id="Par125">
<fig id="Fig28"><label>Fig. 28</label><caption><p>PI controller : speed and torque responses.</p></caption><graphic xlink:href="41598_2025_2396_Fig28_HTML" id="d33e2294"/></fig>
</p><p id="Par126">
<fig id="Fig29"><label>Fig. 29</label><caption><p>LR controller : speed and torque responses.</p></caption><graphic xlink:href="41598_2025_2396_Fig29_HTML" id="d33e2304"/></fig>
</p><p id="Par127">
<fig id="Fig30"><label>Fig. 30</label><caption><p>SVM controller : speed and torque responses.</p></caption><graphic xlink:href="41598_2025_2396_Fig30_HTML" id="d33e2314"/></fig>
</p><p id="Par128">Figures&#x000a0;<xref rid="Fig27" ref-type="fig">28</xref>, <xref rid="Fig29" ref-type="fig">29</xref>, <xref rid="Fig30" ref-type="fig">30</xref> and <xref rid="Fig31" ref-type="fig">31</xref> show the results from a digital oscilloscope, for speed variations of 30-150-300&#x02013;375&#x000a0;rad/s at the time steps 0-1-2-5 ms, and load variations of 5-0-2.5 Nm at the time steps 0-3-4 ms.</p></sec></sec><sec id="Sec26"><title>Results &#x00026; discussion</title><p id="Par129">The conventional and proposed ML-based controllers are validated using MATLAB simulation and Real-Time environment, under different test conditions. The speed and torque response, current response, and dq-axis reference voltages of the drive are considered for evaluation.</p><sec id="Sec27"><title>Simulation results</title><p id="Par130">The evaluation of the overall drive response under rated conditions, load disturbances, and speed variations, shows that the responses of the ML-based controllers (LR, SVM, and NN) resemble those of the PI controller, even in the absence of additional circuitry. The graphs make it evident&#x000a0;that for all the speeds (below and above the rated speed), the LR-based controller is a good alternative to the PI controller. This is supported by the performance metrics in Table&#x000a0;<xref rid="Tab5" ref-type="table">5</xref>, where the LR-based controller gives the least error values, in all the test scenarios. SVM and NN-based controllers give the same metric values as the PI controller.</p><p id="Par132">In the case of speed transients (from Fig.&#x000a0;<xref rid="Fig9" ref-type="fig">10</xref>), the peak overshoot of the LR-based controller is only 1.138% compared to 1.15% of the PI controller. The SVM and NN-based controllers also give lesser overshoot compared to the PI controller (1.147% and 1.149% respectively). From the speed response of Fig.&#x000a0;<xref rid="Fig15" ref-type="fig">15</xref>, the LR-based controller has lesser overshoot and hence better performance above half-speed. As seen in Fig.&#x000a0;<xref rid="Fig18" ref-type="fig">19</xref>, any of the proposed LR, SVM, NN-based controllers can easily reproduce the speed performance of the conventional controller in the case of a load disturbance. From the current response in Fig.&#x000a0;<xref rid="Fig12" ref-type="fig">13</xref>, motor currents of the LR-based controller can be seen as settling faster (0.012s) compared to the other controllers (0.02s), i.e. 40% faster response. In the case of the NN-based controller, it replicates the performance of the PI controller at all speed levels.</p><p id="Par133">When it comes to testing the robustness of the proposed controllers, Fig.&#x000a0;<xref rid="Fig19" ref-type="fig">20</xref> shows that the ML-based (LR, SVM, NN) controllers are capable of giving the same performance as the PI controller, even with increased mechanical parameters.</p><p id="Par134">One main limitation is the low-speed performance of the LR and SVM-based controllers. As seen in Fig.&#x000a0;<xref rid="Fig15" ref-type="fig">15</xref>, below half-speed, they have slightly higher overshoots compared to the PI controller. For the LR-based controller, the overshoot is less, above half-speed. For the SVM-based controller, the overshoot is lesser only around half-speed. The LR-based controller gives better performance than the PI controller above half-speed conditions, while the NN-based controller gives the same performance as the PI controller.</p><p id="Par135">The performance of the LSTM-based controller was not found satisfactory under different running conditions, when compared to the other controllers.</p></sec><sec id="Sec28"><title>Real-time results</title><p id="Par136">Evaluating the controllers in a SIL environment with a physical real-time device, the LR-based controller has lesser speed transients during speed change but is slower in settling back to the desired speed after a load change is applied, as compared to the PI controller response. SVM and NN-based controllers do not perform any better or worse, when compared to the PI controller. LR-based controller needed 0.04s while the PI controller required 0.015s to regain the desired speed after a change in load from no-load to full-load. During speed change from 10 to 100% of the rated speed, the PI controller gives an overshoot of 1.26% while the LR-based controller has only 1.06% overshoot.</p><p id="Par137">
<table-wrap id="Tab6"><label>Table 6</label><caption><p>Comparison with existing work.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Ref.s</th><th align="left">Paper highlights</th><th align="left">Control system</th><th align="left">current controller type</th><th align="left">External addition of Decoupling terms</th><th align="left">Runtime variations in decoupling terms accounted for</th></tr></thead><tbody><tr><td align="left">
<xref ref-type="bibr" rid="CR1">1</xref>
</td><td align="left">Unified FOC controller for PMSM</td><td align="left">FOC</td><td align="left">PI</td><td align="left">Yes</td><td align="left">Yes</td></tr><tr><td align="left">
<xref ref-type="bibr" rid="CR5">5</xref>
</td><td align="left">Adaptive PID speed control</td><td align="left">FOC</td><td align="left">Adaptive PID</td><td align="left">Yes</td><td align="left">Yes</td></tr><tr><td align="left">
<xref ref-type="bibr" rid="CR6">6</xref>
</td><td align="left">Modified reference currents</td><td align="left">IFOC</td><td align="left">PI</td><td align="left">Yes</td><td align="left">Yes</td></tr><tr><td align="left">
<xref ref-type="bibr" rid="CR8">8</xref>
</td><td align="left">PMSM drive</td><td align="left">VC</td><td align="left">Hysteresis &#x00026; PWM current controllers</td><td align="left">Yes</td><td align="left">Yes</td></tr><tr><td align="left">
<xref ref-type="bibr" rid="CR9">9</xref>
</td><td align="left">Brain emotional controller (BEC) for speed control</td><td align="left">IFOC</td><td align="left">PI</td><td align="left">No</td><td align="left">No</td></tr><tr><td align="left">
<xref ref-type="bibr" rid="CR11">11</xref>
</td><td align="left">Vector control and hall-effect sensors</td><td align="left">IFOC</td><td align="left">PI</td><td align="left">No</td><td align="left">No</td></tr><tr><td align="left">
<xref ref-type="bibr" rid="CR13">13</xref>
</td><td align="left">BEC for current control</td><td align="left">IFOC</td><td align="left">BEC</td><td align="left">No</td><td align="left">No</td></tr><tr><td align="left">
<xref ref-type="bibr" rid="CR15">15</xref>
</td><td align="left">PMSM Vector control eTPU function</td><td align="left">VC</td><td align="left">PI</td><td align="left">Yes</td><td align="left">Yes</td></tr><tr><td align="left">
<xref ref-type="bibr" rid="CR29">29</xref>
</td><td align="left">NN-based current controller</td><td align="left">IFOC</td><td align="left">NN</td><td align="left">No</td><td align="left">No</td></tr><tr><td align="left">
<xref ref-type="bibr" rid="CR32">32</xref>
</td><td align="left">Integrated Electric Drive System for Electric Vehicle</td><td align="left">IFOC</td><td align="left">PI</td><td align="left">Yes</td><td align="left">Yes</td></tr><tr><td align="left">
<xref ref-type="bibr" rid="CR48">48</xref>
</td><td align="left">ML-based current controller</td><td align="left">IFOC</td><td align="left">LR/SVM/NN</td><td align="left">No</td><td align="left">No</td></tr><tr><td align="left">
<bold>Proposed</bold>
</td><td align="left">
<bold>ML-based current controller</bold>
</td><td align="left">
<bold>IFOC</bold>
</td><td align="left">
<bold>LR/SVM/NN/LSTM</bold>
</td><td align="left">
<bold>No</bold>
</td><td align="left">
<bold>Yes</bold>
</td></tr></tbody></table></table-wrap>
</p></sec><sec id="Sec29"><title>Comparison with existing work</title><p id="Par138">In the conventional vector control scheme, the compensation terms (-<italic>w</italic><sub><bold><italic>e</italic></bold></sub><italic>L</italic><sub><bold><italic>q</italic></bold></sub><italic>i</italic><sub><bold><italic>q</italic></bold></sub>, <italic>w</italic><sub><bold><italic>e</italic></bold></sub><italic>L</italic><sub><bold><italic>d</italic></bold></sub><italic>i</italic><sub><bold><italic>d</italic></bold></sub>, <italic>w</italic><sub><bold><italic>e</italic></bold></sub><italic>&#x003a8;</italic><sub><bold><italic>f</italic></bold></sub>) are added to the PI controller outputs externally to avoid decoupling inaccuracy. The constant presence of compensation terms which are time-dependent functions of the dq-axis motor currents and motor speed, has a large impact on the dq- reference voltage signals. In this work, their constant presence is acknowledged. The training data set for the ML models is inclusive of the compensation terms (Fig.&#x000a0;<xref rid="Fig6" ref-type="fig">7</xref>). The ML models are designed such that the controller outputs given to the next stage in the drive are independent of the external addition of the compensation terms. In other words, the ML models have the compensation terms in-built, in comparison to the conventional PI controller setup. This allows for reduced circuitry in the proposed technique. The proposed ML-based controllers merely need a dataset (inclusive of various scenarios) from an existing technique to prepare the controller for any situation, whereas the conventional controller requires precise PI tuning and occasionally re-tuning in case of sudden system uncertainties. Table&#x000a0;<xref rid="Tab6" ref-type="table">6</xref> gives a comparison of the proposed work with some of the existing literature.</p><p id="Par139">Ref.<sup><xref ref-type="bibr" rid="CR29">29</xref></sup> uses a strategy similar to the proposed work of this paper, with a NN-based current controller. The input dataset, however, does not account for the constant feedback of the compensation terms, which are time-varying parameters. As demonstrated in Ref.<sup><xref ref-type="bibr" rid="CR48">48</xref></sup> where the technique was investigated for LR, SVM, and NN-based controllers, this has an impact on the final output of the motor drive, in the case of ML-based controllers. Figure&#x000a0;<xref rid="Fig30" ref-type="fig">32</xref> shows the speed response of Ref.<sup><xref ref-type="bibr" rid="CR48">48</xref></sup> at rated conditions. Table&#x000a0;<xref rid="Tab7" ref-type="table">7</xref> gives a comparison between the speed responses of Ref.<sup><xref ref-type="bibr" rid="CR48">48</xref></sup> and the proposed work, in the same environment. It highlights a reduction in the evaluation metrics, peak overshoot and settling times of the speed responses of the ML-based controllers, when the decoupling terms are included in the dataset and during actual operation. This is also highlighted by Fig.&#x000a0;<xref rid="Fig31" ref-type="fig">33</xref>. The lowest MAE, SMAPE and RMSE values are given by LR model with 6 inputs, in comparison to PI controller and other ML-based models with 4 inputs or 6 inputs.</p><p id="Par140">
<fig id="Fig31"><label>Fig. 31</label><caption><p>NN controller : speed and torque responses.</p></caption><graphic xlink:href="41598_2025_2396_Fig31_HTML" id="d33e2718"/></fig>
</p><p id="Par141">A network with two hidden layers, each including six neurons, is used in the NN model of Ref<sup><xref ref-type="bibr" rid="CR29">29</xref></sup>. In contrast, when the decoupling terms are added as inputs to the NN model, the proposed NN model in this work only needs one hidden layer and two neurons. Because of this, the NN model that this paper proposes is more compact than the one that already exists. Table&#x000a0;<xref rid="Tab8" ref-type="table">8</xref> gives comparison of proposed NN model with the existing models of Ref.s<sup><xref ref-type="bibr" rid="CR29">29</xref>] and [<xref ref-type="bibr" rid="CR48">48</xref></sup>.</p><p id="Par142">In addition to challenging the conventional controller and the work in Ref.<sup><xref ref-type="bibr" rid="CR29">29</xref></sup> in terms of the input dataset, this paper also examines other ML-based models which are not yet been explored for current control.</p><p id="Par143">
<table-wrap id="Tab7"><label>Table 7</label><caption><p>Comparison of speed response at rated conditions [Fig.s <xref rid="Fig10" ref-type="fig">10</xref> &#x00026; <xref rid="Fig32" ref-type="fig">32</xref>].</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left">
<sc>Features</sc>
</th><th align="left">
<sc>PI</sc>
</th><th align="left">
<sc>LR</sc>
</th><th align="left">
<sc>SVM</sc>
</th><th align="left">
<sc>NN</sc>
</th></tr></thead><tbody><tr><td align="left" rowspan="5">
<xref ref-type="bibr" rid="CR48">48</xref>
</td><td align="left">MAE</td><td char="." align="char">
<bold>10.9072</bold>
</td><td char="." align="char">11.2512</td><td char="." align="char">11.1903</td><td char="." align="char">11.9194</td></tr><tr><td align="left">RMSE</td><td char="." align="char">
<bold>40.6125</bold>
</td><td char="." align="char">40.8831</td><td char="." align="char">40.8455</td><td char="." align="char">40.9932</td></tr><tr><td align="left">SMAPE</td><td char="." align="char">
<bold>5.0976</bold>
</td><td char="." align="char">5.2276</td><td char="." align="char">5.2072</td><td char="." align="char">5.4389</td></tr><tr><td align="left">Peak overshoot (%)</td><td char="." align="char">1.15</td><td char="." align="char">1.14</td><td char="." align="char">1.139</td><td char="." align="char">1.157</td></tr><tr><td align="left">Settling time (s)</td><td char="." align="char">0.018</td><td char="." align="char">0.02</td><td char="." align="char">0.02</td><td char="." align="char">0.022</td></tr><tr><td align="left" rowspan="5">Proposed</td><td align="left">MAE</td><td char="." align="char">10.9072</td><td char="." align="char">
<bold>10.8093</bold>
</td><td char="." align="char">10.9081</td><td char="." align="char">10.9096</td></tr><tr><td align="left">RMSE</td><td char="." align="char">40.6125</td><td char="." align="char">
<bold>40.4614</bold>
</td><td char="." align="char">40.5824</td><td char="." align="char">40.6145</td></tr><tr><td align="left">SMAPE</td><td char="." align="char">5.0976</td><td char="." align="char">
<bold>5.0724</bold>
</td><td char="." align="char">5.0998</td><td char="." align="char">5.0987</td></tr><tr><td align="left">Peak overshoot (%)</td><td char="." align="char">1.15</td><td char="." align="char">1.138</td><td char="." align="char">1.147</td><td char="." align="char">1.149</td></tr><tr><td align="left">Settling time (s)</td><td char="." align="char">0.018</td><td char="." align="char">0.018</td><td char="." align="char">0.018</td><td char="." align="char">0.018</td></tr></tbody></table></table-wrap>
</p><p id="Par144">
<fig id="Fig32"><label>Fig. 32</label><caption><p>ML-based vs. conventional controllers: Speed response of the drive<sup><xref ref-type="bibr" rid="CR48">48</xref></sup>.</p></caption><graphic xlink:href="41598_2025_2396_Fig32_HTML" id="d33e2953"/></fig>
<fig id="Fig33"><label>Fig. 33</label><caption><p>Comparison of evaluation metrics for speed response (Table <xref rid="Tab7" ref-type="table">7</xref>).</p></caption><graphic xlink:href="41598_2025_2396_Fig33_HTML" id="d33e2965"/></fig>
</p><p id="Par147">
<table-wrap id="Tab8"><label>Table 8</label><caption><p>Comparison of NN models.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">
<sc>Features</sc>
</th><th align="left">
<sc>[29]</sc>
</th><th align="left">
<sc>[48]</sc>
</th><th align="left">
<sc>Proposed</sc>
</th></tr></thead><tbody><tr><td align="left">No. of hidden layers</td><td align="left">2</td><td align="left">2</td><td align="left">1</td></tr><tr><td align="left">Size of hidden layers</td><td align="left">6&#x02009;+&#x02009;6</td><td align="left">10&#x02009;+&#x02009;2</td><td align="left">2</td></tr><tr><td align="left">No. of input variables</td><td align="left">4</td><td align="left">4</td><td align="left">6</td></tr><tr><td align="left">No. of output variables</td><td align="left">2</td><td align="left">2</td><td align="left">2</td></tr><tr><td align="left">Activation function (hidden layer)</td><td align="left">tanh( )</td><td align="left">tansig( )</td><td align="left">tansig( )</td></tr><tr><td align="left">Training algorithm</td><td align="left">Levenberg-Marquardt</td><td align="left">Levenberg-Marquardt</td><td align="left">Levenberg-Marquardt</td></tr></tbody></table></table-wrap>
</p></sec></sec><sec id="Sec30"><title>Conclusion</title><p id="Par148">This paper presents different ML-based speed control algorithms for a vector-controlled PMSM drive. The main objective is to explore the feasibility of applying machine learning in the speed control of motor drives. Under various test scenarios, the performances of the conventional PI controller and the proposed ML-based controllers are studied. In comparison to the conventional controller that requires compensation term feedback, the proposed ML-based controllers can achieve better performance without the additional feedback circuitry.</p><p id="Par149">The performance metrics of the LR-based controllers were found to be better than those of the conventional PI controller. In every test situation, the errors of the LR-based controller are lesser by a margin of up to 1.86%. While maintaining the same settling time for the speed and torque waveforms, the transient peaks are lesser for the LR-based controller in most cases by 0.012% and a 40% reduction in current response time. The SVM-based and NN-based controllers give a 0.003% reduction in the transient peaks of the responses and a 0.48% improvement in the metrics, compared to the conventional controller. Their performance metrics and responses are on par with those provided by the PI controller. The LSTM-based controller was found to be in need of more training for better performance.</p><p id="Par150">By fine-tuning the training parameters and using a larger data set, the performance of all the proposed ML-based controllers can be further enhanced.</p></sec></body><back><fn-group><fn><p><bold>Publisher&#x02019;s note</bold></p><p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p></fn></fn-group><notes notes-type="author-contribution"><title>Author contributions</title><p>A.M.T. contributed to the design and implementation of the research, to the analysis of the results and to the writing of the manuscript. Both A.M.T. and J.L.F.D. authors contributed to the final version of the manuscript. J.L.F.D. supervised the project.</p></notes><notes notes-type="funding-information"><title>Funding</title><p>Open access funding provided by Vellore Institute of Technology.</p></notes><notes notes-type="data-availability"><title>Data availability</title><p>The datasets used and/or analysed during the current study available from the corresponding author on reasonable request.</p></notes><notes><title>Declarations</title><notes id="FPar1" notes-type="COI-statement"><title>Competing interests</title><p id="Par151">The authors declare no competing interests.</p></notes></notes><ref-list id="Bib1"><title>References</title><ref id="CR1"><label>1.</label><mixed-citation publication-type="other">Ko&#x000e7;, M. Unified Field Oriented Controlled Drive System for All Types of PMSMs Considering System Nonlinearities, in <italic>IEEE Access</italic>, vol. 10, pp. 56773&#x02013;56784, (2022).</mixed-citation></ref><ref id="CR2"><label>2.</label><mixed-citation publication-type="other">Kolano, K. New Method of Vector Control in PMSM Motors, in <italic>IEEE Access</italic>, vol. 11, pp. 43882&#x02013;43890, (2023).</mixed-citation></ref><ref id="CR3"><label>3.</label><mixed-citation publication-type="other">Khanh, P. Q. &#x00026; Anh, H. P. H. Advanced PMSM speed control using fuzzy PI method for hybrid power control technique. in <italic>Ain Shams Eng. Journal</italic>, <bold>14</bold>, 12, (2023).</mixed-citation></ref><ref id="CR4"><label>4.</label><mixed-citation publication-type="other">Madichetty, S., Mishra, S. &#x00026; Basu, M. New trends in electric motors and selection for electric vehicle propulsion systems, <italic>IET Electr. Syst. Transp</italic>., vol. 11, no. 3, pp. 186&#x02013;199, Sep. (2021).</mixed-citation></ref><ref id="CR5"><label>5.</label><mixed-citation publication-type="other">Jung, J. W., Leu, V. Q., Do, T. D., Kim, E. K. &#x00026; Choi, H. H. Adaptive PID speed control design for permanent magnet synchronous motor drives. <italic>IEEE Trans. Power Electron.</italic><bold>30</bold> (2), 900&#x02013;908 (Feb. 2015).</mixed-citation></ref><ref id="CR6"><label>6.</label><citation-alternatives><element-citation id="ec-CR6" publication-type="journal"><person-group person-group-type="author"><name><surname>Soliman</surname><given-names>HM</given-names></name></person-group><article-title>Improve the performance characteristics of the IPMSM under the effect of the varying loads</article-title><source>IET Electr. Power Appl.</source><year>2019</year><volume>13</volume><issue>12</issue><fpage>pp1935</fpage><lpage>1945</lpage><pub-id pub-id-type="doi">10.1049/iet-epa.2019.0195</pub-id></element-citation><mixed-citation id="mc-CR6" publication-type="journal">Soliman, H. M. Improve the performance characteristics of the IPMSM under the effect of the varying loads. <italic>IET Electr. Power Appl.</italic><bold>13</bold> (12), pp1935&#x02013;1945 (2019).</mixed-citation></citation-alternatives></ref><ref id="CR7"><label>7.</label><mixed-citation publication-type="other">Rind, S. J., Ren, Y., Hu, Y., Wang, J. &#x00026; Jiang, L. Configurations and control of traction motors for electric vehicles: A review. <italic>Chin. J. Electr. Eng.</italic><bold>3</bold> (3), 1&#x02013;17 (December 2017).</mixed-citation></ref><ref id="CR8"><label>8.</label><mixed-citation publication-type="other">Pillay, P. &#x00026; Krishnan, R. Modeling, simulation, and analysis of permanent-magnet motor drives. I. The permanent-magnet synchronous motor drive. in <italic>IEEE Trans. Ind. Applications</italic>, <bold>25</bold>, 2, pp. 265&#x02013;273, March-April 1989.</mixed-citation></ref><ref id="CR9"><label>9.</label><citation-alternatives><element-citation id="ec-CR9" publication-type="journal"><person-group person-group-type="author"><name><surname>Qutubuddin</surname><given-names>MD</given-names></name><name><surname>Yadaiah</surname><given-names>N</given-names></name></person-group><article-title>A new intelligent adaptive mechanism for sensorless control of permanent magnet synchronous motor drive</article-title><source>Biologically Inspired Cogn. Architectures</source><year>2018</year><volume>24</volume><fpage>47</fpage><lpage>58</lpage><pub-id pub-id-type="doi">10.1016/j.bica.2018.04.003</pub-id></element-citation><mixed-citation id="mc-CR9" publication-type="journal">Qutubuddin, M. D. &#x00026; Yadaiah, N. A new intelligent adaptive mechanism for sensorless control of permanent magnet synchronous motor drive. <italic>Biologically Inspired Cogn. Architectures</italic>. <bold>24</bold>, 47&#x02013;58 (2018).</mixed-citation></citation-alternatives></ref><ref id="CR10"><label>10.</label><mixed-citation publication-type="other">Raia, M. R., Ruba, M., Nemes, R. O. &#x00026; Martis, C. Artificial Neural Network and Data Dimensionality Reduction Based on Machine Learning Methods for PMSM Model Order Reduction, in <italic>IEEE Access</italic>, vol. 9, pp. 102345&#x02013;102354, (2021).</mixed-citation></ref><ref id="CR11"><label>11.</label><mixed-citation publication-type="other">Sorial, R. R., Soliman, M. H., Hasanien, H. M. &#x00026; Talaat, H. E. A. A Vector Controlled Drive System for Electrically Power Assisted Steering Using Hall-Effect Sensors, in <italic>IEEE Access</italic>, vol. 9, pp. 116485&#x02013;116499, (2021).</mixed-citation></ref><ref id="CR12"><label>12.</label><mixed-citation publication-type="other">Hannan, M. A. et al. Switching Techniques and Intelligent Controllers for Induction Motor Drive: Issues and Recommendations, in <italic>IEEE Access</italic>, vol. 6, pp. 47489&#x02013;47510, (2018).</mixed-citation></ref><ref id="CR13"><label>13.</label><citation-alternatives><element-citation id="ec-CR13" publication-type="journal"><person-group person-group-type="author"><name><surname>Qutubuddin</surname><given-names>MD</given-names></name><name><surname>Yadaiah</surname><given-names>N</given-names></name></person-group><article-title>Modeling and implementation of brain emotional controller for permanent magnet synchronous motor drive</article-title><source>Eng. Appl. Artif. Intell.</source><year>2017</year><volume>60</volume><fpage>193</fpage><lpage>203</lpage><pub-id pub-id-type="doi">10.1016/j.engappai.2017.02.007</pub-id></element-citation><mixed-citation id="mc-CR13" publication-type="journal">Qutubuddin, M. D. &#x00026; Yadaiah, N. Modeling and implementation of brain emotional controller for permanent magnet synchronous motor drive. <italic>Eng. Appl. Artif. Intell.</italic><bold>60</bold>, 193&#x02013;203 (2017).</mixed-citation></citation-alternatives></ref><ref id="CR14"><label>14.</label><mixed-citation publication-type="other">Liu, C. &#x00026; Luo, Y. Overview of advanced control strategies for electric machines. <italic>Chin. J. Electr. Eng.</italic><bold>3</bold> (2), 53&#x02013;61 (September 2017).</mixed-citation></ref><ref id="CR15"><label>15.</label><mixed-citation publication-type="other">Brejl, M. &#x00026; Princ, M. Using the PMSM Vector Control, Freescale Semiconductor, 2012 [Online]. Available: <ext-link ext-link-type="uri" xlink:href="https://www.nxp.com/docs/en/application-note/AN2972.pdf">https://www.nxp.com/docs/en/application-note/AN2972.pdf</ext-link> Accessed on: Jun.5, 2022.</mixed-citation></ref><ref id="CR16"><label>16.</label><mixed-citation publication-type="other">Kulkarni, P. Sensorless Field-Oriented Control of Permanent Magnet Synchronous Motor (Surface and Interior) for Appliances with Angle-Tracking Phase-Locked Loop Estimator, Microchip Technology Inc., [Online] (2019). Available: <ext-link ext-link-type="uri" xlink:href="https://ww1.microchip.com/downloads/en/DeviceDoc/TB3220-Sensorless-Field-Oriented-Control-of-PMSM-for-Appliances-DS90003220A.pdf">https://ww1.microchip.com/downloads/en/DeviceDoc/TB3220-Sensorless-Field-Oriented-Control-of-PMSM-for-Appliances-DS90003220A.pdf</ext-link> Accessed on: July 16,2024.</mixed-citation></ref><ref id="CR17"><label>17.</label><mixed-citation publication-type="other">Infineon Technologies, A. G. Sensorless field-oriented control (FOC) usingpsoc&#x02122; 6 MCU, [Online]. (2022). <ext-link ext-link-type="uri" xlink:href="https://www.infineon.com/dgdl/Infineon-AN235096_Sensorless_field-oriented_control_FOC_using_PSoC_6_MCU-ApplicationNotes-v01_00-EN.pdf?fileId=8ac78c8c821f280601821f2bea">https://www.infineon.com/dgdl/Infineon-AN235096_Sensorless_field-oriented_control_FOC_using_PSoC_6_MCU-ApplicationNotes-v01_00-EN.pdf?fileId=8ac78c8c821f280601821f2bea</ext-link>270000 Accessed on: July 11,2024.</mixed-citation></ref><ref id="CR18"><label>18.</label><mixed-citation publication-type="other">Semiconductors, N. X. P. MCUXpresso SDK Field-Oriented Control (FOC) of 3-Phase PMSM and BLDC Motors - Userguide, 2023 [Online]. Available: <ext-link ext-link-type="uri" xlink:href="https://www.nxp.com/docs/en/user-guide/PMSMMCXN9XXEVK.pdf">https://www.nxp.com/docs/en/user-guide/PMSMMCXN9XXEVK.pdf</ext-link> Accessed on: July 16,2024.</mixed-citation></ref><ref id="CR19"><label>19.</label><mixed-citation publication-type="other">Karim, A., Azam, S., Shanmugam, B., Kannoorpatti, K. &#x00026; Alazab, M. A Comprehensive Survey for Intelligent Spam Email Detection, in <italic>IEEE Access</italic>, vol. 7, pp. 168261&#x02013;168295, (2019).</mixed-citation></ref><ref id="CR20"><label>20.</label><mixed-citation publication-type="other">Jaffar, F., Farid, T., Sajid, M., Ayaz, Y. &#x00026; Khan, M. J. Prediction of Drag Force on Vehicles in a Platoon Configuration Using Machine Learning, in <italic>IEEE Access</italic>, vol. 8, pp. 201823&#x02013;201834, (2020).</mixed-citation></ref><ref id="CR21"><label>21.</label><mixed-citation publication-type="other">Morais, R. M. &#x00026; Pedro, J. Machine learning models for estimating quality of transmission in DWDM networks, in <italic>Journal of Optical Communications and Networking</italic>, vol. 10, no. 10, pp. D84-D99, Oct. (2018).</mixed-citation></ref><ref id="CR22"><label>22.</label><mixed-citation publication-type="other">Daliya, V. K., Ramesh, T. K. &#x00026; Ko, S. B. An Optimised Multivariable Regression Model for Predictive Analysis of Diabetic Disease Progression, in <italic>IEEE Access</italic>, vol. 9, pp. 99768&#x02013;99780, (2021).</mixed-citation></ref><ref id="CR23"><label>23.</label><mixed-citation publication-type="other">Simeone, O. A Very Brief Introduction to Machine Learning With Applications to Communication Systems, in <italic>IEEE Transactions on Cognitive Communications and Networking</italic>, vol. 4, no. 4, pp. 648&#x02013;664, Dec. (2018).</mixed-citation></ref><ref id="CR24"><label>24.</label><mixed-citation publication-type="other">Dahrouj, H. et al. An Overview of Machine Learning-Based Techniques for Solving Optimization Problems in Communications and Signal Processing, in <italic>IEEE Access</italic>, vol. 9, pp. 74908&#x02013;74938, (2021).</mixed-citation></ref><ref id="CR25"><label>25.</label><mixed-citation publication-type="other">Mahmud, K. et al. Machine Learning Based PV Power Generation Forecasting in Alice Springs, in <italic>IEEE Access</italic>, vol. 9, pp. 46117&#x02013;46128, (2021).</mixed-citation></ref><ref id="CR26"><label>26.</label><mixed-citation publication-type="other">Farsi, B., Amayri, M., Bouguila, N. &#x00026; Eicker, U. On Short-Term Load Forecasting Using Machine Learning Techniques and a Novel Parallel Deep LSTM-CNN Approach, in <italic>IEEE Access</italic>, vol. 9, pp. 31191&#x02013;31212, (2021).</mixed-citation></ref><ref id="CR27"><label>27.</label><citation-alternatives><element-citation id="ec-CR27" publication-type="journal"><person-group person-group-type="author"><name><surname>M&#x000e9;ndez</surname><given-names>M</given-names></name><name><surname>N&#x000fa;&#x000f1;ez</surname><given-names>M</given-names></name></person-group><article-title>Machine learning algorithms to forecast air quality: a survey</article-title><source>Artif. Intell. Rev.</source><year>2023</year><volume>56</volume><fpage>10031</fpage><lpage>10066</lpage><pub-id pub-id-type="doi">10.1007/s10462-023-10424-4</pub-id></element-citation><mixed-citation id="mc-CR27" publication-type="journal">M&#x000e9;ndez, M., N&#x000fa;&#x000f1;ez, M. &#x00026; M.G. and Machine learning algorithms to forecast air quality: a survey. <italic>Artif. Intell. Rev.</italic><bold>56</bold>, 10031&#x02013;10066 (2023).</mixed-citation></citation-alternatives></ref><ref id="CR28"><label>28.</label><mixed-citation publication-type="other">Mart&#x000ed;nez, V. &#x00026; Rocha, A. The Golem: A General Data-Driven Model for Oil &#x00026; Gas Forecasting Based on Recurrent Neural Networks, in <italic>IEEE Access</italic>, vol. 11, pp. 41105&#x02013;41132, (2023).</mixed-citation></ref><ref id="CR29"><label>29.</label><mixed-citation publication-type="other">Li, S. et al. Neural-Network vector controller for Permanent-Magnet synchronous motor drives: simulated and Hardware-Validated results. <italic>IEEE Trans. Cybernetics</italic>. <bold>50</bold> (7), 3218&#x02013;3230 (July 2020).</mixed-citation></ref><ref id="CR30"><label>30.</label><citation-alternatives><element-citation id="ec-CR30" publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>S</given-names></name><name><surname>Wallscheid</surname><given-names>O</given-names></name><name><surname>Porrmann</surname><given-names>M</given-names></name></person-group><article-title>Machine learning for the control and monitoring of electric machine drives: advances and trends</article-title><source>IEEE Open. J. Ind. Appl.</source><year>2023</year><volume>4</volume><fpage>188</fpage><lpage>214</lpage><pub-id pub-id-type="doi">10.1109/OJIA.2023.3284717</pub-id></element-citation><mixed-citation id="mc-CR30" publication-type="journal">Zhang, S., Wallscheid, O. &#x00026; Porrmann, M. Machine learning for the control and monitoring of electric machine drives: advances and trends. <italic>IEEE Open. J. Ind. Appl.</italic><bold>4</bold>, 188&#x02013;214 (2023).</mixed-citation></citation-alternatives></ref><ref id="CR31"><label>31.</label><mixed-citation publication-type="other">Butt, C. B. &#x00026; Rahman, M. A. Intelligent Speed Control of Interior Permanent Magnet Motor Drives Using a Single Untrained Artificial Neuron, in <italic>IEEE Transactions on Industry Applications</italic>, vol. 49, no. 4, pp. 1836&#x02013;1843, July-Aug. (2013).</mixed-citation></ref><ref id="CR32"><label>32.</label><mixed-citation publication-type="other">Hu, J., Peng, T., Jia, M., Yang, Y. &#x00026; Guan, Y. Study on Electromechanical Coupling Characteristics of an Integrated Electric Drive System for Electric Vehicle, in <italic>IEEE Access</italic>, vol. 7, pp. 166493&#x02013;166508, (2019).</mixed-citation></ref><ref id="CR33"><label>33.</label><mixed-citation publication-type="other">Li, L. &#x00026; Liu, Q. Research on IPMSM Drive System Control Technology for Electric Vehicle Energy Consumption, in <italic>IEEE Access</italic>, vol. 7, pp. 186201&#x02013;186210, (2019).</mixed-citation></ref><ref id="CR34"><label>34.</label><mixed-citation publication-type="other">Guti&#x000e9;rrez-G&#x000f3;mez, L., Petry, F. &#x00026; Khadraoui, D. A Comparison Framework of Machine Learning Algorithms for Mixed-Type Variables Datasets: A Case Study on Tire-Performances Prediction, in <italic>IEEE Access</italic>, vol. 8, pp. 214902&#x02013;214914, (2020).</mixed-citation></ref><ref id="CR35"><label>35.</label><mixed-citation publication-type="other">Alquthami, T., Zulfiqar, M., Kamran, M., Milyani, A. H. &#x00026; Rasheed, M. B. A Performance Comparison of Machine Learning Algorithms for Load Forecasting in Smart Grid, in <italic>IEEE Access</italic>, vol. 10, pp. 48419&#x02013;48433, (2022).</mixed-citation></ref><ref id="CR36"><label>36.</label><mixed-citation publication-type="other">Pirbazari, A. M., Sharma, E., Chakravorty, A., Elmenreich, W. &#x00026; Rong, C. An Ensemble Approach for Multi-Step Ahead Energy Forecasting of Household Communities, in <italic>IEEE Access</italic>, vol. 9, pp. 36218&#x02013;36240, (2021).</mixed-citation></ref><ref id="CR37"><label>37.</label><mixed-citation publication-type="other">Zhang, C., Zhang, H. &#x00026; Hu, X. A Contrastive Study of Machine Learning on Funding Evaluation Prediction, in <italic>IEEE Access</italic>, vol. 7, pp. 106307&#x02013;106315, (2019).</mixed-citation></ref><ref id="CR38"><label>38.</label><mixed-citation publication-type="other">Shalev-Shwartz, S. &#x00026; Ben-David, S. <italic>Understanding Machine Learning: from Theory To Algorithms</italic> (Cambridge University Press, 2014).</mixed-citation></ref><ref id="CR39"><label>39.</label><mixed-citation publication-type="other">Naz, F. et al. Comparative Analysis of Deep Learning and Statistical Models for Air Pollutants Prediction in Urban Areas, in <italic>IEEE Access</italic>, vol. 11, pp. 64016&#x02013;64025, (2023).</mixed-citation></ref><ref id="CR40"><label>40.</label><mixed-citation publication-type="other">Ahmadi, A. et al. Long-Term Wind Power Forecasting Using Tree-Based Learning Algorithms, in <italic>IEEE Access</italic>, vol. 8, pp. 151511&#x02013;151522, (2020).</mixed-citation></ref><ref id="CR41"><label>41.</label><mixed-citation publication-type="other">Jawad, M. et al. Machine Learning Based Cost Effective Electricity Load Forecasting Model Using Correlated Meteorological Parameters, in <italic>IEEE Access</italic>, vol. 8, pp. 146847&#x02013;146864, (2020).</mixed-citation></ref><ref id="CR42"><label>42.</label><mixed-citation publication-type="other">Bao, Y., Xiong, T. &#x00026; Hu, Z. Multi-step-ahead time series prediction using multiple-output support vector regression, in <italic>Neurocomputing</italic>, vol. 129, pp. 482&#x02013;493, (2014).</mixed-citation></ref><ref id="CR43"><label>43.</label><mixed-citation publication-type="other">Duan, J. &#x00026; Kashima, H. Learning to Rank for Multi-Step Ahead Time-Series Forecasting, in <italic>IEEE Access</italic>, vol. 9, pp. 49372&#x02013;49386, (2021).</mixed-citation></ref><ref id="CR44"><label>44.</label><mixed-citation publication-type="other">Lemke, C. &#x00026; Gabrys, B. Meta-learning for time series forecasting and forecast combination, in <italic>Neurocomputing</italic>, vol. 73, pp. 2006&#x02013;2016, (2010).</mixed-citation></ref><ref id="CR45"><label>45.</label><mixed-citation publication-type="other">Asthana, P., Mishra, S., Gupta, N., Derawi, M. &#x00026; Kumar, A. Prediction of Student&#x02019;s Performance With Learning Coefficients Using Regression Based Machine Learning Models, in <italic>IEEE Access</italic>, vol. 11, pp. 72732&#x02013;72742, (2023).</mixed-citation></ref><ref id="CR46"><label>46.</label><citation-alternatives><element-citation id="ec-CR46" publication-type="journal"><person-group person-group-type="author"><name><surname>Varoquaux</surname><given-names>G</given-names></name><name><surname>Colliot</surname><given-names>O</given-names></name></person-group><article-title>Evaluating machine learning models and their diagnostic value</article-title><source>Mach. Learn. Brain Disorders Neuromethods</source><year>2023</year><volume>197</volume><fpage>601</fpage><lpage>630</lpage><pub-id pub-id-type="doi">10.1007/978-1-0716-3195-9_20</pub-id></element-citation><mixed-citation id="mc-CR46" publication-type="journal">Varoquaux, G. &#x00026; Colliot, O. Evaluating machine learning models and their diagnostic value. <italic>Mach. Learn. Brain Disorders Neuromethods</italic>. <bold>197</bold>, 601&#x02013;630 (2023).</mixed-citation></citation-alternatives></ref><ref id="CR47"><label>47.</label><mixed-citation publication-type="other">Li, T., Sun, X., Yang, Z. &#x00026; Lei, G. Simplified Two-Step model predictive control with fast voltage vector search. in <italic>IEEE Trans. Industrial Electronics</italic>, 10.1109/TIE.2024.3447757</mixed-citation></ref><ref id="CR48"><label>48.</label><mixed-citation publication-type="other">Tom, A. M. &#x00026; Febin Daya, J. L. Machine learning techniques for vector control of permanent magnet synchronous motor drives. <italic>Cogent Engineering</italic>, <bold>11</bold>, 1, (2024).</mixed-citation></ref></ref-list></back></article>