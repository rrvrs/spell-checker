<!DOCTYPE article
PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with MathML3 v1.3 20210610//EN" "JATS-archivearticle1-3-mathml3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.3" xml:lang="en" article-type="research-article"><?properties open_access?><processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats"><restricted-by>pmc</restricted-by></processing-meta><front><journal-meta><journal-id journal-id-type="nlm-ta">Sensors (Basel)</journal-id><journal-id journal-id-type="iso-abbrev">Sensors (Basel)</journal-id><journal-id journal-id-type="publisher-id">sensors</journal-id><journal-title-group><journal-title>Sensors (Basel, Switzerland)</journal-title></journal-title-group><issn pub-type="epub">1424-8220</issn><publisher><publisher-name>MDPI</publisher-name></publisher></journal-meta>
<article-meta><article-id pub-id-type="pmid">40006297</article-id><article-id pub-id-type="pmc">PMC11859708</article-id><article-id pub-id-type="doi">10.3390/s25041069</article-id><article-id pub-id-type="publisher-id">sensors-25-01069</article-id><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title>A Particle Swarm Optimization-Based Queue Scheduling and Optimization Mechanism for Large-Scale Low-Earth-Orbit Satellite Communication Networks</article-title></title-group><contrib-group><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0009-0003-1115-7441</contrib-id><name><surname>Zhang</surname><given-names>Ziyong</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Conceptualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/conceptualization/">Conceptualization</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Software" vocab-term-identifier="https://credit.niso.org/contributor-roles/software/">Software</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Validation" vocab-term-identifier="https://credit.niso.org/contributor-roles/validation/">Validation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x02013; original draft" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-original-draft/">Writing &#x02013; original draft</role><xref rid="af1-sensors-25-01069" ref-type="aff">1</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-9561-4085</contrib-id><name><surname>Dong</surname><given-names>Tao</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Formal analysis" vocab-term-identifier="https://credit.niso.org/contributor-roles/formal-analysis/">Formal analysis</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Investigation" vocab-term-identifier="https://credit.niso.org/contributor-roles/investigation/">Investigation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Supervision" vocab-term-identifier="https://credit.niso.org/contributor-roles/supervision/">Supervision</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Project administration" vocab-term-identifier="https://credit.niso.org/contributor-roles/project-administration/">Project administration</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Funding acquisition" vocab-term-identifier="https://credit.niso.org/contributor-roles/funding-acquisition/">Funding acquisition</role><xref rid="af1-sensors-25-01069" ref-type="aff">1</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0003-0294-3267</contrib-id><name><surname>Yin</surname><given-names>Jie</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Conceptualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/conceptualization/">Conceptualization</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Methodology" vocab-term-identifier="https://credit.niso.org/contributor-roles/methodology/">Methodology</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Validation" vocab-term-identifier="https://credit.niso.org/contributor-roles/validation/">Validation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x02013; review &#x00026; editing" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-review-editing/">Writing &#x02013; review &#x00026; editing</role><xref rid="af1-sensors-25-01069" ref-type="aff">1</xref><xref rid="c1-sensors-25-01069" ref-type="corresp">*</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0003-3684-0768</contrib-id><name><surname>Xu</surname><given-names>Yue</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Data curation" vocab-term-identifier="https://credit.niso.org/contributor-roles/data-curation/">Data curation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Visualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/visualization/">Visualization</role><xref rid="af1-sensors-25-01069" ref-type="aff">1</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0009-0009-0284-6601</contrib-id><name><surname>Luo</surname><given-names>Zongyi</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Resources" vocab-term-identifier="https://credit.niso.org/contributor-roles/resources/">Resources</role><xref rid="af1-sensors-25-01069" ref-type="aff">1</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-8533-1612</contrib-id><name><surname>Jiang</surname><given-names>Hao</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Software" vocab-term-identifier="https://credit.niso.org/contributor-roles/software/">Software</role><xref rid="af2-sensors-25-01069" ref-type="aff">2</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-6955-2087</contrib-id><name><surname>Wu</surname><given-names>Jing</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x02013; review &#x00026; editing" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-review-editing/">Writing &#x02013; review &#x00026; editing</role><xref rid="af2-sensors-25-01069" ref-type="aff">2</xref></contrib></contrib-group><contrib-group><contrib contrib-type="editor"><name><surname>Lv</surname><given-names>Tiejun</given-names></name><role>Academic Editor</role></contrib><contrib contrib-type="editor"><name><surname>Zeng</surname><given-names>Jie</given-names></name><role>Academic Editor</role></contrib><contrib contrib-type="editor"><name><surname>Su</surname><given-names>Xin</given-names></name><role>Academic Editor</role></contrib></contrib-group><aff id="af1-sensors-25-01069"><label>1</label>State Key Laboratory of Space-Ground Integrated Information Technology, Space Star Technology Co., Ltd., Beijing 100095, China; <email>zhangkeke0831@126.com</email> (Z.Z.); <email>dongtaoandy@163.com</email> (T.D.); <email>xubancun509@163.com</email> (Y.X.); <email>zy_luo1@163.com</email> (Z.L.)</aff><aff id="af2-sensors-25-01069"><label>2</label>School of Electronic Information, Wuhan University, Wuhan 430072, China; <email>jh@whu.edu.cn</email> (H.J.); <email>wujing@whu.edu.cn</email> (J.W.)</aff><author-notes><corresp id="c1-sensors-25-01069"><label>*</label>Correspondence: <email>kingjack333333@126.com</email></corresp></author-notes><pub-date pub-type="epub"><day>11</day><month>2</month><year>2025</year></pub-date><pub-date pub-type="collection"><month>2</month><year>2025</year></pub-date><volume>25</volume><issue>4</issue><elocation-id>1069</elocation-id><history><date date-type="received"><day>19</day><month>11</month><year>2024</year></date><date date-type="rev-recd"><day>21</day><month>1</month><year>2025</year></date><date date-type="accepted"><day>27</day><month>1</month><year>2025</year></date></history><permissions><copyright-statement>&#x000a9; 2025 by the authors.</copyright-statement><copyright-year>2025</copyright-year><license><ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>).</license-p></license></permissions><abstract><p>The spatial topology of large-scale low-Earth-orbit satellite communication networks is dynamically time-variant, and the load on the output ports of network nodes is continuously changing. The lengths and numbers of output port queues at each network node can affect the packet loss rate and end-to-end latency of traffic flows. In order to provide high-quality satellite communication services, it is necessary to schedule and optimize the lengths and numbers of queues used for transmitting time-sensitive traffic flows at each node&#x02019;s output port to achieve the best deterministic transmission performance. This paper introduces a queue scheduling optimization mechanism based on the Particle Swarm Optimization algorithm (PSO-QSO) for large-scale low-Earth-orbit satellite communication networks. This method analyzes the relevant parameters of various traffic flows transmitted through the network and calculates the maximum time-sensitive business load within network nodes. It applies the Particle Swarm Optimization algorithm to calculate the optimal solution for the length and number of queues at each node&#x02019;s output port used for forwarding time-sensitive traffic flows. The mechanism proposed in this paper ensures the deterministic end-to-end transmission of time sensitive traffic in large-scale low-Earth-orbit satellite communication networks and can provide real-time satellite communication services.</p></abstract><kwd-group><kwd>large-scale low-Earth-orbit satellite communication networks</kwd><kwd>time-sensitive traffic</kwd><kwd>queue scheduling and optimization</kwd><kwd>particle swarm optimization</kwd></kwd-group><funding-group><award-group><funding-source>National Key R&#x00026;D Program of China</funding-source><award-id>2022YFB2902504</award-id></award-group><funding-statement>This work was funded by the National Key R&#x00026;D Program of China (2022YFB2902504).</funding-statement></funding-group></article-meta></front><body><sec sec-type="intro" id="sec1-sensors-25-01069"><title>1. Introduction</title><p>Satellite communications have the advantages of wide coverage, high flexibility, and large communication capacity and can avoid the adverse effects of terrain and other factors, supporting real-time, high-quality, and reliable communications in the fields of military, aviation, navigation, and scientific research. Satellite communication will play an important role in the next generation of wireless communication systems [<xref rid="B1-sensors-25-01069" ref-type="bibr">1</xref>]. Satellites can be categorized into different types based on their orbital altitudes: low-Earth-orbit (LEO) satellites, medium-Earth-orbit (MEO) satellites, and geostationary orbit (GEO) satellites. Among these, large-scale LEO satellite communication networks, consisting of hundreds or even thousands of LEO satellites with lower orbital altitudes, are designed to provide high-speed broadband Internet connectivity [<xref rid="B2-sensors-25-01069" ref-type="bibr">2</xref>]. Large-scale LEO satellite communication networks can offer smaller end-to-end latencies, thus supporting real-time multimedia applications, presenting a broad scope for development [<xref rid="B3-sensors-25-01069" ref-type="bibr">3</xref>].</p><p>Compared to terrestrial communication networks, large-scale LEO satellite communication networks have many distinctive features [<xref rid="B4-sensors-25-01069" ref-type="bibr">4</xref>]. The spatial scale of satellite communication networks is vast, with limited computing and forwarding capacities [<xref rid="B5-sensors-25-01069" ref-type="bibr">5</xref>]. Fortunately, with the advancement of laser communication technology, establishing reliable, high-speed inter-satellite links (ISLs) have become feasible [<xref rid="B6-sensors-25-01069" ref-type="bibr">6</xref>]. The propagation delay between LEO satellites is typically in the tens of milliseconds range [<xref rid="B7-sensors-25-01069" ref-type="bibr">7</xref>]. Compared to terrestrial networks, large-scale low-Earth-orbit satellite communication networks exhibit higher propagation delays, and their spatial topology presents periodic variability, which results in periodic changes in propagation delay [<xref rid="B8-sensors-25-01069" ref-type="bibr">8</xref>]. Furthermore, new traffic flows are continuously injected into the network, resulting in constant changes in the load on the output ports of the nodes within the network. A schematic of a large-scale LEO satellite communication network is shown in <xref rid="sensors-25-01069-f001" ref-type="fig">Figure 1</xref>.</p><p>Time-Sensitive Networking (TSN) defines a series of IEEE standards that enhance the capabilities of traditional Ethernet, enabling it to support real-time and low-latency data transmission needs. Currently, its applications have expanded to multiple fields, providing critical network infrastructure support across various industries [<xref rid="B9-sensors-25-01069" ref-type="bibr">9</xref>]. Traditional network technologies often struggle to meet the strict requirements for synchronicity, low latency, and high reliability in the aerospace sector.</p><p>Moreover, the orbital altitude of GEO satellites is 35,786 km, that of MEO satellites ranges from 2000 to 20,000 km, and that of LEO satellites ranges from 500 to 2000 km. The length of an ISL between two satellites can be seen in <xref rid="sensors-25-01069-f002" ref-type="fig">Figure 2</xref>. The average Earth radius is denoted by <inline-formula><mml:math id="mm1" overflow="scroll"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>E</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. <inline-formula><mml:math id="mm2" overflow="scroll"><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mi>A</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm3" overflow="scroll"><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mi>B</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> are the orbital altitudes of satellites A and B, respectively, and <inline-formula><mml:math id="mm4" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>&#x003bb;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&#x003c6;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm5" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>&#x003bb;</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&#x003c6;</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> are the sub-satellite point longitudes and latitudes of satellites A and B, respectively. Then, the length of the ISL can be calculated using Equation (<xref rid="FD1-sensors-25-01069" ref-type="disp-formula">1</xref>): <disp-formula id="FD1-sensors-25-01069"><label>(1)</label><mml:math id="mm6" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msqrt><mml:mrow><mml:msup><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>R</mml:mi><mml:mi>E</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:mi>A</mml:mi></mml:msub></mml:mfenced><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>R</mml:mi><mml:mi>E</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:mi>B</mml:mi></mml:msub></mml:mfenced><mml:mn>2</mml:mn></mml:msup><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>R</mml:mi><mml:mi>E</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:mi>A</mml:mi></mml:msub></mml:mfenced><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>R</mml:mi><mml:mi>E</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:mi>B</mml:mi></mml:msub></mml:mfenced><mml:mo form="prefix">cos</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msqrt></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm7" overflow="scroll"><mml:mrow><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:math></inline-formula> is the angle between satellites A and B as seen from the center of the Earth. This angle can be calculated from the longitudes and latitudes of the sub-satellite points: <disp-formula id="FD2-sensors-25-01069"><label>(2)</label><mml:math id="mm8" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">cos</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mo form="prefix">sin</mml:mo><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>&#x003d5;</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mfenced><mml:mo form="prefix">sin</mml:mo><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>&#x003d5;</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mfenced><mml:mo>+</mml:mo><mml:mo form="prefix">cos</mml:mo><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>&#x003d5;</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mfenced><mml:mo form="prefix">cos</mml:mo><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>&#x003d5;</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mfenced><mml:mo form="prefix">cos</mml:mo><mml:mfenced separators="" open="(" close=")"><mml:msub><mml:mi>&#x003bb;</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>&#x003bb;</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>From Equations (1) and (2), it can be seen that the length of the ISL increases with the increase in the satellite orbital altitude when <inline-formula><mml:math id="mm9" overflow="scroll"><mml:mrow><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:math></inline-formula> is fixed. In GEO and MEO satellite communication networks, the high orbital altitudes of the satellites result in longer ISLs, thereby leading to longer propagation delays. Therefore, the demand for low-latency data transmission for time-sensitive services cannot be met. In LEO satellite communication networks, the link propagation delay is relatively short. Applying TSN technology to LEO satellite communication networks can build low-latency, low-jitter communication networks, providing an efficient, reliable, and real-time solution for satellite communication, which helps to improve the overall performance and service quality of satellite communication systems [<xref rid="B5-sensors-25-01069" ref-type="bibr">5</xref>].</p><p>The Cyclic Queuing and Forwarding (CQF) mechanism is primarily used for traffic control and packet scheduling in network switches or routers [<xref rid="B10-sensors-25-01069" ref-type="bibr">10</xref>]. It is considered a key technology for achieving bounded latency transmission in TSN. Its core purpose is to ensure fairness among different traffic flows and efficient forwarding, and it is considered a key technology for achieving bounded latency transmission in TSN. The authors in [<xref rid="B11-sensors-25-01069" ref-type="bibr">11</xref>] achieved CQF by injecting timing plans that map time-sensitive flows to underlying resources in both time and space. The DetNet working group extended CQF to Cyclic Scheduled Queuing and Forwarding (CSQF) to support deterministic long-distance transmission. The authors in [<xref rid="B12-sensors-25-01069" ref-type="bibr">12</xref>] constructed a large-scale deterministic IP network on actual systems and testbeds of CENI. In [<xref rid="B13-sensors-25-01069" ref-type="bibr">13</xref>], the authors addressed the joint routing and scheduling issues of CSQF. In [<xref rid="B14-sensors-25-01069" ref-type="bibr">14</xref>], the developers created an agent to support remote cyclic scheduling on profinet and IP protocols. The length of the port queues significantly impacts the network transmission performance based on the CQF mechanism and should be configured flexibly based on the specific network environment, service requirements, Quality of Service (QoS) needs, and the capabilities of network devices. How to reasonably choose the length of the queues is an issue that urgently needs to be addressed [<xref rid="B15-sensors-25-01069" ref-type="bibr">15</xref>].</p><p>This paper presents a Particle Swarm Optimization-based queue scheduling and optimization mechanism (PSO-QSO) for large-scale low-Earth-orbit (LEO) satellite communication networks with the following innovative contributions:<list list-type="order"><list-item><p>This paper proposes a novel scheduling and optimization mechanism specifically tailored for large-scale LEO satellite communication networks, capable of effectively managing time-sensitive service loads;</p></list-item><list-item><p>This paper incorporates the PSO algorithm to optimize the lengths and numbers of the queues within the output ports of each satellite node, obtaining the optimal queue configurations for handling time-sensitive traffic;</p></list-item><list-item><p>Through simulation validation, this paper demonstrates that this mechanism can provide the high-quality and efficient transmission of time-sensitive service traffic in large-scale LEO satellite communication networks.</p></list-item></list></p><p>The remainder of this article is organized as follows: <xref rid="sec2-sensors-25-01069" ref-type="sec">Section 2</xref> introduces the queue model of LEO satellites and the impact of CQF queue lengths on transmission performance and describes the principles of the proposed queue optimization mechanism. <xref rid="sec3-sensors-25-01069" ref-type="sec">Section 3</xref> presents the analysis and summary of the simulation results. In <xref rid="sec4-sensors-25-01069" ref-type="sec">Section 4</xref>, the advantages of the proposed mechanism and the possible future research directions are discussed. This article is concluded in <xref rid="sec5-sensors-25-01069" ref-type="sec">Section 5</xref>.</p></sec><sec id="sec2-sensors-25-01069"><title>2. Queue Scheduling and Optimization Mechanism of Large-Scale LEO Satellite Communication Networks</title><sec id="sec2dot1-sensors-25-01069"><title>2.1. CQF Mechanism</title><p>The CQF mechanism adopts the gating method from the TAS mechanism, adjusting the state of queues to achieve the forwarding of time-sensitive traffic. CQF utilizes two queues for forwarding time-sensitive service traffic; in a CQF slot, packets in the Open-state queue are forwarded to the next node, while incoming packets are directed to the queue in the Close state. The status of the two queues cycles periodically with the progression of the slot. Within a slot, all packets in the Open-state queue must be completely forwarded.</p><p>If the slot duration is <inline-formula><mml:math id="mm10" overflow="scroll"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, the propagation delay is <inline-formula><mml:math id="mm11" overflow="scroll"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, and the number of hops for end-to-end packet transmission is <italic toggle="yes">h</italic>; disregarding packet processing delay, the maximum end-to-end transmission delay is then <inline-formula><mml:math id="mm12" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi>h</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and the minimum delay is <inline-formula><mml:math id="mm13" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi>h</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. The transmission mechanism of CQF and its maximum and minimum delay jitter are shown in <xref rid="sensors-25-01069-f003" ref-type="fig">Figure 3</xref>.</p><p>The CQF mechanism requires that all nodes in the network must complete slot synchronization and strict alignment of slots, and the sum of transmission delay and propagation delay in the network must be less than the length of the slot. To apply the CQF mechanism to large-scale LEO satellite communication networks, this study utilized large-scale deterministic network forwarding technology (LDN). AnLDN assigns a slot ID to each slot at the nodes. In an LDN, when a packet leaves a node&#x02019;s output port, it carries the sending slot ID of that node. When the downstream node receives this packet, it maps the upstream node&#x02019;s sending slot ID to its own sending slot ID, and then decides which queue the packet should join based on the sending slot. Therefore, with each node using LDN technology, the processing time is roughly the same, and the need for precision in time synchronization is reduced.</p><p>The length of the CQF queues significantly impacts the forwarding performance of time-sensitive traffic [<xref rid="B15-sensors-25-01069" ref-type="bibr">15</xref>]. When CQF queues are too short, although the single-hop queuing delay for traffic transmission is minimal, there is not enough space within the switch ports to buffer more incoming flows, leading to packet loss due to memory overflow. When CQF queues are too long, the single-hop queuing delay for traffic transmission becomes excessively high. This results in an overly long end-to-end transmission delay for the flow, potentially making the flow unschedulable and worsening the network system&#x02019;s schedulability performance. When there is a high load of time-sensitive traffic on the switch and the maximum tolerable end-to-end transmission delay for various services is short, the traditional CQF mechanism struggles to meet the transmission needs of time-sensitive traffic. Therefore, it is necessary to analyze and optimize the selection of queue lengths and numbers according to the specific scenarios of the network. The influence of the CQF queue length on transmission effect is shown in <xref rid="sensors-25-01069-f004" ref-type="fig">Figure 4</xref>.</p></sec><sec id="sec2dot2-sensors-25-01069"><title>2.2. On-Board Switch Architecture for LEO Satellites</title><p>In large-scale LEO satellite communication networks, the onboard switches consist of a receiving buffer module, a packet header processing module, a switching matrix, and multiple sending buffer modules for inter-satellite links. Within the switch, each sending buffer module is responsible for the traffic scheduling and forwarding of an inter-satellite link, divided into eight queues (Q0&#x02013;Q7) according to IEEE 802.1 Qch [<xref rid="B16-sensors-25-01069" ref-type="bibr">16</xref>]. We assume that the CQF mechanism is applicable to satellites [<xref rid="B17-sensors-25-01069" ref-type="bibr">17</xref>]. For time-sensitive traffic, its packets are stored in Q6 and Q7. For non-time-sensitive traffic, its packets are stored in Q0 to Q5. The structure of onboard switches in large-scale LEO satellite communication networks is illustrated in <xref rid="sensors-25-01069-f005" ref-type="fig">Figure 5</xref> [<xref rid="B17-sensors-25-01069" ref-type="bibr">17</xref>]. As shown in <xref rid="sensors-25-01069-f005" ref-type="fig">Figure 5</xref>, the PSO-QSO mechanism proposed in this paper is applied to optimize the settings of the numbers and lengths of the queues in <inline-formula><mml:math id="mm14" overflow="scroll"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>X</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> buffers.</p></sec><sec id="sec2dot3-sensors-25-01069"><title>2.3. Queue Analysis and Optimization Mechanism Based on PSO Algorithm</title><p>The traditional traversal algorithm identifies the optimal combination of queue lengths and numbers for the transmission of time-sensitive traffic within each satellite node by trying every possible combination. It requires all possible cases to be calculated sequentially, and the optimal result can only be determined by comparing the results of the calculations for all cases [<xref rid="B18-sensors-25-01069" ref-type="bibr">18</xref>]. However, when the total number of satellites in the network is <italic toggle="yes">s</italic>, the computational complexity of the traversal algorithm becomes <inline-formula><mml:math id="mm15" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mi>u</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>s</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula>. As the total number of satellites in the network increases, the traversal algorithm has a large amount of computational workload, and the onboard satellite switches will struggle to complete the computation.</p><p>The PSO-QSO mechanism proposed in this paper calculates the maximum time-sensitive service load in the network and utilizes the PSO algorithm to optimize the settings of queues at the output ports of each node in the large-scale LEO satellite communication network, obtaining the optimal combination of queue lengths and numbers for transmitting time-sensitive traffic.</p><p>In this paper, the maximum transmission unit (<inline-formula><mml:math id="mm16" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>M</mml:mi><mml:mi>T</mml:mi><mml:mi>U</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>) of time-sensitive traffic transmitted within large-scale LEO satellite communication networks is considered to be 1500&#x000a0;bytes. To ensure all packets can be fully accommodated in the queues, the queue length <italic toggle="yes">l</italic> is set as <inline-formula><mml:math id="mm17" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mi>M</mml:mi><mml:mi>T</mml:mi><mml:mi>U</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:mi>u</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm18" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>u</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mo>[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>200</mml:mn><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. The number of queues <italic toggle="yes">n</italic> is bounded by <inline-formula><mml:math id="mm19" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mo>[</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>7</mml:mn><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. If optimization calculations are performed frequently, it will lead to high computational costs. The frequent reconfiguration of the onboard switch buffer based on the calculation results will also affect the normal transmission of time-sensitive traffic. Therefore, this paper considers performing a calculation and configuration of queue lengths and numbers every 1000&#x000a0;transmission slots. The loads of time-sensitive traffic arriving at the output ports of each node within the 1000 slots are calculated, and the maximum value is recorded as <inline-formula><mml:math id="mm20" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>e</mml:mi><mml:mi>a</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. To obtain the optimal combination of queue lengths and numbers, the settings of queues need to be able to withstand the highest load <inline-formula><mml:math id="mm21" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>e</mml:mi><mml:mi>a</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> while keeping the queue lengths and numbers as small as possible. Therefore, the objective function of the PSO can be expressed&#x000a0;as<disp-formula id="FD3-sensors-25-01069"><label>(3)</label><mml:math id="mm22" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfenced separators="" open="|" close="|"><mml:mi>M</mml:mi><mml:mi>T</mml:mi><mml:mi>U</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:mi>u</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>e</mml:mi><mml:mi>a</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mfenced></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>In Equation (<xref rid="FD3-sensors-25-01069" ref-type="disp-formula">3</xref>), <inline-formula><mml:math id="mm23" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>M</mml:mi><mml:mi>T</mml:mi><mml:mi>U</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:mi>u</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> represents the product of the lengths and numbers of the queues used to receive time-sensitive traffic, i.e., the total depth of the queues. Detailed steps of the proposed optimization mechanism are as follows.</p><p>Firstly, the parameters of the PSO algorithm are initialized. Learning factors <inline-formula><mml:math id="mm24" overflow="scroll"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm25" overflow="scroll"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> are used to control the global search and local search ability of PSO. While self learning factor <inline-formula><mml:math id="mm26" overflow="scroll"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> is larger, the particle flight trajectory mainly refers to the history information of the particles themselves. While social learning factor <inline-formula><mml:math id="mm27" overflow="scroll"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> is larger, the particle flight trajectory mainly refers to the social information of particles movement [<xref rid="B19-sensors-25-01069" ref-type="bibr">19</xref>]. In this study, both learning factors <inline-formula><mml:math id="mm28" overflow="scroll"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm29" overflow="scroll"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> were set to 1.5. <inline-formula><mml:math id="mm30" overflow="scroll"><mml:mrow><mml:mi>&#x003c9;</mml:mi></mml:mrow></mml:math></inline-formula> is an inertia weight that is initialized typically in the range of [0, 1]. A larger inertia weight facilitates global exploration, and a smaller inertia weight tends to facilitate local exploration to fine-tune the current search area [<xref rid="B20-sensors-25-01069" ref-type="bibr">20</xref>]. In this study, <inline-formula><mml:math id="mm31" overflow="scroll"><mml:mrow><mml:mi>&#x003c9;</mml:mi></mml:mrow></mml:math></inline-formula> was set to 0.9 to enhance the search speed for the global optimal solution. In most applications, authors follow the initial suggestion from [<xref rid="B21-sensors-25-01069" ref-type="bibr">21</xref>] and restrict the number of particles NP to 20&#x02013;50 particles. The algorithm proposed in this paper utilizes 20 particles. To improve the search accuracy, this study set the maximum number of iterations to 1000.</p><p>The maximum position of each particle is<disp-formula id="FD4-sensors-25-01069"><label>(4)</label><mml:math id="mm32" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">X</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mn>200</mml:mn><mml:mo>,</mml:mo><mml:mn>7</mml:mn><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>The minimum position of each particle is<disp-formula id="FD5-sensors-25-01069"><label>(5)</label><mml:math id="mm33" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">X</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>The maximum velocity of each particle is <inline-formula><mml:math id="mm34" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">V</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, and the minimum velocity of each particle is <inline-formula><mml:math id="mm35" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">V</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>In this study, the initial positions of each particle in the population were randomly initialized as<disp-formula id="FD6-sensors-25-01069"><label>(6)</label><mml:math id="mm36" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02a7d;</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02a7d;</mml:mo><mml:mn>20</mml:mn></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>The initial velocity of each particle in the swarm is randomly initialized as <inline-formula><mml:math id="mm37" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">V</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. The fitness function value of each particle at the initial position is calculated as<disp-formula id="FD7-sensors-25-01069"><label>(7)</label><mml:math id="mm38" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo>[</mml:mo><mml:mi>M</mml:mi><mml:mi>T</mml:mi><mml:mi>U</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#x000b7;</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>e</mml:mi><mml:mi>a</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>The historical optimal position of each individual particle is <inline-formula><mml:math id="mm39" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">pbest</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02a7d;</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02a7d;</mml:mo><mml:mn>20</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>. And the global optimal position of the swarm is <inline-formula><mml:math id="mm40" overflow="scroll"><mml:mrow><mml:mi mathvariant="italic">gbest</mml:mi></mml:mrow></mml:math></inline-formula>.</p><p>According to the individual historical optimal position of each particle and the global historical optimal position of the population, the velocity update formula is used to update the velocity of each particle <inline-formula><mml:math id="mm41" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="italic">V</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mo>&#x02032;</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> and further update the position of each particle <inline-formula><mml:math id="mm42" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="italic">X</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mo>&#x02032;</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula>. The velocity update formula can be defined as<disp-formula id="FD8-sensors-25-01069"><label>(8)</label><mml:math id="mm43" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi mathvariant="italic">V</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mo>&#x02032;</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:mi>&#x003c9;</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:msub><mml:mi mathvariant="italic">V</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&#x000b7;</mml:mo><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>d</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x000b7;</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">pbest</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi mathvariant="italic">X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&#x000b7;</mml:mo><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>d</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x000b7;</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="italic">gbest</mml:mi><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi mathvariant="italic">X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula><disp-formula id="FD9-sensors-25-01069"><label>(9)</label><mml:math id="mm44" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi mathvariant="italic">X</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mo>&#x02032;</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="italic">X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msubsup><mml:mi mathvariant="italic">V</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mo>&#x02032;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></disp-formula>
where the <inline-formula><mml:math id="mm45" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>d</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> function returns a random number uniformly distributed in the interval (0, 1). The fitness function value of each particle <inline-formula><mml:math id="mm46" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mo>&#x02032;</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> is recalculated, and the individual historical optimal position of each particle <inline-formula><mml:math id="mm47" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">pbest</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and the global optimal position of the swarm <inline-formula><mml:math id="mm48" overflow="scroll"><mml:mrow><mml:mi mathvariant="italic">gbest</mml:mi></mml:mrow></mml:math></inline-formula> are updated. Then, the individual historical optimal position of each particle <inline-formula><mml:math id="mm49" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">pbest</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and the global optimal position of the swarm <inline-formula><mml:math id="mm50" overflow="scroll"><mml:mrow><mml:mi mathvariant="italic">gbest</mml:mi></mml:mrow></mml:math></inline-formula> are iteratively calculated until the number of iterations reaches <inline-formula><mml:math id="mm51" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>T</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mn>3</mml:mn></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>. At this time, the global optimal position of the swarm <inline-formula><mml:math id="mm52" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="italic">gbest</mml:mi><mml:mo>=</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is the optimal solution for the lengths and numbers of the queues within the output ports of each satellite node in the large-scale LEO constellation for transmitting time-sensitive traffic.</p><p>The optimal solution <inline-formula><mml:math id="mm53" overflow="scroll"><mml:mrow><mml:mi mathvariant="italic">gbest</mml:mi></mml:mrow></mml:math></inline-formula> obtained by the optimization algorithm is just enough to withstand the highest time-sensitive traffic load <inline-formula><mml:math id="mm54" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>e</mml:mi><mml:mi>a</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. The lengths and numbers of queues can only be positive integers, so <inline-formula><mml:math id="mm55" overflow="scroll"><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm56" overflow="scroll"><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> must be rounded. If the lengths and numbers of queues are rounded down, the total depth of the queues used to transmit time-sensitive traffic is insufficient to withstand <inline-formula><mml:math id="mm57" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>e</mml:mi><mml:mi>a</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, resulting in packet loss. To this end, the length and number of queues need to be rounded up. To reduce the packet loss rate of time-sensitive service traffic, <inline-formula><mml:math id="mm58" overflow="scroll"><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm59" overflow="scroll"><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> should be rounded up. This can be defined as<disp-formula id="FD10-sensors-25-01069"><label>(10)</label><mml:math id="mm60" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>U</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>&#x02308;</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>&#x02309;</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>&#x02308;</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>&#x02309;</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>Check whether <inline-formula><mml:math id="mm61" overflow="scroll"><mml:mrow><mml:msub><mml:mi>U</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm62" overflow="scroll"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> meet the following condition: <disp-formula id="FD11-sensors-25-01069"><label>(11)</label><mml:math id="mm63" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>M</mml:mi><mml:mi>T</mml:mi><mml:mi>U</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:msub><mml:mi>U</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>&#x000b7;</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>e</mml:mi><mml:mi>a</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02a7e;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>If the conditions are met, then <inline-formula><mml:math id="mm64" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>M</mml:mi><mml:mi>T</mml:mi><mml:mi>U</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:msub><mml:mi>U</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="mm65" overflow="scroll"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is the optimal solution for the lengths and numbers of the queues within the output ports of each satellite node in the large-scale LEO constellation for transmitting time-sensitive traffic. The process of optimizing the lengths and numbers of the queues by this mechanism is shown in Algorithm&#x000a0;1.</p><p>After optimizing the queue lengths and numbers for scheduling and forwarding time-sensitive traffic flows, the number of queues may exceed two, deviating from traditional CQF forwarding. Similar to CQF, among the n queues designated for scheduling and forwarding time-sensitive traffic, at any given moment, only one queue is in the Open state, referred to as the sending queue; the rest are in the Close state, known as receiving queues. The sending queue is numbered 0, while the remaining receiving queues are sequentially numbered as <inline-formula><mml:math id="mm66" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x022ef;</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>. When the time slot switches, the sending queue from the previous time slot, having been emptied, switches its number to <inline-formula><mml:math id="mm67" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> and its state to Close; the numbers of the other receiving queues change to <inline-formula><mml:math id="mm68" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>N</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:mi>N</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>. Subsequently, the queue with <inline-formula><mml:math id="mm69" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>N</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> switches its state to Open, becoming the new sending queue for the upcoming time slot. This process repeats in a cyclical manner, resulting in periodic changes in queue status. Therefore, when a packet arrives during the <italic toggle="yes">i</italic>th time slot and enters a queue numbered N, it must wait until the <inline-formula><mml:math id="mm70" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>N</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>th time slot to have a chance for&#x000a0;transmission.
<array><tbody><tr><td style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1"><bold>Algorithm 1:</bold> PSO-QSO mechanism.</td></tr><tr><td style="border-bottom:solid thin" rowspan="1" colspan="1"><p><inline-graphic xlink:href="sensors-25-01069-i001.jpg"/></p></td></tr></tbody></array></p></sec></sec><sec sec-type="results" id="sec3-sensors-25-01069"><title>3. Results</title><p>In this paper, simulation experiments were carried out on the proposed optimization mechanism, and the effectiveness of the proposed mechanism is demonstrated by the analysis of simulation results. The optimization mechanism proposed in this paper optimizes the queue lengths and numbers of the output ports of the onboard switches, mainly acting on the internals of the satellites to reduce the queuing delay. The inter-satellite distances mainly affect the propagation delay and have no impact on the queuing delay. Therefore, the proposed optimization mechanism can be flexibly applied to various configurations of large-scale satellite networks. To simplify the complexity of simulation experiments, the simulation experiments in this study employed the Iridium constellation [<xref rid="B22-sensors-25-01069" ref-type="bibr">22</xref>], which is composed of 66 LEO satellites divided into six orbital planes.</p><p>The topology of the LEO satellite communication network adopted in this simulation is shown in <xref rid="sensors-25-01069-f006" ref-type="fig">Figure 6</xref>. This paper considers two types of satellite formations:<list list-type="order"><list-item><p>Cluster formation: one satellite in each of three adjacent orbital planes, numbered 17, 28, and 39. They can correspond to S3, S4, and S5 in <xref rid="sensors-25-01069-f004" ref-type="fig">Figure 4</xref>.</p></list-item><list-item><p>Trailing formation: three adjacent satellites in the same orbital plane; their numbers are 27, 28, 29. Similarly, they can correspond to S3&#x02019;, S4&#x02019;, and S5&#x02019; in <xref rid="sensors-25-01069-f004" ref-type="fig">Figure 4</xref>.</p></list-item></list></p><p>For the simulation, we describe a concise scenario to illustrate the behavior of traffic. Satellite communication technology is constantly advancing, especially in the field of inter-satellite links. Thanks to technological innovations such as laser communication systems, higher data rates are becoming increasingly feasible. Therefore, the data transmission rate of the satellite node&#x02019;s output port was set to <inline-formula><mml:math id="mm111" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>R</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> Gb/s, and the transmission slot <inline-formula><mml:math id="mm112" overflow="scroll"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> was set to the time it takes for a queue to be completely emptied, that is, <inline-formula><mml:math id="mm113" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mi>l</mml:mi><mml:mi>R</mml:mi></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>There are various types of services in satellite communication networks, and the packet size may vary greatly. To simulate diverse and realistic traffic, we sample packet sizes from a uniform distribution ranging from 64 to 1500 bytes. This range covers the typical packet sizes of small control signals and large data payloads.</p><p>In a dynamic network environment, data traffic is unpredictable. Satellite communication networks often deal with bursty and sporadic traffic patterns, where packets can arrive at any time within a transmission slot. To simulate this randomness, we sampled the arrival time from a uniform distribution ranging from 0 to <inline-formula><mml:math id="mm114" overflow="scroll"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p><p>The main parameters in the simulation are shown in <xref rid="sensors-25-01069-t001" ref-type="table">Table 1</xref>.</p><sec id="sec3dot1-sensors-25-01069"><title>3.1. Transmission Delay and Total Queuing Delay of Multi-Node End-to-End Transmission</title><p><xref rid="sensors-25-01069-f007" ref-type="fig">Figure 7</xref> presents the simulation results of the transmission delay and propagation delay for multi-node end-to-end transmission within a single period, under the condition of an unchanged load. From the figure, it can be seen that the optimization algorithm proposed in this paper is capable of reducing the end-to-end transmission delay for multiple nodes, thus enhancing the schedulability of the network. As shown in <xref rid="sensors-25-01069-f007" ref-type="fig">Figure 7</xref>, different satellite formations mainly affect the inter-satellite distances. Therefore, different satellite formations will not affect the performance of this mechanism.</p><p><xref rid="sensors-25-01069-f008" ref-type="fig">Figure 8</xref> shows the probability density function of the total queuing delay for multi-node end-to-end transmission within one cycle obtained from the simulation. As shown in the figure, the average queuing delay before optimization is 2.12 ms, and the average queuing delay after optimization is 1.07 ms. The queuing delay after optimization is only 50.47% of the delay before optimization. Thus, the optimization algorithm proposed in this paper can reduce the total queuing delay of packet transmission, thereby reducing end-to-end transmission delay.</p></sec><sec id="sec3dot2-sensors-25-01069"><title>3.2. Packet Loss Rate of Multi-Node End-to-End Transmission</title><p><xref rid="sensors-25-01069-f009" ref-type="fig">Figure 9</xref> illustrates the simulation results of the packet loss rate for multi-node end-to-end transmission under different loads. As shown in the figure, when the network load is <inline-formula><mml:math id="mm115" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>5.66</mml:mn><mml:mo>&#x000d7;</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mn>9</mml:mn></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> b/s, the packet loss rate before optimization is 1.1%, while the packet loss rate after optimization is only 0.05&#x02030;. Thus, the optimization algorithm proposed in this paper can reduce the packet loss rate during end-to-end transmission.</p></sec><sec id="sec3dot3-sensors-25-01069"><title>3.3. Network Throughput Calculation</title><p><xref rid="sensors-25-01069-f010" ref-type="fig">Figure 10</xref> shows the simulation results of the network throughput under different loads in a scenario without microbursts. As shown in the figure, when the network load is <inline-formula><mml:math id="mm116" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>1.04</mml:mn><mml:mo>&#x000d7;</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mn>9</mml:mn></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> b/s, the network throughput after optimization has increased by <inline-formula><mml:math id="mm117" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>2.41</mml:mn><mml:mo>&#x000d7;</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mn>7</mml:mn></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> b/s compared to the throughput before optimization. Therefore, the optimization algorithm proposed in this paper can increase the network&#x02019;s throughput, enabling the network to support larger-scale data transmission.</p><p>The rate of traffic pouring into a single egress port may exceed the maximum bandwidth of that port, which can cause microbursts. And microbursts are becoming increasingly frequent in high-speed networks. Under the granularity of seconds, network traffic is usually smooth. However, when observed at a finer time granularity, network traffic becomes more bursty. R. Kapoor [<xref rid="B23-sensors-25-01069" ref-type="bibr">23</xref>] et al. found through research that on a time scale of 110 to 100 microseconds, traffic exhibits significant burstiness.</p><p>Thus, this study simulated the network throughput in the microburst scenario. <xref rid="sensors-25-01069-f011" ref-type="fig">Figure 11</xref> presents the simulation results of network throughput in microburst scenarios with different microburst durations and peak loads. It can be observed from the figure that when the microburst duration reaches 200 <inline-formula><mml:math id="mm118" overflow="scroll"><mml:mrow><mml:mi mathvariant="sans-serif">&#x003bc;</mml:mi></mml:mrow></mml:math></inline-formula>s, the optimized network throughput has increased by <inline-formula><mml:math id="mm119" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>3.37</mml:mn><mml:mo>&#x000d7;</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mn>8</mml:mn></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> b/s, which is an improvement of 62.72% compared to the throughput before optimization. Therefore, the optimization algorithm proposed in this paper can enhance the network&#x02019;s throughput during microburst events, mitigating the problem of network congestion in microburst scenarios.</p></sec><sec id="sec3dot4-sensors-25-01069"><title>3.4. Comparison of Computational Complexity Between Optimization Algorithm and Traditional&#x000a0;Algorithm</title><p>The optimization algorithm utilizes a particle swarm algorithm to calculate the optimal solution for the length and number of queues in the output ports of the onboard switch, iterating over all possible combinations of queue lengths and numbers. As can be seen in <xref rid="sensors-25-01069-f012" ref-type="fig">Figure 12</xref>, compared to the traditional traversal algorithm, the traversal algorithm needs to calculate all 1200 times to determine the optimal result, while the PSO-QSO mechanism only needs to iterate 105 times to obtain the optimal result. With a time-monitoring program, it takes 6.20 ms for the traversal algorithm to calculate all 1200 combinations, and 0.55 ms for the PSO algorithm to calculate 105 times. The time required for the PSO-QSO mechanism to obtain the optimal solution is only 8.9% of the time required by the traversal algorithm. Therefore, the optimization algorithm has a lower computational complexity and computational overhead.</p><p>As shown in <xref rid="sensors-25-01069-f012" ref-type="fig">Figure 12</xref>, there is no improvement in the fitness function for up to 30&#x02013;40 iterations. These are the initial iterations of the PSO algorithm. In the initial iterations, the particles are exploring the search space widely. The random initialization of particle positions and velocities ensures that the search space is explored from multiple starting points. During this phase, the particles are moving in different directions, and this can lead to periods where the global best position <inline-formula><mml:math id="mm120" overflow="scroll"><mml:mrow><mml:mi mathvariant="italic">gbest</mml:mi></mml:mrow></mml:math></inline-formula> does not change significantly. It is common for the fitness function to show little to no improvement for 30&#x02212;40 iterations.</p><p>The number of particles determines the extent of the coverage of the search space. Increasing the number of particles allows the algorithm to explore the solution space more comprehensively, thereby enhancing the global search capability and increasing the probability of finding the global optimal solution, which is particularly important for complex optimization problems. However, more particles mean more information needs to be exchanged and processed, which reduces the local search efficiency of the algorithm as it approaches the optimal solution, leading to a slower convergence rate. The number of iterations and time required to find the optimal solution will also increase. In considering that the application scenario of the PSO algorithm in this paper is a two-dimensional scenario, the number of particles <inline-formula><mml:math id="mm121" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> was set to 20 in this study.</p></sec></sec><sec sec-type="discussion" id="sec4-sensors-25-01069"><title>4. Discussion</title><p>From the simulation results above, it is evident that the queue optimization mechanism proposed in this paper can adjust the lengths and numbers of queues used for forwarding time-sensitive traffic, thereby adapting to the actual traffic conditions in the network. Through the application of this mechanism to large-scale LEO satellite communication networks, the packet loss rate and transmission delay for time-sensitive traffic can be significantly reduced. Moreover, this mechanism can also enhance the network&#x02019;s throughput and better cope with microburst phenomena and has lower computational costs. Future research will further explore traffic scheduling and forwarding mechanisms based on synchronous and asynchronous dynamic adjustment, aiming to reduce delay jitter in the transmission of time-sensitive traffic.</p></sec><sec sec-type="conclusions" id="sec5-sensors-25-01069"><title>5. Conclusions</title><p>In this paper, we analyze and study the application of a TSN circular queue forwarding mechanism and propose an optimization mechanism of queue analysis for large-scale LEO satellite communication networks. This mechanism uses the Particle Swarm Optimization algorithm to optimize the maximum time-sensitive traffic load and calculates the optimal solution of the queue length and number of outgoing ports of each node. The simulation results demonstrate that, with the optimization proposed in this paper, the forwarding of time-sensitive flows in the network experiences lower packet loss rates, shorter transmission delays, and higher throughput. This optimization algorithm decreases the effect of microbursts with lower computational complexity. Therefore, this mechanism can improve the effectiveness and reliability of satellite communication and achieve the high-quality and high-efficiency transmission of time-sensitive traffic.</p></sec></body><back><fn-group><fn><p><bold>Disclaimer/Publisher&#x02019;s Note:</bold> The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.</p></fn></fn-group><notes><title>Author Contributions</title><p>Conceptualization, Z.Z. and J.Y.; methodology, J.Y.; software, Z.Z. and H.J.; validation, Z.Z. and J.Y.; formal analysis, T.D.; investigation, T.D.; resources, Z.L.; data curation, Y.X.; writing&#x02014;original draft preparation, Z.Z.; writing&#x02014;review and editing, J.Y. and J.W.; visualization, Y.X.; supervision, T.D.; project administration, T.D.; funding acquisition, T.D. All authors have read and agreed to the published version of the manuscript.</p></notes><notes><title>Institutional Review Board Statement</title><p>Not applicable.</p></notes><notes><title>Informed Consent Statement</title><p>Not applicable.</p></notes><notes notes-type="data-availability"><title>Data Availability Statement</title><p>The data that support the findings of this study are available from the corresponding author upon reasonable request.</p></notes><notes notes-type="COI-statement"><title>Conflicts of Interest</title><p>There is no conflict of interest between any of the authors and the company Space Star Technology Co., Ltd.</p></notes><ref-list><title>References</title><ref id="B1-sensors-25-01069"><label>1.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Su</surname><given-names>Y.</given-names></name>
<name><surname>Liu</surname><given-names>Y.</given-names></name>
<name><surname>Zhou</surname><given-names>Y.</given-names></name>
<name><surname>Yuan</surname><given-names>J.</given-names></name>
<name><surname>Cao</surname><given-names>H.</given-names></name>
<name><surname>Shi</surname><given-names>J.</given-names></name>
</person-group><article-title>Broadband LEO Satellite Communications: Architectures and Key Technologies</article-title><source>IEEE Wirel. Commun.</source><year>2019</year><volume>26</volume><fpage>55</fpage><lpage>61</lpage><pub-id pub-id-type="doi">10.1109/MWC.2019.1800299</pub-id></element-citation></ref><ref id="B2-sensors-25-01069"><label>2.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Wang</surname><given-names>R.</given-names></name>
<name><surname>Kishk</surname><given-names>M.A.</given-names></name>
<name><surname>Alouini</surname><given-names>M.S.</given-names></name>
</person-group><article-title>Ultra-Dense LEO Satellite-Based Communication Systems: A Novel Modeling Technique</article-title><source>IEEE Commun. Mag.</source><year>2022</year><volume>60</volume><fpage>25</fpage><lpage>31</lpage><pub-id pub-id-type="doi">10.1109/MCOM.001.2100800</pub-id></element-citation></ref><ref id="B3-sensors-25-01069"><label>3.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Qu</surname><given-names>Z.</given-names></name>
<name><surname>Zhang</surname><given-names>G.</given-names></name>
<name><surname>Cao</surname><given-names>H.</given-names></name>
<name><surname>Xie</surname><given-names>J.</given-names></name>
</person-group><article-title>LEO Satellite Constellation for Internet of Things</article-title><source>IEEE Access</source><year>2017</year><volume>5</volume><fpage>18391</fpage><lpage>18401</lpage><pub-id pub-id-type="doi">10.1109/ACCESS.2017.2735988</pub-id></element-citation></ref><ref id="B4-sensors-25-01069"><label>4.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Chai</surname><given-names>F.</given-names></name>
<name><surname>Zhang</surname><given-names>Q.</given-names></name>
<name><surname>Yao</surname><given-names>H.</given-names></name>
<name><surname>Xin</surname><given-names>X.</given-names></name>
<name><surname>Gao</surname><given-names>R.</given-names></name>
<name><surname>Guizani</surname><given-names>M.</given-names></name>
</person-group><article-title>Joint Multi-Task Offloading and Resource Allocation for Mobile Edge Computing Systems in Satellite IoT</article-title><source>IEEE Trans. Veh. Technol.</source><year>2023</year><volume>72</volume><fpage>7783</fpage><lpage>7795</lpage><pub-id pub-id-type="doi">10.1109/TVT.2023.3238771</pub-id></element-citation></ref><ref id="B5-sensors-25-01069"><label>5.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Di</surname><given-names>B.</given-names></name>
<name><surname>Song</surname><given-names>L.</given-names></name>
<name><surname>Li</surname><given-names>Y.</given-names></name>
<name><surname>Poor</surname><given-names>H.V.</given-names></name>
</person-group><article-title>Ultra-Dense LEO: Integration of Satellite Access Networks into 5G and Beyond</article-title><source>IEEE Wirel. Commun.</source><year>2019</year><volume>26</volume><fpage>62</fpage><lpage>69</lpage><pub-id pub-id-type="doi">10.1109/MWC.2019.1800301</pub-id></element-citation></ref><ref id="B6-sensors-25-01069"><label>6.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Yong</surname><given-names>J.</given-names></name>
<name><surname>Wen</surname><given-names>F.</given-names></name>
<name><surname>Hu</surname><given-names>Z.</given-names></name>
<name><surname>Fan</surname><given-names>F.</given-names></name>
<name><surname>Qiu</surname><given-names>K.</given-names></name>
</person-group><article-title>High-Dynamic Transmission Modeling for Laser Inter-Satellite Links (LISLs)</article-title><source>Proceedings of the 2022 Asia Communications and Photonics Conference (ACP)</source><conf-loc>Shenzhen, China</conf-loc><conf-date>5&#x02013;8 November 2022</conf-date><fpage>590</fpage><lpage>594</lpage><pub-id pub-id-type="doi">10.1109/ACP55869.2022.10088564</pub-id></element-citation></ref><ref id="B7-sensors-25-01069"><label>7.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Lai</surname><given-names>Z.</given-names></name>
<name><surname>Liu</surname><given-names>W.</given-names></name>
<name><surname>Wu</surname><given-names>Q.</given-names></name>
<name><surname>Li</surname><given-names>H.</given-names></name>
<name><surname>Xu</surname><given-names>J.</given-names></name>
<name><surname>Wu</surname><given-names>J.</given-names></name>
</person-group><article-title>SpaceRTC: Unleashing the Low-latency Potential of Mega-constellations for Real-Time Communications</article-title><source>Proceedings of the IEEE INFOCOM 2022&#x02014;IEEE Conference on Computer Communications</source><conf-loc>London, UK</conf-loc><conf-date>2&#x02013;5 May 2022</conf-date><fpage>1339</fpage><lpage>1348</lpage><pub-id pub-id-type="doi">10.1109/INFOCOM48880.2022.9796887</pub-id></element-citation></ref><ref id="B8-sensors-25-01069"><label>8.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Liu</surname><given-names>S.</given-names></name>
<name><surname>Gao</surname><given-names>Z.</given-names></name>
<name><surname>Wu</surname><given-names>Y.</given-names></name>
<name><surname>Kwan Ng</surname><given-names>D.W.</given-names></name>
<name><surname>Gao</surname><given-names>X.</given-names></name>
<name><surname>Wong</surname><given-names>K.K.</given-names></name>
<name><surname>Chatzinotas</surname><given-names>S.</given-names></name>
<name><surname>Ottersten</surname><given-names>B.</given-names></name>
</person-group><article-title>LEO Satellite Constellations for 5G and Beyond: How Will They Reshape Vertical Domains?</article-title><source>IEEE Commun. Mag.</source><year>2021</year><volume>59</volume><fpage>30</fpage><lpage>36</lpage><pub-id pub-id-type="doi">10.1109/MCOM.001.2001081</pub-id></element-citation></ref><ref id="B9-sensors-25-01069"><label>9.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Nasrallah</surname><given-names>A.</given-names></name>
<name><surname>Balasubramanian</surname><given-names>V.</given-names></name>
<name><surname>Thyagaturu</surname><given-names>A.</given-names></name>
<name><surname>Reisslein</surname><given-names>M.</given-names></name>
<name><surname>Elbakoury</surname><given-names>H.</given-names></name>
</person-group><article-title>Cyclic Queuing and Forwarding for Large Scale Deterministic Networks: A Survey</article-title><source>arXiv</source><year>2019</year><pub-id pub-id-type="arxiv">1905.08478</pub-id></element-citation></ref><ref id="B10-sensors-25-01069"><label>10.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<collab>IEEE Standard Association</collab>
</person-group><article-title>IEEE Standard for Local and Metropolitan Area Network-Bridges and Bridged Networks</article-title><source>IEEE Std.</source><year>2018</year><volume>802</volume><fpage>1</fpage><lpage>1993</lpage></element-citation></ref><ref id="B11-sensors-25-01069"><label>11.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Yan</surname><given-names>J.</given-names></name>
<name><surname>Quan</surname><given-names>W.</given-names></name>
<name><surname>Jiang</surname><given-names>X.</given-names></name>
<name><surname>Sun</surname><given-names>Z.</given-names></name>
</person-group><article-title>Injection Time Planning: Making CQF Practical in Time-Sensitive Networking</article-title><source>Proceedings of the IEEE INFOCOM 2020&#x02014;IEEE Conference on Computer Communications</source><conf-loc>Toronto, ON, Canada</conf-loc><conf-date>6&#x02013;9 July 2020</conf-date><fpage>616</fpage><lpage>625</lpage><pub-id pub-id-type="doi">10.1109/INFOCOM41043.2020.9155434</pub-id></element-citation></ref><ref id="B12-sensors-25-01069"><label>12.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Wang</surname><given-names>S.</given-names></name>
<name><surname>Wu</surname><given-names>B.</given-names></name>
<name><surname>Zhang</surname><given-names>C.</given-names></name>
<name><surname>Huang</surname><given-names>Y.</given-names></name>
<name><surname>Huang</surname><given-names>T.</given-names></name>
<name><surname>Liu</surname><given-names>Y.</given-names></name>
</person-group><article-title>Large-Scale Deterministic IP Networks on CENI</article-title><source>Proceedings of the IEEE INFOCOM 2021&#x02014;IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS)</source><conf-loc>Vancouver, BC, Canada</conf-loc><conf-date>10&#x02013;13 May 2021</conf-date><fpage>1</fpage><lpage>6</lpage><pub-id pub-id-type="doi">10.1109/INFOCOMWKSHPS51825.2021.9484627</pub-id></element-citation></ref><ref id="B13-sensors-25-01069"><label>13.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Krolikowski</surname><given-names>J.</given-names></name>
<name><surname>Martin</surname><given-names>S.</given-names></name>
<name><surname>Medagliani</surname><given-names>P.</given-names></name>
<name><surname>Leguay</surname><given-names>J.</given-names></name>
<name><surname>Chen</surname><given-names>S.</given-names></name>
<name><surname>Chang</surname><given-names>X.</given-names></name>
<name><surname>Geng</surname><given-names>X.</given-names></name>
</person-group><article-title>Joint routing and scheduling for large-scale deterministic IP networks</article-title><source>Comput. Commun.</source><year>2021</year><volume>165</volume><fpage>33</fpage><lpage>42</lpage><pub-id pub-id-type="doi">10.1016/j.comcom.2020.10.016</pub-id></element-citation></ref><ref id="B14-sensors-25-01069"><label>14.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Badar</surname><given-names>A.</given-names></name>
<name><surname>Lou</surname><given-names>D.Z.</given-names></name>
<name><surname>Graf</surname><given-names>U.</given-names></name>
<name><surname>Barth</surname><given-names>C.</given-names></name>
<name><surname>Stich</surname><given-names>C.</given-names></name>
</person-group><article-title>Intelligent Edge Control with Deterministic-IP based Industrial Communication in Process Automation</article-title><source>Proceedings of the 2019 15th International Conference on Network and Service Management (CNSM)</source><conf-loc>Halifax, NS, Canada</conf-loc><conf-date>21&#x02013;25 October 2019</conf-date><fpage>1</fpage><lpage>7</lpage><pub-id pub-id-type="doi">10.23919/CNSM46954.2019.9012680</pub-id></element-citation></ref><ref id="B15-sensors-25-01069"><label>15.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Quan</surname><given-names>W.</given-names></name>
<name><surname>Yan</surname><given-names>J.</given-names></name>
<name><surname>Jiang</surname><given-names>X.</given-names></name>
<name><surname>Sun</surname><given-names>Z.</given-names></name>
</person-group><article-title>On-line Traffic Scheduling optimization in IEEE 802.1Qch based Time-Sensitive Networks</article-title><source>Proceedings of the 2020 IEEE 22nd International Conference on High Performance Computing and Communications; IEEE 18th International Conference on Smart City; IEEE 6th International Conference on Data Science and Systems (HPCC/SmartCity/DSS), Yanuca Island</source><conf-loc>Cuvu, Fiji</conf-loc><conf-date>14&#x02013;16 December 2020</conf-date><fpage>369</fpage><lpage>376</lpage><pub-id pub-id-type="doi">10.1109/HPCC-SmartCity-DSS50907.2020.00045</pub-id></element-citation></ref><ref id="B16-sensors-25-01069"><label>16.</label><element-citation publication-type="book"><std>IEEE 802.1Qch-2017</std><source>IEEE Standard for Local and metropolitan area networks&#x02013;Bridges and Bridged Networks&#x02013;Amendment 29: Cyclic Queuing and Forwarding</source><publisher-name>IEEE</publisher-name><publisher-loc>New York, NY, USA</publisher-loc><year>2017</year><fpage>1</fpage><lpage>30</lpage><pub-id pub-id-type="doi">10.1109/IEEESTD.2017.7961303</pub-id></element-citation></ref><ref id="B17-sensors-25-01069"><label>17.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Wang</surname><given-names>F.</given-names></name>
<name><surname>Wu</surname><given-names>D.</given-names></name>
<name><surname>He</surname><given-names>W.</given-names></name>
<name><surname>Li</surname><given-names>Z.</given-names></name>
<name><surname>Zhang</surname><given-names>Q.</given-names></name>
<name><surname>Yao</surname><given-names>H.</given-names></name>
</person-group><article-title>CPF: Bridging Time-Sensitive Networks into Large-Scale LEO Satellite Networks</article-title><source>Proceedings of the 2023 International Wireless Communications and Mobile Computing (IWCMC)</source><conf-loc>Marrakesh, Morocco</conf-loc><conf-date>19&#x02013;23 June 2023</conf-date><fpage>1</fpage><lpage>6</lpage><pub-id pub-id-type="doi">10.1109/IWCMC58020.2023.10183067</pub-id></element-citation></ref><ref id="B18-sensors-25-01069"><label>18.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Liu</surname><given-names>C.</given-names></name>
<name><surname>Liu</surname><given-names>Y.</given-names></name>
</person-group><article-title>A Real-Time Distributed Algorithm for Satellite Constellation Routing</article-title><source>Proceedings of the 2018 IEEE 18th International Conference on Communication Technology (ICCT)</source><conf-loc>Chongqing, China</conf-loc><conf-date>8&#x02013;11 October 2018</conf-date><fpage>745</fpage><lpage>749</lpage><pub-id pub-id-type="doi">10.1109/ICCT.2018.8600238</pub-id></element-citation></ref><ref id="B19-sensors-25-01069"><label>19.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Gao</surname><given-names>W.</given-names></name>
<name><surname>Song</surname><given-names>C.</given-names></name>
<name><surname>Jiang</surname><given-names>J.</given-names></name>
<name><surname>Zhang</surname><given-names>C.</given-names></name>
</person-group><article-title>Simplified Particle Swarm Optimization Algorithm Based on Improved Learning Factors</article-title><source>Advances in Neural Networks-ISNN 2017: 14th International Symposium, ISNN 2017, Sapporo, Hakodate, and Muroran, Hokkaido, Japan, 21&#x02013;26 June 2017</source><person-group person-group-type="editor">
<name><surname>Cong</surname><given-names>F.</given-names></name>
<name><surname>Leung</surname><given-names>A.</given-names></name>
<name><surname>Wei</surname><given-names>Q.</given-names></name>
</person-group><publisher-name>Springer</publisher-name><publisher-loc>Berlin/Heidelberg, Germany</publisher-loc><year>2017</year><fpage>321</fpage><lpage>328</lpage></element-citation></ref><ref id="B20-sensors-25-01069"><label>20.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Jiao</surname><given-names>B.</given-names></name>
<name><surname>Lian</surname><given-names>Z.</given-names></name>
<name><surname>Gu</surname><given-names>X.</given-names></name>
</person-group><article-title>A dynamic inertia weight particle swarm optimization algorithm</article-title><source>Chaos Solitons Fractals</source><year>2008</year><volume>37</volume><fpage>698</fpage><lpage>705</lpage><pub-id pub-id-type="doi">10.1016/j.chaos.2006.09.063</pub-id></element-citation></ref><ref id="B21-sensors-25-01069"><label>21.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Piotrowski</surname><given-names>A.P.</given-names></name>
<name><surname>Napiorkowski</surname><given-names>J.J.</given-names></name>
<name><surname>Piotrowska</surname><given-names>A.E.</given-names></name>
</person-group><article-title>Population size in Particle Swarm Optimization</article-title><source>Swarm Evol. Comput.</source><year>2020</year><volume>58</volume><fpage>100718</fpage><pub-id pub-id-type="doi">10.1016/j.swevo.2020.100718</pub-id></element-citation></ref><ref id="B22-sensors-25-01069"><label>22.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Leopold</surname><given-names>R.</given-names></name>
<name><surname>Miller</surname><given-names>A.</given-names></name>
</person-group><article-title>The IRIDIUM communications system</article-title><source>Proceedings of the 1993 IEEE MTT-S International Microwave Symposium Digest</source><conf-loc>Atlanta, GA, USA</conf-loc><conf-date>14&#x02013;18 June 1993</conf-date><fpage>575</fpage><lpage>578</lpage><volume>Volume 2</volume><pub-id pub-id-type="doi">10.1109/MWSYM.1993.276872</pub-id></element-citation></ref><ref id="B23-sensors-25-01069"><label>23.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Kapoor</surname><given-names>R.</given-names></name>
<name><surname>Snoeren</surname><given-names>A.</given-names></name>
<name><surname>Voelker</surname><given-names>G.</given-names></name>
<name><surname>Porter</surname><given-names>G.</given-names></name>
</person-group><article-title>Bullet trains: A study of NIC burst behavior at microsecond timescales</article-title><source>Proceedings of the Ninth ACM Conference on Emerging Networking Experiments and Technologies</source><conf-loc>Santa Barbara, CA, USA</conf-loc><conf-date>9&#x02013;12 December 2013</conf-date><fpage>133</fpage><lpage>138</lpage><pub-id pub-id-type="doi">10.1145/2535372.2535407</pub-id></element-citation></ref></ref-list></back><floats-group><fig position="float" id="sensors-25-01069-f001"><label>Figure 1</label><caption><p>Large-scale LEO satellite communication network architecture.</p></caption><graphic xlink:href="sensors-25-01069-g001" position="float"/></fig><fig position="float" id="sensors-25-01069-f002"><label>Figure 2</label><caption><p>ISL between satellite A and B.</p></caption><graphic xlink:href="sensors-25-01069-g002" position="float"/></fig><fig position="float" id="sensors-25-01069-f003"><label>Figure 3</label><caption><p>(<bold>a</bold>) Transmission mechanism of CQF in large-scale LEO satellite communication networks. (<bold>b</bold>) Maximum and minimum delay jitter.</p></caption><graphic xlink:href="sensors-25-01069-g003" position="float"/></fig><fig position="float" id="sensors-25-01069-f004"><label>Figure 4</label><caption><p>(<bold>a</bold>) A scenario with two time-sensitive flows. (<bold>b</bold>) Transmission packet loss caused by a short queue. (<bold>c</bold>) Transmission time out caused by a long queue.</p></caption><graphic xlink:href="sensors-25-01069-g004" position="float"/></fig><fig position="float" id="sensors-25-01069-f005"><label>Figure 5</label><caption><p>Structure of onboard switches in large-scale LEO satellite communication networks.</p></caption><graphic xlink:href="sensors-25-01069-g005" position="float"/></fig><fig position="float" id="sensors-25-01069-f006"><label>Figure 6</label><caption><p>The topology of LEO satellite communication network adopted in this study, where the arrows indicate the directions of the satellite orbits.</p></caption><graphic xlink:href="sensors-25-01069-g006" position="float"/></fig><fig position="float" id="sensors-25-01069-f007"><label>Figure 7</label><caption><p>Transmission delay and propagation delay for multi-node end-to-end transmission.</p></caption><graphic xlink:href="sensors-25-01069-g007" position="float"/></fig><fig position="float" id="sensors-25-01069-f008"><label>Figure 8</label><caption><p>Total queuing delay for multi-node end-to-end transmission.</p></caption><graphic xlink:href="sensors-25-01069-g008" position="float"/></fig><fig position="float" id="sensors-25-01069-f009"><label>Figure 9</label><caption><p>Packet loss rate for multi-node end-to-end transmission.</p></caption><graphic xlink:href="sensors-25-01069-g009" position="float"/></fig><fig position="float" id="sensors-25-01069-f010"><label>Figure 10</label><caption><p>Network throughput under different loads in a scenario without microbursts.</p></caption><graphic xlink:href="sensors-25-01069-g010" position="float"/></fig><fig position="float" id="sensors-25-01069-f011"><label>Figure 11</label><caption><p>Network throughput for microburst scenarios at different microburst durations and peak loads.</p></caption><graphic xlink:href="sensors-25-01069-g011" position="float"/></fig><fig position="float" id="sensors-25-01069-f012"><label>Figure 12</label><caption><p>Comparison of computational complexity between PSO algorithm and traversal algorithm.</p></caption><graphic xlink:href="sensors-25-01069-g012" position="float"/></fig><table-wrap position="float" id="sensors-25-01069-t001"><object-id pub-id-type="pii">sensors-25-01069-t001_Table 1</object-id><label>Table 1</label><caption><p>Parameter table.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Parameters</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Value</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">Total number of satellites (<italic toggle="yes">N</italic>)</td><td align="center" valign="middle" rowspan="1" colspan="1">66</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Satellites in each orbital plane (<inline-formula><mml:math id="mm122" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mi>N</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>)</td><td align="center" valign="middle" rowspan="1" colspan="1">11</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Number of particles (<inline-formula><mml:math id="mm123" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>)</td><td align="center" valign="middle" rowspan="1" colspan="1">20</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Maximum number of iterations (<italic toggle="yes">T</italic>)</td><td align="center" valign="middle" rowspan="1" colspan="1">1000</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Learning factors (<inline-formula><mml:math id="mm124" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm125" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mn>2</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>)</td><td align="center" valign="middle" rowspan="1" colspan="1">1.5</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Inertia weight (<inline-formula><mml:math id="mm126" overflow="scroll"><mml:mrow><mml:mi>&#x003c9;</mml:mi></mml:mrow></mml:math></inline-formula>)</td><td align="center" valign="middle" rowspan="1" colspan="1">0.9</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Maximum position of each particle (<inline-formula><mml:math id="mm127" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">X</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>)</td><td align="center" valign="middle" rowspan="1" colspan="1">(200, 7)</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Minimum position of each particle (<inline-formula><mml:math id="mm128" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">X</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>)</td><td align="center" valign="middle" rowspan="1" colspan="1">(1, 2)</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Maximum Transmission Unit (MTU)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1500 bytes</td></tr></tbody></table></table-wrap></floats-group></article>