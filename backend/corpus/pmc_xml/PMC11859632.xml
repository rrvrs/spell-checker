<!DOCTYPE article
PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with MathML3 v1.3 20210610//EN" "JATS-archivearticle1-3-mathml3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.3" xml:lang="en" article-type="review-article"><?properties open_access?><processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats"><restricted-by>pmc</restricted-by></processing-meta><front><journal-meta><journal-id journal-id-type="nlm-ta">Sensors (Basel)</journal-id><journal-id journal-id-type="iso-abbrev">Sensors (Basel)</journal-id><journal-id journal-id-type="publisher-id">sensors</journal-id><journal-title-group><journal-title>Sensors (Basel, Switzerland)</journal-title></journal-title-group><issn pub-type="epub">1424-8220</issn><publisher><publisher-name>MDPI</publisher-name></publisher></journal-meta>
<article-meta><article-id pub-id-type="pmid">40006382</article-id><article-id pub-id-type="pmc">PMC11859632</article-id><article-id pub-id-type="doi">10.3390/s25041153</article-id><article-id pub-id-type="publisher-id">sensors-25-01153</article-id><article-categories><subj-group subj-group-type="heading"><subject>Review</subject></subj-group></article-categories><title-group><article-title>A Survey on ML Techniques for Multi-Platform Malware Detection: Securing PC, Mobile Devices, IoT, and Cloud Environments</article-title></title-group><contrib-group><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-9612-0482</contrib-id><name><surname>Ferdous</surname><given-names>Jannatul</given-names></name><xref rid="c1-sensors-25-01153" ref-type="corresp">*</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0001-8317-5727</contrib-id><name><surname>Islam</surname><given-names>Rafiqul</given-names></name></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-0487-0615</contrib-id><name><surname>Mahboubi</surname><given-names>Arash</given-names></name></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-4868-4945</contrib-id><name><surname>Islam</surname><given-names>Md Zahidul</given-names></name></contrib></contrib-group><contrib-group><contrib contrib-type="editor"><name><surname>Ghinea</surname><given-names>George</given-names></name><role>Academic Editor</role></contrib></contrib-group><aff id="af1-sensors-25-01153">School of Computing, Mathematics and Engineering, Charles Sturt University, Albury, NSW 2640, Australia; <email>mislam@csu.edu.au</email> (R.I.); <email>amahboubi@csu.edu.au</email> (A.M.); <email>zislam@csu.edu.au</email> (M.Z.I.)</aff><author-notes><corresp id="c1-sensors-25-01153"><label>*</label>Correspondence: <email>jferdous@csu.edu.au</email></corresp></author-notes><pub-date pub-type="epub"><day>13</day><month>2</month><year>2025</year></pub-date><pub-date pub-type="collection"><month>2</month><year>2025</year></pub-date><volume>25</volume><issue>4</issue><elocation-id>1153</elocation-id><history><date date-type="received"><day>29</day><month>11</month><year>2024</year></date><date date-type="rev-recd"><day>04</day><month>2</month><year>2025</year></date><date date-type="accepted"><day>08</day><month>2</month><year>2025</year></date></history><permissions><copyright-statement>&#x000a9; 2025 by the authors.</copyright-statement><copyright-year>2025</copyright-year><license><ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>).</license-p></license></permissions><abstract><p>Malware has emerged as a significant threat to end-users, businesses, and governments, resulting in financial losses of billions of dollars. Cybercriminals have found malware to be a lucrative business because of its evolving capabilities and ability to target diverse platforms such as PCs, mobile devices, IoT, and cloud platforms. While previous studies have explored single platform-based malware detection, no existing research has comprehensively reviewed malware detection across diverse platforms using machine learning (ML) techniques. With the rise of malware on PC or laptop devices, mobile devices and IoT systems are now being targeted, posing a significant threat to cloud environments. Therefore, a platform-based understanding of malware detection and defense mechanisms is essential for countering this evolving threat. To fill this gap and motivate further research, we present an extensive review of malware detection using ML techniques with respect to PCs, mobile devices, IoT, and cloud platforms. This paper begins with an overview of malware, including its definition, prominent types, analysis, and features. It presents a comprehensive review of machine learning-based malware detection from the recent literature, including journal articles, conference proceedings, and online resources published since 2017. This study also offers insights into the current challenges and outlines future directions for developing adaptable cross-platform malware detection techniques. This study is crucial for understanding the evolving threat landscape and for developing robust detection strategies.</p></abstract><kwd-group><kwd>machine learning</kwd><kwd>malware detection</kwd><kwd>multi-platform malware</kwd><kwd>malware analysis</kwd><kwd>PC malware</kwd><kwd>mobile malware</kwd><kwd>IoT malware</kwd><kwd>cloud-based malware detection</kwd></kwd-group><funding-group><funding-statement>This research received no external funding.</funding-statement></funding-group></article-meta></front><body><sec sec-type="intro" id="sec1-sensors-25-01153"><title>1. Introduction</title><p>In recent years, malware has evolved into one of the most pervasive cybersecurity threats, capable of targeting not only traditional systems such as PCs, but also mobile devices, IoT, and cloud platforms. Malware is becoming increasingly complex and varied by employing methods such as code obfuscation, encryption, polymorphism, and metamorphism to avoid detection [<xref rid="B1-sensors-25-01153" ref-type="bibr">1</xref>]. The increasing sophistication of malware and its capability to bypass conventional security measures have caused significant financial, operational, and reputational damage to individuals, businesses, and governments. As technology becomes increasingly integrated across platforms, cybercriminals can simultaneously exploit multiple systems. Therefore, a thorough investigation of multi-platform malware detection is not only timely but crucial for ensuring cybersecurity resilience.</p><p>In the context of cybersecurity, malware refers to malicious software that is intentionally designed to disrupt, damage, or gain unauthorized access to computer systems. In contrast, multi-platform malware is malware capable of infecting and spreading across various types of platforms, often simultaneously. Malware can be categorized into several forms depending on its purpose and information-sharing system, such as ransomware, spyware, adware, rootkits, worms, horses, botnets, trojans, and viruses. Machine learning (ML), in this study, refers to computational techniques that allow systems to learn from data and improve their performance over time without being explicitly programmed. The application of ML for malware detection has shown significant potential for automating threat identification and reducing detection latency, especially in environments with high complexity and variability.</p><p>The increasing prevalence of malware is evidenced by the increasing number of global cyberattacks. According to the 2024 Cisco Cybersecurity Readiness Index [<xref rid="B2-sensors-25-01153" ref-type="bibr">2</xref>], 76% of firms experience malware attacks, as shown in <xref rid="sensors-25-01153-f001" ref-type="fig">Figure 1</xref>. Astra&#x02019;s Malware Statistics 2024 reports that 560,000 new malware pieces are detected daily, adding to over 1 billion existing programs. This large volume of malware thwarts organizational security, often resulting in ransomware attacks [<xref rid="B3-sensors-25-01153" ref-type="bibr">3</xref>]. The scale and impact of ransomware attacks are expected to increase significantly in the future. Cybersecurity Ventures predicts that victims could pay approximately USD 265 billion annually by 2031, with costs increasing by 30% each year [<xref rid="B4-sensors-25-01153" ref-type="bibr">4</xref>]. Malware targeting Linux systems has also increased, with a 35% increase in infections and the emergence of new malware families impacting Linux-based platforms [<xref rid="B5-sensors-25-01153" ref-type="bibr">5</xref>]. Furthermore, 2023 marked a pivotal moment for IoT security threats. A report from Zscaler ThreatLabz in October 2023 showed a 400% increase in IoT malware attacks compared to the previous year [<xref rid="B6-sensors-25-01153" ref-type="bibr">6</xref>]. Overall, the global proliferation of mobile devices, IoT systems, and cloud computing has expanded the attack surface, providing cybercriminals with new vectors for deploying malware. Hence, new challenges have arisen for malware detection. Traditional malware detection methods tailored to specific platforms, such as PCs or mobile devices, are insufficient to counter these new threats. This underscores the necessity of adopting a unified, multi-platform approach to malware detection that can provide holistic defense strategies.</p><p>In response to this evolving threat landscape, numerous studies have focused on machine learning (ML) owing to its ability to handle modern threat complexity. Traditional malware detection approaches, such as signature-based and heuristic methods, have proven inadequate for sophisticated and polymorphic malware, especially in dynamic, multi-platform environments. Thus, the adoption of advanced detection techniques, including behavior-based and ML-driven approaches, has become essential in modern cybersecurity defense. In this context, neural network models, including convolutional neural networks (CNNs) and recurrent neural networks (RNNs), have been widely adopted for processing data in malware detection. CNNs excel in analyzing binary files and images, whereas RNNs are effective for sequential data such as system call sequences [<xref rid="B7-sensors-25-01153" ref-type="bibr">7</xref>]. Additionally, recent advancements in large language models (LLMs) [<xref rid="B8-sensors-25-01153" ref-type="bibr">8</xref>], such as Generative Pre-trained Transformer (GPT) and Bidirectional Encoder Representations from Transformers (BERT), have opened new avenues for malware detection by analyzing textual features like audit logs, threat intelligence reports, and API call sequences. These models capture contextual relationships in textual data and effectively identify malware-related patterns [<xref rid="B9-sensors-25-01153" ref-type="bibr">9</xref>]. Moreover, by decentralizing model training, federated learning enhances malware detection while preserving privacy and adapting to evolving cyber threats [<xref rid="B10-sensors-25-01153" ref-type="bibr">10</xref>]. Furthermore, explainable AI (XAI) enhances the transparency of malware detection by making machine learning models more interpretable. Techniques such as SHAP and LIME provide insights into model decisions, helping analysts understand why a file or behavior is classified as malicious or benign [<xref rid="B11-sensors-25-01153" ref-type="bibr">11</xref>].</p><p>Although previous studies have explored malware detection on individual platforms, there is a lack of comprehensive reviews that thoroughly analyze machine learning techniques across multiple platforms. Multi-platform malware detection is critical for several reasons. First, cyberattacks today often exploit the weakest link across interconnected systems. For example, a single vulnerability in an IoT device can be leveraged to infiltrate broader networks, including enterprise cloud systems. Second, malware has evolved to operate across multiple platforms, with many modern variants designed to adapt to different environments. For instance, Mirai, a botnet that initially targeted IoT devices, was later modified to attack cloud-based systems and enterprise networks. Hence, developing unified defense strategies is essential, as organizations adopt hybrid environments that combine on-premises and cloud-based systems.</p><p>This survey aims to fill this gap by providing a holistic review of the recent literature on malware detection using ML methods across diverse platforms. The motivation for this study was also based on my previous work [<xref rid="B12-sensors-25-01153" ref-type="bibr">12</xref>], in which we explored and analyzed various modern malware attack trends and defense mechanisms. This study focuses on malware detection across diverse platforms (PCs, mobile devices, IoT systems, and cloud environments), offering a novel perspective and enabling deeper analysis and new insights into the evolving malware landscape. It also outlines the specific challenges encountered on each platform and provides insights for adapting techniques for cross-platform usage. This survey serves as a valuable resource for cybersecurity researchers and practitioners while laying the groundwork for future research on adaptable cross-platform malware detection using machine learning. The key contributions of this study are as follows:<list list-type="bullet"><list-item><p>We conducted a thorough review of the latest literature on malware detection published since 2017, revealing that this is the first comprehensive survey to explore machine learning-based malware detection across PCs, mobile devices, IoT systems, and cloud environments.</p></list-item><list-item><p>This study investigated platform-specific features (e.g., static, dynamic, memory, and hybrid) for training ML models and analyzed the malware landscape across platforms. It comprehensively reviews ML- and DL-based malware detection techniques and highlights the key research trends for each platform.</p></list-item><list-item><p>This study identified both platform-specific challenges and cross-platform issues that affect the development of effective ML-based malware detection techniques.</p></list-item><list-item><p>Finally, this study identifies the limitations of the existing literature and suggests future research directions.</p></list-item></list></p><p>The remainder of this paper is organized as follows: <xref rid="sec2-sensors-25-01153" ref-type="sec">Section 2</xref> presents a comparison of the results of previous related studies. <xref rid="sec3-sensors-25-01153" ref-type="sec">Section 3</xref> provides an overview of malware, including definitions, leading threats, analysis, and features used to build ML detection models. <xref rid="sec4-sensors-25-01153" ref-type="sec">Section 4</xref> describes the malware landscape across diverse platforms. <xref rid="sec5-sensors-25-01153" ref-type="sec">Section 5</xref> presents an overview of machine learning algorithms for malware detection. <xref rid="sec6-sensors-25-01153" ref-type="sec">Section 6</xref> reviews malware detection using ML techniques for PCs, mobile devices, the IoT, and cloud platforms. <xref rid="sec7-sensors-25-01153" ref-type="sec">Section 7</xref> presents the challenges associated with the platform and cross-platforms. <xref rid="sec8-sensors-25-01153" ref-type="sec">Section 8</xref> presents the limitations of the existing literature and future research directions. <xref rid="sec9-sensors-25-01153" ref-type="sec">Section 9</xref> concludes this paper.</p></sec><sec id="sec2-sensors-25-01153"><title>2. Comparison with Previous Related Surveys</title><p>This section examines survey papers on malware detection via machine learning from 2017 onwards, highlighting the gaps that we intend to address. This will help researchers to establish a baseline for developing countermeasures. <xref rid="sensors-25-01153-t001" ref-type="table">Table 1</xref> compares our survey with existing surveys.</p><p>Existing surveys on malware detection using machine learning and deep learning typically focus on specific platforms such as Windows [<xref rid="B13-sensors-25-01153" ref-type="bibr">13</xref>,<xref rid="B14-sensors-25-01153" ref-type="bibr">14</xref>,<xref rid="B15-sensors-25-01153" ref-type="bibr">15</xref>,<xref rid="B16-sensors-25-01153" ref-type="bibr">16</xref>] or Android [<xref rid="B17-sensors-25-01153" ref-type="bibr">17</xref>,<xref rid="B18-sensors-25-01153" ref-type="bibr">18</xref>,<xref rid="B19-sensors-25-01153" ref-type="bibr">19</xref>]. A small number of studies [<xref rid="B7-sensors-25-01153" ref-type="bibr">7</xref>,<xref rid="B20-sensors-25-01153" ref-type="bibr">20</xref>] have examined both Windows and Android. Some surveys [<xref rid="B21-sensors-25-01153" ref-type="bibr">21</xref>,<xref rid="B22-sensors-25-01153" ref-type="bibr">22</xref>,<xref rid="B23-sensors-25-01153" ref-type="bibr">23</xref>] have addressed malware classification in IoT platforms using ML and DL techniques. However, many current studies lack a comprehensive understanding of the IoT malware. Few studies have focused on cloud malware. Belal and Sundaram [<xref rid="B24-sensors-25-01153" ref-type="bibr">24</xref>] provided a taxonomy of ML- and DL-based cloud security, addressing issues, challenges, and trends, whereas Aslan et al. [<xref rid="B25-sensors-25-01153" ref-type="bibr">25</xref>] discussed behavior-based malware detection in the cloud. <xref rid="sensors-25-01153-t001" ref-type="table">Table 1</xref> also shows that several surveys have focused exclusively on DL technologies for malware detection, such as those in [<xref rid="B7-sensors-25-01153" ref-type="bibr">7</xref>,<xref rid="B15-sensors-25-01153" ref-type="bibr">15</xref>,<xref rid="B26-sensors-25-01153" ref-type="bibr">26</xref>,<xref rid="B27-sensors-25-01153" ref-type="bibr">27</xref>], without focusing on traditional ML or ensemble learning techniques. However, traditional ML and ensemble learning offer distinct advantages including lower computational requirements, faster training times, and better performance on smaller datasets.</p><table-wrap position="anchor" id="sensors-25-01153-t001"><object-id pub-id-type="pii">sensors-25-01153-t001_Table 1</object-id><label>Table 1</label><caption><p>Summary of existing review papers for comparison with our study (myth: &#x0221a; indicates complete information provided, &#x02248; indicates partial information provided, and &#x000d7; indicates no information provided).</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="3" align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" colspan="1">Papers</th><th rowspan="3" align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" colspan="1">Year</th><th rowspan="3" align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" colspan="1">Main Contribution</th><th colspan="4" align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1">Insights into Malware</th><th colspan="5" align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1">ML-Based Malware Detection in Diverse Platform</th><th rowspan="3" align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" colspan="1">Challenges Identified</th></tr><tr><th rowspan="2" align="left" valign="top" style="border-bottom:solid thin" colspan="1">Latest Prominent Malware Variants</th><th rowspan="2" align="left" valign="top" style="border-bottom:solid thin" colspan="1">Platform-Based Malware Taxonomy</th><th rowspan="2" align="left" valign="top" style="border-bottom:solid thin" colspan="1">Analysis Methods (Static, Dynamic,<break/>Memory, and Hybrid)</th><th rowspan="2" align="left" valign="top" style="border-bottom:solid thin" colspan="1">Feature Details</th><th colspan="2" align="left" valign="top" style="border-bottom:solid thin" rowspan="1">PCs</th><th rowspan="2" align="left" valign="top" style="border-bottom:solid thin" colspan="1">Mobile</th><th rowspan="2" align="left" valign="top" style="border-bottom:solid thin" colspan="1">IoT</th><th rowspan="2" align="left" valign="top" style="border-bottom:solid thin" colspan="1">Cloud</th></tr><tr><th align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Windows</th><th align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Linux</th></tr></thead><tbody><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B13-sensors-25-01153" ref-type="bibr">13</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">2021</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Survey on malware detection techniques using machine learning algorithms.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B14-sensors-25-01153" ref-type="bibr">14</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">2019</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Survey on sophisticated attack and evasion techniques used by the contemporary malwares.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x02248;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B15-sensors-25-01153" ref-type="bibr">15</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">2022</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">This survey is on the use of deep learning-based malware detection.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x02248;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B17-sensors-25-01153" ref-type="bibr">17</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">2021</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Reviewed machine learning methods for Android malware detection.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B16-sensors-25-01153" ref-type="bibr">16</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">2020</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Study on traditional and state-of-the-art ML techniques for malware detection.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x02248;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B18-sensors-25-01153" ref-type="bibr">18</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">2023</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">DL approaches for malware defenses in the Android environment.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B19-sensors-25-01153" ref-type="bibr">19</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">2020</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Android malware detection using deep learning.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x02248;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B21-sensors-25-01153" ref-type="bibr">21</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">2023</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Survey on IoT malware taxonomy and detection mechanisms.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x02248;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B22-sensors-25-01153" ref-type="bibr">22</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">2023</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Discussed IoT dataset use to evaluate machine learning techniques.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x02248;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B23-sensors-25-01153" ref-type="bibr">23</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">2023</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Review on emerging machine learning algorithms for detecting malware in IoT.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B7-sensors-25-01153" ref-type="bibr">7</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">2024</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Modern deep learning technologies for identifying malware on Windows, Linux, and Android platforms.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x02248;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B20-sensors-25-01153" ref-type="bibr">20</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">2021</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Computer-based and mobile-based malware detection and their countermeasures are presented.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x02248;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B24-sensors-25-01153" ref-type="bibr">24</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">2022</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">ML- and DL-based defenses against attacks and security issues in cloud computing is provided.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x0221a;</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B25-sensors-25-01153" ref-type="bibr">25</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">2021</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Behavior-based malware detection system in the cloud environment.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x02248;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000d7;</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>Our survey</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>2024</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>Survey on malware detection in PCs, mobile devices, IoT, and cloud platforms using ML techniques.</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>&#x0221a;</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>&#x0221a;</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>&#x0221a;</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>&#x0221a;</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>&#x0221a;</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>&#x0221a;</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>&#x0221a;</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>&#x0221a;</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>&#x0221a;</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>&#x0221a;</bold>
</td></tr></tbody></table></table-wrap><p>These benefits highlight the importance of exploring these techniques along with DL for comprehensive malware detection strategies. Moreover, existing surveys fail to comprehensively address malware detection across platforms such as Linux, macOS, iOS, IoT, and the cloud, which are also frequently targeted by malware. The lack of platform diversity in current surveys highlights the need for an inclusive review that covers various environments to thoroughly understand malware detection methods. To fill these gaps, this study provides a comprehensive survey of recent ML and DL approaches for malware detection across Windows, Linux, macOS, Android, IoT, and cloud platforms, which are frequently targeted by malware.</p></sec><sec id="sec3-sensors-25-01153"><title>3. Malware Fundamentals</title><p>This section explores the fundamental aspects of malware, including its definition, type, and disruptive impact on systems and data. It highlights recent significant malware threats, discusses standard analysis techniques, and examines the critical features that enable machine learning to detect and combat these threats.</p><sec id="sec3dot1-sensors-25-01153"><title>3.1. What Is Malware?</title><p>Malware refers to malicious software designed to compromise systems or gain unauthorized access. Despite advancements in cybersecurity, disruption of systems by stealing data, damaging files, or rendering services unavailable remains a significant threat. Common categories include viruses, worms, trojans, ransomware, spyware, adware, botnets, and rootkits, each with distinct behaviors and objectives. For example, viruses modify or delete files, worms self-replicate across networks, rootkits allow remote control, and trojans masquerade as legitimate applications for covert activities. Adware displays unwanted ads, spyware tracks user activities, botnets exploit resources, and backdoors bypass security for unauthorized access [<xref rid="B28-sensors-25-01153" ref-type="bibr">28</xref>]. This classification highlights the diverse operational goals of malware and emphasizes its evolving threat landscape.</p></sec><sec id="sec3dot2-sensors-25-01153"><title>3.2. Leading Malware Threats in the Current Cyber Landscape</title><p>The cyber threat landscape is dominated by sophisticated malware targeting multiple platforms. Malware employs evasive, polymorphic, and adaptive tactics to avoid traditional security measures and pose detection challenges. Cybercriminals also leverage AI-powered malware, which complicates defense. This section provides an overview of prevalent malware threats, emphasizing the need for cybersecurity professionals to remain informed and proactive against these evolving risks.</p><p><bold>Ransomware:</bold> Ransomware remains one of the most widespread and damaging forms of malware. The COVID-19 pandemic has increased ransomware activities, which escalated further in 2023. Attacks have shifted from targeting large enterprises to small businesses through RaaS kits, with LockBit leading this trend. Despite February 2024 server seizures, LockBit 3.0, re-emerged shortly after [<xref rid="B29-sensors-25-01153" ref-type="bibr">29</xref>]. Ransomware targets diverse devices, including desktops, mobile devices, IoT, and cloud environments, using phishing and exploits to deliver payloads [<xref rid="B12-sensors-25-01153" ref-type="bibr">12</xref>]. Recent ransomware attacks by Conti, REvil, Darkside, and LockBit 3.0 have significantly impacted global infrastructure, healthcare, and businesses. Conti&#x02019;s attack on Costa Rica&#x02019;s government led to a national state of emergency [<xref rid="B30-sensors-25-01153" ref-type="bibr">30</xref>], while REvil&#x02019;s Kaseya breach demanded a USD 70 million ransom [<xref rid="B31-sensors-25-01153" ref-type="bibr">31</xref>]. Darkside&#x02019;s Colonial Pipeline incident cost USD 5 million [<xref rid="B32-sensors-25-01153" ref-type="bibr">32</xref>]. LockBit 3.0&#x02019;s Accenture breach demanded a USD 50 million ransom [<xref rid="B33-sensors-25-01153" ref-type="bibr">33</xref>].</p><p><bold>Advanced Persistent Threats (APTs):</bold> APTs are sophisticated, targeted attacks designed for espionage or sabotage, projected to drive a USD 12.5 billion market by 2025 [<xref rid="B34-sensors-25-01153" ref-type="bibr">34</xref>]. It employs advanced tactics, such as obfuscation, anti-analysis techniques, and AI to evade detection and exploit zero-day vulnerabilities [<xref rid="B35-sensors-25-01153" ref-type="bibr">35</xref>]. Their multistage process includes reconnaissance, initial access (e.g., spear phishing), privilege escalation, lateral movement, and data exfiltration while maintaining stealth. Notable examples include Stuxnet, which disrupts Natanz&#x02019;s centrifuges through zero-day vulnerabilities and fake software signatures [<xref rid="B36-sensors-25-01153" ref-type="bibr">36</xref>]. The SolarWinds attack is another example of an APT that deploys malware via a supply chain compromise in an Orion system [<xref rid="B35-sensors-25-01153" ref-type="bibr">35</xref>]. These attacks highlight the evolving complexity and persistence of the APTs.</p><p><bold>Cryptojacking:</bold> Cryptojacking is a stealthy cyberattack in which malware is injected via malicious links into a network of devices and runs covertly to harness the victim&#x02019;s computing resources for mining cryptocurrencies. In 2023, cryptojacking incidents skyrocketed, exceeding the previous year&#x02019;s total by early April and reaching USD 1.06 billion by the end of the year&#x02014;a 659% increase [<xref rid="B37-sensors-25-01153" ref-type="bibr">37</xref>]. Unlike ransomware, cryptojacking avoids direct payment demands and uses obfuscation to avoid detection. <xref rid="sensors-25-01153-f002" ref-type="fig">Figure 2</xref> [<xref rid="B38-sensors-25-01153" ref-type="bibr">38</xref>] illustrates this process in a step-by-step manner.</p><p>Cryptojacking exploits desktops, servers, mobile devices, and cloud platforms, using various forms of malware or scripts for unauthorized cryptocurrency mining. Browser-based cryptojacking exploits devices by using malicious JavaScript. It requires no software installation but may cause increased CPU usage, slowdowns, or device overheating. Host-based methods involve the direct installation of scripts to misuse CPU/GPU resources, whereas cloud cryptojacking exploits server vulnerabilities and causes financial and performance losses. Significant cryptojacking incidents include breaches at a European water utility, Tesla&#x02019;s cloud, and the Los Angeles Times website in 2018 [<xref rid="B37-sensors-25-01153" ref-type="bibr">37</xref>,<xref rid="B38-sensors-25-01153" ref-type="bibr">38</xref>]. The U.S. Department of Defense discovered cryptojacking malware in 2020 [<xref rid="B39-sensors-25-01153" ref-type="bibr">39</xref>], and a Russian nuclear facility employee was fined USD 7000 for illegal Bitcoin mining in 2019 [<xref rid="B40-sensors-25-01153" ref-type="bibr">40</xref>].</p><p><bold>Spyware:</bold> Spyware, like Pegasus, infiltrates networks to steal sensitive data such as login credentials, screenshots, and chat histories. It exploits BYOD policies to access mobile devices, compromising emails, SMS, app data, and multimedia. Pegasus can bypass multi-factor authentication by extracting one-time passwords [<xref rid="B29-sensors-25-01153" ref-type="bibr">29</xref>].</p><p><bold>Wiper malware:</bold> Wipers are malicious programs that destroy user data and target computer networks. Threat actors use wipers to conceal intrusions and to hinder responses. Nation-state attackers deploy them to disrupt supply chains and military operations, while &#x0201c;hacktivists&#x0201d; use them to impede business activities in response to perceived injustices [<xref rid="B41-sensors-25-01153" ref-type="bibr">41</xref>]. Recent examples include WhisperGate, targeting Ukraine in January 2022 [<xref rid="B42-sensors-25-01153" ref-type="bibr">42</xref>], and HermeticWiper, which affected Ukrainian organizations in February 2022 [<xref rid="B41-sensors-25-01153" ref-type="bibr">41</xref>].</p><p><bold>Remote access trojans (RATs):</bold> RATs, a specific trojan type, are popular with cybercriminals for remotely controlling endpoint devices. They trick users to run malicious code by masking them as legitimate applications. Ghost, a remote access trojan, controls infected endpoints. Unlike typical malware, Ghost is deployed manually, suggesting that victims are already compromised by other malware [<xref rid="B29-sensors-25-01153" ref-type="bibr">29</xref>]. Understanding these threats is key to advancing countermeasures and detection.</p></sec><sec id="sec3dot3-sensors-25-01153"><title>3.3. Malware Analysis</title><p>In this subsection, we explore the key malware analysis methods essential for malware detection systems, focusing on identifying suspicious file characteristics and purposes.</p><list list-type="bullet"><list-item><p>Static analysis;</p></list-item><list-item><p>Dynamic analysis;</p></list-item><list-item><p>Memory analysis;</p></list-item><list-item><p>Hybrid analysis.</p></list-item></list><p>Static analysis techniques extract static signatures, features, or patterns from binary files without execution. This method is fast, secure, and efficient in identifying known malware samples, and does not require kernel privileges or a virtual machine. However, static analysis has significant limitations: it cannot examine malware strains using obfuscation techniques and is ineffective against malware that uses packers to compress and encrypt payloads [<xref rid="B43-sensors-25-01153" ref-type="bibr">43</xref>].</p><p>Conversely, dynamic analysis involves executing malware in a controlled environment to observe runtime behavior. This enhances the understanding of malware functionality and enables the identification of previously unknown or zero-day malware. However, this approach is often slower and more time-consuming [<xref rid="B43-sensors-25-01153" ref-type="bibr">43</xref>]. Additionally, dynamic analysis also has limitations in tracking highly sophisticated malware, such as fileless (memory-resident) malware.</p><p>Consequently, memory analysis offers an alternative method for detecting malicious behaviors of fileless malware by capturing and examining volatile memory images during execution. While encryption and packing can conceal suspicious files, all processes are visible in the memory during runtime. Malware must disclose critical information (e.g., logs, code, and data segments) for operational functionality, making detection possible. Volatile memory analysis detects malware by examining its presence in the system&#x02019;s RAM and identifying fileless malware that evades detection by not leaving traces on hard drives [<xref rid="B44-sensors-25-01153" ref-type="bibr">44</xref>].</p><p>The hybrid malware analysis methodology combines multiple analysis approaches, offering greater effectiveness than a single analysis technique.</p></sec><sec id="sec3dot4-sensors-25-01153"><title>3.4. Features Used in ML-Based Malware Detection</title><p>This subsection provides an overview of the features extracted from various platforms, each of which uses distinct file formats and yields different features. In Windows, malware features are extracted from executable (EXE) files, whereas Linux malware is analyzed using Executable and Linkable Format (ELF) files. In macOS, the Mach-O file format is used to analyze and extract the features. Android relies on APKs, and iOS utilizes IPA files. The APK file enables the extraction of static features from classes.dex files and dynamic features from the AndroidManifest.xml file [<xref rid="B45-sensors-25-01153" ref-type="bibr">45</xref>]. IoT platforms derive features from firmware binaries, whereas cloud environments use container images and VM disk files, such as Docker and VMDK, for feature extraction. <xref rid="sensors-25-01153-t002" ref-type="table">Table 2</xref> classifies platform-specific features into static, dynamic, and memory-based features suited to different file formats and operating environments. Static features derived from binaries or metadata without execution include file headers, opcode sequences, and metadata, which are essential for assessing executables and packages on Windows, Linux, macOS, Android, and iOS. Dynamic features capture behavior during execution, including system calls, API invocations, network activities, and registry or file system changes, aiding in the identification of complex or evasive malware. Memory features, such as memory allocation patterns and mapping, are vital for detecting sophisticated threats, particularly in IoT and cloud environments. This structured feature analysis underpins the implementation of machine learning models attached to each platform&#x02019;s unique characteristics.</p></sec></sec><sec id="sec4-sensors-25-01153"><title>4. Malware Landscape Across Platforms</title><p>The proliferation of digital technologies has expanded the malware threat landscape across PCs, mobile devices, the IoT, and cloud systems. Understanding the targeted operating system or device is crucial for comprehending malware behavior, as malicious software often exploits system-specific vulnerabilities. In this study, &#x0201c;platform&#x0201d; and &#x0201c;operating system&#x0201d; will be used synonymously, and we classify the target platforms for malware into four primary categories: PCs, mobile devices, IoT, and cloud systems. Each platform has unique vulnerabilities, attack vectors, and security issues, which require distinct detection and mitigation strategies. This section provides an overview of the malware landscape across these platforms, as shown in <xref rid="sensors-25-01153-f003" ref-type="fig">Figure 3</xref>.</p><sec id="sec4dot1-sensors-25-01153"><title>4.1. PCs</title><p>The PC platform is a primary target for malware, facing various types that exploit specific vulnerabilities in Windows, macOS, and Linux environments. This study examines the malware landscape for each operating system, emphasizing common threats, typical attack vectors, and mitigation mechanisms.</p><sec id="sec4dot1dot1-sensors-25-01153"><title>4.1.1. Windows</title><p>The Windows platform remains a primary malware target owing to its extensive use in personal and enterprise settings. Malware types include viruses, worms, trojans, ransomware, spyware, adware, and rootkits, which threaten the system&#x02019;s integrity and data security. Cybercriminals exploit phishing emails, malicious websites, software vulnerabilities, and removable media for infections. Advanced techniques such as polymorphism, obfuscation, and encryption avoid traditional detection, thus necessitating adaptive detection mechanisms [<xref rid="B14-sensors-25-01153" ref-type="bibr">14</xref>]. The platform&#x02019;s broad software ecosystem provides numerous attack entry points. Although Microsoft employs security measures, such as Windows Defender and regular updates, their effectiveness depends on users practicing safe computing and maintaining updated systems. The impact of malware on Windows can lead to system performance issues, data theft, crashes, and financial losses, highlighting the significant consequences of these attacks.</p></sec><sec id="sec4dot1dot2-sensors-25-01153"><title>4.1.2. Linux</title><p>Linux has become the leading operating system in multi-cloud environments, powering 78% of the world&#x02019;s top websites. This widespread use has increased the scale and complexity of Linux-based systems [<xref rid="B48-sensors-25-01153" ref-type="bibr">48</xref>]. The Linux OS supports various distributions for diverse hardware needs, is integral to many Internet-based desktop devices, and is a target for cybercriminals. The rise in Linux-based malware attacks is due to IoT devices running Linux-based firmware such as smart home assistants, security cameras, and industrial control systems. These devices often lack robust security, which makes them vulnerable to attacks. As more companies adopt Linux-based servers and networks, hackers are increasingly targeting these systems for greater rewards. Trend Micro&#x02019;s research shows that 90% of public cloud workloads run on Linux, motivating hackers to develop Linux malware [<xref rid="B49-sensors-25-01153" ref-type="bibr">49</xref>]. Recently, Linux-based systems have been facing an increase in malware attacks. According to the VMware threat report [<xref rid="B48-sensors-25-01153" ref-type="bibr">48</xref>], these devices face cryptojacking malware, remote access trojans (RATs), SSH brute-force attacks, web shell malware, and ransomware. The Trend Micro Linux Threat Landscape Report indicated a 62% increase in ransomware attacks on Linux from 2022 to 2023. It identified that the KillDisk Ransomware targeted financial institutions, exploited phishing attacks, and outdated Linux systems and kernels. This report also states that Webshell exploits are the most common Linux malware at 49.6%, followed by trojans at 29.4%, whereas backdoors and cryptominers are less prevalent [<xref rid="B49-sensors-25-01153" ref-type="bibr">49</xref>]. Cybercriminals primarily exploit web vulnerabilities such as SQL injection, XSS, and SSRF to compromise web resources. They also targeted cloned websites, misconfigured firewalls, and SSH vulnerabilities to execute malware attacks on Linux systems.</p></sec><sec id="sec4dot1dot3-sensors-25-01153"><title>4.1.3. macOS</title><p>The evolving macOS threat landscape necessitates greater vigilance from users and developers. Despite the robust security reputation of macOS, it remains vulnerable to cyber threats in 2022; malware detection on macOS rose by 165%, accounting for 6.2% of the total increase from the previous year [<xref rid="B50-sensors-25-01153" ref-type="bibr">50</xref>]. MacOS employs security features like XProtect and Gatekeeper, but they have limitations. XProtect&#x02019;s signature-based detection is ineffective against unknown or modified malware and lacks dynamic scanning capabilities. The gatekeeper blocks unsigned or malicious Internet applications, verifies developer IDs, and checks for alterations after signing. However, attackers can bypass this using stolen developer IDs or exploit legitimate apps to run malicious codes. While sandboxing applications limit access to vital system resources, attackers have devised techniques to escape and obtain illicit access [<xref rid="B50-sensors-25-01153" ref-type="bibr">50</xref>]. The most prevalent macOS malware include adware, potentially unwanted programs (PUPs), backdoor spyware, remote access trojans, stealers, ransomware, and other emerging types [<xref rid="B50-sensors-25-01153" ref-type="bibr">50</xref>,<xref rid="B51-sensors-25-01153" ref-type="bibr">51</xref>]. New threats have emerged, such as AppleJeus, which shifted from Windows to macOS in 2018, and NukeSped, which functions as ransomware, spyware, and stealer, detected in 2019. SquirtDanger, a macOS-targeting malware with advanced evasion techniques, was discovered in 2022 [<xref rid="B50-sensors-25-01153" ref-type="bibr">50</xref>]. Common attack vectors include malvertising, phishing emails, malicious URLs, and unpatched vulnerabilities with persistent macOS vulnerabilities.</p></sec></sec><sec id="sec4dot2-sensors-25-01153"><title>4.2. Mobile Devices</title><p>The increasing prevalence of mobile devices has made them prime targets for malware, particularly for smartphones. Malware developers primarily target Android and iOS operating systems, which dominate the global mobile OS market.</p><sec id="sec4dot2dot1-sensors-25-01153"><title>4.2.1. Android</title><p>The widespread adoption of Android platforms on smartphones, tablets, and IoT devices has increased their vulnerability to cyberattacks. The flexibility, cost-effectiveness, and computing power of Android devices have increased in popularity. They offer user-friendly third-party applications that are globally accessible via Internet connections. This popularity has made Android susceptible to cyberattacks. A recent report revealed that over 438,000 mobile malware installation packages were detected in Q3 2023, marking a 19% increase from Q2 [<xref rid="B52-sensors-25-01153" ref-type="bibr">52</xref>]. Another report showed that in Q2 2024, Android led the global mobile market with a 71.65% share, whereas iOS accounted for 27.62% [<xref rid="B53-sensors-25-01153" ref-type="bibr">53</xref>]. Android platforms face malware threats including credential theft, privacy breaches, bank fraud, ransomware, adware, and SMS fraud. The development of automatic Android malware detection methods is vital for protecting system security and user privacy.</p><p>Android is an open-source Linux-based mobile OS that allows anyone to access its own code. Its architectural framework comprises distinct layers: a kernel, hardware abstraction layer, Android runtime, libraries, application framework, and applications. These components optimize the system efficiency and application performance. Android offers security mechanisms such as sandboxing, permissions, and encryption to protect data and ensure app integrity [<xref rid="B54-sensors-25-01153" ref-type="bibr">54</xref>]. Android apps operate in isolated sandboxes with user-approved permissions for resources like cameras and Wi-Fi. Users should exercise caution when granting permission because malicious apps can access sensitive resources once allowed.</p><p>Various forms of malware, such as SMS trojans, ransomware, adware, backdoors, rootkits, spyware, botnets, and installer malware, significantly threaten mobile device security [<xref rid="B55-sensors-25-01153" ref-type="bibr">55</xref>,<xref rid="B56-sensors-25-01153" ref-type="bibr">56</xref>]. Malware spreads on mobile devices through malicious links in emails or SMS, infected apps from Google Play Stores, third-party sources, or malicious Wi-Fi networks. Significant vulnerabilities in the Android OS include information gain, code execution, denial of service (DoS), overflow, SQL injection, and privilege escalation [<xref rid="B56-sensors-25-01153" ref-type="bibr">56</xref>].</p></sec><sec id="sec4dot2dot2-sensors-25-01153"><title>4.2.2. iOS</title><p>iOS, introduced in 2007, is a Unix-based operating system powering Apple devices, such as iPhones and iPads, ranking second in global mobile OS usage. The iOS architecture comprises four layers: the Core OS handles hardware interactions, Core Services provide data protection and storage, media support multimedia processing, and Cocoa Touch enables app development and user interface management [<xref rid="B56-sensors-25-01153" ref-type="bibr">56</xref>].</p><p>iOS offers robust security compared with Android through a closed system design incorporating device-level protection (e.g., PINs, remote wipe), system-level features (e.g., Secure Enclave, secure boot), and mandatory data encryption. Apple&#x02019;s control over hardware and software makes jailbreaking and unauthorized access challenging. The iOS enhances security through sandboxing, encryption, and automatic data erasure. Applications are isolated to prevent unauthorized access, whereas encryption protects files using hardware and software keys [<xref rid="B57-sensors-25-01153" ref-type="bibr">57</xref>]. iOS automatically grants most permissions, thereby reducing user involvement. The auto-erase feature wipes data after multiple incorrect passcode attempts, offering higher security than Android [<xref rid="B58-sensors-25-01153" ref-type="bibr">58</xref>]. A McAfee report shows iOS malware surged by 70% by 2020 [<xref rid="B56-sensors-25-01153" ref-type="bibr">56</xref>]. Common malware on iOS includes ransomware, spyware, viruses, trojans, and adware [<xref rid="B56-sensors-25-01153" ref-type="bibr">56</xref>,<xref rid="B59-sensors-25-01153" ref-type="bibr">59</xref>]. Notable attacks include Pegasus, exploiting zero-day vulnerabilities for surveillance [<xref rid="B60-sensors-25-01153" ref-type="bibr">60</xref>], and LightSpy Spyware infiltrated via compromised news sites [<xref rid="B61-sensors-25-01153" ref-type="bibr">61</xref>]. Vulnerabilities, such as memory overflow, remote code execution, and data leakage, present significant risks to iOS users, highlighting the need for enhanced device security.</p></sec></sec><sec id="sec4dot3-sensors-25-01153"><title>4.3. IoT Platform</title><p>The Internet of Things (IoT), introduced by Ashton in 1999, refers to a network of interconnected devices that collect and exchange data via the Internet or other networks. These include devices, sensors, networks, computing resources, and software tools. IoT devices fall into two categories: Consumer IoT, such as personal and wearable smart devices, and Industrial IoT (IIoT), including industrial machinery and energy management devices.</p><p>The number of IoT devices is increasing significantly each year. According to Statista, global IoT devices will nearly double from 15.9 billion in 2023 to over 32.1 billion by 2030. By 2033, China will have the highest number of IoT devices, with approximately eight billion consumer devices [<xref rid="B62-sensors-25-01153" ref-type="bibr">62</xref>]. However, the rapid rise of IoT coupled with insufficient security measures has made these devices prime targets for malware. Reports from Zscaler ThreatLabz show a 400% increase in IoT malware attacks [<xref rid="B63-sensors-25-01153" ref-type="bibr">63</xref>]. High-profile incidents, such as the Mirai botnet in 2016, exploit weak passwords and unpatched vulnerabilities, thereby enabling DDoS attacks and data exfiltration [<xref rid="B63-sensors-25-01153" ref-type="bibr">63</xref>]. IoT malware also takes advantage of other vulnerabilities, including the absence of software and security updates, insecure networks, poor user security awareness, TCP/IP stack vulnerabilities, and a lack of encryption. Modern IoT malware, including Okane, VPNFilter, and Necurs, increasingly employs brute-force methods, spyware tactics, and anti-virtualization techniques to access devices [<xref rid="B21-sensors-25-01153" ref-type="bibr">21</xref>].</p></sec><sec id="sec4dot4-sensors-25-01153"><title>4.4. Cloud Environments</title><p>Cloud computing enables remote access to computing resources such as storage, applications, networks, and servers via an Internet connection. Conversely, cloud malware is a cyberattack that targets cloud platforms with malicious code or services.</p><p>Cloud computing offers three types of services: Platform as a Service (PaaS), Software as a Service (SaaS), and Infrastructure as a Service (IaaS). PaaS provides an environment for programmers to develop, deploy, and test applications, as exemplified by the Azure and Google App Engine. SaaS supports all applications within the cloud environment such as email and office software. IaaS offers hardware resources, computing capabilities, storage, servers, networking devices, and virtual machines [<xref rid="B24-sensors-25-01153" ref-type="bibr">24</xref>,<xref rid="B64-sensors-25-01153" ref-type="bibr">64</xref>]. Common examples of cloud malware include DDoS attacks, hypervisor DoS attacks, hypercall attacks (exploits the hypervisor to gain cloud control), hyperjacking (when an attacker takes control of a virtual machine for malicious purposes), exploiting live migrations (moves a VM or application without client disconnection from one physical location to another), ransomware, spyware, backdoor, trojan horse etc. [<xref rid="B24-sensors-25-01153" ref-type="bibr">24</xref>,<xref rid="B65-sensors-25-01153" ref-type="bibr">65</xref>].</p></sec></sec><sec id="sec5-sensors-25-01153"><title>5. Machine Learning Algorithms for Malware Detection</title><p>In this section, we present a summary of various machine learning algorithms used for malware detection on diverse platforms, including traditional, ensemble, and deep learning approaches, as outlined in <xref rid="sensors-25-01153-t003" ref-type="table">Table 3</xref>.</p><p>Traditional algorithms such as SVM, KNN, and DT are simple yet effective in classifying malicious and benign samples. Ensemble methods, such as RF and gradient boosting, enhance the accuracy and robustness by combining multiple models. Deep learning algorithms, including CNN and transformers, excel in processing complex, high-dimensional, and sequential malware data. Techniques such as GAN and Transfer Learning (TL) address challenges such as limited datasets and feature extraction. Moreover, recent advancements in federated learning (FL) and large language models (LLMs) have shown promise for malware detection.</p><p><xref rid="sensors-25-01153-t003" ref-type="table">Table 3</xref> underscores the diversity of machine learning methodologies in malware detection. The analysis outcomes of the table are reflected in the pie chart shown in <xref rid="sensors-25-01153-f004" ref-type="fig">Figure 4</xref>, which highlights the key trends in machine learning techniques for malware detection.</p><p>
<bold>Overall research trends on machine learning algorithms for malware detection across different platforms</bold>
</p><p><xref rid="sensors-25-01153-t003" ref-type="table">Table 3</xref> and the pie chart reveal that deep learning is the leading approach in malware detection research across platforms, with CNNs and LSTMs excelling in image-based and sequential data analysis. Traditional ML techniques such as SVM and KNN remain adequate for high-dimensional feature-based tasks. Simultaneously, ensemble learning methods, such as random forest and gradient boosting, show substantial accuracy and generalization through model aggregation. These trends highlight the increasing preference for deep learning, while acknowledging the complementary roles of traditional and ensemble models.</p></sec><sec id="sec6-sensors-25-01153"><title>6. Application of Machine Learning on Malware Detection</title><p>This section reviews recent studies that have utilized the various ML algorithms discussed in <xref rid="sec5-sensors-25-01153" ref-type="sec">Section 5</xref> to develop malware detection models for Windows, Linux, Android, IoT, and cloud platforms.</p><sec id="sec6dot1-sensors-25-01153"><title>6.1. PC (Personal Computers) Malware Detection</title><p>This section covers malware detection on personal computers, including Windows, Linux, and macOS. Windows, the most widely used OS, is the primary target for malware. Despite Linux&#x02019;s robust permission-based architecture, it is facing growing threats in the server and enterprise settings. With its increasing popularity, macOS has increased the risk of malware. Detection methods employ static, dynamic, and hybrid analyses, which are frequently enhanced using machine learning, to counter evolving threats.</p><sec id="sec6dot1dot1-sensors-25-01153"><title>6.1.1. Malware Detection on Windows Platform</title><p>In this subsection, we provide an extensive review of machine learning-based malware detection techniques for the Windows platform, which are summarized in <xref rid="sensors-25-01153-t004" ref-type="table">Table 4</xref>.</p><p>
<bold>Static feature-based malware detection techniques</bold>
</p><p>Jeon and Moon [<xref rid="B75-sensors-25-01153" ref-type="bibr">75</xref>] proposed a DL-based malware detection method using static opcode sequences with dynamic RNN and CNN. A convolutional autoencoder compresses long opcode sequences, and a recurrent neural network classifies malware using the features generated by the autoencoder. This method achieved 96% accuracy and a 95% true positive rate. However, it requires substantial computational resources owing to the inter-procedural control-flow analysis, making it less suitable for resource-limited systems. Snow et al. [<xref rid="B76-sensors-25-01153" ref-type="bibr">76</xref>] developed a multimodal deep-learning-based malware detection method using the Microsoft BIG 2015 dataset. Although the model achieved a high accuracy rate of 98.35%, it proved ineffective against zero-day malware that evaded detection using new static signatures. A previous study [<xref rid="B104-sensors-25-01153" ref-type="bibr">104</xref>] employed a CNN-based pre-trained DenseNet model for malware detection by converting benign and malicious binaries into 2D images. Experiments on Malimg, BIG 2015, MaleVis, and Malicia datasets showed 98.23% accuracy on Malimg but revealed high false negatives and used highly imbalanced datasets. Darem et al. [<xref rid="B77-sensors-25-01153" ref-type="bibr">77</xref>] implemented a deep CNN-based model to detect malware using opcode-level features from malware and benign binary files that were converted into images for training. The model achieved a detection rate of 99.12% using the Microsoft BIG 2015 dataset. However, outdated datasets can affect the detection of new and unseen malware. Kumar and Janet [<xref rid="B105-sensors-25-01153" ref-type="bibr">105</xref>] proposed an image-based deep transfer learning model for detecting Windows malware using a pre-trained deep CNN. The model efficiently extracts high-level features from grayscale images of Windows executables, conserving resources and time; however, it struggles to identify malware packed using advanced techniques. A study in [<xref rid="B109-sensors-25-01153" ref-type="bibr">109</xref>] introduced an attention-based deep neural network (ATT-DNN) for malware detection, extracting static features from executable files. Despite achieving a high accuracy of 98.09%, its use is limited to malware detection based on static signatures. Studies [<xref rid="B78-sensors-25-01153" ref-type="bibr">78</xref>,<xref rid="B79-sensors-25-01153" ref-type="bibr">79</xref>,<xref rid="B110-sensors-25-01153" ref-type="bibr">110</xref>] have also focused on malware detection via static image analysis.</p><p>
<bold>Dynamic feature-based malware detection techniques</bold>
</p><p>Li et al. [<xref rid="B94-sensors-25-01153" ref-type="bibr">94</xref>] developed a DL model for malware detection in executables using API call sequences within a Cuckoo sandbox, achieving an F1-score of 0.9724 and 97.31% accuracy on new sequences. The limitations of this study include its focus on Windows 7 executables and the potentially reduced effectiveness against zero-day malware over time. In [<xref rid="B111-sensors-25-01153" ref-type="bibr">111</xref>], contextual analysis of API call sequences was utilized to enhance the dynamic detection and prediction of Windows malware, thereby improving both the accuracy and adaptability to evolving threats. By employing the Markov chain method, they achieved an average accuracy of 99.7%. Catak et al. [<xref rid="B112-sensors-25-01153" ref-type="bibr">112</xref>] proposed an LSTM-based malware detection method that achieved 95% accuracy and 0.83 F1 score using a behavioral dataset of API calls. They also released a new, publicly available API call dataset for malware detection. Aditya et al. [<xref rid="B95-sensors-25-01153" ref-type="bibr">95</xref>] used LSTM and GRU deep learning models to classify malware based on API call sequences, and achieved an accuracy of 96.8% with LSTM. However, their dataset was highly imbalanced, with only 1035 benign samples of 8142. In [<xref rid="B66-sensors-25-01153" ref-type="bibr">66</xref>], a hybrid framework combining multiple complementary filters with a wrapper feature selection method was proposed to identify the critical runtime behavioral traits of malware. The ML algorithms, including MRed, SVM, and Fisher, achieved a detection accuracy of 99.499%. Ring et al. [<xref rid="B96-sensors-25-01153" ref-type="bibr">96</xref>] used an LSTM-based model to detect malware based on audit log features. However, it suffers from high false positive rates and lacks the evaluation of larger datasets to assess the model&#x02019;s scalability. Jindal et al. [<xref rid="B80-sensors-25-01153" ref-type="bibr">80</xref>] proposed Neurlux, a stacked ensemble of CNN-LSTM with an attention mechanism to detect malware in Windows systems using dynamic features effectively but is susceptible to adversarial attacks.</p><p>
<bold>Hybrid feature-based malware detection techniques</bold>
</p><p>Hybrid feature-based learning approaches have shown promise in cybersecurity, outperforming single-type feature methods. By combining diverse feature types, such as static, dynamic, and memory-based, these techniques enable learning from multiple semantic perspectives, leading to an enhanced model accuracy for malware detection and classification.</p><p>The authors of article [<xref rid="B81-sensors-25-01153" ref-type="bibr">81</xref>] created a CNN-based hybrid malware classification model for Windows, integrating static features from the executable section, static API call imports, dynamic API calls, and executable file images, achieving a detection accuracy of 97%. However, this method does not validate the effectiveness of the combined feature sets against adversarial attacks. AI-HydRa [<xref rid="B73-sensors-25-01153" ref-type="bibr">73</xref>] represents an advanced hybrid malware classification method that combines RF and deep learning, achieving a mean detection rate of 0.851 with a standard deviation of 0.00588 for the three tests. Huang et al. [<xref rid="B106-sensors-25-01153" ref-type="bibr">106</xref>] introduced a hybrid method using static images and dynamic API call sequence visualizations to classify malicious behaviors. Utilizing a CNN (VGG16) for feature extraction, the technique attained 94.70% accuracy but had difficulty accurately identifying specific malware types, including password-stealing (PSW) trojans and some outdated variants. RansHunt [<xref rid="B113-sensors-25-01153" ref-type="bibr">113</xref>] integrated static and dynamic features for improved ransomware detection using an SVM, achieving an accuracy of 97.10%, outperforming traditional antivirus solutions. Darabian et al. [<xref rid="B82-sensors-25-01153" ref-type="bibr">82</xref>] used static and dynamic features from 1500 cryptojacking malware samples. They used opcodes and system calls to construct CNN, LSTM, and attention-based LSTM classification models, achieving 95% accuracy in static analysis and 99% accuracy in dynamic analysis.</p><p>Karbab et al. [<xref rid="B114-sensors-25-01153" ref-type="bibr">114</xref>] introduced SwiftR, an approach that detects ransomware attacks by integrating various static and dynamic features from benign and malicious executable file reports. The proposed method achieved an F1 score of 98%.</p><p>
<bold>Memory feature-based malware detection techniques</bold>
</p><p>Malware detection using static or dynamic analysis is insufficient for advanced memory-resident malware and obfuscated malware. Thus, contemporary research emphasizes memory analysis methods that are effective for detecting sophisticated malware variants [<xref rid="B44-sensors-25-01153" ref-type="bibr">44</xref>]. The study [<xref rid="B83-sensors-25-01153" ref-type="bibr">83</xref>] developed a CNN model was developed that used memory images of both suspicious and benign processes to detect malware attacks with a detection rate of 98%, leveraging features extracted from gray-level co-occurrence matrices and local binary patterns. Another study [<xref rid="B84-sensors-25-01153" ref-type="bibr">84</xref>] proposed a DL-based approach that integrated GAN and CNN models, achieving 99.60% detection accuracy on unseen samples when tested on the DumpWare10 dataset to identify advanced malware by visualizing the running processes. In addition, Naeem et al. [<xref rid="B85-sensors-25-01153" ref-type="bibr">85</xref>] developed a high-performance stacked CNN and MLP model using memory images and achieved an accuracy of 99.8%. However, it has limitations in terms of the training time complexity and susceptibility to adversarial attacks. In [<xref rid="B70-sensors-25-01153" ref-type="bibr">70</xref>], the authors used the latest dataset, the CIC-MalMem-2022 dataset, to develop a CNN-based detection model that detects obfuscated malware in memory.</p><p>
<bold>Summary of key trends and insights on malware detection on the Windows platform</bold>
</p><p>A summary of the malware detection methods for Windows is presented in <xref rid="sensors-25-01153-t004" ref-type="table">Table 4</xref>. The table outlines studies with respect to their data collection source, feature type, features, ML algorithms used, detection accuracies, and limitations. <xref rid="sensors-25-01153-f005" ref-type="fig">Figure 5</xref> illustrates the distribution of the techniques, features, and evaluation datasets used in these studies.</p><p><bold>Dataset evaluation:</bold><xref rid="sensors-25-01153-t004" ref-type="table">Table 4</xref> shows that many recent studies have relied on outdated datasets, such as Malimg (2011) and Microsoft BIG 2015. VirusTotal and VirusShare remain the most popular data sources for Windows malware detection systems, followed by dumpware10 and Hybrid Analysis.com. In contrast, newer datasets such as CIC-MalMem-2022 provide updated benchmarks. However, the prevalence of outdated datasets and the lack of diversity in recent studies have limited their effectiveness against zero-day malware and emerging threats.</p><p><bold>Detection algorithms used in the studies:</bold> The bar chart in <xref rid="sensors-25-01153-f005" ref-type="fig">Figure 5</xref>a illustrates the distribution of detection algorithms employed in various detection techniques, highlighting their relative popularity among the studies. Convolutional neural networks (CNNs) are the most-utilized algorithms, likely because of their efficiency in handling images and spatial data. LSTM networks also stand out and are likely to be favored because of their strength in temporal or sequential data processing. Algorithms such as GANs and transfer learning are used less frequently and hint at emerging or specialized applications. However, GRU, RNN, and Markov chains appear less favored, possibly because of their limited generalizability or lower performance in detection tasks. The chart collectively underscores the significance of choosing algorithms that align with the nature of the problem and the data characteristics.</p><p><bold>Detection feature type:</bold>&#x000a0;<xref rid="sensors-25-01153-f005" ref-type="fig">Figure 5</xref>b highlights the distribution of feature types in the malware detection techniques. Static features lead by 33.3%, favoring their simplicity and effectiveness against known malware. Dynamic features follow closely at 29.2%, offering strong runtime analysis capabilities but requiring controlled execution environments. Hybrid features, at 20.8%, integrate static and dynamic methods for comprehensive detection but involve higher computational demands. Memory-based features, representing 16.7%, are powerful for analyzing runtime data, such as API calls, but are less commonly used because of their resource-intensive nature.</p><p><bold>Accuracy of malware detection techniques by feature type</bold>: The bar chart in <xref rid="sensors-25-01153-f005" ref-type="fig">Figure 5</xref>c compares the accuracy of malware detection techniques based on four feature types: static, dynamic, hybrid, and memory. Memory-based features achieved the highest accuracy (~99.89%), demonstrating their effectiveness in capturing runtime behaviors, although they may require higher computational resources. Dynamic features also perform well (~99.49%), leveraging runtime analysis, whereas static features (~99.12%) offer robust results through code and signature analysis. Hybrid features (~99%) combine static and dynamic methods but do not significantly outperform individual approaches. Overall, memory-based and dynamic features demonstrate the highest potential for accurate malware detection.</p><p><bold>Image-based vs. non-image-based detection techniques:</bold> The pie chart in <xref rid="sensors-25-01153-f005" ref-type="fig">Figure 5</xref>d shows a close competition between non-image-based (52%) and image-based (48%) detection methods. While non-image-based methods lead slightly because of their flexibility with diverse data types, image-based approaches are emerging as powerful tools in malware detection. By converting malware binaries into images, image-based methods use CNNs to analyze spatial patterns and effectively identify complex obfuscated malware. The availability of labeled malware datasets, efficient pre-trained models, and generalization capabilities further drive their adoption, reflecting the growing significance and scalability of image-based methods in modern malware detection.</p></sec><sec id="sec6dot1dot2-sensors-25-01153"><title>6.1.2. Malware Detection on Linux OS</title><p>Researchers have also utilized various ML algorithms to detect malware attacks on Linux systems. The ML-based Linux detection techniques are listed in <xref rid="sensors-25-01153-t005" ref-type="table">Table 5</xref>. Xu et al. [<xref rid="B107-sensors-25-01153" ref-type="bibr">107</xref>] developed a graph-based Linux malware detection system called HawkEye that achieved 96.82% accuracy. Hwang et al. [<xref rid="B115-sensors-25-01153" ref-type="bibr">115</xref>] also demonstrated the effectiveness of deep learning for Linux threat detection, using a large dataset of 10,000 malicious and 10,000 benign files to train and test a DNN model. Bai et al. [<xref rid="B74-sensors-25-01153" ref-type="bibr">74</xref>] proposed a Linux malware detection method that analyzes system calls in ELF executable symbol tables using 756 benign and 763 malware ELF samples. They achieved up to 98% accuracy with various classifiers, including J48, random forest, AdaBoostM1, and IBk. Landman and Nissim&#x02019;s Deep-Hook [<xref rid="B86-sensors-25-01153" ref-type="bibr">86</xref>] used CNNs to analyze VM-captured memory dumps and identify Linux malware with up to 99.9% accuracy. Similarly, another study [<xref rid="B46-sensors-25-01153" ref-type="bibr">46</xref>] classified malware using behavioral features from volatile memories.</p><p>
<bold>Summary of key trends on malware detection on Linux platforms</bold>
</p><p>Most current studies have focused on malware detection in Windows and Android platforms, with few addressing advanced ML-based malware detection on Linux. According to the current literature, Linux-based malware detection has advanced through the integration of diverse machine learning algorithms, feature types, and datasets, achieving high accuracy. Memory-based detection, in particular, has gained popularity owing to its effectiveness in identifying sophisticated threats. Owing to the widespread adoption of Linux OS in online supercomputers and devices globally, cybercriminals have increasingly targeted Linux-based devices. Thus, the success of deep learning in Windows and Android indicates its potential for Linux malware detection. Additionally, exploring hybrid models and cross-platform techniques could enhance the detection capabilities and adapt to the evolving landscape of Linux malware.</p></sec><sec id="sec6dot1dot3-sensors-25-01153"><title>6.1.3. Malware Detection on macOS</title><p>Despite the rising threats of OS X malware, research on its detection remains scarce, with only a few studies focusing on malware detection on the macOS platform. For example, [<xref rid="B116-sensors-25-01153" ref-type="bibr">116</xref>] proposed OS X malware and rootkit detection by analyzing static file structures and tracing memory activities. Pajouh et al. [<xref rid="B117-sensors-25-01153" ref-type="bibr">117</xref>] developed an SVM model with novel library call weighting for OS X malware detection, attaining 91% accuracy on a balanced dataset. SMOTE-enhanced datasets increased the accuracy to 96%, with slight false alarm increases, indicating that larger synthetic datasets enhance accuracy, but may impact false positive rates.</p><p>
<bold>Summary of key trends on malware detection on the macOS platform</bold>
</p><p>The application of machine learning to OS X malware detection is underexplored, likely owing to the scarcity of suitable datasets and the difficulty in collecting malware samples. Future research should focus on overcoming these challenges to enhance machine learning techniques for detecting OS X malware.</p></sec></sec><sec id="sec6dot2-sensors-25-01153"><title>6.2. Malware Detection on Mobile Platforms</title><p>The increase in mobile device usage, mainly Android, has led to increased malware threats. This section reviews machine learning techniques for detecting malicious applications on both Android and iOS platforms.</p><sec id="sec6dot2dot1-sensors-25-01153"><title>6.2.1. Android Malware Detection</title><p>This subsection examines ML-based Android malware detection techniques categorized by APK file features, with the dataset details summarized in <xref rid="sensors-25-01153-t006" ref-type="table">Table 6</xref>.</p><p>
<bold>Static feature-based malware detection techniques</bold>
</p><p>A study [<xref rid="B118-sensors-25-01153" ref-type="bibr">118</xref>] proposed GDroid, a graph convolutional neural network model for detecting Android malware through API call patterns using static analysis. Although effective in detecting malicious apps, its accuracy decreases in real-world Android devices. Pekta&#x0015f; and Acarman [<xref rid="B87-sensors-25-01153" ref-type="bibr">87</xref>] proposed a CNN- and LSTM-based model using static features, such as opcodes, API calls, and call graphs, for Android malware detection. Despite the 91.42% accuracy and 91.91% F-measure for unknown samples, the model&#x02019;s reliance on static features may limit its effectiveness against obfuscated malware. Similarly, [<xref rid="B71-sensors-25-01153" ref-type="bibr">71</xref>] proposed H-LIME, an XAI method that enhances LIME with an opcode-sequence hierarchy for better Android malware detection explanations. Evaluated on the MalDroid-2020 dataset, H-LIME outperformed LIME in explanation quality and efficiency but struggled with shorter programs in real-world malware. Lakshmanarao and Shashi [<xref rid="B97-sensors-25-01153" ref-type="bibr">97</xref>] developed an LSTM-based malware detection model using opcode sequences from Android apps and achieved 96% accuracy on a dataset of 1500 apps. Potha et al. [<xref rid="B72-sensors-25-01153" ref-type="bibr">72</xref>] created an ensemble model combining LR, MLP, and SGD, showing that larger, homogeneous ensembles with feature selection outperformed smaller ensembles, achieving strong AUC and accuracy on Android malware datasets. Aamir et al. [<xref rid="B88-sensors-25-01153" ref-type="bibr">88</xref>] introduced the AMDDL model, achieving 99.92% accuracy in malware detection using CNNs. This study highlights the challenges related to limited malware diversity, deep learning interpretability, and scalability.</p><p>
<bold>Dynamic feature-based malware detection techniques</bold>
</p><p>Ma et al. [<xref rid="B98-sensors-25-01153" ref-type="bibr">98</xref>] proposed Droidect, a Bi-LSTM-based model for classifying malicious Android apps, achieving 97.22% accuracy on a dataset of 11,982 benign and 9616 malicious files. Despite its success, this model suffers from long detection times. Wang et al. [<xref rid="B119-sensors-25-01153" ref-type="bibr">119</xref>] presented a malware detection technique employing network traffic analysis and the C4.5 algorithm, achieving a 97.89% detection rate on the Drebin dataset, outperforming current methods. The study in [<xref rid="B99-sensors-25-01153" ref-type="bibr">99</xref>] introduced MemDroid, an LSTM-based detection method trained on Androzoo malware samples. Apps were run in a sandbox to capture system call sequences, which were used to train the LSTM classifier, achieving 99.23% malware detection accuracy. The study in [<xref rid="B100-sensors-25-01153" ref-type="bibr">100</xref>] used LSTM to develop classifiers for detecting Android malware via dynamic API and system calls, achieving F1-scores of 0.967 and 0.968, respectively, across different datasets.</p><p>
<bold>Hybrid feature-based malware detection techniques</bold>
</p><p>Alzaylaee et al. [<xref rid="B67-sensors-25-01153" ref-type="bibr">67</xref>] introduced DL-Droid, a deep learning framework for Android malware detection using static and dynamic analysis. They achieved 97.8% detection with dynamic features and 99.6% detection with combined features, taking 190 s/app. Saracino et al. [<xref rid="B55-sensors-25-01153" ref-type="bibr">55</xref>] introduced MADAM, an Android malware detection system analyzing kernel-, application-, user-, and package-level features. MADAM detected over 96% of malicious apps in a 2800-app test but is susceptible to mimicry attacks and cannot identify unknown malware. Wu et al. [<xref rid="B101-sensors-25-01153" ref-type="bibr">101</xref>] presented DeepCatr, a hybrid learning approach for Android malware detection, combining text mining and call graphs with bidirectional LSTM and graph neural networks, achieving 95.94% and 95.83% accuracy on 18,628 samples. Mahdavifar et al. [<xref rid="B103-sensors-25-01153" ref-type="bibr">103</xref>] created a semi-supervised deep learning model for Android malware detection, using a stacked autoencoder trained on hybrid features, obtaining 98.28% accuracy and a 1.16% false positive rate.</p><p>
<bold>Memory feature-based malware detection techniques</bold>
</p><p>Memory analysis has been utilized to develop deep learning models for detecting obfuscated and memory-resident Android malware. A framework combining weak learners (CNNs) and a meta-learner (MLP) to create a deep-stacked ensemble model along with an explainable AI approach for result interpretation and validation was proposed by Naeem et al. [<xref rid="B85-sensors-25-01153" ref-type="bibr">85</xref>] The framework achieved an accuracy of 94.3% using 2375 images in an empirical evaluation.</p><p>
<bold>Summary of research trends on malware detection on the Android platform</bold>
</p><p><xref rid="sensors-25-01153-t006" ref-type="table">Table 6</xref> summarizes mobile device malware detection systems, including datasets, features, detection algorithms, and study accuracy. <xref rid="sensors-25-01153-f006" ref-type="fig">Figure 6</xref> shows the distribution of the dataset sources, techniques, and features used in these studies.</p><p><bold>Proportion of datasets used:</bold> The pie chart in <xref rid="sensors-25-01153-f006" ref-type="fig">Figure 6</xref>a reveals a clear preference for established datasets in Android malware detection studies. Drebin emerges as the most-used dataset (31%), owing to its extensive malware diversity and widespread acceptance as a benchmark in the field. Medium-utilized datasets, including MalGenome, VirusShare, and CICMal-Droid2020 (23% each), are valued for their reliability and growing prominence in the evaluation of detection techniques. The relatively low adoption of custom datasets highlights the focus on standardized datasets, limiting opportunities for novel malware detection approaches tailored to evolving threats.</p><p><bold>Detection algorithms:</bold> The pie chart in <xref rid="sensors-25-01153-f006" ref-type="fig">Figure 6</xref>b demonstrates that the base models (31%), including Logistic Regression and Random Forest, are the most commonly used detection algorithms, valued for their reliability, simplicity, and ease of implementation. Deep learning methods, such as LSTM (23%) and CNN (15%), are gaining popularity owing to their ability to process complex and large-scale malware patterns effectively. Hybrid techniques (8%), ensemble models (8%), and exploratory approaches, such as Pseudo-label SAE and K-NN (8% each), showcase ongoing innovations aimed at improving detection accuracy and robustness. This distribution underscores the balance between traditional dependable methods and modern complexity-driven approaches to malware detection.</p><p><bold>Detection features:</bold> As shown in <xref rid="sensors-25-01153-f006" ref-type="fig">Figure 6</xref>c, the chart indicates that opcode sequences (31%) are the most commonly used features because of their effectiveness in static analysis. Permissions, intents, and API calls (23% each) are essential for identifying behavioral anomalies. System call sequences (23%) and network traffic (15%) are gaining prominence in runtime analyses. Composite behaviors and memory dumps (8% each) remain underexplored, likely due to their complexity and resource demands.</p></sec><sec id="sec6dot2dot2-sensors-25-01153"><title>6.2.2. Malware Detection in iOS</title><p>In [<xref rid="B120-sensors-25-01153" ref-type="bibr">120</xref>], the authors focused on identifying iOS malware using static analysis and machine learning, achieving a high precision of 0.971 and a recall of 1.0. It addresses the underexplored domain of iOS malware detection owing to the platform&#x02019;s closed-source nature. Zhou et al. [<xref rid="B121-sensors-25-01153" ref-type="bibr">121</xref>] examine the risks of legitimate applications being hijacked for malware communication. They presented the ChanDet model to identify potential channel applications and proposed mitigation strategies. Mercaldo and Santone [<xref rid="B122-sensors-25-01153" ref-type="bibr">122</xref>] successfully classified 50,000 Android and 230 iOS malware samples using deep learning on grayscale images of executables, tackling obfuscation and false positives.</p><p>
<bold>Summary of research trends on malware detection on the iOS platform</bold>
</p><p>The current literature highlights advancements in iOS malware detection, leveraging machine learning and static analysis to address the platform&#x02019;s closed-source challenges. Researchers have introduced high-precision models and deep learning techniques, such as those using executable images, to mitigate obfuscation. Despite these advancements, challenges such as limited datasets, lack of hybrid analysis, and insufficient attention to real-time cross-platform threats persist. Future work should focus on expanding the datasets, utilizing transfer learning, enhancing anti-obfuscation methods, and developing comprehensive detection frameworks.</p></sec></sec><sec id="sec6dot3-sensors-25-01153"><title>6.3. Malware Detection on IoT Platform</title><p>This section compares the surveys on machine learning-based malware detection in IoT, which are summarized in <xref rid="sensors-25-01153-t007" ref-type="table">Table 7</xref>.</p><p>Ali et al. [<xref rid="B68-sensors-25-01153" ref-type="bibr">68</xref>] used machine learning algorithms on the IoT-23 dataset to detect IoT network anomalies. The RF algorithm demonstrated the highest efficacy, achieving 99.5% accuracy. Sudheera et al. [<xref rid="B89-sensors-25-01153" ref-type="bibr">89</xref>] introduced Adept, a distributed framework that detects and classifies attack stages in IoT networks through local anomaly detection, pattern mining for correlated alerts, and machine learning-based classification. This method can identify five times more attack patterns with 99% accuracy in classifying attack stages. Vasan et al. [<xref rid="B90-sensors-25-01153" ref-type="bibr">90</xref>] proposed a cross-architectural malware detection method suitable for diverse IoT processor architectures, such as MIPS, PowerPC, and SPARC.</p><p>Researchers have used sandboxing as a dynamic method to detect malware in IoT environments. However, existing sandboxes are inadequate for resource-limited IoT settings, lack support for diverse CPU architectures, and do not offer library-sharing options [<xref rid="B123-sensors-25-01153" ref-type="bibr">123</xref>]. Hai-Viet et al. [<xref rid="B91-sensors-25-01153" ref-type="bibr">91</xref>] proposed an IoT botnet detection approach using system call graphs and a one-class CNN classifier, which improved sandboxing to capture system behaviors and utilized graph features for robust detection, overcoming dataset imbalance and architectural constraints, attaining 97% accuracy. Jeon et al. [<xref rid="B102-sensors-25-01153" ref-type="bibr">102</xref>] introduced HyMalD, a hybrid IoT malware detection method using Bi-LSTM and SPP-Net to analyze static and dynamic features, extracting opcode and API call sequences for classification. It achieved 92.5% accuracy, surpassing the 92.09% accuracy of the static analysis. Researchers have now converted network traffic or opcode into 2D images for malware detection using visual methods. Shire et al. [<xref rid="B92-sensors-25-01153" ref-type="bibr">92</xref>] utilized visual detection techniques in IoT malware detection, transforming network traffic into 2D images for machine learning analysis. He et al. [<xref rid="B69-sensors-25-01153" ref-type="bibr">69</xref>] proposed an efficient and scalable lightweight IoT intrusion detection method utilizing feature grouping, which attained over 99.5% accuracy on three public IoT datasets while consuming fewer computational resources than baseline methods. Jiang et al. [<xref rid="B93-sensors-25-01153" ref-type="bibr">93</xref>] proposed FGMD, a framework that protects IoT intrusion detectors from adversarial attacks, preserving efficacy and performance. Conversely, Zhou et al. [<xref rid="B124-sensors-25-01153" ref-type="bibr">124</xref>] introduced HAA, a hierarchical adversarial attack strategy for GNN-based IoT detectors, which reduces classification accuracy by over 30% through minor perturbations and node prioritization techniques. Moreover, FL has gained attention for its ability to handle privacy by decentralizing data from IoT devices and aggregating the global model on a centralized server. The authors in [<xref rid="B10-sensors-25-01153" ref-type="bibr">10</xref>] employed FL with an autoencoder for botnet detection, using edge devices to process IoT traffic and a global model to aggregate updates, achieving 99% classification accuracy. The study employed an ANN as a global model for federated intrusion detection in IoT healthcare, enhancing performance and defending against poisoning attacks [<xref rid="B125-sensors-25-01153" ref-type="bibr">125</xref>].</p><table-wrap position="anchor" id="sensors-25-01153-t007"><object-id pub-id-type="pii">sensors-25-01153-t007_Table 7</object-id><label>Table 7</label><caption><p>Summary of reviewed ML models for IoT-based malware detection: dataset sources, feature details and experimental results.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Reference</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Data Source</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Feature Category</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Feature Name</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">ML Algorithms</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Accuracy (%)</th></tr></thead><tbody><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B68-sensors-25-01153" ref-type="bibr">68</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">IoT-23 dataset</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>Static</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Network capture files include IP address, ID of the capture, protocol, etc.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">RF, NB, MLP, SVM, and AdaBoost</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">99.5</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B89-sensors-25-01153" ref-type="bibr">89</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">NSS Mirai Dataset<break/>latest relevant, balanced datasets<break/><uri xlink:href="https://www.stratosphereips.org/datasets-iot23">https://www.stratosphereips.org/datasets-iot23</uri> (accessed on 3 February 2025)</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Static</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Alert level (source and destination IP addresses, C&#x00026;C activities, protocol) and packet-level features (IP address or port number, packet size, etc.)</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">CNN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">99</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B90-sensors-25-01153" ref-type="bibr">90</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">ARM-based IoT</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Static</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Opcode features</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">RNN and CNN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">99.98</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B91-sensors-25-01153" ref-type="bibr">91</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Executable and Linkable Format (ELF) file templates are executed in the QEMU sandbox</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Dynamic</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">System call graph</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">CNN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">97</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B102-sensors-25-01153" ref-type="bibr">102</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">KISA-data challenge 2019-Malware.04, provided by the Korea Internet &#x00026; Security Agency</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Hybrid</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Opcode and API call sequences</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Bi-LSTM and spatial pyramid pooling network (SPP-Net)</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">92.09</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B92-sensors-25-01153" ref-type="bibr">92</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Network traffic is collected from external repositories</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Dynamic</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">2D image-based network traffic features</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Neural network</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">91.32</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B69-sensors-25-01153" ref-type="bibr">69</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Bot-IoT, MedBIoT, and MQTT-IoT-IDS2020 datasets</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Dynamic</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Packet-level metadata of the raw PCAP file</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">DT, RF, K-nearest neighbor (KNN), and extreme gradient boosting (XGB)</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">99.5 with RF</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B93-sensors-25-01153" ref-type="bibr">93</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">MedBIoT dataset [<xref rid="B126-sensors-25-01153" ref-type="bibr">126</xref>].<break/>IoTID (IoT network intrusion dataset)<break/><uri xlink:href="http://dx.doi.org/10.21227/q70p-q449">http://dx.doi.org/10.21227/q70p-q449</uri> (accessed on 4 February 2025)</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Dynamic</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">PCAP files</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">LSTM, RNN, and DT, respectively</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">98.71</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B124-sensors-25-01153" ref-type="bibr">124</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">UNSW-SOSR2019</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Static</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Network packets (source IP, destination IP, timestamp, traffic flows, etc.)</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Graph neural network (GNN)</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">-</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B10-sensors-25-01153" ref-type="bibr">10</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">N-BaIoT dataset</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Network</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">IoT network traffic</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">MLP and Auto Encoder</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">99%</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B125-sensors-25-01153" ref-type="bibr">125</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Bot IoT dataset</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Network</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">IoT network traffic</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">ANN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">99%</td></tr></tbody></table></table-wrap><p>
<bold>Summary of research trends on malware detection on IoT platform</bold>
</p><p><xref rid="sensors-25-01153-t007" ref-type="table">Table 7</xref> summarizes IoT malware detection systems, detailing data sources, features, detection models, and accuracies.</p><p><bold>Dataset utilization and challenges</bold>: <xref rid="sensors-25-01153-t007" ref-type="table">Table 7</xref> shows that datasets such as IoT-23, MedBIoT, and Bot-IoT were frequently utilized. However, issues such as dataset imbalances and limited architectural diversity remain unclear.</p><p><bold>Diverse feature categories</bold>: IoT malware detection employs a mix of static (e.g., network packet features and opcode sequences) and dynamic (e.g., system call graphs and network traffic metadata) features, with some methods integrating hybrid approaches (e.g., opcode and API calls).</p><p><bold>Machine learning algorithms</bold>: A wide range of ML algorithms, including RF, CNN, RNN, Bi-LSTM, and GNN, has been utilized. The RF and CNN models dominate owing to their high accuracy and adaptability to IoT-specific constraints.</p><p><bold>Image-based detection advances in sandboxing:</bold> Image-based approaches and sandboxing improvements, such as QEMU-based execution and system behavior capture, have addressed limitations in resource-constrained IoT environments while enhancing the malware detection performance.</p><p><bold>Adversarial vulnerabilities:</bold> Many existing models are susceptible to adversarial attacks, which reduces their real-world applicability.</p></sec><sec id="sec6dot4-sensors-25-01153"><title>6.4. Malware Detection on Cloud Platform</title><p>Malware detection in cloud platforms is becoming increasingly vital as organizations move data and services to the cloud. This approach leverages the cloud infrastructure to identify malicious software by monitoring activities, analyzing data, and security checks. Unlike traditional systems, cloud environments pose unique challenges due to their distributed architecture, multi-tenancy, and scalability. The dynamic and large-scale nature of the cloud enables rapid malware propagation, outpacing traditional detection methods. Detection agents on cloud servers provide security services, allowing users to upload files and receive malware reports.</p><p>Xiao et al. [<xref rid="B127-sensors-25-01153" ref-type="bibr">127</xref>] proposed a cloud-based malware detection scheme utilizing Q-learning to optimize the offloading rate for mobile devices without prior knowledge of trace generation or radio bandwidth. They employed the Dyna architecture and post-decision state learning to enhance performance and expedite the reinforcement learning process. Testing revealed that their scheme improved detection accuracy by 40%, reduced delay by 15%, and increased mobile device utility by 47% with 100 devices, thereby enhancing overall performance. Additionally, Yadav R. Mahesh [<xref rid="B64-sensors-25-01153" ref-type="bibr">64</xref>] introduced a malware detection system for cloud environments using a novel consolidated Weighted Fuzzy K-means clustering algorithm with an Associative Neural Network (WFCM-AANN). The proposed classifier identified malware with a high detection precision of 92.45%, surpassing existing classifiers. Similarly, Mouratidis et al. [<xref rid="B128-sensors-25-01153" ref-type="bibr">128</xref>] introduced a security modeling language for cloud environments, integrating security requirements with cloud concepts and leveraging automated analysis to enhance security insights. Moreover, in [<xref rid="B129-sensors-25-01153" ref-type="bibr">129</xref>], the researchers developed the CMD_2024 dataset by integrating static and dynamic features to enhance cloud malware detection. By leveraging integrated deep learning models, the study reported outstanding performance, achieving 99.42% binary and 86.97% multiclass classification accuracy.</p><p>
<bold>Summary of research trends on malware detection on cloud platform</bold>
</p><p>According to the studies reviewed in this work, advanced methods such as Q-learning and Weighted Fuzzy K-means clustering combined with neural networks have shown promising results. However, large-scale and highly variable cloud environments render malware detection challenging. Hence, existing solutions often lack scalability to handle the rapid increases in traffic and malware propagation. To overcome this issue, adaptive ML models that can efficiently handle the dynamic and multi-tenant nature of cloud systems can be developed.</p></sec><sec id="sec6dot5-sensors-25-01153"><title>6.5. Discussion</title><p>Based on the extensive review of the related literature discussed in <xref rid="sec6dot1-sensors-25-01153" ref-type="sec">Section 6.1</xref>, <xref rid="sec6dot2-sensors-25-01153" ref-type="sec">Section 6.2</xref>, <xref rid="sec6dot3-sensors-25-01153" ref-type="sec">Section 6.3</xref> and <xref rid="sec6dot4-sensors-25-01153" ref-type="sec">Section 6.4</xref>, this section provides a critical analysis of malware detection methods, focusing on their effectiveness in specific scenarios and platforms, as well as their computational cost, scalability, and challenges in real-world integration. These insights highlight the strengths, limitations, and practical applicability of the surveyed methods, offering a deeper understanding of their suitability in different environments.</p><p>The effectiveness of malware detection methods varies significantly across platforms, owing to differences in computational resources, malware characteristics, and operational constraints. For instance, CNNs and LSTMs have shown high accuracy in detecting Windows malware using static features such as opcode sequences, which often struggle with zero-day malware owing to their reliance on known patterns [<xref rid="B76-sensors-25-01153" ref-type="bibr">76</xref>,<xref rid="B77-sensors-25-01153" ref-type="bibr">77</xref>]. In contrast, dynamic analysis provides better detection of zero-day malware by observing runtime behavior. However, dynamic analysis is resource-intensive and requires controlled environments, making it less suitable for real-time detection of end-user devices [<xref rid="B80-sensors-25-01153" ref-type="bibr">80</xref>,<xref rid="B112-sensors-25-01153" ref-type="bibr">112</xref>]. Hybrid approaches that combine static and dynamic features have shown promise; however, they are computationally expensive and may not scale well for large-scale deployment [<xref rid="B82-sensors-25-01153" ref-type="bibr">82</xref>]. CNNs excel in extracting spatial patterns from malware binaries converted into images, making them highly effective for Windows environments where malware often exhibits consistent structural patterns. However, these methods are less effective in IoT environments because of the lack of large and diverse datasets and limited computational resources of IoT devices. In contrast, RF models, which are lightweight and computationally efficient, are preferred in IoT environments but may not perform as well in cloud environments. In cloud environments, behavior-based methods such as Q-learning and Weighted Fuzzy K-means clustering adapt well to the dynamic and distributed nature of cloud systems but face scalability challenges due to the rapid increase in traffic and the multi-tenant nature of these environments [<xref rid="B127-sensors-25-01153" ref-type="bibr">127</xref>]. On Android platforms, hybrid methods that combine static and dynamic features (e.g., opcode sequences and API calls) are effective against obfuscated malware, but face scalability challenges on low-end devices owing to their high computational costs. Overall, the success of a detection method depends on its ability to balance the accuracy, computational efficiency, and adaptability to the unique characteristics of the target platform.</p></sec></sec><sec id="sec7-sensors-25-01153"><title>7. Challenges Associated with Platform-Specific and Cross-Platform Malware Detection</title><p>This section outlines the research challenges related to malware detection on various platforms, including Windows, Linux, macOS, Android, iOS, IoT, and cloud environments. Additionally, we discuss cross-platform challenges particularly pertinent to machine learning (ML)-based detection methods.</p><sec id="sec7dot1-sensors-25-01153"><title>7.1. PC Platforms (Windows, Linux, and macOS)</title><p>Personal computers (PCs), including Windows, Linux, and macOS, face significant challenges in terms of malware detection. Although these platforms share commonalities, they also exhibit unique challenges that influence detection methodologies.</p><sec id="sec7dot1dot1-sensors-25-01153"><title>7.1.1. Common Challenges Across PC Platforms</title><p><bold>Dependency on runtime libraries:</bold> The absence of the necessary runtime libraries or loaders is a shared problem across all platforms, hindering dynamic analysis. For instance, </p><list list-type="bullet"><list-item><p>Linux: Linux systems often lack the necessary ELF loaders for executing malware samples.</p></list-item><list-item><p>Windows: Missing or incompatible DLLs can disrupt malware detection. Windows systems face similar issues as missing or incompatible Dynamic Link Libraries (DLLs).</p></list-item><list-item><p>macOS: macOS&#x02019;s sandboxing mechanisms can restrict access to runtime environments, further complicating the execution of suspicious binaries for dynamic analysis.</p></list-item></list><p><bold>Fileless malware threats:</bold> Fileless malware that resides in memory instead of the file system challenges the traditional detection methods on all platforms.</p><p><bold>Cross-platform threats:</bold> Modern malware often targets multiple platforms and exploits shared vulnerabilities. For example, the &#x0201c;Mirai&#x0201d; botnet originated as an IoT threat but has evolved to infect Linux-based systems and even Windows devices via poorly secured remote-access protocols.</p><p><bold>Obfuscation and polymorphism:</bold> Malware across Windows, Linux, and macOS frequently employs obfuscation and polymorphic techniques to evade detection. For example, the ransomware family &#x0201c;LockBit&#x0201d; encrypts its code to bypass static analysis, and similar methods are used by Linux trojans to dynamically alter their signatures.</p></sec><sec id="sec7dot1dot2-sensors-25-01153"><title>7.1.2. Windows-Specific Challenges</title><list list-type="bullet"><list-item><p>Widespread usage and sophisticated attacks: Windows operating systems face unique security challenges owing to their architecture and widespread usage, making them particularly vulnerable to window-specific exploits. For example, the WannaCry ransomware exclusively targets Windows systems by exploiting the EternalBlue vulnerability in the Windows SMB protocol, causing global disruptions. Additionally, Windows-specific protocols such as NTLM (NT LAN Manager) and NetBIOS have been exploited in pass-the-hash and man-in-the-middle attacks, which are not applicable to Linux or macOS systems. These vulnerabilities are often exacerbated by Windows&#x02019; reliance on legacy systems and backward compatibility requirements, leaving systems exposed to unpatched exploits [<xref rid="B130-sensors-25-01153" ref-type="bibr">130</xref>].</p></list-item></list></sec><sec id="sec7dot1dot3-sensors-25-01153"><title>7.1.3. Linux-Specific Challenges</title><list list-type="bullet"><list-item><p>Kernel exploits and diverse architectures: Linux operating systems face unique challenges owing to their architecture and widespread use in servers, cloud infrastructures, and IoT devices. A notable example is the Dirty COW (CVE-2016-5195) vulnerability, a Linux-specific privilege escalation flaw in the kernel memory subsystem that allows attackers to gain root access [<xref rid="B131-sensors-25-01153" ref-type="bibr">131</xref>]. Linux-specific package managers and dependencies can also introduce vulnerabilities if not properly maintained, as seen in attacks targeting outdated software in distributions, such as Ubuntu or CentOS. These issues are compounded by the diversity of Linux distributions that can lead to inconsistent patching and security practices.</p></list-item></list></sec><sec id="sec7dot1dot4-sensors-25-01153"><title>7.1.4. macOS-Specific Challenges</title><list list-type="bullet"><list-item><p>Exploiting native frameworks (macOS), which are known for their robust security architecture, faces unique challenges due to their closed ecosystem and reliance on native frameworks. One notable example is gatekeeper bypass vulnerability, in which attackers exploit flaws in the macOS app verification system to execute malicious software without user consent. The reliance on proprietary frameworks such as AppleScript and iCloud integration also introduces vulnerabilities, as seen in attacks that exploit scripting vulnerabilities or iCloud phishing schemes [<xref rid="B132-sensors-25-01153" ref-type="bibr">132</xref>].</p></list-item><list-item><p>Perception of security: macOS users often perceive their systems as inherently secure, which attackers exploit through sophisticated phishing and malvertising campaigns.</p></list-item></list></sec><sec id="sec7dot1dot5-sensors-25-01153"><title>7.1.5. Summary of Commonalities and Differences</title><p><xref rid="sensors-25-01153-t008" ref-type="table">Table 8</xref> highlights key differences and commonalities in malware detection challenges across Windows, Linux, and macOS, providing insights into platform-specific vulnerabilities and security considerations and protocols.</p></sec></sec><sec id="sec7dot2-sensors-25-01153"><title>7.2. Mobile Platforms (Android and iOS)</title><sec id="sec7dot2dot1-sensors-25-01153"><title>7.2.1. Android-Specific Challenges</title><list list-type="bullet"><list-item><p><bold>OS update delays:</bold> the dependency on multiple manufacturers slows OS updates, leaving outdated devices vulnerable.</p></list-item><list-item><p><bold>Third-party apps:</bold> third-party applications increase risks to device security and user privacy.</p></list-item><list-item><p><bold>Device diversity:</bold> the variety of Android devices and OS versions complicates uniform patching and security protocols.</p></list-item></list></sec><sec id="sec7dot2dot2-sensors-25-01153"><title>7.2.2. iOS-Specific Challenges</title><list list-type="bullet"><list-item><p><bold>Jailbreaking risks:</bold> jailbreaking removes iOS restrictions, exposing devices to malware and unauthorized app installations [<xref rid="B133-sensors-25-01153" ref-type="bibr">133</xref>].</p></list-item><list-item><p><bold>iCloud phishing and account takeovers</bold>: attackers use phishing to steal iCloud credentials, enabling data theft and device tracking.</p></list-item></list></sec><sec id="sec7dot2dot3-sensors-25-01153"><title>7.2.3. Summary of Mobile Platform Differences</title><p><xref rid="sensors-25-01153-t009" ref-type="table">Table 9</xref> highlights key differences and commonalities in malware detection challenges and security features between Android and iOS, providing insights into platform-specific risks, update mechanisms, and security controls.</p></sec></sec><sec id="sec7dot3-sensors-25-01153"><title>7.3. IoT-Specific Challenges</title><list list-type="bullet"><list-item><p><bold>Device diversity:</bold> the rapid growth and heterogeneity of IoT devices create challenges for uniform malware detection.</p></list-item><list-item><p><bold>Resource constraints:</bold> limited computational resources render IoT devices more vulnerable to malware.</p></list-item><list-item><p><bold>Dataset limitations:</bold> the lack of valid large-scale IoT malware datasets limits machine learning model training.</p></list-item></list></sec><sec id="sec7dot4-sensors-25-01153"><title>7.4. Cloud-Specific Challenges</title><list list-type="bullet"><list-item><p><bold>Interconnected infrastructure:</bold> the distributed nature of cloud systems increases the risk of malware attacks.</p></list-item><list-item><p><bold>Shared responsibility model:</bold> the shared responsibility model can obscure security accountability, limiting organizations&#x02019; visibility and hindering threat detection.</p></list-item><list-item><p><bold>Scalability of attacks:</bold> attackers can leverage the automation and scalability features of the cloud to launch large-scale attacks quickly.</p></list-item></list></sec><sec id="sec7dot5-sensors-25-01153"><title>7.5. Cross-Platform Challenges</title><list list-type="bullet"><list-item><p><bold>Data heterogeneity:</bold> differences in file formats, system call sequences, and behavioral patterns across platforms make it challenging to create generalized models.</p></list-item><list-item><p><bold>Lack of unified datasets:</bold> the absence of a standardized, diverse, and large-scale dataset encompassing samples from various platforms (Windows, macOS, Linux, Android, IoT, and cloud) complicates the effective training of detection models.</p></list-item><list-item><p><bold>Model transferability:</bold> ML models trained on one platform (e.g., Windows) may not generalize well to others (e.g., Linux or IoT) because of the differences in malware characteristics.</p></list-item><list-item><p><bold>Performance scalability:</bold> ensuring that detection techniques remain scalable and efficient when applied to resource-limited environments such as IoT and cloud systems remains a critical challenge.</p></list-item></list><p>These challenges emphasize the need for a multi-platform approach to malware detection that considers platform-specific constraints, while overcoming cross-platform issues.</p></sec></sec><sec id="sec8-sensors-25-01153"><title>8. Limitations in the Existing Literature and Future Research Directions</title><p>Based on a comprehensive review, we identified significant research gaps and limitations in the existing literature and proposed innovative future directions to enhance malware detection using machine learning (ML) techniques.</p><sec id="sec8dot1-sensors-25-01153"><title>8.1. Limitations in the Existing Literature</title><p>
<bold>Lack of unified cross-platform detection frameworks</bold>
</p><p>Current ML-based malware detection systems are predominantly designed for single platforms (e.g., Windows, IoT, or cloud environments). This siloed approach limits their ability to detect and correlate threats across interconnected systems, such as PCs, mobile devices, IoT networks, and cloud infrastructures. Consequently, these systems struggle to address multi-vector attacks that exploit vulnerabilities across platforms, leading to fragmented and incomplete threat detection.</p><p>
<bold>High computational demands of ML models in resource-constrained environments</bold>
</p><p>The deployment of advanced machine learning (ML)-based ransomware detection techniques in resource-constrained environments, such as IoT and mobile devices, presents significant challenges. These devices often operate with limited processing power, memory, and energy resources, which restrict their ability to support computationally intensive ML models. Consequently, the practical implementation of state-of-the-art detection methods is hindered, limiting their applicability in real-world scenarios where lightweight and efficient solutions are critical.</p><p>
<bold>Limited interpretability of ML models</bold>
</p><p>The opacity of complex machine learning models remains a critical challenge in security-sensitive applications, limiting their trustworthiness and practical deployment. Although existing explainable AI (XAI) techniques, such as Shapley Additive Explanations (SHAP) and Local Interpretable Model-agnostic Explanations (LIME), have significantly enhanced model interpretability, there remains considerable scope for further research to optimize their effectiveness in real-time threat mitigation and decision-making scenarios.</p><p>
<bold>Limitations of large language models (LLMs) in malware detection</bold>
</p><p>Although large language models (LLMs) show promise in malware detection, several limitations hinder their adoption, including high computational costs, lack of domain-specific training data, susceptibility to adversarial attacks, scalability challenges, and ethical concerns. For example, fine-tuning LLMs (ChatGPT, Google Bart, GPT, BigBird) for malware detection often requires high-performance GPUs or TPUs [<xref rid="B134-sensors-25-01153" ref-type="bibr">134</xref>], which are not feasible for resource-constrained environments such as IoT devices or low-end mobile devices.</p></sec><sec id="sec8dot2-sensors-25-01153"><title>8.2. Future Research Directions</title><p>
<bold>Development of unified cross-platform frameworks</bold>
</p><p>Future studies should focus on developing unified cross-platform malware detection frameworks that can leverage transfer and federated learning. Transfer learning can enable models to generalize knowledge from one platform to another, thereby reducing the need for extensive retraining and improving adaptability [<xref rid="B104-sensors-25-01153" ref-type="bibr">104</xref>]. Federated learning can facilitate collaborative model training across distributed platforms without sharing sensitive data, thereby ensuring privacy and scalability [<xref rid="B108-sensors-25-01153" ref-type="bibr">108</xref>]. In addition, researchers should explore cross-platform feature representation techniques to harmonize data from diverse environments (e.g., API calls, network traffic, and system logs) into a unified feature space. For instance, Chaganti et al. (2022) demonstrated the effectiveness of multiview feature fusion for malware classification, which can be extended to integrate features from Windows, IoT, and cloud environments, enabling more robust and generalizable malware detection [<xref rid="B81-sensors-25-01153" ref-type="bibr">81</xref>].</p><p>
<bold>Lightweight solutions for resource-constrained environments</bold>
</p><p>To address the limitations posed by resource-constrained environments, future research should focus on developing lightweight and energy-efficient ML algorithms tailored for IoT and mobile devices. Advanced techniques, such as model pruning, quantization, and knowledge distillation, offer promising avenues for optimizing ML models without significantly compromising the detection accuracy. The technique of &#x0201c;model pruning&#x0201d; involves removing weights or parameters from a trained machine learning model to reduce its size and complexity while attempting to maintain accuracy [<xref rid="B135-sensors-25-01153" ref-type="bibr">135</xref>]. Quantization reduces the precision of the model parameters (e.g., converting 32-bit floating-point values to 8-bit integers), which decreases the model size and accelerates the inference speed, making it more suitable for real-time applications on low-power devices. Although quantization may result in a slight loss of precision, the trade-off is often justified by efficiency gains [<xref rid="B136-sensors-25-01153" ref-type="bibr">136</xref>]. Knowledge distillation is a method in which a large, complex model transfers its learned knowledge to a smaller, simpler model to improve the efficiency while retaining high performance. This is beneficial for creating lightweight malware detection models [<xref rid="B137-sensors-25-01153" ref-type="bibr">137</xref>]. By leveraging these techniques, future research can bridge the gap between advanced ML-based ransomware detection and the practical constraints of the IoT and mobile environments.</p><p>
<bold>Explainable AI for enhanced transparency</bold>
</p><p>Future research should advance the explainability of ML-based cybersecurity solutions beyond post hoc methods such as SHAP and LIME by developing adaptive explainability frameworks that provide real-time dynamic interpretations during cyberattacks, enabling faster incident responses [<xref rid="B138-sensors-25-01153" ref-type="bibr">138</xref>]. Given the heterogeneity of computing environments, multimodal explainability approaches are essential for addressing platform-specific nuances such as API call sequences for Windows malware, device interactions for IoT, and virtual machine behaviors for cloud systems [<xref rid="B139-sensors-25-01153" ref-type="bibr">139</xref>]. Additionally, context-aware XAI models should deliver actionable insights tailored to specific incidents, while ensuring cross-platform consistency to support unified detection strategies [<xref rid="B140-sensors-25-01153" ref-type="bibr">140</xref>]. For example, studies have shown that unified XAI frameworks can improve the interpretability of malware detection across diverse environments such as endpoints, networks, and cloud systems by maintaining consistent feature attributions and explanation formats [<xref rid="B141-sensors-25-01153" ref-type="bibr">141</xref>]. However, achieving these goals requires addressing key challenges, including the computational overhead and integration of domain-specific knowledge.</p><p>Enhancing LLMs for scalable and secure malware detection</p><p>Future research should focus on developing lightweight LLMs (e.g., distilled or quantized models) [<xref rid="B142-sensors-25-01153" ref-type="bibr">142</xref>] that can operate efficiently on resource-constrained devices, such as IoT sensors or mobile phones. In addition, fine-tuning LLMs on domain-specific datasets, enhancing adversarial robustness, improving interpretability through explainable AI (XAI), designing scalable deployment architectures, and ensuring ethical and privacy-preserving implementations are critical areas for future research. Moreover, integrating LLMs with neural network models can provide a more comprehensive approach for malware detection by leveraging the strengths of both techniques.</p></sec></sec><sec sec-type="conclusions" id="sec9-sensors-25-01153"><title>9. Conclusions</title><p>This study provides a comprehensive review of machine learning (ML)-based malware detection techniques across diverse platforms, each presenting platform-specific characteristics, research trends, and unique security challenges owing to distinct vulnerabilities, operational constraints, and resource limitations. Our findings reveal that although significant progress has been made in malware detection using ML models, existing solutions remain largely platform-centric, limiting their effectiveness in addressing cross-platform threats. Furthermore, issues such as data scarcity, adversarial evasion techniques, and the need for interpretable AI models pose challenges to real-world deployment. By synthesizing recent research since 2017, this study underscores the critical need for the development of adaptable, cross-platform malware detection mechanisms to combat evolving malware threats. It also highlights the importance of adopting advanced ML techniques, such as neural networks (CNNs and RNNs), privacy-preserving federated learning, LLMs, and XAI, to improve detection accuracy and interpretability. Lightweight models tailored to resource-constrained IoT and edge devices are also essential for effective deployment across increasingly interconnected ecosystems. As cybercriminals exploit vulnerabilities in interconnected systems, this study serves as a critical resource for advancing robust, interpretable, and cross-platform malware detection systems to address the evolving cybersecurity landscape.</p></sec></body><back><fn-group><fn><p><bold>Disclaimer/Publisher&#x02019;s Note:</bold> The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.</p></fn></fn-group><notes notes-type="COI-statement"><title>Conflicts of Interest</title><p>The authors declare no conflict of interest.</p></notes><ref-list><title>References</title><ref id="B1-sensors-25-01153"><label>1.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Nguyen</surname><given-names>M.H.</given-names></name>
<name><surname>Le Nguyen</surname><given-names>D.</given-names></name>
<name><surname>Nguyen</surname><given-names>X.M.</given-names></name>
<name><surname>Quan</surname><given-names>T.T.</given-names></name>
</person-group><article-title>Auto-detection of sophisticated malware using lazy-binding control flow graph and deep learning</article-title><source>Comput. Secur.</source><year>2018</year><volume>76</volume><fpage>128</fpage><lpage>155</lpage><pub-id pub-id-type="doi">10.1016/j.cose.2018.02.006</pub-id></element-citation></ref><ref id="B2-sensors-25-01153"><label>2.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>Companies</surname><given-names>O.</given-names></name>
</person-group><article-title>2024 Cisco Cybersecurity Readiness Index</article-title><year>2024</year><comment>Available online: <ext-link xlink:href="https://newsroom.cisco.com/c/dam/r/newsroom/en/us/interactive/cybersecurity-readiness-index/documents/Cisco_Cybersecurity_Readiness_Index_FINAL.pdf" ext-link-type="uri">https://newsroom.cisco.com/c/dam/r/newsroom/en/us/interactive/cybersecurity-readiness-index/documents/Cisco_Cybersecurity_Readiness_Index_FINAL.pdf</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-15">(accessed on 15 October 2024)</date-in-citation></element-citation></ref><ref id="B3-sensors-25-01153"><label>3.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>Palatty</surname><given-names>N.J.</given-names></name>
</person-group><article-title>Top Malware Attack Statistics, Astra</article-title><year>2024</year><comment>Available online: <ext-link xlink:href="https://www.getastra.com/blog/security-audit/malware-statistics/" ext-link-type="uri">https://www.getastra.com/blog/security-audit/malware-statistics/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-15">(accessed on 15 October 2024)</date-in-citation></element-citation></ref><ref id="B4-sensors-25-01153"><label>4.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<collab>Forbes</collab>
</person-group><article-title>Why Ransomware Should Be on Every Cybersecurity Team&#x02019;s Radar</article-title><year>2022</year><comment>Available online: <ext-link xlink:href="https://www.forbes.com/councils/forbestechcouncil/2022/04/12/why-ransomware-should-be-on-every-cybersecurity-teams-radar/#:~:text=AccordingtoCybersecurityVentures%2Cvictims,businessupandrunningagain" ext-link-type="uri">https://www.forbes.com/councils/forbestechcouncil/2022/04/12/why-ransomware-should-be-on-every-cybersecurity-teams-radar/#:~:text=According to Cybersecurity Ventures%2C victims,business up and running again</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-15">(accessed on 15 October 2024)</date-in-citation></element-citation></ref><ref id="B5-sensors-25-01153"><label>5.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>Toulas</surname><given-names>B.</given-names></name>
</person-group><article-title>Linux Malware Sees 35% Growth During 2021</article-title><year>2022</year><comment>Available online: <ext-link xlink:href="https://www.bleepingcomputer.com/news/security/linux-malware-sees-35-percent-growth-during-2021/" ext-link-type="uri">https://www.bleepingcomputer.com/news/security/linux-malware-sees-35-percent-growth-during-2021/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-19">(accessed on 19 October 2024)</date-in-citation></element-citation></ref><ref id="B6-sensors-25-01153"><label>6.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>GANDH</surname><given-names>V.</given-names></name>
</person-group><article-title>2023 ThreatLabz Report Indicates 400% Growth in IoT Malware Attacks</article-title><year>2023</year><comment>Available online: <ext-link xlink:href="https://www.zscaler.com/blogs/security-research/2023-threatlabz-report-indicates-400-growth-iot-malware-attacks" ext-link-type="uri">https://www.zscaler.com/blogs/security-research/2023-threatlabz-report-indicates-400-growth-iot-malware-attacks</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-15">(accessed on 15 October 2024)</date-in-citation></element-citation></ref><ref id="B7-sensors-25-01153"><label>7.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Maniriho</surname><given-names>P.</given-names></name>
<name><surname>Mahmood</surname><given-names>A.N.</given-names></name>
<name><surname>Chowdhury</surname><given-names>M.J.M.</given-names></name>
</person-group><article-title>A Survey of Recent Advances in Deep Learning Models for Detecting Malware in Desktop and Mobile Platforms</article-title><source>ACM Comput. Surv.</source><year>2024</year><volume>56</volume><fpage>1</fpage><lpage>41</lpage><pub-id pub-id-type="doi">10.1145/3638240</pub-id></element-citation></ref><ref id="B8-sensors-25-01153"><label>8.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Pleshakova</surname><given-names>E.</given-names></name>
<name><surname>Osipov</surname><given-names>A.</given-names></name>
<name><surname>Gataullin</surname><given-names>S.</given-names></name>
<name><surname>Gataullin</surname><given-names>T.</given-names></name>
<name><surname>Vasilakos</surname><given-names>A.</given-names></name>
</person-group><article-title>Next gen cybersecurity paradigm towards artificial general intelligence: Russian market challenges and future global technological trends</article-title><source>J. Comput. Virol. Hacking Tech.</source><year>2024</year><volume>20</volume><fpage>429</fpage><lpage>440</lpage><pub-id pub-id-type="doi">10.1007/s11416-024-00529-x</pub-id></element-citation></ref><ref id="B9-sensors-25-01153"><label>9.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Kasri</surname><given-names>W.</given-names></name>
<name><surname>Himeur</surname><given-names>Y.</given-names></name>
<name><surname>Alkhazaleh</surname><given-names>H.A.</given-names></name>
<name><surname>Tarapiah</surname><given-names>S.</given-names></name>
<name><surname>Atalla</surname><given-names>S.</given-names></name>
</person-group><article-title>From Vulnerability to Defense: The Role of Large Language Models in Enhancing Cybersecurity</article-title><source>Computation</source><year>2025</year><volume>13</volume><elocation-id>30</elocation-id><pub-id pub-id-type="doi">10.3390/computation13020030</pub-id></element-citation></ref><ref id="B10-sensors-25-01153"><label>10.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Rey</surname><given-names>V.</given-names></name>
<name><surname>S&#x000e1;nchez</surname><given-names>P.M.S.</given-names></name>
<name><surname>Celdr&#x000e1;n</surname><given-names>A.H.</given-names></name>
<name><surname>Bovet</surname><given-names>G.</given-names></name>
</person-group><article-title>Federated learning for malware detection in IoT devices</article-title><source>Comput. Netw.</source><year>2022</year><volume>204</volume><fpage>108693</fpage><pub-id pub-id-type="doi">10.1016/j.comnet.2021.108693</pub-id></element-citation></ref><ref id="B11-sensors-25-01153"><label>11.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Gulmez</surname><given-names>S.</given-names></name>
<name><surname>Kakisim</surname><given-names>A.G.</given-names></name>
<name><surname>Sogukpinar</surname><given-names>I.</given-names></name>
</person-group><article-title>XRan: Explainable deep learning-based ransomware detection using dynamic analysis</article-title><source>Comput. Secur.</source><year>2024</year><volume>139</volume><fpage>103703</fpage><pub-id pub-id-type="doi">10.1016/j.cose.2024.103703</pub-id></element-citation></ref><ref id="B12-sensors-25-01153"><label>12.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Ferdous</surname><given-names>J.</given-names></name>
<name><surname>Islam</surname><given-names>R.</given-names></name>
<name><surname>Mahboubi</surname><given-names>A.</given-names></name>
<name><surname>Islam</surname><given-names>M.Z.</given-names></name>
</person-group><article-title>A Review of State-of-the-Art Malware Attack Trends and Defense Mechanisms</article-title><source>IEEE Access</source><year>2023</year><volume>11</volume><fpage>121118</fpage><lpage>121141</lpage><pub-id pub-id-type="doi">10.1109/ACCESS.2023.3328351</pub-id></element-citation></ref><ref id="B13-sensors-25-01153"><label>13.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Singh</surname><given-names>J.</given-names></name>
<name><surname>Singh</surname><given-names>J.</given-names></name>
</person-group><article-title>A survey on machine learning-based malware detection in executable files</article-title><source>J. Syst. Archit.</source><year>2021</year><volume>112</volume><fpage>101861</fpage><pub-id pub-id-type="doi">10.1016/j.sysarc.2020.101861</pub-id></element-citation></ref><ref id="B14-sensors-25-01153"><label>14.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Chakkaravarthy</surname><given-names>S.S.</given-names></name>
<name><surname>Sangeetha</surname><given-names>D.</given-names></name>
<name><surname>Vaidehi</surname><given-names>V.</given-names></name>
</person-group><article-title>A Survey on malware analysis and mitigation techniques</article-title><source>Comput. Sci. Rev.</source><year>2019</year><volume>32</volume><fpage>1</fpage><lpage>23</lpage><pub-id pub-id-type="doi">10.1016/j.cosrev.2019.01.002</pub-id></element-citation></ref><ref id="B15-sensors-25-01153"><label>15.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Tayyab</surname><given-names>U.-H.</given-names></name>
<name><surname>Khan</surname><given-names>F.B.</given-names></name>
<name><surname>Durad</surname><given-names>M.H.</given-names></name>
<name><surname>Khan</surname><given-names>A.</given-names></name>
<name><surname>Lee</surname><given-names>Y.S.</given-names></name>
</person-group><article-title>A Survey of the Recent Trends in Deep Learning Based Malware Detection</article-title><source>J. Cybersecur. Priv.</source><year>2022</year><volume>2</volume><fpage>800</fpage><lpage>829</lpage><pub-id pub-id-type="doi">10.3390/jcp2040041</pub-id></element-citation></ref><ref id="B16-sensors-25-01153"><label>16.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Gibert</surname><given-names>D.</given-names></name>
<name><surname>Mateu</surname><given-names>C.</given-names></name>
<name><surname>Planes</surname><given-names>J.</given-names></name>
</person-group><article-title>The rise of machine learning for detection and classification of malware: Research developments, trends and challenges</article-title><source>J. Netw. Comput. Appl.</source><year>2020</year><volume>153</volume><fpage>102526</fpage><pub-id pub-id-type="doi">10.1016/j.jnca.2019.102526</pub-id></element-citation></ref><ref id="B17-sensors-25-01153"><label>17.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Wu</surname><given-names>Q.</given-names></name>
<name><surname>Zhu</surname><given-names>X.</given-names></name>
<name><surname>Liu</surname><given-names>B.</given-names></name>
</person-group><article-title>A Survey of Android Malware Static Detection Technology Based on Machine Learning</article-title><source>Mob. Inf. Syst.</source><year>2021</year><volume>2021</volume><fpage>8896013</fpage><pub-id pub-id-type="doi">10.1155/2021/8896013</pub-id></element-citation></ref><ref id="B18-sensors-25-01153"><label>18.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Liu</surname><given-names>Y.</given-names></name>
<name><surname>Tantithamthavorn</surname><given-names>C.</given-names></name>
<name><surname>Li</surname><given-names>L.</given-names></name>
<name><surname>Liu</surname><given-names>Y.</given-names></name>
</person-group><article-title>Deep Learning for Android Malware Defenses: A Systematic Literature Review</article-title><source>ACM Comput. Surv.</source><year>2023</year><volume>55</volume><fpage>1</fpage><lpage>36</lpage><pub-id pub-id-type="doi">10.1145/3544968</pub-id></element-citation></ref><ref id="B19-sensors-25-01153"><label>19.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Wang</surname><given-names>Z.</given-names></name>
<name><surname>Liu</surname><given-names>Q.</given-names></name>
<name><surname>Chi</surname><given-names>Y.</given-names></name>
</person-group><article-title>Review of android malware detection based on deep learning</article-title><source>IEEE Access</source><year>2020</year><volume>8</volume><fpage>181102</fpage><lpage>181126</lpage><pub-id pub-id-type="doi">10.1109/ACCESS.2020.3028370</pub-id></element-citation></ref><ref id="B20-sensors-25-01153"><label>20.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Roseline</surname><given-names>S.A.</given-names></name>
<name><surname>Geetha</surname><given-names>S.</given-names></name>
</person-group><article-title>A comprehensive survey of tools and techniques mitigating computer and mobile malware attacks. Comput</article-title><source>Electr. Eng.</source><year>2021</year><volume>92</volume><fpage>107143</fpage><pub-id pub-id-type="doi">10.1016/j.compeleceng.2021.107143</pub-id></element-citation></ref><ref id="B21-sensors-25-01153"><label>21.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Victor</surname><given-names>P.</given-names></name>
<name><surname>Habibi</surname><given-names>A.</given-names></name>
<name><surname>Rongxing</surname><given-names>L.</given-names></name>
<name><surname>Tinshu</surname><given-names>L.</given-names></name>
<name><surname>Pulei</surname><given-names>S.</given-names></name>
<name><surname>Shahrear</surname><given-names>X.</given-names></name>
</person-group><article-title>IoT malware: An attribute&#x02014;Based taxonomy, detection mechanisms and challenges</article-title><source>Peer Peer Netw. Appl.</source><year>2023</year><volume>16</volume><fpage>1380</fpage><lpage>1431</lpage><pub-id pub-id-type="doi">10.1007/s12083-023-01478-w</pub-id><pub-id pub-id-type="pmid">37362097</pub-id>
</element-citation></ref><ref id="B22-sensors-25-01153"><label>22.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Alex</surname><given-names>C.</given-names></name>
<name><surname>Creado</surname><given-names>G.</given-names></name>
<name><surname>Almobaideen</surname><given-names>W.</given-names></name>
<name><surname>Alghanam</surname><given-names>O.A.</given-names></name>
<name><surname>Saadeh</surname><given-names>M.</given-names></name>
</person-group><article-title>A Comprehensive Survey for IoT Security Datasets Taxonomy, Classification and Machine Learning Mechanisms</article-title><source>Comput. Secur.</source><year>2023</year><volume>132</volume><fpage>103283</fpage><pub-id pub-id-type="doi">10.1016/j.cose.2023.103283</pub-id></element-citation></ref><ref id="B23-sensors-25-01153"><label>23.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Gaurav</surname><given-names>A.</given-names></name>
<name><surname>Gupta</surname><given-names>B.B.</given-names></name>
<name><surname>Panigrahi</surname><given-names>P.K.</given-names></name>
</person-group><article-title>A comprehensive survey on machine learning approaches for malware detection in IoT-based enterprise information system</article-title><source>Enterp. Inf. Syst.</source><year>2023</year><volume>17</volume><fpage>439</fpage><lpage>463</lpage><pub-id pub-id-type="doi">10.1080/17517575.2021.2023764</pub-id></element-citation></ref><ref id="B24-sensors-25-01153"><label>24.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Belal</surname><given-names>M.M.</given-names></name>
<name><surname>Sundaram</surname><given-names>D.M.</given-names></name>
</person-group><article-title>Comprehensive review on intelligent security defences in cloud: Taxonomy, security issues, ML/DL techniques, challenges and future trends</article-title><source>J. King Saud Univ. Comput. Inf. Sci.</source><year>2022</year><volume>34</volume><fpage>9102</fpage><lpage>9131</lpage><pub-id pub-id-type="doi">10.1016/j.jksuci.2022.08.035</pub-id></element-citation></ref><ref id="B25-sensors-25-01153"><label>25.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Aslan</surname><given-names>O.</given-names></name>
<name><surname>Ozkan-Okay</surname><given-names>M.</given-names></name>
<name><surname>Gupta</surname><given-names>D.</given-names></name>
</person-group><article-title>Intelligent Behavior-Based Malware Detection System on Cloud Computing Environment</article-title><source>IEEE Access</source><year>2021</year><volume>9</volume><fpage>83252</fpage><lpage>83271</lpage><pub-id pub-id-type="doi">10.1109/ACCESS.2021.3087316</pub-id></element-citation></ref><ref id="B26-sensors-25-01153"><label>26.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Gopinath</surname><given-names>M.</given-names></name>
<name><surname>Sethuraman</surname><given-names>S.C.</given-names></name>
</person-group><article-title>A comprehensive survey on deep learning-based malware detection techniques</article-title><source>Comput. Sci. Rev.</source><year>2023</year><volume>47</volume><fpage>100529</fpage><pub-id pub-id-type="doi">10.1016/j.cosrev.2022.100529</pub-id></element-citation></ref><ref id="B27-sensors-25-01153"><label>27.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Sanda</surname><given-names>O.</given-names></name>
<name><surname>Pavlidis</surname><given-names>M.</given-names></name>
<name><surname>Polatidis</surname><given-names>N.</given-names></name>
</person-group><article-title>A deep learning approach for host-based cryptojacking malware detection</article-title><source>Evol. Syst.</source><year>2024</year><volume>15</volume><fpage>41</fpage><lpage>56</lpage><pub-id pub-id-type="doi">10.1007/s12530-023-09534-9</pub-id></element-citation></ref><ref id="B28-sensors-25-01153"><label>28.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>Ferdous</surname><given-names>J.</given-names></name>
<name><surname>Islam</surname><given-names>R.</given-names></name>
<name><surname>Bhattacharya</surname><given-names>M.</given-names></name>
<name><surname>Islam</surname><given-names>Z.</given-names></name>
</person-group><article-title>Malware&#x02212;Resistant Data Protection in Hyper&#x02212;Connected Networks: A Survey</article-title><year>2023</year><comment>Available online: <ext-link xlink:href="https://arxiv.org/pdf/2307.13164" ext-link-type="uri">https://arxiv.org/pdf/2307.13164</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-23">(accessed on 23 October 2024)</date-in-citation></element-citation></ref><ref id="B29-sensors-25-01153"><label>29.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Mitchell</surname><given-names>A.</given-names></name>
</person-group><article-title>Current Malware Trends: 5 Most Common Types of Malwares in 2024</article-title><publisher-name>Lumifi</publisher-name><year>2024</year><comment>Available online: <ext-link xlink:href="https://www.lumificyber.com/blog/current-malware-trends-5-most-common-types-of-malware-in-2024/" ext-link-type="uri">https://www.lumificyber.com/blog/current-malware-trends-5-most-common-types-of-malware-in-2024/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-23">(accessed on 23 October 2024)</date-in-citation></element-citation></ref><ref id="B30-sensors-25-01153"><label>30.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>BURGESS</surname><given-names>M.</given-names></name>
</person-group><article-title>Conti&#x02019;s Attack Against Costa Rica Sparks a New Ransomware Era</article-title><publisher-name>WIRED</publisher-name><year>2022</year><comment>Available online: <ext-link xlink:href="https://www.wired.com/story/costa-rica-ransomware-conti/" ext-link-type="uri">https://www.wired.com/story/costa-rica-ransomware-conti/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-23">(accessed on 23 October 2024)</date-in-citation></element-citation></ref><ref id="B31-sensors-25-01153"><label>31.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Toulas</surname><given-names>B.</given-names></name>
</person-group><article-title>REvil Ransomware Member Extradited to U.S. to Stand Trial for Kaseya Attack</article-title><publisher-name>BLEEPING COMPUTER</publisher-name><year>2022</year><comment>Available online: <ext-link xlink:href="https://www.bleepingcomputer.com/news/security/revil-ransomware-member-extradited-to-us-to-stand-trial-for-kaseya-attack/" ext-link-type="uri">https://www.bleepingcomputer.com/news/security/revil-ransomware-member-extradited-to-us-to-stand-trial-for-kaseya-attack/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-23">(accessed on 23 October 2024)</date-in-citation></element-citation></ref><ref id="B32-sensors-25-01153"><label>32.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>Schwirtz</surname><given-names>M.</given-names></name>
<name><surname>Perlroth</surname><given-names>N.</given-names></name>
</person-group><article-title>DarkSide, Blamed for Gas Pipeline Attack, Says It Is Shutting Down</article-title><source>The New York Times</source><day>8</day><month>June</month><year>2021</year><comment>Available online: <ext-link xlink:href="https://www.nytimes.com/2021/05/14/business/darkside-pipeline-hack.html" ext-link-type="uri">https://www.nytimes.com/2021/05/14/business/darkside-pipeline-hack.html</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-23">(accessed on 23 October 2024)</date-in-citation></element-citation></ref><ref id="B33-sensors-25-01153"><label>33.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Gatlan</surname><given-names>S.</given-names></name>
</person-group><article-title>Accenture Confirms Data Breach after August Ransomware Attack</article-title><publisher-name>Bleeping Computer</publisher-name><year>2021</year><comment>Available online: <ext-link xlink:href="https://www.bleepingcomputer.com/news/security/accenture-confirms-data-breach-after-august-ransomware-attack/" ext-link-type="uri">https://www.bleepingcomputer.com/news/security/accenture-confirms-data-breach-after-august-ransomware-attack/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-23">(accessed on 23 October 2024)</date-in-citation></element-citation></ref><ref id="B34-sensors-25-01153"><label>34.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Kost</surname><given-names>E.</given-names></name>
</person-group><article-title>What is an Advanced Persistent Threat (APT)?</article-title><publisher-name>UpGuard</publisher-name><year>2024</year><comment>Available online: <ext-link xlink:href="https://www.upguard.com/blog/what-is-an-advanced-persistent-threat" ext-link-type="uri">https://www.upguard.com/blog/what-is-an-advanced-persistent-threat</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-23">(accessed on 23 October 2024)</date-in-citation></element-citation></ref><ref id="B35-sensors-25-01153"><label>35.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Sharma</surname><given-names>A.</given-names></name>
<name><surname>Gupta</surname><given-names>B.B.</given-names></name>
<name><surname>Singh</surname><given-names>A.K.</given-names></name>
<name><surname>Saraswat</surname><given-names>V.K.</given-names></name>
</person-group><article-title>Orchestration of APT malware evasive manoeuvers employed for eluding antivirus and sandbox defense</article-title><source>Comput. Secur.</source><year>2022</year><volume>115</volume><fpage>102627</fpage><pub-id pub-id-type="doi">10.1016/j.cose.2022.102627</pub-id></element-citation></ref><ref id="B36-sensors-25-01153"><label>36.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Masood</surname><given-names>Z.</given-names></name>
<name><surname>Samar</surname><given-names>R.</given-names></name>
<name><surname>Raja</surname><given-names>M.A.Z.</given-names></name>
</person-group><article-title>Design of a mathematical model for the Stuxnet virus in a network of critical control infrastructure</article-title><source>Comput. Secur.</source><year>2019</year><volume>87</volume><fpage>101565</fpage><pub-id pub-id-type="doi">10.1016/j.cose.2019.07.002</pub-id></element-citation></ref><ref id="B37-sensors-25-01153"><label>37.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>Jain</surname><given-names>A.</given-names></name>
</person-group><article-title>Decoding cryptojacking: What is this and how can you protect yourself?</article-title><source>Crypto.news</source><day>9</day><month>May</month><year>2024</year><comment>Available online: <ext-link xlink:href="https://crypto.news/what-is-cryptojacking-how-does-it-work/" ext-link-type="uri">https://crypto.news/what-is-cryptojacking-how-does-it-work/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-24">(accessed on 24 October 2024)</date-in-citation></element-citation></ref><ref id="B38-sensors-25-01153"><label>38.</label><element-citation publication-type="book"><article-title>Fortinet Cryptojacking (Learns How Cryptojacking Works and Gains Access to and Abuses Computer Resources)</article-title><publisher-name>Fortinet</publisher-name><year>2024</year><comment>Available online: <ext-link xlink:href="https://www.fortinet.com/resources/cyberglossary/cryptojacking#:~:text=Cryptojackingisalsoreferredto,overallhealthofyournetwork" ext-link-type="uri">https://www.fortinet.com/resources/cyberglossary/cryptojacking#:~:text=Cryptojacking is also referred to,overall health of your network</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-24">(accessed on 24 October 2024)</date-in-citation></element-citation></ref><ref id="B39-sensors-25-01153"><label>39.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>Stevens</surname><given-names>R.</given-names></name>
</person-group><article-title>Crypto Mining Botnet Found on Defense Department Web Server</article-title><year>2020</year><comment>Available online: <ext-link xlink:href="https://decrypt.co/18738/crypto-mining-botnet-found-on-defense-department-web-server" ext-link-type="uri">https://decrypt.co/18738/crypto-mining-botnet-found-on-defense-department-web-server</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-24">(accessed on 24 October 2024)</date-in-citation></element-citation></ref><ref id="B40-sensors-25-01153"><label>40.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Stevens</surname><given-names>R.</given-names></name>
</person-group><article-title>Man Fined $7000 for Using Russian Supercomputer to Mine Bitcoin</article-title><publisher-name>Decrypt</publisher-name><year>2019</year><comment>Available online: <ext-link xlink:href="https://decrypt.co/9751/man-fined-for-using-russian-supercomputer-to-mine-crypto" ext-link-type="uri">https://decrypt.co/9751/man-fined-for-using-russian-supercomputer-to-mine-crypto</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-24">(accessed on 24 October 2024)</date-in-citation></element-citation></ref><ref id="B41-sensors-25-01153"><label>41.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>Wolf</surname><given-names>A.</given-names></name>
</person-group><article-title>13 Types of Malware Attacks&#x02014;And How You Can Defend Against Them</article-title><year>2024</year><comment>Available online: <ext-link xlink:href="https://arcticwolf.com/resources/blog/8-types-of-malware/" ext-link-type="uri">https://arcticwolf.com/resources/blog/8-types-of-malware/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-24">(accessed on 24 October 2024)</date-in-citation></element-citation></ref><ref id="B42-sensors-25-01153"><label>42.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Baker</surname><given-names>K.</given-names></name>
</person-group><article-title>The 12 Most Common Types of Malwares</article-title><publisher-name>CROWDSTRIKE</publisher-name><year>2023</year><comment>Available online: <ext-link xlink:href="https://www.crowdstrike.com/en-us/cybersecurity-101/malware/types-of-malware/" ext-link-type="uri">https://www.crowdstrike.com/en-us/cybersecurity-101/malware/types-of-malware/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-24">(accessed on 24 October 2024)</date-in-citation></element-citation></ref><ref id="B43-sensors-25-01153"><label>43.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Ferdous</surname><given-names>J.</given-names></name>
<name><surname>Islam</surname><given-names>R.</given-names></name>
<name><surname>Mahboubi</surname><given-names>A.</given-names></name>
<name><surname>Islam</surname><given-names>M.Z.</given-names></name>
</person-group><article-title>AI-based Ransomware Detection: A Comprehensive Review</article-title><source>IEEE Access</source><year>2024</year><volume>12</volume><fpage>2024</fpage><pub-id pub-id-type="doi">10.1109/ACCESS.2024.3461965</pub-id></element-citation></ref><ref id="B44-sensors-25-01153"><label>44.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Kara</surname><given-names>I.</given-names></name>
</person-group><article-title>Fileless malware threats: Recent advances, analysis approach through memory forensics and research challenges</article-title><source>Expert Syst. Appl.</source><year>2023</year><volume>214</volume><fpage>119133</fpage><pub-id pub-id-type="doi">10.1016/j.eswa.2022.119133</pub-id></element-citation></ref><ref id="B45-sensors-25-01153"><label>45.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Kumar</surname><given-names>R.</given-names></name>
<name><surname>Zhang</surname><given-names>X.</given-names></name>
<name><surname>Wang</surname><given-names>W.</given-names></name>
<name><surname>Khan</surname><given-names>R.U.</given-names></name>
<name><surname>Kumar</surname><given-names>J.</given-names></name>
<name><surname>Sharif</surname><given-names>A.</given-names></name>
</person-group><article-title>A Multimodal Malware Detection Technique for Android IoT Devices Using Various Features</article-title><source>IEEE Access</source><year>2019</year><volume>7</volume><fpage>64411</fpage><lpage>64430</lpage><pub-id pub-id-type="doi">10.1109/ACCESS.2019.2916886</pub-id></element-citation></ref><ref id="B46-sensors-25-01153"><label>46.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Panker</surname><given-names>T.</given-names></name>
<name><surname>Nissim</surname><given-names>N.</given-names></name>
</person-group><article-title>Leveraging malicious behavior traces from volatile memory using machine learning methods for trusted unknown malware detection in Linux cloud environments</article-title><source>Knowl. Based Syst.</source><year>2021</year><volume>226</volume><fpage>107095</fpage><pub-id pub-id-type="doi">10.1016/j.knosys.2021.107095</pub-id></element-citation></ref><ref id="B47-sensors-25-01153"><label>47.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Oz</surname><given-names>H.</given-names></name>
<name><surname>Aris</surname><given-names>A.</given-names></name>
<name><surname>Levi</surname><given-names>A.</given-names></name>
<name><surname>Uluagac</surname><given-names>A.S.</given-names></name>
</person-group><article-title>A Survey on Ransomware: Evolution, Taxonomy, and Defense Solutions</article-title><source>ACM Comput. Surv.</source><year>2022</year><volume>1</volume><fpage>1</fpage><lpage>37</lpage><pub-id pub-id-type="doi">10.1145/3514229</pub-id></element-citation></ref><ref id="B48-sensors-25-01153"><label>48.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>Unit</surname><given-names>T.A.</given-names></name>
</person-group><article-title>VMware Threat Report&#x02014;Exposing Malware in Linux-Based Multi-Cloud Environments</article-title><year>2022</year><comment>Available online: <ext-link xlink:href="https://blogs.vmware.com/security/2022/02/2022-vmware-threat-report-exposing-malware-in-linux-based-multi-cloud-environments.html" ext-link-type="uri">https://blogs.vmware.com/security/2022/02/2022-vmware-threat-report-exposing-malware-in-linux-based-multi-cloud-environments.html</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-11-04">(accessed on 4 November 2024)</date-in-citation></element-citation></ref><ref id="B49-sensors-25-01153"><label>49.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>Walsh</surname><given-names>R.</given-names></name>
</person-group><article-title>Linux Malware Stats and Facts for 2024</article-title><year>2024</year><comment>Available online: <ext-link xlink:href="https://www.comparitech.com/blog/vpn-privacy/linux-malware-stats-and-facts/" ext-link-type="uri">https://www.comparitech.com/blog/vpn-privacy/linux-malware-stats-and-facts/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-11-04">(accessed on 4 November 2024)</date-in-citation></element-citation></ref><ref id="B50-sensors-25-01153"><label>50.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>Meshi</surname><given-names>Y.E.T.M.</given-names></name>
</person-group><article-title>Battling MacOS Malware with Cortex AI</article-title><year>2023</year><comment>Available online: <ext-link xlink:href="https://www.paloaltonetworks.com/blog/security-operations/battling-macos-malware-with-cortex-ai/" ext-link-type="uri">https://www.paloaltonetworks.com/blog/security-operations/battling-macos-malware-with-cortex-ai/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-11-04">(accessed on 4 November 2024)</date-in-citation></element-citation></ref><ref id="B51-sensors-25-01153"><label>51.</label><element-citation publication-type="book"><person-group person-group-type="author">
<collab>B. Report</collab>
</person-group><source>MacOS Threat Landscape Report</source><publisher-name>Bitdefender</publisher-name><publisher-loc>Bucharest, Romania</publisher-loc><year>2023</year></element-citation></ref><ref id="B52-sensors-25-01153"><label>52.</label><element-citation publication-type="book"><article-title>Ani Petrosyan Number of Detected Malicious Installation Packages on Mobile Devices Worldwide from 4th Quarter 2015 to 3rd Quarter 2023</article-title><publisher-name>Statista</publisher-name><year>2024</year><comment>Available online: <ext-link xlink:href="https://www.statista.com/statistics/653680/volume-of-detected-mobile-malware-packages/" ext-link-type="uri">https://www.statista.com/statistics/653680/volume-of-detected-mobile-malware-packages/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-27">(accessed on 27 October 2024)</date-in-citation></element-citation></ref><ref id="B53-sensors-25-01153"><label>53.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Sherif</surname><given-names>A.</given-names></name>
</person-group><article-title>Market Share of Mobile Operating Systems Worldwide from 2009 to 2024, by Quarter</article-title><publisher-name>Statista</publisher-name><year>2024</year><comment>Available online: <ext-link xlink:href="https://www.statista.com/statistics/272698/global-market-share-held-by-mobile-operating-systems-since-2009/" ext-link-type="uri">https://www.statista.com/statistics/272698/global-market-share-held-by-mobile-operating-systems-since-2009/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-11-01">(accessed on 1 November 2024)</date-in-citation></element-citation></ref><ref id="B54-sensors-25-01153"><label>54.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Manzil</surname><given-names>H.H.R.</given-names></name>
<name><surname>Naik</surname><given-names>S.M.</given-names></name>
</person-group><article-title>Detection approaches for android malware: Taxonomy and review analysis</article-title><source>Expert Syst. Appl.</source><year>2024</year><volume>238</volume><fpage>122255</fpage><pub-id pub-id-type="doi">10.1016/j.eswa.2023.122255</pub-id></element-citation></ref><ref id="B55-sensors-25-01153"><label>55.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Saracino</surname><given-names>A.</given-names></name>
<name><surname>Sgandurra</surname><given-names>D.</given-names></name>
<name><surname>Dini</surname><given-names>G.</given-names></name>
<name><surname>Martinelli</surname><given-names>F.</given-names></name>
</person-group><article-title>MADAM: Effective and Efficient Behavior-based Android Malware Detection and Prevention</article-title><source>IEEE Trans. Dependable Secur. Comput.</source><year>2018</year><volume>15</volume><fpage>83</fpage><lpage>97</lpage><pub-id pub-id-type="doi">10.1109/TDSC.2016.2536605</pub-id></element-citation></ref><ref id="B56-sensors-25-01153"><label>56.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Garg</surname><given-names>S.</given-names></name>
<name><surname>Baliyan</surname><given-names>N.</given-names></name>
</person-group><article-title>Comparative analysis of Android and iOS from security viewpoint</article-title><source>Comput. Sci. Rev.</source><year>2021</year><volume>40</volume><fpage>100372</fpage><pub-id pub-id-type="doi">10.1016/j.cosrev.2021.100372</pub-id></element-citation></ref><ref id="B57-sensors-25-01153"><label>57.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Shen</surname><given-names>Y.</given-names></name>
<name><surname>Wuhan</surname><given-names>H.</given-names></name>
</person-group><article-title>Enhancing data security of iOS client by encryption algorithm</article-title><source>Proceedings of the 2017 IEEE 2nd Advanced Information Technology, Electronic and Automation Control Conference (IAEAC)</source><conf-loc>Chongqing, China</conf-loc><conf-date>25&#x02013;26 March 2017</conf-date><fpage>366</fpage><lpage>370</lpage></element-citation></ref><ref id="B58-sensors-25-01153"><label>58.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Lutaaya</surname><given-names>M.</given-names></name>
</person-group><article-title>Rethinking app permissions on iOS</article-title><source>Proceedings of the CHI Conference on Human Factors in Computing Systems</source><conf-loc>Montreal QC Canada</conf-loc><conf-date>21&#x02013;26 April 2018</conf-date><fpage>1</fpage><lpage>6</lpage><pub-id pub-id-type="doi">10.1145/3170427.3180284</pub-id></element-citation></ref><ref id="B59-sensors-25-01153"><label>59.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>Phungglan</surname><given-names>J.</given-names></name>
</person-group><article-title>Most Common Viruses on iPhone</article-title><year>2023</year><comment>Available online: <ext-link xlink:href="https://macpaw.com/how-to/most-common-iphone-viruses" ext-link-type="uri">https://macpaw.com/how-to/most-common-iphone-viruses</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-11-03">(accessed on 3 November 2024)</date-in-citation></element-citation></ref><ref id="B60-sensors-25-01153"><label>60.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>Walsh</surname><given-names>R.</given-names></name>
</person-group><article-title>iOS Malware Stats and Facts for 2024</article-title><year>2024</year><comment>Available online: <ext-link xlink:href="https://www.comparitech.com/blog/vpn-privacy/ios-malware-stats-and-facts/" ext-link-type="uri">https://www.comparitech.com/blog/vpn-privacy/ios-malware-stats-and-facts/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-11-03">(accessed on 3 November 2024)</date-in-citation></element-citation></ref><ref id="B61-sensors-25-01153"><label>61.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>O&#x02019;Flaherty</surname><given-names>K.</given-names></name>
</person-group><article-title>New &#x02018;Dangerous&#x02019; iPhone Spyware Attack Warning Issued To iOS Users</article-title><year>2024</year><comment>Available online: <ext-link xlink:href="https://www.forbes.com/sites/kateoflahertyuk/2024/04/19/new-dangerous-iphone-spyware-attack-warning-issued-to-ios-users/" ext-link-type="uri">https://www.forbes.com/sites/kateoflahertyuk/2024/04/19/new-dangerous-iphone-spyware-attack-warning-issued-to-ios-users/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-11-03">(accessed on 3 November 2024)</date-in-citation></element-citation></ref><ref id="B62-sensors-25-01153"><label>62.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Vailshery</surname><given-names>L.S.</given-names></name>
</person-group><article-title>Number of Internet of Things (IoT) Connections Worldwide from 2022 to 2023, with Forecasts from 2024 to 2033</article-title><publisher-name>Statista</publisher-name><year>2024</year><comment>Available online: <ext-link xlink:href="https://www.statista.com/statistics/1183457/iot-connected-devices-worldwide/" ext-link-type="uri">https://www.statista.com/statistics/1183457/iot-connected-devices-worldwide/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-11-05">(accessed on 5 November 2024)</date-in-citation></element-citation></ref><ref id="B63-sensors-25-01153"><label>63.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Jose</surname><given-names>C.S.</given-names></name>
</person-group><article-title>Zscaler ThreatLabz Finds a 400% Increase in IoT and OT Malware Attacks Year-over-Year, Underscoring Need for Better Zero Trust Security to Protect Critical Infrastructures</article-title><publisher-name>Zscaler</publisher-name><year>2023</year><comment>Available online: <ext-link xlink:href="https://www.zscaler.com/press/zscaler-threatlabz-finds-400-increase-iot-and-ot-malware-attacks-year-over-year-underscoring" ext-link-type="uri">https://www.zscaler.com/press/zscaler-threatlabz-finds-400-increase-iot-and-ot-malware-attacks-year-over-year-underscoring</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-11-05">(accessed on 5 November 2024)</date-in-citation></element-citation></ref><ref id="B64-sensors-25-01153"><label>64.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Yadav</surname><given-names>R.M.</given-names></name>
</person-group><article-title>Effective analysis of malware detection in cloud computing</article-title><source>Comput. Secur.</source><year>2019</year><volume>83</volume><fpage>14</fpage><lpage>21</lpage><pub-id pub-id-type="doi">10.1016/j.cose.2018.12.005</pub-id></element-citation></ref><ref id="B65-sensors-25-01153"><label>65.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>Kilonzi</surname><given-names>F.</given-names></name>
</person-group><article-title>Cloud Malware: Types of Attacks and How to Defend Against Them</article-title><year>2023</year><comment>Available online: <ext-link xlink:href="https://thenewstack.io/cloud-malware-types-of-attacks-and-how-to-defend-against-them/" ext-link-type="uri">https://thenewstack.io/cloud-malware-types-of-attacks-and-how-to-defend-against-them/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-11-25">(accessed on 25 November 2024)</date-in-citation></element-citation></ref><ref id="B66-sensors-25-01153"><label>66.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Huda</surname><given-names>S.</given-names></name>
<name><surname>Islam</surname><given-names>R.</given-names></name>
<name><surname>Abawajy</surname><given-names>J.</given-names></name>
<name><surname>Yearwood</surname><given-names>J.</given-names></name>
<name><surname>Hassan</surname><given-names>M.M.</given-names></name>
<name><surname>Fortino</surname><given-names>G.</given-names></name>
</person-group><article-title>A hybrid-multi filter-wrapper framework to identify run-time behaviour for fast malware detection</article-title><source>Futur. Gener. Comput. Syst.</source><year>2018</year><volume>83</volume><fpage>193</fpage><lpage>207</lpage><pub-id pub-id-type="doi">10.1016/j.future.2017.12.037</pub-id></element-citation></ref><ref id="B67-sensors-25-01153"><label>67.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Alzaylaee</surname><given-names>M.K.</given-names></name>
<name><surname>Yerima</surname><given-names>S.Y.</given-names></name>
<name><surname>Sezer</surname><given-names>S.</given-names></name>
</person-group><article-title>DL-Droid: Deep learning based android malware detection using real devices</article-title><source>Comput. Secur.</source><year>2020</year><volume>89</volume><fpage>101663</fpage><pub-id pub-id-type="doi">10.1016/j.cose.2019.101663</pub-id></element-citation></ref><ref id="B68-sensors-25-01153"><label>68.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Stoian</surname><given-names>N.A.</given-names></name>
</person-group><article-title>Machine Learning for Anomaly Detection in IoT Networks: Malware Analysis on the IoT-23 Data Set</article-title><source>Bachelor&#x02019;s Thesis</source><publisher-name>University of Twente</publisher-name><publisher-loc>Enschede, The Netherlands</publisher-loc><year>2020</year></element-citation></ref><ref id="B69-sensors-25-01153"><label>69.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>He</surname><given-names>M.</given-names></name>
<name><surname>Huang</surname><given-names>Y.</given-names></name>
<name><surname>Wang</surname><given-names>X.</given-names></name>
<name><surname>Wei</surname><given-names>P.</given-names></name>
<name><surname>Wang</surname><given-names>X.</given-names></name>
</person-group><article-title>A Lightweight and Efficient IoT Intrusion Detection Method Based on Feature Grouping</article-title><source>IEEE Internet Things J.</source><year>2024</year><volume>11</volume><fpage>2935</fpage><lpage>2949</lpage><pub-id pub-id-type="doi">10.1109/JIOT.2023.3294259</pub-id></element-citation></ref><ref id="B70-sensors-25-01153"><label>70.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Mezina</surname><given-names>A.</given-names></name>
<name><surname>Burget</surname><given-names>R.</given-names></name>
</person-group><article-title>Obfuscated malware detection using dilated convolutional network</article-title><source>Proceedings of the 2022 14th International Congress on Ultra Modern Telecommunications and Control Systems and Workshops (ICUMT)</source><conf-loc>Valencia, Spain</conf-loc><conf-date>11&#x02013;13 October 2020</conf-date><fpage>110</fpage><lpage>115</lpage><pub-id pub-id-type="doi">10.1109/ICUMT57764.2022.9943443</pub-id></element-citation></ref><ref id="B71-sensors-25-01153"><label>71.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Mitchell</surname><given-names>J.</given-names></name>
<name><surname>McLaughlin</surname><given-names>N.</given-names></name>
<name><surname>Martinez-del-Rincon</surname><given-names>J.</given-names></name>
</person-group><article-title>Generating sparse explanations for malicious Android opcode sequences using hierarchical LIME</article-title><source>Comput. Secur.</source><year>2024</year><volume>137</volume><fpage>103637</fpage><pub-id pub-id-type="doi">10.1016/j.cose.2023.103637</pub-id></element-citation></ref><ref id="B72-sensors-25-01153"><label>72.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Potha</surname><given-names>N.</given-names></name>
<name><surname>Kouliaridis</surname><given-names>V.</given-names></name>
<name><surname>Kambourakis</surname><given-names>G.</given-names></name>
</person-group><article-title>An extrinsic random-based ensemble approach for android malware detection</article-title><source>Connect. Sci.</source><year>2021</year><volume>33</volume><fpage>1077</fpage><lpage>1093</lpage><pub-id pub-id-type="doi">10.1080/09540091.2020.1853056</pub-id></element-citation></ref><ref id="B73-sensors-25-01153"><label>73.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Yoo</surname><given-names>S.</given-names></name>
<name><surname>Kim</surname><given-names>S.</given-names></name>
<name><surname>Kim</surname><given-names>S.</given-names></name>
<name><surname>Kang</surname><given-names>B.B.</given-names></name>
</person-group><article-title>AI-HydRa: Advanced hybrid approach using random forest and deep learning for malware classification</article-title><source>Inf. Sci.</source><year>2021</year><volume>546</volume><fpage>420</fpage><lpage>435</lpage><pub-id pub-id-type="doi">10.1016/j.ins.2020.08.082</pub-id></element-citation></ref><ref id="B74-sensors-25-01153"><label>74.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Bai</surname><given-names>J.</given-names></name>
<name><surname>Yang</surname><given-names>Y.</given-names></name>
<name><surname>Mu</surname><given-names>S.</given-names></name>
<name><surname>Ma</surname><given-names>Y.</given-names></name>
</person-group><article-title>Malware detection through mining symbol table of linux executables</article-title><source>Inf. Technol. J.</source><year>2013</year><volume>12</volume><fpage>380</fpage><lpage>384</lpage><pub-id pub-id-type="doi">10.3923/itj.2013.380.384</pub-id></element-citation></ref><ref id="B75-sensors-25-01153"><label>75.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Jeon</surname><given-names>S.</given-names></name>
<name><surname>Moon</surname><given-names>J.</given-names></name>
</person-group><article-title>Malware-Detection Method with a Convolutional Recurrent Neural Network Using Opcode Sequences</article-title><source>Inf. Sci.</source><year>2020</year><volume>535</volume><fpage>1</fpage><lpage>15</lpage><pub-id pub-id-type="doi">10.1016/j.ins.2020.05.026</pub-id></element-citation></ref><ref id="B76-sensors-25-01153"><label>76.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Snow</surname><given-names>E.</given-names></name>
<name><surname>Alam</surname><given-names>M.</given-names></name>
<name><surname>Glandon</surname><given-names>A.</given-names></name>
<name><surname>Iftekharuddin</surname><given-names>K.</given-names></name>
</person-group><article-title>End-to-end Multimodel Deep Learning for Malware Classification</article-title><source>Proceedings of the 2020 International Joint Conference on Neural Networks (IJCNN)</source><conf-loc>Glasgow, UK</conf-loc><conf-date>19&#x02013;24 July 2020</conf-date><pub-id pub-id-type="doi">10.1109/IJCNN48605.2020.9207120</pub-id></element-citation></ref><ref id="B77-sensors-25-01153"><label>77.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Darem</surname><given-names>A.</given-names></name>
<name><surname>Abawajy</surname><given-names>J.</given-names></name>
<name><surname>Makkar</surname><given-names>A.</given-names></name>
<name><surname>Alhashmi</surname><given-names>A.</given-names></name>
<name><surname>Alanazi</surname><given-names>S.</given-names></name>
</person-group><article-title>Visualization and deep-learning-based malware variant detection using OpCode-level features</article-title><source>Futur. Gener. Comput. Syst.</source><year>2021</year><volume>125</volume><fpage>314</fpage><lpage>323</lpage><pub-id pub-id-type="doi">10.1016/j.future.2021.06.032</pub-id></element-citation></ref><ref id="B78-sensors-25-01153"><label>78.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Catak</surname><given-names>F.O.</given-names></name>
<name><surname>Ahmed</surname><given-names>J.</given-names></name>
<name><surname>Sahinbas</surname><given-names>K.</given-names></name>
<name><surname>Khand</surname><given-names>Z.H.</given-names></name>
</person-group><article-title>Data Augmentation based Malware Detection Using Convolutional Neural Networks</article-title><source>PeerJ Comput. Sci.</source><year>2021</year><volume>7</volume><fpage>e346</fpage><pub-id pub-id-type="doi">10.7717/peerj-cs.346</pub-id></element-citation></ref><ref id="B79-sensors-25-01153"><label>79.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Moreira</surname><given-names>C.C.</given-names></name>
<name><surname>Moreira</surname><given-names>D.C.</given-names></name>
<name><surname>de Sales</surname><given-names>C.d.S.</given-names></name>
</person-group><article-title>Improving ransomware detection based on portable executable header using xception convolutional neural network</article-title><source>Comput. Secur.</source><year>2023</year><volume>130</volume><fpage>103265</fpage><pub-id pub-id-type="doi">10.1016/j.cose.2023.103265</pub-id></element-citation></ref><ref id="B80-sensors-25-01153"><label>80.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Jindal</surname><given-names>C.</given-names></name>
<name><surname>Salls</surname><given-names>C.</given-names></name>
<name><surname>Aghakhani</surname><given-names>H.</given-names></name>
<name><surname>Long</surname><given-names>K.</given-names></name>
<name><surname>Kruegel</surname><given-names>C.</given-names></name>
<name><surname>Vigna</surname><given-names>G.</given-names></name>
</person-group><article-title>Neurlux: Dynamic malware analysis without feature engineering</article-title><source>Proceedings of the 35th Annual Computer Security Applications Conference</source><conf-loc>San Juan, PR, USA</conf-loc><conf-date>9&#x02013;13 December 2019</conf-date><fpage>444</fpage><lpage>455</lpage><pub-id pub-id-type="doi">10.1145/3359789.3359835</pub-id></element-citation></ref><ref id="B81-sensors-25-01153"><label>81.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Chaganti</surname><given-names>R.</given-names></name>
<name><surname>Ravi</surname><given-names>V.</given-names></name>
<name><surname>Pham</surname><given-names>T.D.</given-names></name>
</person-group><article-title>A multiview feature fusion approach for effective malware classification using Deep Learning</article-title><source>J. Inf. Secur. Appl.</source><year>2022</year><volume>72</volume><fpage>103402</fpage><pub-id pub-id-type="doi">10.1016/j.jisa.2022.103402</pub-id></element-citation></ref><ref id="B82-sensors-25-01153"><label>82.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Darabian</surname><given-names>H.</given-names></name>
<name><surname>Homayounoot</surname><given-names>S.</given-names></name>
<name><surname>Dehghantanha</surname><given-names>A.</given-names></name>
<name><surname>Hashemi</surname><given-names>S.</given-names></name>
<name><surname>Karimipour</surname><given-names>H.</given-names></name>
<name><surname>Parizi</surname><given-names>R.M.</given-names></name>
<name><surname>Choo</surname><given-names>K.-K.R.</given-names></name>
</person-group><article-title>Detecting Cryptomining Malware: A Deep Learning Approach for Static and Dynamic Analysis</article-title><source>J. Grid Comput.</source><year>2020</year><volume>18</volume><fpage>293</fpage><lpage>303</lpage><pub-id pub-id-type="doi">10.1007/s10723-020-09510-6</pub-id></element-citation></ref><ref id="B83-sensors-25-01153"><label>83.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Naeem</surname><given-names>M.R.</given-names></name>
<name><surname>Khan</surname><given-names>M.</given-names></name>
<name><surname>Abdullah</surname><given-names>A.M.</given-names></name>
<name><surname>Noor</surname><given-names>F.</given-names></name>
<name><surname>Khan</surname><given-names>M.I.</given-names></name>
<name><surname>Ullah</surname><given-names>I.</given-names></name>
<name><surname>Room</surname><given-names>S.</given-names></name>
</person-group><article-title>A Malware Detection Scheme via Smart Memory Forensics for Windows Devices</article-title><source>Mob. Inf. Syst.</source><year>2022</year><volume>2022</volume><fpage>9156514</fpage><pub-id pub-id-type="doi">10.1155/2022/9156514</pub-id></element-citation></ref><ref id="B84-sensors-25-01153"><label>84.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Tekerek</surname><given-names>A.</given-names></name>
<name><surname>Yapici</surname><given-names>M.M.</given-names></name>
</person-group><article-title>A novel malware classification and augmentation model based on convolutional neural network</article-title><source>Comput. Secur.</source><year>2022</year><volume>112</volume><fpage>102515</fpage><pub-id pub-id-type="doi">10.1016/j.cose.2021.102515</pub-id></element-citation></ref><ref id="B85-sensors-25-01153"><label>85.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Naeem</surname><given-names>H.</given-names></name>
<name><surname>Dong</surname><given-names>S.</given-names></name>
<name><surname>Falana</surname><given-names>O.J.</given-names></name>
<name><surname>Ullah</surname><given-names>F.</given-names></name>
</person-group><article-title>Development of a deep stacked ensemble with process based volatile memory forensics for platform independent malware detection and classification</article-title><source>Expert Syst. Appl.</source><year>2023</year><volume>223</volume><fpage>119952</fpage><pub-id pub-id-type="doi">10.1016/j.eswa.2023.119952</pub-id></element-citation></ref><ref id="B86-sensors-25-01153"><label>86.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Landman</surname><given-names>T.</given-names></name>
<name><surname>Nissim</surname><given-names>N.</given-names></name>
</person-group><article-title>Deep-Hook: A trusted deep learning-based framework for unknown malware detection and classification in Linux cloud environments</article-title><source>Neural Netw.</source><year>2021</year><volume>144</volume><fpage>648</fpage><lpage>685</lpage><pub-id pub-id-type="doi">10.1016/j.neunet.2021.09.019</pub-id><pub-id pub-id-type="pmid">34656885</pub-id>
</element-citation></ref><ref id="B87-sensors-25-01153"><label>87.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Pekta&#x0015f;</surname><given-names>A.</given-names></name>
<name><surname>Acarman</surname><given-names>T.</given-names></name>
</person-group><article-title>Learning to detect Android malware via opcode sequences</article-title><source>Neurocomputing</source><year>2020</year><volume>396</volume><fpage>599</fpage><lpage>608</lpage><pub-id pub-id-type="doi">10.1016/j.neucom.2018.09.102</pub-id></element-citation></ref><ref id="B88-sensors-25-01153"><label>88.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Aamir</surname><given-names>M.</given-names></name>
<name><surname>Iqbal</surname><given-names>M.W.</given-names></name>
<name><surname>Nosheen</surname><given-names>M.</given-names></name>
<name><surname>Ashraf</surname><given-names>M.U.</given-names></name>
<name><surname>Shaf</surname><given-names>A.</given-names></name>
<name><surname>Almarhabi</surname><given-names>K.A.</given-names></name>
<name><surname>Alghamdi</surname><given-names>A.M.</given-names></name>
<name><surname>Bahaddad</surname><given-names>A.A.</given-names></name>
</person-group><article-title>AMDDL model: Android smartphones malware detection using deep learning model</article-title><source>PLoS ONE</source><year>2024</year><volume>19</volume><elocation-id>e0296722</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pone.0296722</pub-id><pub-id pub-id-type="pmid">38241330</pub-id>
</element-citation></ref><ref id="B89-sensors-25-01153"><label>89.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Sudheera</surname><given-names>K.L.K.</given-names></name>
<name><surname>Divakaran</surname><given-names>D.M.</given-names></name>
<name><surname>Singh</surname><given-names>R.P.</given-names></name>
<name><surname>Gurusamy</surname><given-names>M.</given-names></name>
</person-group><article-title>ADEPT: Detection and Identification of Correlated Attack Stages in IoT Networks</article-title><source>IEEE Internet Things J.</source><year>2021</year><volume>8</volume><fpage>6591</fpage><lpage>6607</lpage><pub-id pub-id-type="doi">10.1109/JIOT.2021.3055937</pub-id></element-citation></ref><ref id="B90-sensors-25-01153"><label>90.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Vasan</surname><given-names>D.</given-names></name>
<name><surname>Alazab</surname><given-names>M.</given-names></name>
<name><surname>Venkatraman</surname><given-names>S.</given-names></name>
<name><surname>Akram</surname><given-names>J.</given-names></name>
<name><surname>Qin</surname><given-names>Z.</given-names></name>
</person-group><article-title>MTHAEL: Cross-architecture iot malware detection based on neural network advanced ensemble learning</article-title><source>IEEE Trans. Comput.</source><year>2020</year><volume>69</volume><fpage>1654</fpage><lpage>1667</lpage><pub-id pub-id-type="doi">10.1109/TC.2020.3015584</pub-id></element-citation></ref><ref id="B91-sensors-25-01153"><label>91.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Le</surname><given-names>H.V.</given-names></name>
<name><surname>Ngo</surname><given-names>Q.D.</given-names></name>
<name><surname>Le</surname><given-names>V.H.</given-names></name>
</person-group><article-title>Iot botnet detection using system call graphs and one-class CNN classification</article-title><source>Int. J. Innov. Technol. Explor. Eng.</source><year>2019</year><volume>8</volume><fpage>937</fpage><lpage>942</lpage><pub-id pub-id-type="doi">10.35940/ijitee.J9091.0881019</pub-id></element-citation></ref><ref id="B92-sensors-25-01153"><label>92.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Shire</surname><given-names>R.</given-names></name>
<name><surname>Shiaeles</surname><given-names>S.</given-names></name>
<name><surname>Bendiab</surname><given-names>K.</given-names></name>
<name><surname>Ghita</surname><given-names>B.</given-names></name>
<name><surname>Kolokotronis</surname><given-names>N.</given-names></name>
</person-group><source>Malware Squid: A Novel IoT Malware Traffic Analysis Framework Using Convolutional Neural Network and Binary Visualisation</source><comment>11660 LNCS</comment><publisher-name>Springer International Publishing</publisher-name><publisher-loc>Berlin/Heidelberg, Germany</publisher-loc><year>2019</year></element-citation></ref><ref id="B93-sensors-25-01153"><label>93.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Jiang</surname><given-names>H.</given-names></name>
<name><surname>Lin</surname><given-names>J.</given-names></name>
<name><surname>Kang</surname><given-names>H.</given-names></name>
</person-group><article-title>FGMD: A robust detector against adversarial attacks in the IoT network. Futur</article-title><source>Gener. Comput. Syst.</source><year>2022</year><volume>132</volume><fpage>194</fpage><lpage>210</lpage><pub-id pub-id-type="doi">10.1016/j.future.2022.02.019</pub-id></element-citation></ref><ref id="B94-sensors-25-01153"><label>94.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Li</surname><given-names>C.</given-names></name>
<name><surname>Lv</surname><given-names>Q.</given-names></name>
<name><surname>Li</surname><given-names>N.</given-names></name>
<name><surname>Wang</surname><given-names>Y.</given-names></name>
<name><surname>Sun</surname><given-names>D.</given-names></name>
<name><surname>Qiao</surname><given-names>Y.</given-names></name>
</person-group><article-title>A novel deep framework for dynamic malware detection based on API sequence intrinsic features</article-title><source>Comput. Secur.</source><year>2022</year><volume>116</volume><fpage>102686</fpage><pub-id pub-id-type="doi">10.1016/j.cose.2022.102686</pub-id></element-citation></ref><ref id="B95-sensors-25-01153"><label>95.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Aditya</surname><given-names>W.R.</given-names></name>
<name><surname>Girinoto</surname></name>
<name><surname>Hadiprakoso</surname><given-names>R.B.</given-names></name>
<name><surname>Waluyo</surname><given-names>A.</given-names></name>
</person-group><article-title>Deep Learning for Malware Classification Platform using Windows API Call Sequence</article-title><source>Proceedings of the International Conference on Informatics, Multimedia, Cyber and Information System (ICIMCIS)</source><conf-loc>Jakarta, Indonesia</conf-loc><conf-date>28&#x02013;29 October 2021</conf-date><fpage>25</fpage><lpage>29</lpage><pub-id pub-id-type="doi">10.1109/ICIMCIS53775.2021.9699248</pub-id></element-citation></ref><ref id="B96-sensors-25-01153"><label>96.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Ring</surname><given-names>M.</given-names></name>
<name><surname>Schl&#x000f6;r</surname><given-names>D.</given-names></name>
<name><surname>Wunderlich</surname><given-names>S.</given-names></name>
<name><surname>Landes</surname><given-names>D.</given-names></name>
<name><surname>Hotho</surname><given-names>A.</given-names></name>
</person-group><article-title>Malware detection on windows audit logs using LSTMs</article-title><source>Comput. Secur.</source><year>2021</year><volume>109</volume><fpage>102389</fpage><pub-id pub-id-type="doi">10.1016/j.cose.2021.102389</pub-id></element-citation></ref><ref id="B97-sensors-25-01153"><label>97.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Lakshmanarao</surname><given-names>M.S.A.</given-names></name>
</person-group><article-title>Android Malware Detection with Deep Learning using RNN from Opcode Sequences</article-title><source>Int. J. Interact. Mob. Technol.</source><year>2022</year><volume>16</volume><fpage>145</fpage><pub-id pub-id-type="doi">10.3991/ijim.v16i01.26433</pub-id></element-citation></ref><ref id="B98-sensors-25-01153"><label>98.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Ma</surname><given-names>Z.</given-names></name>
<name><surname>Ge</surname><given-names>H.</given-names></name>
<name><surname>Wang</surname><given-names>Z.</given-names></name>
<name><surname>Liu</surname><given-names>Y.</given-names></name>
<name><surname>Liu</surname><given-names>X.</given-names></name>
</person-group><article-title>Droidetec: Android Malware Detection and Malicious Code</article-title><source>arXiv</source><year>2020</year><pub-id pub-id-type="arxiv">2002.03594</pub-id></element-citation></ref><ref id="B99-sensors-25-01153"><label>99.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Sasidharan</surname><given-names>S.K.</given-names></name>
<name><surname>Thomas</surname><given-names>C.</given-names></name>
</person-group><article-title>MemDroid&#x02014;LSTM based Malware Detection Framework for Android Devices</article-title><source>Proceedings of the 2021 IEEE Pune Section International Conference (PuneCon)</source><conf-loc>Pune, India</conf-loc><conf-date>16&#x02013;19 December 2021</conf-date><fpage>1</fpage><lpage>6</lpage><pub-id pub-id-type="doi">10.1109/PuneCon52575.2021.9686531</pub-id></element-citation></ref><ref id="B100-sensors-25-01153"><label>100.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Amer</surname><given-names>E.</given-names></name>
<name><surname>El-sappagh</surname><given-names>S.</given-names></name>
</person-group><article-title>Robust deep learning early alarm prediction model based on the behavioural smell for android malware</article-title><source>Comput. Secur.</source><year>2022</year><volume>116</volume><fpage>102670</fpage><pub-id pub-id-type="doi">10.1016/j.cose.2022.102670</pub-id></element-citation></ref><ref id="B101-sensors-25-01153"><label>101.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Wu</surname><given-names>Y.</given-names></name>
<name><surname>Shi</surname><given-names>J.</given-names></name>
<name><surname>Wang</surname><given-names>P.</given-names></name>
<name><surname>Zeng</surname><given-names>D.</given-names></name>
<name><surname>Sun</surname><given-names>C.</given-names></name>
</person-group><article-title>Android malware detection</article-title><source>IET Inf. Secur.</source><year>2023</year><volume>17</volume><fpage>118</fpage><lpage>130</lpage><pub-id pub-id-type="doi">10.1049/ise2.12082</pub-id></element-citation></ref><ref id="B102-sensors-25-01153"><label>102.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Jeon</surname><given-names>J.</given-names></name>
<name><surname>Jeong</surname><given-names>B.</given-names></name>
<name><surname>Baek</surname><given-names>S.</given-names></name>
<name><surname>Jeong</surname><given-names>Y.S.</given-names></name>
</person-group><article-title>Hybrid Malware Detection Based on Bi-LSTM and SPP-Net for Smart IoT</article-title><source>IEEE Trans. Ind. Inform.</source><year>2022</year><volume>18</volume><fpage>4830</fpage><lpage>4837</lpage><pub-id pub-id-type="doi">10.1109/TII.2021.3119778</pub-id></element-citation></ref><ref id="B103-sensors-25-01153"><label>103.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Mahdavifar</surname><given-names>S.</given-names></name>
<name><surname>Alhadidi</surname><given-names>D.</given-names></name>
<name><surname>Ghorbani</surname><given-names>A.A.</given-names></name>
</person-group><article-title>Effective and Efficient Hybrid Android Malware Classification Using Pseudo-Label Stacked Auto-Encoder</article-title><source>J. Netw. Syst. Manag.</source><year>2022</year><volume>30</volume><fpage>22</fpage><pub-id pub-id-type="doi">10.1007/s10922-021-09634-4</pub-id></element-citation></ref><ref id="B104-sensors-25-01153"><label>104.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Hemalatha</surname><given-names>J.</given-names></name>
<name><surname>Roseline</surname><given-names>S.A.</given-names></name>
<name><surname>Geetha</surname><given-names>S.</given-names></name>
<name><surname>Kadry</surname><given-names>S.</given-names></name>
<name><surname>Dama&#x00161;evi&#x0010d;ius</surname><given-names>R.</given-names></name>
</person-group><article-title>An efficient densenet-based deep learning model for Malware detection</article-title><source>Entropy</source><year>2021</year><volume>23</volume><elocation-id>344</elocation-id><pub-id pub-id-type="doi">10.3390/e23030344</pub-id><pub-id pub-id-type="pmid">33804035</pub-id>
</element-citation></ref><ref id="B105-sensors-25-01153"><label>105.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Kumar</surname><given-names>S.</given-names></name>
<name><surname>Janet</surname><given-names>B.</given-names></name>
</person-group><article-title>DTMIC: Deep transfer learning for malware image classification</article-title><source>J. Inf. Secur. Appl.</source><year>2022</year><volume>64</volume><fpage>103063</fpage><pub-id pub-id-type="doi">10.1016/j.jisa.2021.103063</pub-id></element-citation></ref><ref id="B106-sensors-25-01153"><label>106.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Huang</surname><given-names>X.</given-names></name>
<name><surname>Ma</surname><given-names>L.</given-names></name>
<name><surname>Yang</surname><given-names>W.</given-names></name>
<name><surname>Zhong</surname><given-names>Y.</given-names></name>
</person-group><article-title>A Method for Windows Malware Detection Based on Deep Learning</article-title><source>J. Signal Process. Syst.</source><year>2021</year><volume>93</volume><fpage>265</fpage><lpage>273</lpage><pub-id pub-id-type="doi">10.1007/s11265-020-01588-1</pub-id></element-citation></ref><ref id="B107-sensors-25-01153"><label>107.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Xu</surname><given-names>P.</given-names></name>
<name><surname>Zhang</surname><given-names>Y.</given-names></name>
<name><surname>Eckert</surname><given-names>C.</given-names></name>
<name><surname>Zarras</surname><given-names>A.</given-names></name>
</person-group><source>HawkEye: Cross-Platform Malware Detection with Representation Learning on Graphs</source><comment>12893 LNCS</comment><publisher-name>Springer International Publishing</publisher-name><publisher-loc>Berlin/Heidelberg, Germany</publisher-loc><year>2021</year></element-citation></ref><ref id="B108-sensors-25-01153"><label>108.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Yang</surname><given-names>Q.</given-names></name>
<name><surname>Liu</surname><given-names>Y.</given-names></name>
<name><surname>Chen</surname><given-names>T.</given-names></name>
<name><surname>Tong</surname><given-names>Y.</given-names></name>
</person-group><article-title>Federated machine learning: Concept and applications</article-title><source>ACM Trans. Intell. Syst. Technol.</source><year>2019</year><volume>10</volume><fpage>1</fpage><lpage>19</lpage><pub-id pub-id-type="doi">10.1145/3298981</pub-id></element-citation></ref><ref id="B109-sensors-25-01153"><label>109.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Rizvi</surname><given-names>S.K.J.</given-names></name>
<name><surname>Aslam</surname><given-names>W.</given-names></name>
<name><surname>Shahzad</surname><given-names>M.</given-names></name>
<name><surname>Saleem</surname><given-names>S.</given-names></name>
<name><surname>Fraz</surname><given-names>M.M.</given-names></name>
</person-group><article-title>PROUD-MAL: Static analysis-based progressive framework for deep unsupervised malware classification of windows portable executable</article-title><source>Complex Intell. Syst.</source><year>2022</year><volume>8</volume><fpage>673</fpage><lpage>685</lpage><pub-id pub-id-type="doi">10.1007/s40747-021-00560-1</pub-id></element-citation></ref><ref id="B110-sensors-25-01153"><label>110.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Khan</surname><given-names>M.</given-names></name>
<name><surname>Baig</surname><given-names>D.</given-names></name>
<name><surname>Khan</surname><given-names>U.S.</given-names></name>
<name><surname>Karim</surname><given-names>A.</given-names></name>
</person-group><article-title>Malware Classification Framework using Convolutional Neural Network</article-title><source>Proceedings of the 2020 International Conference on Cyber Warfare and Security (ICCWS)</source><conf-loc>Islamabad, Pakistan</conf-loc><conf-date>20&#x02013;21 October 2020</conf-date><pub-id pub-id-type="doi">10.1109/ICCWS48432.2020.9292384</pub-id></element-citation></ref><ref id="B111-sensors-25-01153"><label>111.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Amer</surname><given-names>E.</given-names></name>
<name><surname>Zelinka</surname><given-names>I.</given-names></name>
</person-group><article-title>A dynamic Windows malware detection and prediction method based on contextual understanding of API call sequence</article-title><source>Comput. Secur.</source><year>2020</year><volume>92</volume><fpage>101760</fpage><pub-id pub-id-type="doi">10.1016/j.cose.2020.101760</pub-id></element-citation></ref><ref id="B112-sensors-25-01153"><label>112.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Catak</surname><given-names>F.O.</given-names></name>
<name><surname>Yazi</surname><given-names>A.F.</given-names></name>
<name><surname>Elezaj</surname><given-names>O.</given-names></name>
<name><surname>Ahmed</surname><given-names>J.</given-names></name>
</person-group><article-title>Deep learning based Sequential model for malware analysis using Windows exe API Calls</article-title><source>PeerJ Comput. Sci.</source><year>2020</year><volume>6</volume><fpage>e285</fpage><pub-id pub-id-type="doi">10.7717/peerj-cs.285</pub-id></element-citation></ref><ref id="B113-sensors-25-01153"><label>113.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Hasan</surname><given-names>M.M.</given-names></name>
<name><surname>Rahman</surname><given-names>M.M.</given-names></name>
</person-group><article-title>RansHunt: A support vector machines based ransomware analysis framework with integrated feature set</article-title><source>Proceedings of the 20th International Conference of Computer and Information Technology (ICCIT)</source><conf-loc>Dhaka, Bangladesh</conf-loc><conf-date>22&#x02013;24 December 2018</conf-date><fpage>1</fpage><lpage>7</lpage><pub-id pub-id-type="doi">10.1109/ICCITECHN.2017.8281835</pub-id></element-citation></ref><ref id="B114-sensors-25-01153"><label>114.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Karbab</surname><given-names>E.M.B.</given-names></name>
<name><surname>Debbabi</surname><given-names>M.</given-names></name>
<name><surname>Derhab</surname><given-names>A.</given-names></name>
</person-group><article-title>SwiftR: Cross-platform ransomware fingerprinting using hierarchical neural networks on hybrid features</article-title><source>Expert Syst. Appl.</source><year>2023</year><volume>225</volume><fpage>120017</fpage><pub-id pub-id-type="doi">10.1016/j.eswa.2023.120017</pub-id></element-citation></ref><ref id="B115-sensors-25-01153"><label>115.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Hwang</surname><given-names>C.</given-names></name>
<name><surname>Hwang</surname><given-names>J.</given-names></name>
<name><surname>Kwak</surname><given-names>J.</given-names></name>
<name><surname>Lee</surname><given-names>T.</given-names></name>
</person-group><article-title>Platform-independent malware analysis applicable to windows and linux environments</article-title><source>Electronics</source><year>2020</year><volume>9</volume><elocation-id>793</elocation-id><pub-id pub-id-type="doi">10.3390/electronics9050793</pub-id></element-citation></ref><ref id="B116-sensors-25-01153"><label>116.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Walkup</surname><given-names>E.</given-names></name>
</person-group><source>Mac Malware Detection via Static File Structure Analysis</source><publisher-name>Stanford University</publisher-name><publisher-loc>Stanford, CA, USA</publisher-loc><year>2014</year><fpage>1</fpage><lpage>5</lpage></element-citation></ref><ref id="B117-sensors-25-01153"><label>117.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Pajouh</surname><given-names>H.H.</given-names></name>
<name><surname>Dehghantanha</surname><given-names>A.</given-names></name>
<name><surname>Khayami</surname><given-names>R.</given-names></name>
<name><surname>Choo</surname><given-names>K.K.R.</given-names></name>
</person-group><article-title>Intelligent OS X malware threat detection with code inspection</article-title><source>J. Comput. Virol. Hacking Tech.</source><year>2018</year><volume>14</volume><fpage>213</fpage><lpage>223</lpage><pub-id pub-id-type="doi">10.1007/s11416-017-0307-5</pub-id></element-citation></ref><ref id="B118-sensors-25-01153"><label>118.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Gao</surname><given-names>H.</given-names></name>
<name><surname>Cheng</surname><given-names>S.</given-names></name>
<name><surname>Zhang</surname><given-names>W.</given-names></name>
</person-group><article-title>GDroid: Android malware detection and classification with graph convolutional network</article-title><source>Comput. Secur.</source><year>2021</year><volume>106</volume><fpage>102264</fpage><pub-id pub-id-type="doi">10.1016/j.cose.2021.102264</pub-id></element-citation></ref><ref id="B119-sensors-25-01153"><label>119.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Wang</surname><given-names>S.</given-names></name>
<name><surname>Chen</surname><given-names>Z.</given-names></name>
<name><surname>Yan</surname><given-names>Q.</given-names></name>
<name><surname>Yang</surname><given-names>B.</given-names></name>
<name><surname>Peng</surname><given-names>L.</given-names></name>
<name><surname>Jia</surname><given-names>Z.</given-names></name>
</person-group><article-title>A mobile malware detection method using behavior features in network traffic</article-title><source>J. Netw. Comput. Appl.</source><year>2019</year><volume>133</volume><fpage>15</fpage><lpage>25</lpage><pub-id pub-id-type="doi">10.1016/j.jnca.2018.12.014</pub-id></element-citation></ref><ref id="B120-sensors-25-01153"><label>120.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Cimitile</surname><given-names>A.</given-names></name>
<name><surname>Martinelli</surname><given-names>F.</given-names></name>
<name><surname>Mercaldo</surname><given-names>F.</given-names></name>
</person-group><article-title>Machine learning meets ios malware: Identifying malicious applications on apple environment</article-title><source>Proceedings of the 3rd International Conference on Information Systems Security and Privacy</source><conf-loc>Porto, Portugal</conf-loc><conf-date>19&#x02013;21 February 2017</conf-date><fpage>487</fpage><lpage>492</lpage><pub-id pub-id-type="doi">10.5220/0006217304870492</pub-id></element-citation></ref><ref id="B121-sensors-25-01153"><label>121.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Zhou</surname><given-names>G.</given-names></name>
<name><surname>Duan</surname><given-names>M.</given-names></name>
<name><surname>Xi</surname><given-names>Q.</given-names></name>
<name><surname>Wu</surname><given-names>H.</given-names></name>
</person-group><article-title>ChanDet: Detection Model for Potential Channel of iOS Applications</article-title><source>J. Phys. Conf. Ser.</source><year>2019</year><volume>1187</volume><fpage>042045</fpage><pub-id pub-id-type="doi">10.1088/1742-6596/1187/4/042045</pub-id></element-citation></ref><ref id="B122-sensors-25-01153"><label>122.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Mercaldo</surname><given-names>F.</given-names></name>
<name><surname>Santone</surname><given-names>A.</given-names></name>
</person-group><article-title>Deep learning for image-based mobile malware detection</article-title><source>J. Comput. Virol. Hacking Tech.</source><year>2020</year><volume>16</volume><fpage>157</fpage><lpage>171</lpage><pub-id pub-id-type="doi">10.1007/s11416-019-00346-7</pub-id></element-citation></ref><ref id="B123-sensors-25-01153"><label>123.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Le</surname><given-names>H.V.</given-names></name>
<name><surname>Ngo</surname><given-names>Q.D.</given-names></name>
</person-group><article-title>V-Sandbox for Dynamic Analysis IoT Botnet</article-title><source>IEEE Access</source><year>2020</year><volume>8</volume><fpage>145768</fpage><lpage>145786</lpage><pub-id pub-id-type="doi">10.1109/ACCESS.2020.3014891</pub-id></element-citation></ref><ref id="B124-sensors-25-01153"><label>124.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Zhou</surname><given-names>X.</given-names></name>
<name><surname>Liang</surname><given-names>W.</given-names></name>
<name><surname>Li</surname><given-names>W.</given-names></name>
<name><surname>Yan</surname><given-names>K.</given-names></name>
<name><surname>Shimizu</surname><given-names>S.</given-names></name>
<name><surname>Wang</surname><given-names>K.I.K.</given-names></name>
</person-group><article-title>Hierarchical Adversarial Attacks Against Graph-Neural-Network-Based IoT Network Intrusion Detection System</article-title><source>IEEE Internet Things J.</source><year>2022</year><volume>9</volume><fpage>9310</fpage><lpage>9319</lpage><pub-id pub-id-type="doi">10.1109/JIOT.2021.3130434</pub-id></element-citation></ref><ref id="B125-sensors-25-01153"><label>125.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Ashraf</surname><given-names>E.</given-names></name>
<name><surname>Areed</surname><given-names>N.F.</given-names></name>
<name><surname>Salem</surname><given-names>H.</given-names></name>
<name><surname>Abdelhay</surname><given-names>E.H.</given-names></name>
<name><surname>Farouk</surname><given-names>A.</given-names></name>
</person-group><article-title>FIDChain: Federated Intrusion Detection System for Blockchain-Enabled IoT Healthcare Applications</article-title><source>Healthcare</source><year>2022</year><volume>10</volume><elocation-id>1110</elocation-id><pub-id pub-id-type="doi">10.3390/healthcare10061110</pub-id><pub-id pub-id-type="pmid">35742161</pub-id>
</element-citation></ref><ref id="B126-sensors-25-01153"><label>126.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Guerra-Manzanares</surname><given-names>A.</given-names></name>
<name><surname>Medina-Galindo</surname><given-names>J.</given-names></name>
<name><surname>Bahsi</surname><given-names>H.</given-names></name>
<name><surname>Nomm</surname><given-names>S.</given-names></name>
</person-group><article-title>MedBIoT: Generation of an IoT Botnet Dataset in a Medium-sized IoT Network</article-title><source>Proceedings of the International Conference on Information Systems Security and Privacy</source><conf-loc>Auckland, New Zealand</conf-loc><conf-date>25&#x02013;27 February 2020</conf-date><volume>Volume 2020</volume><fpage>207</fpage><lpage>218</lpage><pub-id pub-id-type="doi">10.5220/0009187802070218</pub-id></element-citation></ref><ref id="B127-sensors-25-01153"><label>127.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Xiao</surname><given-names>L.</given-names></name>
<name><surname>Li</surname><given-names>Y.</given-names></name>
<name><surname>Huang</surname><given-names>X.</given-names></name>
<name><surname>Du</surname><given-names>X.</given-names></name>
</person-group><article-title>Cloud-based malware detection game for mobile devices with offloading</article-title><source>IEEE Trans. Mob. Comput.</source><year>2017</year><volume>16</volume><fpage>2742</fpage><lpage>2750</lpage><pub-id pub-id-type="doi">10.1109/TMC.2017.2687918</pub-id></element-citation></ref><ref id="B128-sensors-25-01153"><label>128.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Mouratidis</surname><given-names>H.</given-names></name>
<name><surname>Shei</surname><given-names>S.</given-names></name>
<name><surname>Delaney</surname><given-names>A.</given-names></name>
</person-group><article-title>A security requirement modelling language for cloud computing environments</article-title><source>Softw. Syst. Model.</source><year>2020</year><volume>19</volume><fpage>271</fpage><lpage>295</lpage><pub-id pub-id-type="doi">10.1007/s10270-019-00747-8</pub-id></element-citation></ref><ref id="B129-sensors-25-01153"><label>129.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Nguyen</surname><given-names>P.S.</given-names></name>
<name><surname>Huy</surname><given-names>T.N.</given-names></name>
<name><surname>Tuan</surname><given-names>T.A.</given-names></name>
<name><surname>Trung</surname><given-names>P.D.</given-names></name>
<name><surname>Long</surname><given-names>H.V.</given-names></name>
</person-group><article-title>Hybrid feature extraction and integrated deep learning for cloud-based malware detection</article-title><source>Comput. Secur.</source><year>2025</year><volume>150</volume><fpage>104233</fpage><pub-id pub-id-type="doi">10.1016/j.cose.2024.104233</pub-id></element-citation></ref><ref id="B130-sensors-25-01153"><label>130.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>Exchange</surname><given-names>S.</given-names></name>
</person-group><article-title>Does WannaCry Infect Linux?</article-title><year>2017</year><comment>Available online: <ext-link xlink:href="https://security.stackexchange.com/questions/159397/does-wannacry-infect-linux?newreg=ed46c309743448b3ad646d3b5130f12f" ext-link-type="uri">https://security.stackexchange.com/questions/159397/does-wannacry-infect-linux?newreg=ed46c309743448b3ad646d3b5130f12f</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-01-22">(accessed on 22 January 2025)</date-in-citation></element-citation></ref><ref id="B131-sensors-25-01153"><label>131.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>Blog</surname><given-names>R.H.</given-names></name>
</person-group><article-title>Understanding and Mitigating the Dirty Cow Vulnerability</article-title><year>2016</year><comment>Available online: <ext-link xlink:href="https://www.redhat.com/en/blog/understanding-and-mitigating-dirty-cow-vulnerability" ext-link-type="uri">https://www.redhat.com/en/blog/understanding-and-mitigating-dirty-cow-vulnerability</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-01-22">(accessed on 22 January 2025)</date-in-citation></element-citation></ref><ref id="B132-sensors-25-01153"><label>132.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<collab>Apple</collab>
</person-group><article-title>About the Security Content of MacOS Ventura 13.3</article-title><year>2023</year><comment>Available online: <ext-link xlink:href="https://support.apple.com/en-us/120945" ext-link-type="uri">https://support.apple.com/en-us/120945</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-01-22">(accessed on 22 January 2025)</date-in-citation></element-citation></ref><ref id="B133-sensors-25-01153"><label>133.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<collab>iPhone User Guide</collab>
</person-group><article-title>Unauthorized Modification of iOS</article-title><year>2025</year><comment>Available online: <ext-link xlink:href="https://support.apple.com/en-gb/guide/iphone/iph9385bb26a/ios" ext-link-type="uri">https://support.apple.com/en-gb/guide/iphone/iph9385bb26a/ios</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-01-26">(accessed on 26 January 2025)</date-in-citation></element-citation></ref><ref id="B134-sensors-25-01153"><label>134.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>S&#x000e1;nchez</surname><given-names>P.M.S.</given-names></name>
<name><surname>Celdr&#x000e1;n</surname><given-names>A.H.</given-names></name>
<name><surname>Bovet</surname><given-names>G.</given-names></name>
<name><surname>P&#x000e9;rez</surname><given-names>G.M.</given-names></name>
</person-group><article-title>Transfer Learning in Pre-Trained Large Language Models for Malware Detection Based on System Calls</article-title><year>2024</year><comment>Available online: <ext-link xlink:href="http://arxiv.org/abs/2405.09318" ext-link-type="uri">http://arxiv.org/abs/2405.09318</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-01-26">(accessed on 26 January 2025)</date-in-citation></element-citation></ref><ref id="B135-sensors-25-01153"><label>135.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Han</surname><given-names>S.</given-names></name>
<name><surname>Pool</surname><given-names>J.</given-names></name>
<name><surname>Tran</surname><given-names>J.</given-names></name>
<name><surname>Dally</surname><given-names>W.J.</given-names></name>
</person-group><article-title>Learning both weights and connections for efficient neural networks</article-title><source>Adv. Neural Inf. Process. Syst.</source><year>2015</year><volume>2015</volume><fpage>1135</fpage><lpage>1143</lpage></element-citation></ref><ref id="B136-sensors-25-01153"><label>136.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Jacob</surname><given-names>B.</given-names></name>
<name><surname>Kligys</surname><given-names>S.</given-names></name>
<name><surname>Chen</surname><given-names>B.</given-names></name>
<name><surname>Zhu</surname><given-names>M.</given-names></name>
<name><surname>Tang</surname><given-names>M.</given-names></name>
<name><surname>Howard</surname><given-names>A.</given-names></name>
<name><surname>Adam</surname><given-names>H.</given-names></name>
<name><surname>Kalenichenko</surname><given-names>D.</given-names></name>
</person-group><article-title>Quantization and Training of Neural Networks for Efficient Integer-Arithmetic-Only Inference</article-title><source>Proceedings of the 2018 IEEE/CVF Conference on Computer Vision and Pattern Recognition</source><conf-loc>Salt Lake City, UT, USA</conf-loc><conf-date>18&#x02013;23 June 2018</conf-date><fpage>2704</fpage><lpage>2713</lpage><pub-id pub-id-type="doi">10.1109/CVPR.2018.00286</pub-id></element-citation></ref><ref id="B137-sensors-25-01153"><label>137.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>Hinton</surname><given-names>G.</given-names></name>
<name><surname>Vinyals</surname><given-names>O.</given-names></name>
<name><surname>Dean</surname><given-names>J.</given-names></name>
</person-group><article-title>Distilling the Knowledge in a Neural Network</article-title><year>2015</year><comment>Available online: <ext-link xlink:href="http://arxiv.org/abs/1503.02531" ext-link-type="uri">http://arxiv.org/abs/1503.02531</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-01-26">(accessed on 26 January 2025)</date-in-citation></element-citation></ref><ref id="B138-sensors-25-01153"><label>138.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Ribeiro</surname><given-names>M.T.</given-names></name>
<name><surname>Singh</surname><given-names>S.</given-names></name>
<name><surname>Guestrin</surname><given-names>C.</given-names></name>
</person-group><article-title>&#x02018;Why should I trust you?&#x02019; Explaining the predictions of any classifier</article-title><source>Proceedings of the ACM SIGKDD International Conference on Knowledge Discovery and Data Mining</source><conf-loc>San Francisco, CA, USA</conf-loc><conf-date>13&#x02013;17 August 2016</conf-date><fpage>1135</fpage><lpage>1144</lpage><pub-id pub-id-type="doi">10.1145/2939672.2939778</pub-id></element-citation></ref><ref id="B139-sensors-25-01153"><label>139.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Rodis</surname><given-names>N.</given-names></name>
<name><surname>Sardianos</surname><given-names>C.</given-names></name>
<name><surname>Papadopoulos</surname><given-names>G.T.</given-names></name>
<name><surname>Radoglou-Grammatikis</surname><given-names>P.</given-names></name>
<name><surname>Sarigiannidis</surname><given-names>P.</given-names></name>
<name><surname>Varlamis</surname><given-names>I.</given-names></name>
</person-group><article-title>Multimodal Explainable Artificial Intelligence: A Comprehensive Review of Methodological Advances and Future Research Directions</article-title><source>IEEE Access</source><year>2023</year><volume>12</volume><fpage>159794</fpage><lpage>159820</lpage><pub-id pub-id-type="doi">10.1109/ACCESS.2024.3467062</pub-id></element-citation></ref><ref id="B140-sensors-25-01153"><label>140.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Sokol</surname><given-names>K.</given-names></name>
<name><surname>Flach</surname><given-names>P.</given-names></name>
</person-group><article-title>Explainability fact sheets: A framework for systematic assessment of explainable approaches</article-title><source>Proceedings of the 2020 Conference on Fairness, Accountability, and Transparency</source><conf-loc>Barcelona, Spain</conf-loc><conf-date>27&#x02013;30 January 2020</conf-date><fpage>56</fpage><lpage>67</lpage><pub-id pub-id-type="doi">10.1145/3351095.3372870</pub-id></element-citation></ref><ref id="B141-sensors-25-01153"><label>141.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Guidotti</surname><given-names>R.</given-names></name>
<name><surname>Monreale</surname><given-names>A.</given-names></name>
<name><surname>Ruggieri</surname><given-names>S.</given-names></name>
<name><surname>Turini</surname><given-names>F.</given-names></name>
<name><surname>Giannotti</surname><given-names>F.</given-names></name>
<name><surname>Pedreschi</surname><given-names>D.</given-names></name>
</person-group><article-title>A survey of methods for explaining black box models</article-title><source>ACM Comput. Surv.</source><year>2018</year><volume>51</volume><fpage>1</fpage><lpage>42</lpage><pub-id pub-id-type="doi">10.1145/3236009</pub-id></element-citation></ref><ref id="B142-sensors-25-01153"><label>142.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Demirci</surname><given-names>D.</given-names></name>
<name><surname>Sahin</surname><given-names>N.</given-names></name>
<name><surname>Sirlancis</surname><given-names>M.</given-names></name>
<name><surname>Acarturk</surname><given-names>C.</given-names></name>
</person-group><article-title>Static Malware Detection Using Stacked BiLSTM and GPT-2</article-title><source>IEEE Access</source><year>2022</year><volume>10</volume><fpage>58488</fpage><lpage>58502</lpage><pub-id pub-id-type="doi">10.1109/ACCESS.2022.3179384</pub-id></element-citation></ref></ref-list></back><floats-group><fig position="float" id="sensors-25-01153-f001"><label>Figure 1</label><caption><p>Types of attacks experienced by companies (published September 2024 by CISCO) [<xref rid="B2-sensors-25-01153" ref-type="bibr">2</xref>].</p></caption><graphic xlink:href="sensors-25-01153-g001" position="float"/></fig><fig position="float" id="sensors-25-01153-f002"><label>Figure 2</label><caption><p>Step-by-step process of cryptojacking [<xref rid="B38-sensors-25-01153" ref-type="bibr">38</xref>].</p></caption><graphic xlink:href="sensors-25-01153-g002" position="float"/></fig><fig position="float" id="sensors-25-01153-f003"><label>Figure 3</label><caption><p>Taxonomy of malware landscape across various platforms.</p></caption><graphic xlink:href="sensors-25-01153-g003" position="float"/></fig><fig position="float" id="sensors-25-01153-f004"><label>Figure 4</label><caption><p>Proportion of algorithm categories in recent malware detection.</p></caption><graphic xlink:href="sensors-25-01153-g004" position="float"/></fig><fig position="float" id="sensors-25-01153-f005"><label>Figure 5</label><caption><p>Distribution of detection feature types, algorithms, accuracy by feature type, and image and non-image features.</p></caption><graphic xlink:href="sensors-25-01153-g005" position="float"/></fig><fig position="float" id="sensors-25-01153-f006"><label>Figure 6</label><caption><p>Distribution of detection techniques, detection features, and evaluation datasets used in mobile malware detection solutions.</p></caption><graphic xlink:href="sensors-25-01153-g006" position="float"/></fig><table-wrap position="float" id="sensors-25-01153-t002"><object-id pub-id-type="pii">sensors-25-01153-t002_Table 2</object-id><label>Table 2</label><caption><p>Categorization of platform-specific features: static, dynamic, and memory-based approaches across file formats and operating environments.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Platform</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">File Format</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Static Features</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Dynamic Features</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Memory Features</th></tr></thead><tbody><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>Windows</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Executable (EXE) files.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>PE header information:</bold> Import/export address tables, section headers, entry point address, date timestamp, code section size.<break/><bold>File metadata</bold>: Size, creation/modification dates, access permissions.<break/><bold>Strings:</bold> IP addresses, domain names.<break/><bold>Opcode sequences</bold>: An opcode is an instruction executed by a CPU, describing an executable file&#x02019;s behavior. Hence, opcode sequences are the specific sequences of operations extracted from the binary code.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>API calls</bold>: Sequence and types of Windows API calls (e.g., CreateProcess, WriteFile).<break/><bold>Registry modifications:</bold> Registry key creation, deletion, or modification.<break/><bold>File system modifications:</bold> Deletes, creates, or overwrites the existing file, encrypts all or a subset of files in case of ransomware.<break/><bold>Host logs:</bold> Events extracted from host logs.<break/><bold>Network activity:</bold> Source and destination IP addresses, TCP ports, Domain Names System (DNS) requests, and network protocols (e.g., HTTP, HTTPS, SMTP, etc.).<break/><bold>Resource usage:</bold> Higher CPU or memory usage may indicate the presence of malware in the system.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Windows memory dumps.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>Linux</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Executable and Linkable Format (ELF): code, data, and metadata for execution.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>ELF header information:</bold> Malware developers manipulate ELF headers to evade or crash standard analysis tools [<xref rid="B46-sensors-25-01153" ref-type="bibr">46</xref>].<break/><bold>Internal libraries:</bold> Most Linux malware is statically linked to its libraries, eliminating external dependencies [<xref rid="B46-sensors-25-01153" ref-type="bibr">46</xref>].<break/><bold>Shared libraries</bold>: List of dynamically loaded libraries.<break/><bold>Sections and segments</bold>: Information on the .text (code) and .data (global variables) segments.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>System call patterns</bold>: Frequency and type of system calls.<break/><bold>Network behavior</bold>: Monitoring outgoing/incoming connections and socket creation.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Sections and segments</bold>: Memory segments (.text, .data, .bss).</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>macOS</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Mach-O files:</bold> native executable format for macOS.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Code signatures</bold>: Presence and structure of code signing.<break/><bold>Dynamic libraries</bold>: Information on loaded libraries (DYLIBs).</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>File activity:</bold> Monitor file creations, deletions, modifications, and access patterns.<break/><bold>Inbound and outbound traffic:</bold> Observe and analyze all network traffic, including DNS, HTTP requests, and other communication protocols.<break/><bold>Service start/stop:</bold> Track each modification linked to service operation.<break/><bold>TI reputation services:</bold> Utilize threat intelligence to detect malicious files, IP addresses, and domains.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Sandboxing</bold>: Memory protection through entitlements.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>Android</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>APK (Android Package Kit) files:</bold><break/>It is a compressed archive that includes all the resources needed to distribute and install applications on Android devices. </td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Strings:</bold> Domain names, IP addresses, and ransom notes in case of ransomware attack.<break/><bold>Permissions analysis</bold>: The set of permissions requested by the app to the users (e.g., camera access, network communication, Bluetooth, contacts, and more).<break/><bold>Manifest information</bold>: Details about application components (e.g., activities, services, and receivers).<break/><bold>Intents:</bold> Allows communication between various components of an app.<break/><bold>API calls:</bold> API calls enable inter-application communication to detect malicious behavior.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Behavioral features</bold>: Network communication, SMS, data storage behavior.<break/><bold>File system features:</bold> Similarly to PCs, features extracted from a mobile device&#x02019;s file system can indicate the presence of malware.<break/><bold>User interaction:</bold> Detecting ransomware can be achieved by correlating user interactions with application runtime events [<xref rid="B47-sensors-25-01153" ref-type="bibr">47</xref>].<break/><bold>System resource analysis:</bold> CPU, memory and battery, process reports and network usage.<break/><bold>Network traffic analysis:</bold> URLs, IPs, network protocols, certificates, non-encrypted data.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Embedded files</bold>: Presence of assets (e.g., shared libraries) impacting memory allocation.<break/><bold>Memory dumps:</bold> A snapshot of Android&#x02019;s memory that captures all data and processes in the RAM at a specific time, including system processes, application data, and temporary data from various programs.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>iOS</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">iOS App Store Package (IPA): specific to iOS for app distribution.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Code signing:</bold> Verification of signatures.<break/><bold>Sandboxing and entitlements: Permission restrictions.</bold></td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Objective-C method calls</bold>: Runtime behavior.<break/><bold>Dynamic behavior</bold>: API usage patterns (e.g., contacts, location access).<break/><bold>Data encryption</bold>: Encrypted data usage.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Entitlements</bold>: Defines memory boundaries through sandboxing.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>IoT</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Various formats (e.g., BIN, HEX, Linux executables).</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Firmware version</bold>: Metadata, updates, and patches.<break/><bold>Opcode sequences:</bold> Extracting operational codes after disassembling the binary file.<break/><bold>Control-flow graph (CFG):</bold> Extracting from the assembly file.<break/><bold>API calls</bold>: Extracting from the binary.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Network traffic</bold>: Service type (http, smtp, ftp, etc.), device communication protocols (e.g., MQTT, CoAP), packet size transmitted by source IP address, etc.<break/><bold>Device-specific behavior</bold>: Interactions with sensors, actuators, device ports.<break/><bold>System calls:</bold> Timestamp, return value, arguments, and name of each system call.<break/><bold>Resource utilization-based features: 'CPU usage, process usage, and RAM usage</bold>.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>System call sequences</bold>: System-level commands specific to device memory.<break/><bold>Memory-mapped IO</bold>: Monitoring interactions with memory-mapped I/O (MMIO).<break/><bold>Memory buffer usage</bold>: Analysis of memory buffers for potential overflows.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>Cloud</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">VM disk images (e.g., VMDK, QCOW2), container formats (e.g., Docker images).</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>VM metadata</bold>: Hypervisor information (e.g., VM details).<break/><bold>Data storage patterns</bold>: Interactions with cloud storage.<break/><bold>Strings and n-grams</bold></td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>API usage patterns</bold>: Cloud-specific API calls (AWS SDK, Google Cloud API).<break/><bold>Container activity</bold>: Monitoring processes and network activity in containers.<break/><bold>System calls:</bold> Extracted from the interactions between applications and the OS&#x02019;s kernel during runtime.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Virtual memory dumps:</bold> Contains memory-specific features (system calls, memory access).</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-01153-t003"><object-id pub-id-type="pii">sensors-25-01153-t003_Table 3</object-id><label>Table 3</label><caption><p>Summary of machine learning algorithms applied in various studies across diverse platforms for malware detection.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">ML Techniques</th><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Algorithms</th><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">References</th></tr></thead><tbody><tr><td colspan="3" align="center" valign="middle" style="border-bottom:solid thin" rowspan="1">
<bold>Traditional machine learning algorithms</bold>
</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Support Vector Machines (SVMs):</bold> This method employs a hyperplane to maximize the margin between malicious and benign samples, proving effective for high-dimensional data.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">SVM</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B66-sensors-25-01153" ref-type="bibr">66</xref>,<xref rid="B67-sensors-25-01153" ref-type="bibr">67</xref>,<xref rid="B68-sensors-25-01153" ref-type="bibr">68</xref>]</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>K-Nearest Neighbors (KNN):</bold> This algorithm classifies samples based on the predominant class of their nearest neighbors, utilizing feature similarity as the primary criterion.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">KNN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B55-sensors-25-01153" ref-type="bibr">55</xref>,<xref rid="B69-sensors-25-01153" ref-type="bibr">69</xref>]</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Logistic Regression (LR):</bold> This approach classifies malware by modeling the relationship between features and binary outcomes (malicious or benign) utilizing a sigmoid function. The sigmoid function converts input values to a range of 0 to 1, making it ideal for interpreting results as probabilities. It is used for binary classification tasks, especially in logistic regression and neural networks.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">LR</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B70-sensors-25-01153" ref-type="bibr">70</xref>,<xref rid="B71-sensors-25-01153" ref-type="bibr">71</xref>,<xref rid="B72-sensors-25-01153" ref-type="bibr">72</xref>]</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Na&#x000ef;ve Bayes (NB):</bold> A probabilistic approach that assumes feature independence, which is efficient for text-based malware detection.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">NB</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B67-sensors-25-01153" ref-type="bibr">67</xref>,<xref rid="B68-sensors-25-01153" ref-type="bibr">68</xref>]</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Decision Trees (DTs):</bold> Decision trees are a supervised learning method that classify data by building a tree-like model. The process identifies the most critical features and splits the data into subsets based on these attributes to form nodes. It recursively classifies each node until a final decision is reached as benign or malware.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">DT</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B69-sensors-25-01153" ref-type="bibr">69</xref>,<xref rid="B70-sensors-25-01153" ref-type="bibr">70</xref>]</td></tr><tr><td colspan="3" align="center" valign="middle" style="border-bottom:solid thin" rowspan="1">
<bold>Ensemble learning algorithms</bold>
</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Random Forest (RF):</bold> This approach constructs multiple decision trees and aggregates their outputs through majority voting or averaging, thereby enhancing robustness and accuracy.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">RF</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B67-sensors-25-01153" ref-type="bibr">67</xref>,<xref rid="B68-sensors-25-01153" ref-type="bibr">68</xref>,<xref rid="B69-sensors-25-01153" ref-type="bibr">69</xref>,<xref rid="B70-sensors-25-01153" ref-type="bibr">70</xref>,<xref rid="B72-sensors-25-01153" ref-type="bibr">72</xref>,<xref rid="B73-sensors-25-01153" ref-type="bibr">73</xref>,<xref rid="B74-sensors-25-01153" ref-type="bibr">74</xref>]</td></tr><tr><td rowspan="2" align="left" valign="top" style="border-bottom:solid thin" colspan="1"><bold>Gradient Boosting (e.g., XGBoost, LightGBM):</bold> This approach sequentially constructs weak learners, specifically decision trees, to minimize errors, thereby providing high accuracy in the analysis of structured malware data.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Gradient Boosting</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B72-sensors-25-01153" ref-type="bibr">72</xref>]</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">XGBoost</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B69-sensors-25-01153" ref-type="bibr">69</xref>,<xref rid="B72-sensors-25-01153" ref-type="bibr">72</xref>]</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>AdaBoost:</bold> This approach focuses on challenging samples by modifying weights during the training process, thereby combining weak classifiers into a robust one.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">AdaBoost</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B68-sensors-25-01153" ref-type="bibr">68</xref>,<xref rid="B74-sensors-25-01153" ref-type="bibr">74</xref>]</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Bagging:</bold> The Bagging technique randomly divides the dataset into multiple subsets (bootstraps) based on instances, each with unique instances, and then aggregates the results from models trained on these subsets to enhance generalization.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
</td></tr><tr><td colspan="3" align="center" valign="middle" style="border-bottom:solid thin" rowspan="1">
<bold>Deep learning algorithms</bold>
</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Convolutional Neural Networks (CNNs):</bold> This approach demonstrates efficacy in image-based malware detection, utilizing automated extraction of spatial features from transformed malware binaries.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">CNN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B70-sensors-25-01153" ref-type="bibr">70</xref>,<xref rid="B75-sensors-25-01153" ref-type="bibr">75</xref>,<xref rid="B76-sensors-25-01153" ref-type="bibr">76</xref>,<xref rid="B77-sensors-25-01153" ref-type="bibr">77</xref>,<xref rid="B78-sensors-25-01153" ref-type="bibr">78</xref>,<xref rid="B79-sensors-25-01153" ref-type="bibr">79</xref>,<xref rid="B80-sensors-25-01153" ref-type="bibr">80</xref>,<xref rid="B81-sensors-25-01153" ref-type="bibr">81</xref>,<xref rid="B82-sensors-25-01153" ref-type="bibr">82</xref>,<xref rid="B83-sensors-25-01153" ref-type="bibr">83</xref>,<xref rid="B84-sensors-25-01153" ref-type="bibr">84</xref>,<xref rid="B85-sensors-25-01153" ref-type="bibr">85</xref>,<xref rid="B86-sensors-25-01153" ref-type="bibr">86</xref>,<xref rid="B87-sensors-25-01153" ref-type="bibr">87</xref>,<xref rid="B88-sensors-25-01153" ref-type="bibr">88</xref>,<xref rid="B89-sensors-25-01153" ref-type="bibr">89</xref>,<xref rid="B90-sensors-25-01153" ref-type="bibr">90</xref>,<xref rid="B91-sensors-25-01153" ref-type="bibr">91</xref>]</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Recurrent Neural Networks (RNNs):</bold> This method facilitates the analysis of sequential data, including API call sequences and opcode patterns, for behavioral-based malware identification.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">RNN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B75-sensors-25-01153" ref-type="bibr">75</xref>,<xref rid="B90-sensors-25-01153" ref-type="bibr">90</xref>,<xref rid="B92-sensors-25-01153" ref-type="bibr">92</xref>,<xref rid="B93-sensors-25-01153" ref-type="bibr">93</xref>]</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Long Short-Term Memory (LSTM):</bold> A variant of the recurrent neural network (RNN) that effectively captures long-term dependencies, particularly applicable for time-series analysis of dynamic malware features.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">LSTM</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B76-sensors-25-01153" ref-type="bibr">76</xref>,<xref rid="B80-sensors-25-01153" ref-type="bibr">80</xref>,<xref rid="B82-sensors-25-01153" ref-type="bibr">82</xref>,<xref rid="B87-sensors-25-01153" ref-type="bibr">87</xref>,<xref rid="B93-sensors-25-01153" ref-type="bibr">93</xref>,<xref rid="B94-sensors-25-01153" ref-type="bibr">94</xref>,<xref rid="B95-sensors-25-01153" ref-type="bibr">95</xref>,<xref rid="B96-sensors-25-01153" ref-type="bibr">96</xref>,<xref rid="B97-sensors-25-01153" ref-type="bibr">97</xref>,<xref rid="B98-sensors-25-01153" ref-type="bibr">98</xref>,<xref rid="B99-sensors-25-01153" ref-type="bibr">99</xref>,<xref rid="B100-sensors-25-01153" ref-type="bibr">100</xref>,<xref rid="B101-sensors-25-01153" ref-type="bibr">101</xref>,<xref rid="B102-sensors-25-01153" ref-type="bibr">102</xref>]</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Gated Recurrent Unit (GRU):</bold> It is a type of recurrent neural network (RNN) designed to process sequential data, such as time series or text. This model is more computationally efficient than LSTMs due to fewer parameters and the absence of a separate output gate.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">GRU</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B95-sensors-25-01153" ref-type="bibr">95</xref>]</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Generative Adversarial Networks (GANs):</bold> This process generates synthetic malware samples for data augmentation, thereby enhancing the efficacy of detection systems with limited datasets.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">GAN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B84-sensors-25-01153" ref-type="bibr">84</xref>]</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Autoencoders:</bold> Autoencoders are unsupervised neural networks used for dimensionality reduction, feature extraction, and anomaly detection. They aim to learn a compressed representation of the input data (encoding) and then reconstruct the input (decoding) as accurately as possible.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">VAEs, Sparse Autoencoders etc.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B103-sensors-25-01153" ref-type="bibr">103</xref>]</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Transformer Models (e.g., BERT):</bold> Transformers are advanced deep learning architectures based on attention mechanisms designed to handle sequential or contextual data effectively.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">BERT</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Transfer Learning (TL):</bold> This is a deep learning approach where a model pre-trained on one task or dataset is reused and fine-tuned for a related but different task. It is particularly effective when the target dataset is small or lacks diversity.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Pre-trained CNNs like Inception, VGG, ResNet50, etc.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B104-sensors-25-01153" ref-type="bibr">104</xref>,<xref rid="B105-sensors-25-01153" ref-type="bibr">105</xref>,<xref rid="B106-sensors-25-01153" ref-type="bibr">106</xref>]</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Multilayer Perceptron (MLP):</bold> It is a type of artificial neural network (ANN) consisting of multiple layers of nodes. It is commonly used in supervised learning tasks such as classification and regression.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">MLP</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B55-sensors-25-01153" ref-type="bibr">55</xref>,<xref rid="B68-sensors-25-01153" ref-type="bibr">68</xref>,<xref rid="B70-sensors-25-01153" ref-type="bibr">70</xref>,<xref rid="B73-sensors-25-01153" ref-type="bibr">73</xref>,<xref rid="B85-sensors-25-01153" ref-type="bibr">85</xref>,<xref rid="B107-sensors-25-01153" ref-type="bibr">107</xref>]</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Federated Learning (FL):</bold> FL is an emerging AI model in which ML models are trained locally on edge devices such as smartphones and IoT devices, without sharing raw data. Instead, only model parameters and gradients are exchanged with a global model, preserving user privacy, and enhancing security. However, its effectiveness depends on device capabilities and communication overhead.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">-</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B10-sensors-25-01153" ref-type="bibr">10</xref>,<xref rid="B108-sensors-25-01153" ref-type="bibr">108</xref>]</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Large Language Models (LLMs):</bold> The ability of LLMs to capture contextual relationships enables the identification of subtle patterns indicative of malicious activities. LLMs assist in automating threat analysis, improving detection accuracy, and aiding in malware classification.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">GPT, BERT, ChatGPT-4, Claude </td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B8-sensors-25-01153" ref-type="bibr">8</xref>,<xref rid="B9-sensors-25-01153" ref-type="bibr">9</xref>]</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-01153-t004"><object-id pub-id-type="pii">sensors-25-01153-t004_Table 4</object-id><label>Table 4</label><caption><p>Summary of reviewed ML models for Windows-based malware detection: dataset sources, feature details, experimental results, and limitations.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Reference</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Data Source</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Feature Category</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Feature Name</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">ML Algorithms</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Result (Accuracy)</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Limitations</th></tr></thead><tbody><tr><td colspan="7" align="center" valign="middle" style="border-bottom:solid thin" rowspan="1">
<bold>Static feature-based malware detection</bold>
</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B75-sensors-25-01153" ref-type="bibr">75</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Malimg</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Static</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Opcode sequences</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Deep RNN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">96%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">It requires significant computational resources.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B76-sensors-25-01153" ref-type="bibr">76</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Microsoft BIG 2015</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Static</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Opcodes, images, byte sequence, etc.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">DNN, LSTM, and CNN.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">98.35%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">It is useless against zero-day malware.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B104-sensors-25-01153" ref-type="bibr">104</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">BIG 2015, Malimg, MaleVis and Malicia dataset</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Static</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">2D images</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">DenseNet</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">98.23%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">It has high false negatives and highly imbalanced datasets.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B77-sensors-25-01153" ref-type="bibr">77</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Microsoft BIG 2015</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Static</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Image-based opcode features</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">CNN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">99.12%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Outdated dataset.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B105-sensors-25-01153" ref-type="bibr">105</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Malimg dataset, Microsoft BIG 2015</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Static</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Grayscale images from PE files</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">VGG16, VGG19, ResNet50, and inceptionV3</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">98.92%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Cannot detect malware packed using advanced techniques.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B109-sensors-25-01153" ref-type="bibr">109</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Malimg</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Static</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Static signatures</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">ATT-DNNs</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">98.09%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Cannot detect obfuscated malware.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B78-sensors-25-01153" ref-type="bibr">78</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Malware API-class</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Static</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Executable file to static images</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">CNN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">98.00%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">_</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B79-sensors-25-01153" ref-type="bibr">79</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">VirusShare, Hybrid Analysis</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Static</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Executable file to static images</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Xception Convolutional Neural Network (CNN)</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">98.20%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">_</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B110-sensors-25-01153" ref-type="bibr">110</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Microsoft BIG 2015</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Static</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Malware binary files into static images</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">DNN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">97.80%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">_</td></tr><tr><td colspan="7" align="center" valign="middle" style="border-bottom:solid thin" rowspan="1">
<bold>Dynamic feature-based malware detection</bold>
</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B94-sensors-25-01153" ref-type="bibr">94</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">VirusShare</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Dynamic</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Sequences of API calls</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Bi-LSTM</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">97.31%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Limited to executing samples in a Windows 7 environment. </td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B111-sensors-25-01153" ref-type="bibr">111</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Custom datasets</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Dynamic</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Sequences of API calls</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Markov chain representation</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">99.7%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">-</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B112-sensors-25-01153" ref-type="bibr">112</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">VirusTotal</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Dynamic</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">API calls </td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">LSTM</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">95%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Limited to executing samples in a Windows 7 environment.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B95-sensors-25-01153" ref-type="bibr">95</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">VirusTotal</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Dynamic</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">API call sequences</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">LSTM and GRU</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">96.8%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Highly imbalanced dataset.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B66-sensors-25-01153" ref-type="bibr">66</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">CA Tech-<break/>neologises VET Zoo </td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Dynamic</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Runtime behavior</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">MRed, ReliefF, SVM</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">99.499%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">High computational complexity.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B96-sensors-25-01153" ref-type="bibr">96</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Audit log events</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Dynamic</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Process names, action types, and accessed file</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">LSTM</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">91.05%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">High false positives and lack of scalability.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B80-sensors-25-01153" ref-type="bibr">80</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Multiclass dataset (Ember Dataset, private dataset)</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Dynamic</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Loaded DLLs, registry changes, API call sequences and file changes</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">CNN-LSTM</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">96.8%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Susceptible to adversarial attacks.</td></tr><tr><td colspan="7" align="center" valign="middle" style="border-bottom:solid thin" rowspan="1">
<bold>Hybrid feature-based malware detection techniques</bold>
</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B81-sensors-25-01153" ref-type="bibr">81</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">VirusTotal</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Hybrid (static and dynamic)</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Combination of static and dynamic features (PE section, PE import, PE API, and PE images)</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">CNN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">97%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Failed to validate the robustness against adversarial attacks.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B73-sensors-25-01153" ref-type="bibr">73</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">The Korea Internet &#x00026; Security Agency (KISA)</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Hybrid</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Size of file and <break/>header, counts of file sections. Entropy, file system changes API call, DLL-loaded info, network activities, etc.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">RF, MLP</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">85.1%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Extensive time is needed for feature extraction.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B106-sensors-25-01153" ref-type="bibr">106</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">VirusShare</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Hybrid</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Image-based static and dynamic features</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">VGG16</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">94.70%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">-</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B113-sensors-25-01153" ref-type="bibr">113</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">VirusShare</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Hybrid</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Function length frequency<break/>representation, registry activities, API calls, and file operation features</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">SVM</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">97.10%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Small dataset.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B82-sensors-25-01153" ref-type="bibr">82</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">VirusTotal</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Hybrid</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Opcodes and system calls</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">CNN, LSTM, and an attention-based LSTM</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">99%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">High computational cost.</td></tr><tr><td colspan="7" align="center" valign="middle" style="border-bottom:solid thin" rowspan="1">
<bold>Memory feature-based malware detection techniques</bold>
</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B83-sensors-25-01153" ref-type="bibr">83</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Dumpware10</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Memory</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Memory images of running processes</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">CNN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">98%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Malware processing cost is high under limited resource capabilities.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B84-sensors-25-01153" ref-type="bibr">84</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Dumpware10, BIG2015 dataset</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Memory</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Memory images of running processes</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">GAN and CNN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">99.86% for BIG2015 dataset </td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Only one type of data, like bytes, is used. Need to make the dataset more diverse.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B85-sensors-25-01153" ref-type="bibr">85</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">CIC-MalMem-2022<break/><uri xlink:href="https://www.unb.ca/cic/datasets/malmem-2022.html">https://www.unb.ca/cic/datasets/malmem-2022.html</uri> (accessed on 3 February 2025)</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Memory</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Memory images of running processes</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">CNN and MLP</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">99.8%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Training time complexity and vulnerability to adversarial attacks.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B70-sensors-25-01153" ref-type="bibr">70</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">CIC-MalMem-2022<break/><uri xlink:href="https://www.unb.ca/cic/datasets/malmem-2022.html">https://www.unb.ca/cic/datasets/malmem-2022.html</uri> (accessed on 3 February 2025)</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Memory</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Multi-memory features</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">RF, DT, LR, MLP, and CNN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">99.89%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">-</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-01153-t005"><object-id pub-id-type="pii">sensors-25-01153-t005_Table 5</object-id><label>Table 5</label><caption><p>Summary of reviewed ML models for Linux-based malware detection: dataset sources, feature details, and experimental results.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Reference</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Data Source</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Feature Category</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Feature Name</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">ML Algorithms</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Result (Accuracy)</th></tr></thead><tbody><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B107-sensors-25-01153" ref-type="bibr">107</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">AndroZoo, VirusShare, and clean Ubuntu libraries</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Static </td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Assembly instructions (control-flow graphs)</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">MLP</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">96.82%</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B115-sensors-25-01153" ref-type="bibr">115</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">VirusShare</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Static</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Strings from binary data</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">DNN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">94% </td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B74-sensors-25-01153" ref-type="bibr">74</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">VX heavens</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Dynamic</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">System calls</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">J48, random forest, AdaBoostM1 (J48), and IBk</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">98%</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B86-sensors-25-01153" ref-type="bibr">86</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">VirusShare</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Memory</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Memory dumps</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">CNN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">99.9%</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B46-sensors-25-01153" ref-type="bibr">46</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">VirusTotal<break/>and ViruShare</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Memory</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Multi-memory features</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">DNNs</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">98.8%</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-01153-t006"><object-id pub-id-type="pii">sensors-25-01153-t006_Table 6</object-id><label>Table 6</label><caption><p>Summary of reviewed ML models for Android-based malware detection: dataset sources, feature details, experimental results, and limitations.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Reference</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Data Source</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Feature Category</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Feature Name</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">ML Algorithms</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Accuracy</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Limitations</th></tr></thead><tbody><tr><td colspan="7" align="center" valign="middle" style="border-bottom:solid thin" rowspan="1">
<bold>Static feature-based Android malware detection techniques</bold>
</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B118-sensors-25-01153" ref-type="bibr">118</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">MalGenome</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Static</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Call graphs</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">GCN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">98.99%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Lack of representative of real-world scenarios.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B87-sensors-25-01153" ref-type="bibr">87</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Contagio Mobile</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Static</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Opcode sequences</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">CNN-LSTM</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">91.42%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Unable to manage obfuscated malware.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B71-sensors-25-01153" ref-type="bibr">71</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">MalDroid-2020 dataset</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Static</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Opcode sequences (histograms of n-grams)</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">LR</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">93.56%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Adversarial attack resistance and handling evolving malware are not addressed.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B97-sensors-25-01153" ref-type="bibr">97</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">CIC-Inves2017</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Static</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Opcode sequences</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">LSTM</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">96%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Small dataset (1500 apps).</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B72-sensors-25-01153" ref-type="bibr">72</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Drebin, VirusShare, AndroZoo</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Static</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Permissions, intents</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Base models (LR, MLP, and SGD), ensemble learning</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">99.1%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">-</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B88-sensors-25-01153" ref-type="bibr">88</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Drebin dataset</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Static</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Opcode sequences, permissions, API calls </td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">CNN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">99.92%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Lack of malware diversity and scalability.</td></tr><tr><td colspan="7" align="center" valign="middle" style="border-bottom:solid thin" rowspan="1">
<bold>Dynamic feature-based Android malware detection techniques</bold>
</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B67-sensors-25-01153" ref-type="bibr">67</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">McAfee</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Dynamic</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Actions/events</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Base models<break/>(NB, SL, SVM RBF, J48, PART, RF), deep learning</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">97.8%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">-</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B98-sensors-25-01153" ref-type="bibr">98</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Google Play Store</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Dynamic</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">API calls</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Bi-LSTM</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">97.22%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">High detection time.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B119-sensors-25-01153" ref-type="bibr">119</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Drebin dataset</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Dynamic</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Network traffic<break/>Permissions, intents, API calls</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">C4.5</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">97.89%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Small dataset.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B99-sensors-25-01153" ref-type="bibr">99</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">MalGenome</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Dynamic</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">System call sequences</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">LSTM</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">99.23%.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">-</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B100-sensors-25-01153" ref-type="bibr">100</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Custom dataset</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Dynamic</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">API and system call sequences</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">LSTM</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">96.8%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
</td></tr><tr><td colspan="7" align="center" valign="middle" style="border-bottom:solid thin" rowspan="1">
<bold>Hybrid feature-based Android malware detection techniques</bold>
</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B67-sensors-25-01153" ref-type="bibr">67</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">McAfee</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Hybrid</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Permissions, intents, API calls, actions/events</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Base models<break/>(NB, SL, SVM RBF, J48, PART, RF), deep learning </td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">99.6% detection</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">-</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B55-sensors-25-01153" ref-type="bibr">55</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Contagio Mobile,<break/><uri xlink:href="https://contagiominidump.blogspot.com/">https://contagiominidump.blogspot.com/</uri> (accessed on 3 February 2025)<break/>VirusShare and Genome</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Hybrid</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Runtime behaviors across various levels&#x02014;kernel, application, user, and package</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">K-NN, LDC, QDC, MLP, Parzen Classifier (PARZC) and RBF</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">96%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">This method is susceptible to mimicry attacks and ineffective against unknown malware.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B101-sensors-25-01153" ref-type="bibr">101</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">VirusShare, Drebin, DroidAnalytics and CICInvesAndMal2019/2000<break/><uri xlink:href="https://www.unb.ca/cic/">https://www.unb.ca/cic/</uri> (accessed on 3 February 2025)</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Hybrid</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Permission requests, API and system call sequences, opcode sequences, and graph structures, including abstract syntax trees, control-flow, and data-flow graphs</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Bi-LSTM and GNN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">95.94%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Need more scalable static analyses.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B103-sensors-25-01153" ref-type="bibr">103</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">CICMal-Droid2020</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Hybrid</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Permissions, intents, system calls, composite behaviors, and network traffic packets</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Pseudo-label stacked autoencoder (PLSAE)</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">98.28%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">-</td></tr><tr><td colspan="7" align="center" valign="middle" style="border-bottom:solid thin" rowspan="1">
<bold>Memory feature-based Android malware detection techniques.</bold>
</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B85-sensors-25-01153" ref-type="bibr">85</xref>]</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">AndroZoo project<break/><uri xlink:href="https://androzoo.uni.lu/">https://androzoo.uni.lu/</uri> (accessed on 3 February 2025)</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Memory</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Process memory dumps</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Ensemble of MLP and CNN</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">94.3%</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Vulnerable to adversarial attacks.</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-01153-t008"><object-id pub-id-type="pii">sensors-25-01153-t008_Table 8</object-id><label>Table 8</label><caption><p>Comparison of commonalities and differences in malware detection challenges across Windows, Linux, and macOS.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Aspect</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Windows</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Linux</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">macOS</th></tr></thead><tbody><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>Runtime issues</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">DLL dependencies</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">ELF loader challenges</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Sandboxing restricts runtime access</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>Cross-platform threats</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Vulnerable to malware like Mirai</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Targeted by cross-platform threats</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Exploits shared vulnerabilities</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>Unique vulnerabilities</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">EternalBlue (WannaCry) exploits SMB protocol</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Dirty COW (CVE-2016-5195) targets kernel</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Gatekeeper bypass allows malicious execution</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>Perception of security</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">High attack surface due to widespread usage</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Perceived as secure but targeted for IoT/cloud</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Perceived as secure, leading to lax practices</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>Protocols and frameworks</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">NTLM and NetBIOS exploited</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Kernel vulnerabilities targeted</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">AppleScript and iCloud exploited</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-01153-t009"><object-id pub-id-type="pii">sensors-25-01153-t009_Table 9</object-id><label>Table 9</label><caption><p>Comparison of malware detection challenges and security features between Android and iOS.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Aspect</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Android</th><th align="left" valign="top" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">iOS</th></tr></thead><tbody><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>OS update delays</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Delays due to dependency on manufacturers and carriers, leaving devices vulnerable.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Timely updates controlled by Apple, ensuring uniform distribution.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>Third-party apps</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Third-party app stores and sideloading increase security risks.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Apps restricted to App Store with strict review guidelines, reducing risks.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>Device diversity</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Wide range of devices and custom OS versions complicate uniform patching.</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Limited device variants and centralized control ensure consistent security.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>Jailbreaking risks</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Not applicable (rooting exists but is less common).</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Jailbreaking removes iOS restrictions, exposing devices to malware.</td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>iCloud phishing</bold>
</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">Not applicable (Google account phishing exists but is less targeted).</td><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">iCloud phishing leads to account takeovers and data theft.</td></tr></tbody></table></table-wrap></floats-group></article>