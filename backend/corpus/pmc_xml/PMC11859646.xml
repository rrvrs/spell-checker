<!DOCTYPE article
PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with MathML3 v1.3 20210610//EN" "JATS-archivearticle1-3-mathml3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.3" xml:lang="en" article-type="research-article"><?properties open_access?><processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats"><restricted-by>pmc</restricted-by></processing-meta><front><journal-meta><journal-id journal-id-type="nlm-ta">Sensors (Basel)</journal-id><journal-id journal-id-type="iso-abbrev">Sensors (Basel)</journal-id><journal-id journal-id-type="publisher-id">sensors</journal-id><journal-title-group><journal-title>Sensors (Basel, Switzerland)</journal-title></journal-title-group><issn pub-type="epub">1424-8220</issn><publisher><publisher-name>MDPI</publisher-name></publisher></journal-meta>
<article-meta><article-id pub-id-type="pmid">40006321</article-id><article-id pub-id-type="pmc">PMC11859646</article-id><article-id pub-id-type="doi">10.3390/s25041092</article-id><article-id pub-id-type="publisher-id">sensors-25-01092</article-id><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title>Hardware Acceleration of Division-Free Quadrature-Based Square Rooting Approach for Near-Lossless Compression of Hyperspectral Images</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Altamimi</surname><given-names>Amal</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Conceptualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/conceptualization/">Conceptualization</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Methodology" vocab-term-identifier="https://credit.niso.org/contributor-roles/methodology/">Methodology</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Software" vocab-term-identifier="https://credit.niso.org/contributor-roles/software/">Software</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Investigation" vocab-term-identifier="https://credit.niso.org/contributor-roles/investigation/">Investigation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x02013; original draft" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-original-draft/">Writing &#x02013; original draft</role><xref rid="af1-sensors-25-01092" ref-type="aff">1</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-6618-3845</contrib-id><name><surname>Youssef</surname><given-names>Belgacem Ben</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Conceptualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/conceptualization/">Conceptualization</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Methodology" vocab-term-identifier="https://credit.niso.org/contributor-roles/methodology/">Methodology</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Validation" vocab-term-identifier="https://credit.niso.org/contributor-roles/validation/">Validation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Investigation" vocab-term-identifier="https://credit.niso.org/contributor-roles/investigation/">Investigation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x02013; review &#x00026; editing" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-review-editing/">Writing &#x02013; review &#x00026; editing</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Supervision" vocab-term-identifier="https://credit.niso.org/contributor-roles/supervision/">Supervision</role><xref rid="af2-sensors-25-01092" ref-type="aff">2</xref><xref rid="c1-sensors-25-01092" ref-type="corresp">*</xref></contrib></contrib-group><contrib-group><contrib contrib-type="editor"><name><surname>Di Nunzio</surname><given-names>Luca</given-names></name><role>Academic Editor</role></contrib><contrib contrib-type="editor"><name><surname>Span&#x000f2;</surname><given-names>Sergio</given-names></name><role>Academic Editor</role></contrib></contrib-group><aff id="af1-sensors-25-01092"><label>1</label>Space Technologies Institute, King Abdulaziz City for Science and Technology, P.O. Box 8612, Riyadh 12354, Saudi Arabia; <email>aaltamimi@kacst.gov.sa</email></aff><aff id="af2-sensors-25-01092"><label>2</label>Department of Computer Engineering, College of Computer and Information Sciences, King Saud University, P.O. Box 51178, Riyadh 11543, Saudi Arabia</aff><author-notes><corresp id="c1-sensors-25-01092"><label>*</label>Correspondence: <email>bbenyoussef@ksu.edu.sa</email></corresp></author-notes><pub-date pub-type="epub"><day>12</day><month>2</month><year>2025</year></pub-date><pub-date pub-type="collection"><month>2</month><year>2025</year></pub-date><volume>25</volume><issue>4</issue><elocation-id>1092</elocation-id><history><date date-type="received"><day>11</day><month>12</month><year>2024</year></date><date date-type="rev-recd"><day>06</day><month>2</month><year>2025</year></date><date date-type="accepted"><day>10</day><month>2</month><year>2025</year></date></history><permissions><copyright-statement>&#x000a9; 2025 by the authors.</copyright-statement><copyright-year>2025</copyright-year><license><ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>).</license-p></license></permissions><abstract><p>Recent advancements in hyperspectral imaging have significantly increased the acquired data volume, creating a need for more efficient compression methods for handling the growing storage and transmission demands. These challenges are particularly critical for onboard satellite systems, where power and computational resources are limited, and real-time processing is essential. In this article, we present a novel FPGA-based hardware acceleration of a near-lossless compression technique for hyperspectral images by leveraging a division-free quadrature-based square rooting method. In this regard, the two division operations inherent in the original approach were replaced with pre-computed reciprocals, multiplications, and a geometric series expansion. Optimized for real-time applications, the synthesis results show that our approach achieves a high throughput of 1611.77 Mega Samples per second (MSps) and a low power requirement of 0.886 Watts on the economical Cyclone V FPGA. This results in an efficiency of 1819.15 MSps/Watt, which, to the best of our knowledge, surpasses recent state-of-the-art hardware implementations in the context of near-lossless compression of hyperspectral images.</p></abstract><kwd-group><kwd>hyperspectral imaging</kwd><kwd>data compression</kwd><kwd>hardware acceleration</kwd><kwd>FPGA</kwd><kwd>near-lossless compression</kwd><kwd>real-time processing</kwd><kwd>quadrature-based square rooting</kwd><kwd>power</kwd><kwd>efficiency</kwd><kwd>throughput</kwd></kwd-group><funding-group><funding-statement>This research received no external funding.</funding-statement></funding-group></article-meta></front><body><sec sec-type="intro" id="sec1-sensors-25-01092"><title>1. Introduction</title><p>Notable developments in digital imaging technologies have significantly improved the capabilities of hyperspectral imaging (HSI). These systems are capable of capturing images across an extensive range of wavelengths and producing substantial datasets that are enriched with high-resolution spectral information for each pixel. The&#x000a0;depth and precision of these data prove essential in diverse fields, such as remote sensing&#x000a0;[<xref rid="B1-sensors-25-01092" ref-type="bibr">1</xref>,<xref rid="B2-sensors-25-01092" ref-type="bibr">2</xref>], medical diagnostics&#x000a0;[<xref rid="B3-sensors-25-01092" ref-type="bibr">3</xref>,<xref rid="B4-sensors-25-01092" ref-type="bibr">4</xref>,<xref rid="B5-sensors-25-01092" ref-type="bibr">5</xref>], agricultural monitoring&#x000a0;[<xref rid="B6-sensors-25-01092" ref-type="bibr">6</xref>,<xref rid="B7-sensors-25-01092" ref-type="bibr">7</xref>], geological exploration&#x000a0;[<xref rid="B8-sensors-25-01092" ref-type="bibr">8</xref>,<xref rid="B9-sensors-25-01092" ref-type="bibr">9</xref>], water resource management&#x000a0;[<xref rid="B10-sensors-25-01092" ref-type="bibr">10</xref>,<xref rid="B11-sensors-25-01092" ref-type="bibr">11</xref>], and&#x000a0;urban planning&#x000a0;[<xref rid="B12-sensors-25-01092" ref-type="bibr">12</xref>], thus providing critical insights that are unattainable with conventional imaging techniques. With&#x000a0;the massive data produced by hyperspectral imaging systems, efficient data compression becomes critical. The&#x000a0;challenge lies in compressing these data effectively to reduce storage demands and facilitate faster data transmission without losing the integrity and quality of the spectral information. This necessity drives the development of innovative compression methods that can handle the complexity and size of hyperspectral&#x000a0;data.</p><p>Traditional compression algorithms have primarily been software-based and utilize standard techniques that often struggle with the high data rates and volume generated by modern hyperspectral sensors&#x000a0;[<xref rid="B13-sensors-25-01092" ref-type="bibr">13</xref>,<xref rid="B14-sensors-25-01092" ref-type="bibr">14</xref>,<xref rid="B15-sensors-25-01092" ref-type="bibr">15</xref>]. These software solutions typically operate on general-purpose processors, which can limit their efficiency and speed due to the computational overheads and the need for multiple processing cycles&#x000a0;[<xref rid="B16-sensors-25-01092" ref-type="bibr">16</xref>]. As&#x000a0;software-based compression techniques often fall short in meeting the real-time processing requirements of hyperspectral imaging, there is a growing interest in hardware-accelerated solutions&#x000a0;[<xref rid="B17-sensors-25-01092" ref-type="bibr">17</xref>]. Field-Programmable Gate Arrays (FPGAs) and other dedicated hardware platforms offer the potential to accelerate compression tasks, providing the necessary speed and flexibility. Hardware acceleration can significantly enhance processing capabilities, enabling real-time data compression and analysis&#x000a0;[<xref rid="B18-sensors-25-01092" ref-type="bibr">18</xref>,<xref rid="B19-sensors-25-01092" ref-type="bibr">19</xref>,<xref rid="B20-sensors-25-01092" ref-type="bibr">20</xref>,<xref rid="B21-sensors-25-01092" ref-type="bibr">21</xref>].</p><p>In satellite applications, the&#x000a0;efficiency of data compression is particularly crucial. These platforms face unique challenges such as the limited availability of power and the need to manage vast amounts of data efficiently within constrained onboard processing capabilities. Effective compression algorithms must, therefore, minimize power requirement and maximize throughput to ensure timely and efficient data handling and transmission from orbit&#x000a0;[<xref rid="B22-sensors-25-01092" ref-type="bibr">22</xref>].</p><p>High throughput and compression ratios are often achieved using lossy compression techniques, which reduce data size significantly but at the cost of introducing artifacts and potentially losing important details. On&#x000a0;the other hand, lossless compression methods preserve data integrity, ensuring no loss of information despite suffering from low throughput and less efficient compression ratios. Near-lossless compression offers a balanced trade-off by striving to achieve reasonable performance across all these metrics. It significantly reduces data size while maintaining high fidelity and minimal loss of critical information, thus limiting the pixel distortion to a pre-defined absolute or relative error&#x000a0;[<xref rid="B23-sensors-25-01092" ref-type="bibr">23</xref>,<xref rid="B24-sensors-25-01092" ref-type="bibr">24</xref>,<xref rid="B25-sensors-25-01092" ref-type="bibr">25</xref>,<xref rid="B26-sensors-25-01092" ref-type="bibr">26</xref>,<xref rid="B27-sensors-25-01092" ref-type="bibr">27</xref>]. A&#x000a0;stricter definition limits the maximum error to the intrinsic noise of the original data produced by the instrument or other sources, which is similar to atmospheric correction&#x000a0;[<xref rid="B28-sensors-25-01092" ref-type="bibr">28</xref>]. Near-lossless compression is generally achieved by employing one of the following three approaches: lossless encoding of the prediction error after quantization; quantizing the original image first and then performing lossless encoding; or implementing a two-stage near-lossless encoding. The&#x000a0;first approach is the most widely used technique due to its low complexity. Methods under this category include variations of the Context-Based, Adaptive, Lossless Image Coder (CALIC)&#x000a0;[<xref rid="B29-sensors-25-01092" ref-type="bibr">29</xref>,<xref rid="B30-sensors-25-01092" ref-type="bibr">30</xref>,<xref rid="B31-sensors-25-01092" ref-type="bibr">31</xref>] and others, which are based on the Consultative Committee for Space Data Systems (CCSDS) standards&#x000a0;[<xref rid="B32-sensors-25-01092" ref-type="bibr">32</xref>,<xref rid="B33-sensors-25-01092" ref-type="bibr">33</xref>]. The&#x000a0;second approach typically yields poor compression performance with increasing tolerance values&#x000a0;[<xref rid="B25-sensors-25-01092" ref-type="bibr">25</xref>]. The&#x000a0;third approach employs both lossy and lossless compression techniques such as those proposed in&#x000a0;[<xref rid="B25-sensors-25-01092" ref-type="bibr">25</xref>,<xref rid="B34-sensors-25-01092" ref-type="bibr">34</xref>]. Building on these advancements, this article makes the following key&#x000a0;contributions:<list list-type="bullet"><list-item><p>Introducing a division-free quadrature-based method that aims to achieve near-lossless HSI compression by reformulating the original algorithm to avoid two division operations. This method is optimized for speed and efficiency while ensuring high accuracy.</p></list-item><list-item><p>Describing the hardware acceleration of HSI near-lossless compression while utilizing innovative seed generation and quadrature-based square rooting techniques.</p></list-item><list-item><p>Achieving high-performance metrics targeting the Cyclone V FPGA. Synthesis results achieve a high throughput of 1611.77 Mega Samples per second (MSps) with a low power requirement of 0.886 Watts, yielding a notable efficiency value compared to existing state-of-the-art techniques.</p></list-item></list></p><p>The remainder of this paper is structured as follows: <xref rid="sec2-sensors-25-01092" ref-type="sec">Section 2</xref> reviews the existing literature on near-lossless hyperspectral image compression. <xref rid="sec3-sensors-25-01092" ref-type="sec">Section 3</xref> presents our near-lossless compression approach, including specifics about the seed generation technique and the quadrature-based square rooting method. <xref rid="sec4-sensors-25-01092" ref-type="sec">Section 4</xref> extends this approach by introducing a division-free approach detailing the elimination of two division operations from the original method. <xref rid="sec5-sensors-25-01092" ref-type="sec">Section 5</xref> focuses on the hardware implementation details of the proposed algorithm. <xref rid="sec6-sensors-25-01092" ref-type="sec">Section 6</xref> describes the performance evaluation of the division-free algorithm for near-lossless HSI compression by providing a detailed analysis of resource utilization, clock frequency, throughput, power requirement, and&#x000a0;comparisons with state-of-the-art implementations. Finally, <xref rid="sec7-sensors-25-01092" ref-type="sec">Section 7</xref> concludes the paper with a summary of our key findings while suggesting directions for future&#x000a0;research.</p></sec><sec id="sec2-sensors-25-01092"><title>2. Related&#x000a0;Work</title><p>Since our last systematic review&#x000a0;[<xref rid="B17-sensors-25-01092" ref-type="bibr">17</xref>], recent studies on hardware-accelerated near-lossless compression of hyperspectral images have demonstrated a focused interest in the Consultative Committee for Space Data Systems (CCSDS) standard, known as the CCSDS 123, particularly when employing FPGA technology. This alignment of studies demonstrates a collective endeavor to refine and enhance proven technologies to meet the stringent requirements of space-based imaging. The&#x000a0;following summaries illustrate the contributions of these recent works in enhancing both the efficiency and performance of near-lossless&#x000a0;compression.</p><p>In their 2021 study, Barrios&#x000a0;et&#x000a0;al. describe a hardware implementation of the CCSDS 123.0-B-2 near-lossless compression standard using a Xilinx Kintex UltraScale FPGA and a High-Level Synthesis (HLS) design approach&#x000a0;[<xref rid="B35-sensors-25-01092" ref-type="bibr">35</xref>]. The&#x000a0;implementation is designed to manage the high data volumes from advanced imaging sensors on satellites, which are limited by onboard computational and storage capacities and narrow downlink bandwidths. The&#x000a0;implemented system delivers a throughput of 12.5 MSps, utilizing 7% of the FPGA&#x02019;s Look-Up Tables (LUTs) and approximately 14% of its dedicated memory blocks. The&#x000a0;total power requirement of the system is about 2.48 Watts. Expanding on these findings, a&#x000a0;subsequent study by S&#x000e1;nchez&#x000a0;et&#x000a0;al. explores enhancements to the CCSDS 123.0-B-2 standard by notably increasing throughput to 125 MSps without degrading compression performance&#x000a0;[<xref rid="B36-sensors-25-01092" ref-type="bibr">36</xref>]. The&#x000a0;study addresses the challenge of significant data dependencies introduced by the feedback loop, particularly those due to the quantization stage, which hinders real-time processing. By&#x000a0;analytically removing the quantization from the feedback loop, the&#x000a0;authors effectively reduce the critical path, thus enhancing the overall operational&#x000a0;throughput.</p><p>A recent study introduces an advanced design and implementation of near-lossless hyperspectral image compression tailored for high-throughput space missions&#x000a0;[<xref rid="B37-sensors-25-01092" ref-type="bibr">37</xref>]. Utilizing the CCSDS-123.0-B-2 standard, the&#x000a0;described architecture addresses a performance bottleneck associated with internal closed-loop quantizers by adopting an external quantization method while maintaining near-lossless compression quality. Achieving a significant throughput of up to 1375 MSps through the utilization of a parallel processing approach, the&#x000a0;system is implemented on a Xilinx Kintex Ultrascale XCKU040 FPGA. The&#x000a0;power requirement for the entire compression engine is approximately 4.221&#x000a0;Watts.</p><p>In their work, Chatziantoniou&#x000a0;et&#x000a0;al. present an architecture that effectively implements the CCSDS-123.0-B-2 standard on a Xilinx Kintex Ultrascale XCKU040 SRAM FPGA&#x000a0;[<xref rid="B38-sensors-25-01092" ref-type="bibr">38</xref>]. The&#x000a0;architecture utilizes a hybrid entropy coder, which significantly enhances compression performance at low bit rates compared to earlier entropy coders. Operating at one sample per cycle and achieving a constant throughput of 305 MSps, the&#x000a0;system is designed to switch seamlessly between lossless and near-lossless modes. This implementation also maintains a low power requirement of 1.525&#x000a0;Watts.</p><p>A real-time FPGA implementation of the CCSDS 123.0-B-2 standard for hyperspectral image compression, using a Virtex-7 VC709 board with an XCKU040 FPGA, is detailed in&#x000a0;[<xref rid="B39-sensors-25-01092" ref-type="bibr">39</xref>]. This implementation features a deeply pipelined architecture with a frame interleaved by a diagonal (FID) traversal method that effectively manages data dependencies, achieving a processing efficiency of 0.9984 samples per cycle at a clock rate of 250 MHz. This translates to a processing throughput of approximately 249.6 MSps, where a low power requirement of 1.2 Watts is maintained. These studies collectively advance the state-of-the-art of FPGA-based hyperspectral image compression by demonstrating practical implementations of the CCSDS 123.0-B-2 standard on various FPGA&#x000a0;platforms.</p></sec><sec id="sec3-sensors-25-01092"><title>3. Near-Lossless Compression of&#x000a0;HSI</title><p>In our previous work&#x000a0;[<xref rid="B40-sensors-25-01092" ref-type="bibr">40</xref>], we introduced lossless and near-lossless compression algorithms for remotely sensed hyperspectral images. In&#x000a0;these algorithms, compression is realized by utilizing a mathematical property that the integer part of the square root of a number <italic toggle="yes">x</italic> typically requires about half as many bits as <italic toggle="yes">x</italic> itself&#x000a0;[<xref rid="B41-sensors-25-01092" ref-type="bibr">41</xref>]. In&#x000a0;addition, this reduction in bit requirements results in lower entropy, leading to decreased randomness and increased predictability within the dataset. The lossless compression employs seed generation coupled with entropy encoding, achieving a significant reduction of up to 62% while maintaining low computational complexity when benchmarked against the Corpus dataset [<xref rid="B42-sensors-25-01092" ref-type="bibr">42</xref>]. However, the&#x000a0;inherent complexity of some hyperspectral images posed significant challenges to lossless compression. These particularly complex images exhibit a collective reduction percentage of 25.36%, as&#x000a0;represented by their geometric mean. In&#x000a0;response, our near-lossless method was primarily designed to augment the lossless compressor, improving the reduction percentage to approximately 39% for those challenging hyperspectral images.</p><p>In terms of computational efficiency, the&#x000a0;lossless compressor demonstrates high performance in the hardware-accelerated lossless compression of hyperspectral images. It achieves significant gains in throughput and power efficiency due to its reduced computational demands&#x000a0;[<xref rid="B43-sensors-25-01092" ref-type="bibr">43</xref>]. On the other hand, the&#x000a0;near-lossless compression method contains two division operations that introduce additional computational complexity, potentially slowing down the pipeline compared to the fully lossless approach. Building on that foundation, this article extends the previous work by presenting a division-free version of the algorithm optimized for hardware implementation. This modification aims to improve computational efficiency by avoiding costly division operations, simplifying hardware complexity, and reducing power requirement.</p><sec><title>Quadrature-Based&#x000a0;Method</title><p>The quadrature-based encoder used to achieve near-lossless compression is exhibited in <xref rid="sensors-25-01092-f001" ref-type="fig">Figure 1</xref>. Starting with hyperspectral data as input, the&#x000a0;preprocessing step involves generating an initial estimate, <inline-formula><mml:math id="mm1" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, of&#x000a0;the square root for each 16-bit pixel value <italic toggle="yes">x</italic>. This estimate is obtained by averaging the leftmost <inline-formula><mml:math id="mm2" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>&#x02308;</mml:mo><mml:mi>n</mml:mi><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo>&#x02309;</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> bits of <italic toggle="yes">x</italic>, i.e.,&#x000a0;the most significant half (MSH), with&#x000a0;the scaled base <inline-formula><mml:math id="mm3" overflow="scroll"><mml:mrow><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:mo>&#x0230a;</mml:mo><mml:mi>n</mml:mi><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo>&#x0230b;</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>, where <italic toggle="yes">n</italic> is equal to the number of bits in <italic toggle="yes">x</italic>. That is, the&#x000a0;seed <inline-formula><mml:math id="mm4" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> can be computed by using the following formula:<disp-formula id="FD1-sensors-25-01092"><label>(1)</label><mml:math id="mm5" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn><mml:mo>&#x000d7;</mml:mo><mml:mfenced separators="" open="(" close=")"><mml:mi>MSH</mml:mi><mml:mo>+</mml:mo><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:mo>&#x0230a;</mml:mo><mml:mi>n</mml:mi><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo>&#x0230b;</mml:mo></mml:mrow></mml:msup></mml:mfenced><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>Unlike lossless compression, which employs bitwise XORing for decorrelation, this work on near-lossless compression does not employ spatial or spectral decorrelation as a preprocessing step. The&#x000a0;quadrature-based square rooting method used here inherently produces some errors, which would lead to an error propagation that affects the quality of reconstructed data across those bands, when coupled with bitwise XORing for decorrelation. The&#x000a0;potential for error amplification necessitates omitting bitwise XORing in the near-lossless approach, thereby making the method more universally applicable without relying on specific decorrelation strategies tailored to hyperspectral data. This is in contrast to the lossless compressor, where XORing between adjacent bands is completely reversible, allowing for exact data reconstruction.</p><p>For the main process, the&#x000a0;quadrature-based square rooting method is employed to enhance the accuracy of the initial estimate of the square root value. <xref rid="sensors-25-01092-f002" ref-type="fig">Figure 2</xref> illustrates the quadrature method by geometrically constructing a square of the same area <italic toggle="yes">x</italic> as the given rectangle ABCD, where <inline-formula><mml:math id="mm6" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> represents one side of the rectangle.</p><p>The circle in the figure helps establish trigonometric relationships between the sides of the right triangle MCF, aiding in the computation of the square root. The&#x000a0;adjacent side, shown in the figure and given by segment CF, corresponds to the desired square root value of <italic toggle="yes">x</italic>. The&#x000a0;steps involved in the quadrature-based method for calculating the square root value are provided in Algorithm&#x000a0;1.
<array><tbody><tr><td align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1"><bold>Algorithm 1:</bold>&#x000a0;The quadrature-based square rooting&#x000a0;method.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x02003;<inline-graphic xlink:href="sensors-25-01092-i001.jpg"/></td></tr></tbody></array></p><p>The accuracy of the initial estimate <inline-formula><mml:math id="mm16" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> directly influences the angle <inline-formula><mml:math id="mm17" overflow="scroll"><mml:mrow><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:math></inline-formula> between the hypotenuse and the adjacent side of the right triangle. When <inline-formula><mml:math id="mm18" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>&#x003b8;</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mn>0</mml:mn><mml:mo>&#x02218;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, this translates to <inline-formula><mml:math id="mm19" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> being an accurate estimate, and&#x000a0;the quadrilateral we started with is effectively a perfect square. As&#x000a0;the accuracy decreases, <inline-formula><mml:math id="mm20" overflow="scroll"><mml:mrow><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:math></inline-formula> deviates from <inline-formula><mml:math id="mm21" overflow="scroll"><mml:mrow><mml:msup><mml:mn>0</mml:mn><mml:mo>&#x02218;</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>, with&#x000a0;the worst-case scenario occurring when <inline-formula><mml:math id="mm22" overflow="scroll"><mml:mrow><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:math></inline-formula> approaches <inline-formula><mml:math id="mm23" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>&#x000b1;</mml:mo><mml:msup><mml:mn>90</mml:mn><mml:mo>&#x02218;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>. In&#x000a0;these regards, simulation results in&#x000a0;[<xref rid="B44-sensors-25-01092" ref-type="bibr">44</xref>] demonstrate that <inline-formula><mml:math id="mm24" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> constrains this deviation of <inline-formula><mml:math id="mm25" overflow="scroll"><mml:mrow><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:math></inline-formula> to the range <inline-formula><mml:math id="mm26" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>[</mml:mo><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mn>30</mml:mn><mml:mo>&#x02218;</mml:mo></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mn>4</mml:mn><mml:mo>&#x02218;</mml:mo></mml:msup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. With&#x000a0;a step size of 0.01, this corresponds to 57&#x000a0;possible values of <inline-formula><mml:math id="mm27" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> within the closed interval <inline-formula><mml:math id="mm28" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>[</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mn>0.5</mml:mn><mml:mo>,</mml:mo><mml:mn>0.06</mml:mn><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. However, for&#x000a0;pixel values of <italic toggle="yes">x</italic> up to <inline-formula><mml:math id="mm29" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mn>2</mml:mn><mml:mn>16</mml:mn></mml:msup><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, only 29 of these values are actually accessed when <inline-formula><mml:math id="mm30" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> is used&#x000a0;[<xref rid="B44-sensors-25-01092" ref-type="bibr">44</xref>].</p><p>The lengths of the hypotenuse and the adjacent segment are often represented with decimal precision, whereas <inline-formula><mml:math id="mm31" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> is restricted to an integer value. To&#x000a0;maintain an efficient compression system, we use <inline-formula><mml:math id="mm32" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> alongside the quantized value of <inline-formula><mml:math id="mm33" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> for encoding. Together, these two values provide sufficient information for the decoder to approximate <italic toggle="yes">x</italic>. This is achieved by squaring the product of the corresponding <inline-formula><mml:math id="mm34" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">cos</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and the hypotenuse, where the latter is generated at the decoder by dividing <inline-formula><mml:math id="mm35" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> by <inline-formula><mml:math id="mm36" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. This equivalent value of the hypotenuse is derived next, using the notations presented in <xref rid="sensors-25-01092-f002" ref-type="fig">Figure 2</xref>:<disp-formula><mml:math id="mm37" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mi>Opposite</mml:mi><mml:mi>Hypotenuse</mml:mi></mml:mfrac></mml:mstyle><mml:mspace width="1.em"/><mml:mi>and</mml:mi><mml:mspace width="1.em"/><mml:mi>Opposite</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mi>Hypotenuse</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:mo>&#x021d2;</mml:mo><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mi>Hypotenuse</mml:mi></mml:mrow><mml:mi>Hypotenuse</mml:mi></mml:mfrac></mml:mstyle><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mi>Hypotenuse</mml:mi></mml:mfrac></mml:mstyle><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:mo>&#x021d2;</mml:mo><mml:mi>Hypotenuse</mml:mi><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p><p>The postprocessing step aims to achieve a more compact representation by directly mapping shorter Golomb&#x02013;Rice codes to <inline-formula><mml:math id="mm38" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> values that correspond to larger sets of <inline-formula><mml:math id="mm39" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> values&#x000a0;[<xref rid="B45-sensors-25-01092" ref-type="bibr">45</xref>]. This approach leverages the uneven distribution of <inline-formula><mml:math id="mm40" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> across the range of <inline-formula><mml:math id="mm41" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> values, as&#x000a0;shown in <xref rid="sensors-25-01092-f003" ref-type="fig">Figure 3</xref>. Instead of storing the full representation of <inline-formula><mml:math id="mm42" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, indexing is used to minimize storage requirements, ensuring that the number of bits does not exceed <inline-formula><mml:math id="mm43" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mo>&#x0230a;</mml:mo><mml:msub><mml:mo form="prefix">log</mml:mo><mml:mn>2</mml:mn></mml:msub><mml:mi>k</mml:mi><mml:mo>&#x0230b;</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, where <italic toggle="yes">k</italic> is the count of <inline-formula><mml:math id="mm44" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> values for each <inline-formula><mml:math id="mm45" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. Ultimately, Golomb&#x02013;Rice codes and the obtained indices are concatenated to produce the compressed&#x000a0;stream.</p></sec></sec><sec id="sec4-sensors-25-01092"><title>4. Division-Free&#x000a0;Quadrature</title><p>The steps detailed in Algorithm&#x000a0;1 involve two key division operations. The&#x000a0;first division, given by the first pseudo-instruction, determines the length of the second segment (CD) of the rectangle with area <italic toggle="yes">x</italic>, assuming the length of the first segment (AD) is given by the previously generated seed <inline-formula><mml:math id="mm46" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>. The&#x000a0;second division, included in the fourth pseudo-instruction, calculates the sine value by computing the ratio of the opposite segment to the hypotenuse of the right triangle. The&#x000a0;following subsections describe the techniques used to bypass these two&#x000a0;divisions.</p><sec id="sec4dot1-sensors-25-01092"><title>4.1. Addressing the First&#x000a0;Division</title><p>Given that the 8-bit seed value has a limited range from 0 to 255, we can optimize the quadrature process by precomputing the reciprocal of each seed value. These reciprocals can then be multiplied by the area <italic toggle="yes">x</italic> of the rectangle to efficiently compute the length of the second segment (CD). To&#x000a0;ensure rapid access, these precomputed reciprocals are stored in an LUT that is directly addressed by the generated&#x000a0;seeds.</p></sec><sec id="sec4dot2-sensors-25-01092"><title>4.2. Addressing the Second&#x000a0;Division</title><p>The second division is formulated as <inline-formula><mml:math id="mm47" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>=</mml:mo><mml:mi>Opposite</mml:mi><mml:mo>/</mml:mo><mml:mi>Hypotenuse</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. In&#x000a0;this context, the&#x000a0;hypotenuse is the average of the two sides of the rectangle, while the opposite side represents the difference between this average and the generated seed. To&#x000a0;avoid the division operation when calculating the value of <inline-formula><mml:math id="mm48" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, we use algebraic manipulation based on the following three relations:<disp-formula><mml:math id="mm49" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mi>Hypotenuse</mml:mi></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn><mml:mo>&#x000d7;</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mi>x</mml:mi><mml:mo>/</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mi>Opposite</mml:mi></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mi>Hypotenuse</mml:mi><mml:mo>,</mml:mo><mml:mspace width="4.pt"/><mml:mi>and</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mi>Opposite</mml:mi><mml:mo>/</mml:mo><mml:mi>Hypotenuse</mml:mi><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p><p>Here, <inline-formula><mml:math id="mm50" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> represents the first segment (AD) and <inline-formula><mml:math id="mm51" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>x</mml:mi><mml:mo>/</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> corresponds to the second segment (CD). The&#x000a0;total length of these two segments yields the diameter of the circle centered at point M. Thus, the&#x000a0;Hypotenuse, which is equal to the corresponding radius, is obtained by averaging these two segments. Let <italic toggle="yes">d</italic> be the difference between the stated segments such that<disp-formula><mml:math id="mm52" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>d</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mi>x</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mfrac></mml:mstyle><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
which implies that<disp-formula><mml:math id="mm53" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mi>x</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mfrac></mml:mstyle><mml:mo>=</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mi>d</mml:mi><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>Thus, we can redefine the Hypotenuse as follows:<disp-formula><mml:math id="mm54" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mi>Hypotenuse</mml:mi></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn><mml:mo>&#x000d7;</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mi>d</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn><mml:mo>&#x000d7;</mml:mo><mml:mo>(</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mi>d</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mn>0.5</mml:mn><mml:mi>d</mml:mi><mml:mspace width="4.pt"/><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p><p>The above leads to the following:<disp-formula><mml:math id="mm55" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mi>Hypotenuse</mml:mi><mml:mo>)</mml:mo><mml:mo>/</mml:mo><mml:mi>Hypotenuse</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mn>0.5</mml:mn><mml:mi>d</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>/</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mn>0.5</mml:mn><mml:mi>d</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn><mml:mi>d</mml:mi><mml:mo>/</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mn>0.5</mml:mn><mml:mi>d</mml:mi><mml:mo>)</mml:mo><mml:mspace width="4.pt"/><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p><p>Applying the principle that if two quantities are equal, their reciprocals are also equal, we obtain the following:<disp-formula><mml:math id="mm56" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mn>0.5</mml:mn><mml:mi>d</mml:mi><mml:mo>)</mml:mo><mml:mo>/</mml:mo><mml:mn>0.5</mml:mn><mml:mi>d</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>/</mml:mo><mml:mn>0.5</mml:mn><mml:mi>d</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>/</mml:mo><mml:mi>d</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p><p>By further manipulation of the above equation, we obtain the following:<disp-formula><mml:math id="mm57" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>/</mml:mo><mml:mi>d</mml:mi><mml:mspace width="4.pt"/><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mo>(</mml:mo><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>/</mml:mo><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>/</mml:mo><mml:mi>d</mml:mi><mml:mspace width="4.pt"/><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo><mml:mo>/</mml:mo><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>/</mml:mo><mml:mi>d</mml:mi><mml:mspace width="4.pt"/><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p><p>Since <inline-formula><mml:math id="mm58" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> represents the precomputed reciprocal and is readily available, we can rewrite the above equation in a way that allows us to avoid the second division operation:<disp-formula id="FD2-sensors-25-01092"><label>(2)</label><mml:math id="mm59" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>/</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>&#x000d7;</mml:mo><mml:mi>d</mml:mi><mml:mo>&#x000d7;</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mspace width="4.pt"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>Therefore, the&#x000a0;division operation has been avoided in deriving the expression on the right-hand side of Equation&#x000a0;(<xref rid="FD2-sensors-25-01092" ref-type="disp-formula">2</xref>). To recover the value of <inline-formula><mml:math id="mm60" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, let <italic toggle="yes">Q</italic> represent the right-hand side of the above equation:<disp-formula><mml:math id="mm61" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>/</mml:mo><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mi>Q</mml:mi></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>By inverting both sides, we obtain the following:<disp-formula><mml:math id="mm62" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo><mml:mo>/</mml:mo><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mi>Q</mml:mi></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>We further expand and simplify this expression to obtain the following:<disp-formula><mml:math id="mm63" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mo>(</mml:mo><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>/</mml:mo><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mi>Q</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mi>Q</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mi>Q</mml:mi><mml:mo>)</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>Q</mml:mi><mml:mo>)</mml:mo><mml:mo>/</mml:mo><mml:mi>Q</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mi>Q</mml:mi><mml:mo>/</mml:mo><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>Q</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p><p>The last equality approximates <inline-formula><mml:math id="mm64" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> while maintaining division-free calculations by employing an iterative approach based on a truncated geometric series&#x000a0;[<xref rid="B46-sensors-25-01092" ref-type="bibr">46</xref>]. This method involves successive multiplications and additions to approximate the quantity <inline-formula><mml:math id="mm65" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>/</mml:mo><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>Q</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> by summing a limited number of terms in the series <inline-formula><mml:math id="mm66" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>+</mml:mo><mml:msup><mml:mi>Q</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mi>Q</mml:mi><mml:mn>3</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:mo>&#x022ef;</mml:mo><mml:mo>+</mml:mo><mml:msup><mml:mi>Q</mml:mi><mml:mi>k</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> until the desired precision is achieved. Simulation results using MATLAB demonstrate that <inline-formula><mml:math id="mm67" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> reaches the target accuracy after five terms in this series expansion. By&#x000a0;the term target accuracy, we refer to the precision required to differentiate all 29 distinct values of <inline-formula><mml:math id="mm68" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>At this stage, we have determined the required values of <inline-formula><mml:math id="mm69" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm70" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, which are essential for the decoder to reconstruct the pixel value <italic toggle="yes">x</italic> without using any division&#x000a0;operation.</p></sec><sec id="sec4dot3-sensors-25-01092"><title>4.3. Performance of Quadrature-Based&#x000a0;Method</title><p>Incorporating the quadrature-based square rooting method after seed generation significantly enhances the compression reduction rate in a near-lossless approach while maintaining high fidelity for the decompressed stream. <xref rid="sensors-25-01092-f004" ref-type="fig">Figure 4</xref>, <xref rid="sensors-25-01092-f005" ref-type="fig">Figure 5</xref> and <xref rid="sensors-25-01092-f006" ref-type="fig">Figure 6</xref> present the original and reconstructed images for the CASI uncalibrated image t0477f06 (band 70), the&#x000a0;AIRS uncalibrated granule 16 image (band 208), and&#x000a0;the AVIRIS calibrated Yellowstone image (band 106), respectively, after&#x000a0;applying our near-lossless compressor. Visual assessment of these results indicates that each decompressed image closely resembles its original counterpart, demonstrating the high similarity achieved by the compression algorithm. The&#x000a0;computed peak signal-to-noise ratio (PSNR) values for these three images are 50.2793&#x000a0;decibels (dB), 50.5717 dB, and&#x000a0;52.7601 dB, respectively. The&#x000a0;maximum relative error across all images is 0.01, and&#x000a0;the achieved compression reduction is 39% when rounded to the nearest integer. These hyperspectral images are taken from the publicly available Corpus&#x000a0;dataset.</p><p>The performance of the near-lossless compressor on the aforementioned challenging images from the Corpus dataset is detailed in <xref rid="sensors-25-01092-t001" ref-type="table">Table 1</xref>. The&#x000a0;table highlights the improvement in reduction percentage compared to the results reported in&#x000a0;[<xref rid="B40-sensors-25-01092" ref-type="bibr">40</xref>] of the lossless method, along with the maximum relative error (MRE) and PSNR values achieved by the near-lossless&#x000a0;approach.</p></sec></sec><sec id="sec5-sensors-25-01092"><title>5. Hardware&#x000a0;Implementation</title><p>We describe herein the FPGA-based hardware structure optimized for quadrature-based, near-lossless compression of hyperspectral images. The&#x000a0;design is divided into stages, each focusing on a specific part of the compression algorithm, as&#x000a0;shown in <xref rid="sensors-25-01092-f001" ref-type="fig">Figure 1</xref>.</p><sec id="sec5dot1-sensors-25-01092"><title>5.1. Preprocessing</title><p>The first stage of the compression system prepares the input data for the main process by calculating essential parameters and generating an initial estimate for the square root used as a seed value. This stage comprises two main components: the shift amount calculator, which determines the number of bit-shifts needed for the initial estimation of the square root, and&#x000a0;the seed generation logic, which uses the resulting shift amount to produce this initial&#x000a0;estimate.</p><sec id="sec5dot1dot1-sensors-25-01092"><title>5.1.1. Shift-Amount Calculator</title><p>To apply our seed generation technique for approximating the square root value using Equation (<xref rid="FD1-sensors-25-01092" ref-type="disp-formula">1</xref>), we first need a dedicated logic to calculate the shift amount <inline-formula><mml:math id="mm71" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>&#x0230a;</mml:mo><mml:mi>n</mml:mi><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo>&#x0230b;</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. This can be achieved through bit manipulation techniques such as counting the number of leading zeros in the unsigned binary representation of <italic toggle="yes">x</italic> to initially determine <italic toggle="yes">n</italic>. Many hardware platforms support these operations, facilitating faster computation of the bit length, <italic toggle="yes">n</italic>&#x000a0;[<xref rid="B47-sensors-25-01092" ref-type="bibr">47</xref>]. Typically, these methods have a computational complexity of <inline-formula><mml:math id="mm72" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. Alternatively, employing a binary search to determine the binary logarithm of <italic toggle="yes">x</italic> results in a worst-case complexity of <inline-formula><mml:math id="mm73" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mo form="prefix">log</mml:mo><mml:mn>2</mml:mn></mml:msub><mml:mi>x</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> [<xref rid="B48-sensors-25-01092" ref-type="bibr">48</xref>]. Then, the&#x000a0;count of bits required to represent a positive integer <italic toggle="yes">x</italic> in binary is equal to <inline-formula><mml:math id="mm74" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mo>&#x0230a;</mml:mo><mml:msub><mml:mo form="prefix">log</mml:mo><mml:mn>2</mml:mn></mml:msub><mml:mi>x</mml:mi><mml:mo>&#x0230b;</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> [<xref rid="B49-sensors-25-01092" ref-type="bibr">49</xref>].</p><p>The binary search used to determine the shift amount requires four comparisons, which correspond to <inline-formula><mml:math id="mm75" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mo form="prefix">log</mml:mo><mml:mn>2</mml:mn></mml:msub><mml:mn>16</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, as&#x000a0;the input data are processed in 16-bit chunks. <xref rid="sensors-25-01092-t002" ref-type="table">Table 2</xref> illustrates the pivots chosen for the binary search, which represent the maximum values for each bit length up to 16 bits. These pivots serve as the point of comparison to divide the search into smaller&#x000a0;segments.</p><p>Algorithm&#x000a0;2 illustrates the use of the pivots listed in the table above within a binary search structure. The&#x000a0;nested if&#x02013;else conditions ensure that evaluating any given pixel value <italic toggle="yes">x</italic> requires no more than four&#x000a0;comparisons.
<array><tbody><tr><td align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1"><bold>Algorithm 2:</bold>&#x000a0;Binary search algorithm for determining the shift amount for a 16-bit number <italic toggle="yes">x</italic>.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x02003;<inline-graphic xlink:href="sensors-25-01092-i002.jpg"/></td></tr></tbody></array></p></sec><sec id="sec5dot1dot2-sensors-25-01092"><title>5.1.2. Seed Generation Logic</title><p>Next, the seed generation block processes a 16-bit input <italic toggle="yes">x</italic> to produce the corresponding seed value, as dictated by the precalculated shift amount. On each rising clock edge, the block first performs a right-shift operation on <italic toggle="yes">x</italic>, extracting its most significant half. Concurrently, it generates the scaled base <inline-formula><mml:math id="mm101" overflow="scroll"><mml:mrow><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:mo>&#x0230a;</mml:mo><mml:mi>n</mml:mi><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo>&#x0230b;</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> by left-shifting the constant 1 by the same shift amount. To clarify, raising the constant 2 to a power, say <italic toggle="yes">k</italic>, is equivalent to multiplying 1 by 2, <italic toggle="yes">k</italic> times. In other words, it corresponds to left-shifting the number 1 by <italic toggle="yes">k</italic> positions in binary representation. Once the MSH and the scaled base are computed, their sum is right-shifted to derive the final seed value. Given that the input value is limited to 16 bits, the resulting seed value is constrained to 8 bits. <xref rid="sensors-25-01092-f007" ref-type="fig">Figure 7</xref> illustrates the graphical representation for calculating the estimated square root value for a 16-bit number.</p></sec></sec><sec id="sec5dot2-sensors-25-01092"><title>5.2. Main&#x000a0;Process</title><p>The key functionality of the near-lossless compressor is implemented through the division-free quadrature-based method. This method is modeled as a pipeline with nine distinct stages, as depicted in <xref rid="sensors-25-01092-f008" ref-type="fig">Figure 8</xref>. Each stage of the pipeline performs a specific part of the overall computation. The goal is to increase the throughput of the compression system by allowing multiple operations to overlap in execution.</p><sec id="sec5dot2dot1-sensors-25-01092"><title>5.2.1. First Stage of the Pipeline</title><p>In this stage, a structured array of multiplexers enables rapid access to precomputed reciprocal values, <italic toggle="yes">r</italic>, of <inline-formula><mml:math id="mm102" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, which are stored in a Q0.16 fixed-point format to balance precision and computational efficiency. This configuration captures the smallest reciprocal value of 8-bit integers, approximately <inline-formula><mml:math id="mm103" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>0.00392</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, with a 16-bit fractional precision. This precision corresponds to a minimal increment of about <inline-formula><mml:math id="mm104" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>0.0000152587890625</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, ensuring that small values are accurately represented, thereby minimizing rounding and truncation errors.</p></sec><sec id="sec5dot2dot2-sensors-25-01092"><title>5.2.2. Second Stage of the Pipeline</title><p>The primary function of the second stage is to compute the product of <italic toggle="yes">x</italic>, which is the area of the rectangle, with the reciprocal of <inline-formula><mml:math id="mm105" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> to determine the length of the second segment, denoted as <italic toggle="yes">c</italic> in the pipeline. Since the reciprocal is represented in Q0.16 format, multiplying a Q0.16 number by a Q16.0 number (<italic toggle="yes">x</italic>) results in a product with a combined range and precision that may span up to 32 bits.</p></sec><sec id="sec5dot2dot3-sensors-25-01092"><title>5.2.3. Third Stage of the Pipeline</title><p>The third stage is designed to calculate the difference between the computed segment, <italic toggle="yes">c</italic>, and the seed <inline-formula><mml:math id="mm106" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, the latter being extended to a similar bit width.</p></sec><sec id="sec5dot2dot4-sensors-25-01092"><title>5.2.4. Fourth Stage of the Pipeline</title><p>This stage implements Equation (<xref rid="FD2-sensors-25-01092" ref-type="disp-formula">2</xref>), where <inline-formula><mml:math id="mm107" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>&#x000d7;</mml:mo><mml:mi>d</mml:mi><mml:mo>&#x000d7;</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> is computed by multiplying the 32-bit difference <italic toggle="yes">d</italic> with the 16-bit reciprocal <inline-formula><mml:math id="mm108" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Such an operation typically requires 48 bits in <inline-formula><mml:math id="mm109" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mn>16.32</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> format. However, the 16 integer bits are unnecessary because <inline-formula><mml:math id="mm110" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, which represents one side of a rectangle, is usually very close to <italic toggle="yes">c</italic>, which is given by the other side. This proximity ensures that <italic toggle="yes">d</italic>, their absolute difference, is small enough to keep <italic toggle="yes">Q</italic> within the range <inline-formula><mml:math id="mm111" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> for nearly all values of <italic toggle="yes">x</italic> in the range <inline-formula><mml:math id="mm112" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msup><mml:mn>2</mml:mn><mml:mn>16</mml:mn></mml:msup><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. The exception occurs when <inline-formula><mml:math id="mm113" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>x</mml:mi><mml:mo>=</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm114" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, resulting in <inline-formula><mml:math id="mm115" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>d</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mo>(</mml:mo><mml:mn>3</mml:mn><mml:mo>/</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> and a boundary value of <inline-formula><mml:math id="mm116" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>=</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn><mml:mo>/</mml:mo><mml:mo>(</mml:mo><mml:mn>2</mml:mn><mml:mo>&#x000d7;</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>. Since <inline-formula><mml:math id="mm117" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>=</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> does not lead to the convergence of the geometric series, this specific case is handled separately by mapping the final sum directly to the desired value <inline-formula><mml:math id="mm118" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>=</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mn>0.5</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></sec><sec id="sec5dot2dot5-sensors-25-01092"><title>5.2.5. Fifth to Ninth Stages of the Pipeline</title><p>In the next five consecutive stages (stage 5 to stage 9 of the pipeline), <inline-formula><mml:math id="mm119" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> is computed iteratively by multiplying <italic toggle="yes">Q</italic> by itself and accumulating each successive power of <italic toggle="yes">Q</italic> into a running sum. Once all iterations are complete, the result is truncated to 8 fractional bits, which adequately captures <inline-formula><mml:math id="mm120" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> within its range of <inline-formula><mml:math id="mm121" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>[</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mn>0.5</mml:mn><mml:mo>,</mml:mo><mml:mn>0.06</mml:mn><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. This level of precision exceeds the 7 bits required to resolve the smallest increment of <inline-formula><mml:math id="mm122" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>0.01</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> for <inline-formula><mml:math id="mm123" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. Therefore, retaining 32 fractional bits for all intermediate calculations is sufficient to preserve the desired precision throughout the process.</p></sec></sec><sec id="sec5dot3-sensors-25-01092"><title>5.3. Postprocessing</title><p>Postprocessing aims to produce a more compact representation of <inline-formula><mml:math id="mm124" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and its corresponding <inline-formula><mml:math id="mm125" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> values using hardware-friendly, lookup table-based methods. The collective memory requirements of these methods are approximately 1 KB, balancing minimal resource usage with fast and accurate data retrieval. The following subsections detail two key components of the postprocessing step: Golomb&#x02013;Rice coding and seed indexing logic.</p><sec id="sec5dot3dot1-sensors-25-01092"><title>5.3.1. Golomb&#x02013;Rice Coding</title><p>The encoding step leverages a precomputed table to assign compact codes to <inline-formula><mml:math id="mm126" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> values by utilizing the skewed distribution of seed values across <inline-formula><mml:math id="mm127" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, as illustrated in <xref rid="sensors-25-01092-f003" ref-type="fig">Figure 3</xref>. This distribution guides the code assignment process by first sorting the 29 values of <inline-formula><mml:math id="mm128" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> in descending order of the frequency of their corresponding <inline-formula><mml:math id="mm129" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> values. Each <inline-formula><mml:math id="mm130" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> value is then assigned a unique index based on its position in the sorted list. At runtime, these indices are used to retrieve the precomputed codes stored in a ROM, enabling efficient and compact encoding.</p></sec><sec id="sec5dot3dot2-sensors-25-01092"><title>5.3.2. Seed Indexing Logic</title><p>For the seed values, <inline-formula><mml:math id="mm131" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, a unique identifier (or index) is employed instead of storing the full representation of these values. The index of a value determines its order within the set corresponding to a given <inline-formula><mml:math id="mm132" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. This could be achieved by constructing a <inline-formula><mml:math id="mm133" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>29</mml:mn><mml:mo>&#x000d7;</mml:mo><mml:mn>256</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>-bit matrix, implemented as a ROM, where each row represents a specific <inline-formula><mml:math id="mm134" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> value, and each column corresponds to potential values ranging from 0 to 255, as depicted in <xref rid="sensors-25-01092-f009" ref-type="fig">Figure 9</xref>. For each valid value in a set, a binary one is assigned to its respective position in the corresponding row, while unused positions are marked as zero. During retrieval, the row associated with the input <inline-formula><mml:math id="mm135" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> is fetched from the memory, and a bitwise mask of consecutive ones is applied up to the target position. Next, the masked row is divided into 8-bit blocks, and each block is processed using a precomputed LUT to determine the number of ones within that block. The results from the LUT are then summed using a tree-based summation, which efficiently combines the partial results with a logarithmic complexity relative to the number of blocks, that is <inline-formula><mml:math id="mm136" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mo form="prefix">log</mml:mo><mml:mn>2</mml:mn></mml:msub><mml:mn>32</mml:mn><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, in a 256-bit row. The final sum directly corresponds to the order of the input value within the set. This hybrid approach, combining lookup tables and tree summation, minimizes latency and resource usage by leveraging parallelism and hardware-optimized operations.</p><p>The primary challenge with this approach lies in its scalability, which is constrained by the substantial amount of required memory. This extensive reliance on memory can impede the ability of the design to efficiently scale to more complex applications. To address this issue, the large lookup tables are replaced by seed indexing logic that leverages observed patterns and gaps within each range of seed values. For instance, consider the scenario when <inline-formula><mml:math id="mm137" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>=</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mn>0.06</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>; the corresponding set of seed values is <inline-formula><mml:math id="mm138" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mn>6</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mn>7</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mn>8</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mn>9</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mn>13</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mn>14</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mn>15</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mn>16</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. To map these numbers to their corresponding indices, the logic is structured to subtract 4 if the seed is less than 10; otherwise, 7 is subtracted to compute the index, leading to a new set of successive numbers in the range 0-9. Furthermore, the most complex set encountered required no more than five logic levels involving deeply nested conditional statements. All indexing logic blocks are designed to operate within the clock period of the design.</p></sec></sec></sec><sec sec-type="results" id="sec6-sensors-25-01092"><title>6. Results and&#x000a0;Discussions</title><p>In this section, we present the results obtained using a comprehensive suite of tools and hardware configurations. Programming and simulation tasks were performed with Quartus Prime and ModelSim, respectively, utilizing VHDL as the programming language. Our design targets a Cyclone V FPGA, model 5CGTFD9E5F35C7, chosen for its higher number of I/O pins compared to other models in the Cyclone V series. This feature is crucial as it allows us to replicate the design 19 times, enabling a compression engine with 19 units working in parallel, significantly enhancing the compression performance. The analyses were supported by a computer equipped with an Intel(R) Core(TM) i7-10510U CPU, clocked at 1.80 GHz (up to 2.30 GHz), and 16 GB of RAM while running a Windows 11 Operating System. We define the measure of efficiency to be equal to the ratio of throughoput divided by the power requirement (in MSps/Watt). The results provided below illustrate the efficiency and performance capabilities of the proposed method and the hardware configurations employed.</p><sec id="sec6dot1-sensors-25-01092"><title>6.1. Resource Utilization and&#x000a0;Scalability</title><p>As indicated by the Quartus Prime compilation report, the proposed FPGA design utilizes 10,320 out of 113,560 available Adaptive Logic Modules (ALMs), which account for 9% of the total logic resources. Additionally, 114 out of 342 available Digital Signal Processors (DSPs) are employed, constituting about 33% of the total DSP capacity. The design also makes use of 6873 registers, which, in combination with Block Randon Access Memory (BRAM) utilization of 73,872 out of a total of 12,492,800 (around 1%), highlight the efficient use of memory resources. On the other hand, 553 out of 616 available pins are used, equating to 90% utilization. The low usage of logic resources, alongside moderate DSP and minimal memory utilization, suggests that this design could achieve greater scalability by addressing the current bottleneck through strategic hardware upgrades.</p></sec><sec id="sec6dot2-sensors-25-01092"><title>6.2. Clock&#x000a0;Frequency</title><p>The maximum operating frequency of our system, as reported by the compilation report, is 84.83 MHz. This frequency maintains a positive timing slack, indicating that the system is configured for optimal speed without compromising stability.</p></sec><sec id="sec6dot3-sensors-25-01092"><title>6.3. Throughput</title><p>Out of 560 available General-Purpose IO pins (GPIOs), 553 are actively utilized on the Cyclone V FPGA to support 19 independent processing units. Each of these units manages to process one full 16-bit sample every clock cycle. As a result, the aggregate throughput for the system reaches 19 samples each cycle. With the system operating at a maximum frequency of 84.83 MHz, this translates to an overall system throughput of 1611.77 MSps.</p></sec><sec id="sec6dot4-sensors-25-01092"><title>6.4. Power&#x000a0;Requirement</title><p>By configuring the optimization technique of the compiler for optimal performance, the power requirement was measured at 0.886 Watts. This achieved value demonstrates the dual benefit of our approach, enhancing system performance while ensuring energy efficiency. Both are crucial for sustainable operation in real-world applications.</p></sec><sec id="sec6dot5-sensors-25-01092"><title>6.5. Comparison with Division-Based&#x000a0;Approach</title><p>We compare the proposed division-free approach with its division-based counterpart, that is, the direct implementation of Algorithm 1 without optimization. Both implementations were evaluated with similar hardware configurations to highlight the performance benefits of eliminating the two division operations. Since the number of instances is limited by the available I/O pins, this constraint limits both the division-based and division-free approaches to 19 instances of the pipeline running in parallel. <xref rid="sensors-25-01092-t003" ref-type="table">Table 3</xref> summarizes the key performance metrics, including clock rate, throughput, power requirement, and efficiency for both approaches.</p><p>We observe that the division-free approach achieves significantly higher throughput, reaching 1611.77 MSps compared to 394.6 MSps for the division-based method, thus providing an enhancement of 308.46%. This improvement is primarily due to the elimination of direct division operations, which reduced the clock period from 51 ns to 19 ns in the division-free approach. This translates to a clock rate increase of 308.43%.</p><p>In terms of power requirement, the division-based method relies heavily on logic resources, while the division-free approach reduces logic usage by incorporating DSPs. This trade-off between logic and DSP utilization nearly balances the overall power requirement despite their differing resource usage strategies. It results in a slight increase in power requirements by 13.15% for the division-free approach.</p><p>Efficiency, measured as throughput per Watt, further underscores the advantages of the division-free design. With an efficiency of 1819.15 MSps/Watt, the method outperforms the division-based implementation, which achieves 504 MSps/Watt, by 260.94%. This represents an improvement of nearly four times, emphasizing the significant optimization achieved by the division-free approach in FPGA-based compression of hyperspectral images.</p></sec><sec id="sec6dot6-sensors-25-01092"><title>6.6. Comparison with State-of-the-Art&#x000a0;Implementations</title><p>We next present a comparative analysis with the latest FPGA-based hyperspectral image compression implementations. <xref rid="sensors-25-01092-t004" ref-type="table">Table 4</xref> below outlines key performance metrics that include throughput, power requirement, and efficiency in various studies. Efficiency metrics, calculated as throughput per Watt of power, provide insight into how effectively each system uses power to process data.</p><p>The throughput values across the selected studies span a wide range, from 12.5 to 1375 MSps, illustrating the different architectural choices and optimizations. On the higher end, the Xilinx Kintex Ultrascale XCKU040 achieves a throughput of 1375 MSps while consuming 4.221 Watts, illustrating a potential trade-off between performance and power efficiency. The Cyclone V FPGA used in this work achieves the lowest power requirement of just 0.886 Watts while delivering a significant throughput of 1611.77 MSps. The highest efficiency value of 1819.15 MSps/Watt is also achieved by the division-free approach employed in this study, suggesting a highly efficient use of power.</p><p>The resource utilizations for each implementation are detailed in <xref rid="sensors-25-01092-t005" ref-type="table">Table 5</xref> showing the allocation of LUTs, Flip-Flops (FFs), DSPs, and BRAMs. The analysis of this table is essential for understanding how resource allocation impacts overall system performance and efficiency. We observe from the table that high DSP utilization correlates strongly with enhanced performance. Both [<xref rid="B37-sensors-25-01092" ref-type="bibr">37</xref>] and this work demonstrate that significant DSP usage contributes to higher throughput rates. Additionally, the elevated power requirement noted in the aforementioned study can be attributed to the significant use of both LUTs (nearly 6.5 times) and FFs (10 times) when compared to our design. In our design, we significantly reduced reliance on BRAMs, utilizing only 23 units. This strategic reduction is achieved by replacing a large, BRAM-intensive lookup table, shown in <xref rid="sensors-25-01092-f009" ref-type="fig">Figure 9</xref>, with a custom-designed logic for indexing seed values. This adjustment substantially lowers BRAM demand and enhances the scalability of our system, allowing it to maintain high throughput while accommodating future enhancements and applications.</p></sec></sec><sec sec-type="conclusions" id="sec7-sensors-25-01092"><title>7. Conclusions</title><p>In this paper, we have implemented an innovative FPGA-based near-lossless compression technique for hyperspectral images, leveraging the previously developed quadrature-based square rooting method. This method is specifically optimized for addressing challenges associated with limited power and computational resources, which are particularly critical onboard satellites. The division-free approach utilized here is well-suited for real-time processing applications due to its efficient design. The proposed technique achieved a high throughput of 1611.77 MSps while maintaining a low power requirement of less than a Watt when compared with state-of-the-art implementations. The modest utilization of logic resources and the concomitant moderate number of DSP blocks employed in this design suggest the potential for enhanced scalability. However, the current bottleneck, illustrated by the limited number of available pins, needs to be addressed through strategic hardware upgrades.</p><p>Future work could further refine the quadrature-based square rooting method to enhance compression performance. Firstly, improving compression ratios would make it more efficient for environments with strict storage and bandwidth limitations. Further, implementing this compression technique across different FPGA platforms and its validation could provide valuable insights into performance and energy consumption variations. Additionally, integrating security features such as encryption into the compression process would protect sensitive data, which are especially important when data security is critical. These suggestions aim to broaden the scope of this research and enhance its practical applications.</p></sec></body><back><fn-group><fn><p><bold>Disclaimer/Publisher&#x02019;s Note:</bold> The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.</p></fn></fn-group><notes><title>Author Contributions</title><p>Conceptualization, A.A. and B.B.Y.; methodology, A.A. and B.B.Y.; investigation, A.A. and B.B.Y.; writing&#x02014;original draft preparation, A.A.; writing&#x02014;review and editing, B.B.Y.; supervision, B.B.Y. All authors have read and agreed to the published version of the manuscript.</p></notes><notes><title>Institutional Review Board Statement</title><p>Not applicable.</p></notes><notes><title>Informed Consent Statement</title><p>Not applicable.</p></notes><notes notes-type="data-availability"><title>Data Availability Statement</title><p>The original contributions presented in the study are included in the article, further inquiries can be directed to the corresponding author.</p></notes><notes notes-type="COI-statement"><title>Conflicts of Interest</title><p>The authors declare no conflicts of interest.</p></notes><ref-list><title>References</title><ref id="B1-sensors-25-01092"><label>1.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Pandey</surname><given-names>P.C.</given-names></name>
<name><surname>Balzter</surname><given-names>H.</given-names></name>
<name><surname>Srivastava</surname><given-names>P.K.</given-names></name>
<name><surname>Petropoulos</surname><given-names>G.P.</given-names></name>
<name><surname>Bhattacharya</surname><given-names>B.</given-names></name>
</person-group><article-title>Future perspectives and challenges in hyperspectral remote sensing</article-title><source>Hyperspectr. Remote Sens.</source><year>2020</year><volume>10</volume><fpage>429</fpage><lpage>439</lpage></element-citation></ref><ref id="B2-sensors-25-01092"><label>2.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Gu</surname><given-names>Y.</given-names></name>
<name><surname>Liu</surname><given-names>T.</given-names></name>
<name><surname>Gao</surname><given-names>G.</given-names></name>
<name><surname>Ren</surname><given-names>G.</given-names></name>
<name><surname>Ma</surname><given-names>Y.</given-names></name>
<name><surname>Chanussot</surname><given-names>J.</given-names></name>
<name><surname>Jia</surname><given-names>X.</given-names></name>
</person-group><article-title>Multimodal Hyperspectral Remote Sensing: An Overview and Perspective</article-title><source>Sci. China Inf. Sci.</source><year>2021</year><volume>64</volume><fpage>121301</fpage><pub-id pub-id-type="doi">10.1007/s11432-020-3084-1</pub-id></element-citation></ref><ref id="B3-sensors-25-01092"><label>3.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Mangotra</surname><given-names>H.</given-names></name>
<name><surname>Srivastava</surname><given-names>S.</given-names></name>
<name><surname>Jaiswal</surname><given-names>G.</given-names></name>
<name><surname>Rani</surname><given-names>R.</given-names></name>
<name><surname>Sharma</surname><given-names>A.</given-names></name>
</person-group><article-title>Hyperspectral imaging for early diagnosis of diseases: A review</article-title><source>Expert Syst.</source><year>2023</year><volume>40</volume><fpage>e13311</fpage><pub-id pub-id-type="doi">10.1111/exsy.13311</pub-id></element-citation></ref><ref id="B4-sensors-25-01092"><label>4.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Karim</surname><given-names>S.</given-names></name>
<name><surname>Qadir</surname><given-names>A.</given-names></name>
<name><surname>Farooq</surname><given-names>U.</given-names></name>
<name><surname>Shakir</surname><given-names>M.</given-names></name>
<name><surname>Laghari</surname><given-names>A.A.</given-names></name>
</person-group><article-title>Hyperspectral imaging: A review and trends towards medical imaging</article-title><source>Curr. Med. Imaging</source><year>2023</year><volume>19</volume><fpage>417</fpage><lpage>427</lpage><pub-id pub-id-type="doi">10.2174/1573405618666220519144358</pub-id><pub-id pub-id-type="pmid">35598236</pub-id>
</element-citation></ref><ref id="B5-sensors-25-01092"><label>5.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Yoon</surname><given-names>J.</given-names></name>
</person-group><article-title>Hyperspectral Imaging for Clinical Applications</article-title><source>BioChip J.</source><year>2022</year><volume>16</volume><fpage>1</fpage><lpage>12</lpage><pub-id pub-id-type="doi">10.1007/s13206-021-00041-0</pub-id></element-citation></ref><ref id="B6-sensors-25-01092"><label>6.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Lu</surname><given-names>B.</given-names></name>
<name><surname>Dao</surname><given-names>P.D.</given-names></name>
<name><surname>Liu</surname><given-names>J.</given-names></name>
<name><surname>He</surname><given-names>Y.</given-names></name>
<name><surname>Shang</surname><given-names>J.</given-names></name>
</person-group><article-title>Recent advances of hyperspectral imaging technology and applications in agriculture</article-title><source>Remote Sens.</source><year>2020</year><volume>12</volume><elocation-id>2659</elocation-id><pub-id pub-id-type="doi">10.3390/rs12162659</pub-id></element-citation></ref><ref id="B7-sensors-25-01092"><label>7.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Yu</surname><given-names>H.</given-names></name>
<name><surname>Kong</surname><given-names>B.</given-names></name>
<name><surname>Hou</surname><given-names>Y.</given-names></name>
<name><surname>Xu</surname><given-names>X.</given-names></name>
<name><surname>Chen</surname><given-names>T.</given-names></name>
<name><surname>Liu</surname><given-names>X.</given-names></name>
</person-group><article-title>A critical review on applications of hyperspectral remote sensing in crop monitoring</article-title><source>Exp. Agric.</source><year>2022</year><volume>58</volume><fpage>e26</fpage><pub-id pub-id-type="doi">10.1017/S0014479722000278</pub-id></element-citation></ref><ref id="B8-sensors-25-01092"><label>8.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Hajaj</surname><given-names>S.</given-names></name>
<name><surname>El Harti</surname><given-names>A.</given-names></name>
<name><surname>Pour</surname><given-names>A.B.</given-names></name>
<name><surname>Jellouli</surname><given-names>A.</given-names></name>
<name><surname>Adiri</surname><given-names>Z.</given-names></name>
<name><surname>Hashim</surname><given-names>M.</given-names></name>
</person-group><article-title>A Review on Hyperspectral Imagery Application for Lithological Mapping and Mineral Prospecting: Machine Learning Techniques and Future Prospects</article-title><source>Remote Sens. Appl. Soc. Environ.</source><year>2024</year><volume>35</volume><fpage>101218</fpage><pub-id pub-id-type="doi">10.1016/j.rsase.2024.101218</pub-id></element-citation></ref><ref id="B9-sensors-25-01092"><label>9.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Peyghambari</surname><given-names>S.</given-names></name>
<name><surname>Zhang</surname><given-names>Y.</given-names></name>
</person-group><article-title>Hyperspectral remote sensing in lithological mapping, mineral exploration, and environmental geology: An updated review</article-title><source>J. Appl. Remote Sens.</source><year>2021</year><volume>15</volume><fpage>031501</fpage><pub-id pub-id-type="doi">10.1117/1.JRS.15.031501</pub-id></element-citation></ref><ref id="B10-sensors-25-01092"><label>10.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Yang</surname><given-names>H.</given-names></name>
<name><surname>Kong</surname><given-names>J.</given-names></name>
<name><surname>Hu</surname><given-names>H.</given-names></name>
<name><surname>Du</surname><given-names>Y.</given-names></name>
<name><surname>Gao</surname><given-names>M.</given-names></name>
<name><surname>Chen</surname><given-names>F.</given-names></name>
</person-group><article-title>A Review of Remote Sensing for Water Quality Retrieval: Progress and Challenges</article-title><source>Remote Sens.</source><year>2022</year><volume>14</volume><elocation-id>1770</elocation-id><pub-id pub-id-type="doi">10.3390/rs14081770</pub-id></element-citation></ref><ref id="B11-sensors-25-01092"><label>11.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Bresciani</surname><given-names>M.</given-names></name>
<name><surname>Giardino</surname><given-names>C.</given-names></name>
<name><surname>Fabbretto</surname><given-names>A.</given-names></name>
<name><surname>Pellegrino</surname><given-names>A.</given-names></name>
<name><surname>Mangano</surname><given-names>S.</given-names></name>
<name><surname>Free</surname><given-names>G.</given-names></name>
<name><surname>Pinardi</surname><given-names>M.</given-names></name>
</person-group><article-title>Application of New Hyperspectral Sensors in the Remote Sensing of Aquatic Ecosystem Health: Exploiting PRISMA and DESIS for Four Italian Lakes</article-title><source>Resources</source><year>2022</year><volume>11</volume><elocation-id>8</elocation-id><pub-id pub-id-type="doi">10.3390/resources11020008</pub-id></element-citation></ref><ref id="B12-sensors-25-01092"><label>12.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Nisha</surname><given-names>A.</given-names></name>
<name><surname>Anitha</surname><given-names>A.</given-names></name>
</person-group><article-title>Current Advances in Hyperspectral Remote Sensing in Urban Planning</article-title><source>Proceedings of the 2022 Third International Conference on Intelligent Computing Instrumentation and Control Technologies (ICICICT)</source><conf-loc>Kannur, India</conf-loc><conf-date>11&#x02013;12 August 2022</conf-date><fpage>94</fpage><lpage>98</lpage></element-citation></ref><ref id="B13-sensors-25-01092"><label>13.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Li</surname><given-names>B.</given-names></name>
<name><surname>Zhang</surname><given-names>L.</given-names></name>
<name><surname>Shang</surname><given-names>Z.</given-names></name>
<name><surname>Dong</surname><given-names>Q.</given-names></name>
</person-group><article-title>Implementation of LZMA Compression Algorithm on FPGA</article-title><source>Electron. Lett.</source><year>2014</year><volume>50</volume><fpage>1522</fpage><lpage>1524</lpage><pub-id pub-id-type="doi">10.1049/el.2014.1734</pub-id></element-citation></ref><ref id="B14-sensors-25-01092"><label>14.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Hasan</surname><given-names>K.K.</given-names></name>
<name><surname>Ngah</surname><given-names>U.K.</given-names></name>
<name><surname>Salleh</surname><given-names>M.F.M.</given-names></name>
</person-group><article-title>Efficient Hardware-Based Image Compression Schemes for Wireless Sensor Networks: A Survey</article-title><source>Wirel. Pers. Commun.</source><year>2014</year><volume>77</volume><fpage>1415</fpage><lpage>1436</lpage><pub-id pub-id-type="doi">10.1007/s11277-013-1588-8</pub-id></element-citation></ref><ref id="B15-sensors-25-01092"><label>15.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Benini</surname><given-names>L.</given-names></name>
<name><surname>Bruni</surname><given-names>D.</given-names></name>
<name><surname>Macii</surname><given-names>A.</given-names></name>
<name><surname>Macii</surname><given-names>E.</given-names></name>
</person-group><article-title>Memory Energy Minimization by Data Compression: Algorithms, Architectures and Implementation</article-title><source>IEEE Trans. Very Large Scale Integr. (VLSI) Syst.</source><year>2004</year><volume>12</volume><fpage>255</fpage><lpage>268</lpage><pub-id pub-id-type="doi">10.1109/TVLSI.2004.824304</pub-id></element-citation></ref><ref id="B16-sensors-25-01092"><label>16.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Leavline</surname><given-names>E.J.</given-names></name>
<name><surname>Singh</surname><given-names>D.A.A.G.</given-names></name>
</person-group><article-title>Hardware Implementation of LZMA Data Compression Algorithm</article-title><source>Int. J. Appl. Inf. Syst. (IJAIS)</source><year>2013</year><volume>5</volume><fpage>51</fpage><lpage>56</lpage></element-citation></ref><ref id="B17-sensors-25-01092"><label>17.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Altamimi</surname><given-names>A.</given-names></name>
<name><surname>Ben Youssef</surname><given-names>B.</given-names></name>
</person-group><article-title>A systematic review of hardware-accelerated compression of remotely sensed hyperspectral images</article-title><source>Sensors</source><year>2021</year><volume>22</volume><elocation-id>263</elocation-id><pub-id pub-id-type="doi">10.3390/s22010263</pub-id><pub-id pub-id-type="pmid">35009804</pub-id>
</element-citation></ref><ref id="B18-sensors-25-01092"><label>18.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>B&#x000e1;scones</surname><given-names>D.</given-names></name>
<name><surname>Gonz&#x000e1;lez</surname><given-names>C.</given-names></name>
<name><surname>Mozos</surname><given-names>D.</given-names></name>
</person-group><article-title>An FPGA Accelerator for Real-Time Lossy Compression of Hyperspectral Images</article-title><source>Remote Sens.</source><year>2020</year><volume>12</volume><elocation-id>2563</elocation-id><pub-id pub-id-type="doi">10.3390/rs12162563</pub-id></element-citation></ref><ref id="B19-sensors-25-01092"><label>19.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Barrios</surname><given-names>Y.</given-names></name>
<name><surname>Rodr&#x000ed;guez</surname><given-names>A.</given-names></name>
<name><surname>S&#x000e1;nchez</surname><given-names>A.</given-names></name>
<name><surname>P&#x000e9;rez</surname><given-names>A.</given-names></name>
<name><surname>L&#x000f3;pez</surname><given-names>S.</given-names></name>
<name><surname>Otero</surname><given-names>A.</given-names></name>
<name><surname>de la Torre</surname><given-names>E.</given-names></name>
<name><surname>Sarmiento</surname><given-names>R.</given-names></name>
</person-group><article-title>Lossy Hyperspectral Image Compression on a Reconfigurable and Fault-Tolerant FPGA-Based Adaptive Computing Platform</article-title><source>Electronics</source><year>2020</year><volume>9</volume><elocation-id>1576</elocation-id><pub-id pub-id-type="doi">10.3390/electronics9101576</pub-id></element-citation></ref><ref id="B20-sensors-25-01092"><label>20.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Nascimento</surname><given-names>J.M.P.</given-names></name>
<name><surname>V&#x000e9;stias</surname><given-names>M.P.</given-names></name>
<name><surname>Mart&#x000ed;n</surname><given-names>G.</given-names></name>
</person-group><article-title>Hyperspectral Compressive Sensing with a System-on-Chip FPGA</article-title><source>IEEE J. Sel. Top. Appl. Earth Obs. Remote Sens.</source><year>2020</year><volume>13</volume><fpage>3701</fpage><lpage>3710</lpage><pub-id pub-id-type="doi">10.1109/JSTARS.2020.2996679</pub-id></element-citation></ref><ref id="B21-sensors-25-01092"><label>21.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Caba</surname><given-names>J.</given-names></name>
<name><surname>D&#x000ed;az</surname><given-names>M.</given-names></name>
<name><surname>Barba</surname><given-names>J.</given-names></name>
<name><surname>Guerra</surname><given-names>R.</given-names></name>
<name><surname>de la Torre</surname><given-names>J.A.</given-names></name>
<name><surname>L&#x000f3;pez</surname><given-names>S.</given-names></name>
</person-group><article-title>FPGA-based on-board hyperspectral imaging compression: Benchmarking performance and energy efficiency against GPU implementations</article-title><source>Remote Sens.</source><year>2020</year><volume>12</volume><elocation-id>3741</elocation-id><pub-id pub-id-type="doi">10.3390/rs12223741</pub-id></element-citation></ref><ref id="B22-sensors-25-01092"><label>22.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Schwartz</surname><given-names>C.</given-names></name>
<name><surname>Sander</surname><given-names>I.</given-names></name>
<name><surname>Bruhn</surname><given-names>F.</given-names></name>
<name><surname>Persson</surname><given-names>M.</given-names></name>
<name><surname>Ekblad</surname><given-names>J.</given-names></name>
<name><surname>Fuglesang</surname><given-names>C.</given-names></name>
</person-group><article-title>Satellite image compression guided by regions of interest</article-title><source>Sensors</source><year>2023</year><volume>23</volume><elocation-id>730</elocation-id><pub-id pub-id-type="doi">10.3390/s23020730</pub-id><pub-id pub-id-type="pmid">36679527</pub-id>
</element-citation></ref><ref id="B23-sensors-25-01092"><label>23.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Zheng</surname><given-names>T.</given-names></name>
<name><surname>Dai</surname><given-names>Y.</given-names></name>
<name><surname>Xue</surname><given-names>C.</given-names></name>
<name><surname>Zhou</surname><given-names>L.</given-names></name>
</person-group><article-title>Recursive least squares for near-lossless hyperspectral data compression</article-title><source>Appl. Sci.</source><year>2022</year><volume>12</volume><elocation-id>7172</elocation-id><pub-id pub-id-type="doi">10.3390/app12147172</pub-id></element-citation></ref><ref id="B24-sensors-25-01092"><label>24.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Ansari</surname><given-names>R.</given-names></name>
<name><surname>Memon</surname><given-names>N.D.</given-names></name>
<name><surname>Ceran</surname><given-names>E.</given-names></name>
</person-group><article-title>Near-lossless image compression techniques</article-title><source>J. Electron. Imaging</source><year>1998</year><volume>7</volume><fpage>486</fpage><lpage>494</lpage></element-citation></ref><ref id="B25-sensors-25-01092"><label>25.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Beerten</surname><given-names>J.</given-names></name>
<name><surname>Blanes</surname><given-names>I.</given-names></name>
<name><surname>Serra-Sagrist&#x000e0;</surname><given-names>J.</given-names></name>
</person-group><article-title>A fully embedded two-stage coder for hyperspectral near-lossless compression</article-title><source>IEEE Geosci. Remote Sens. Lett.</source><year>2015</year><volume>12</volume><fpage>1775</fpage><lpage>1779</lpage><pub-id pub-id-type="doi">10.1109/LGRS.2015.2425548</pub-id></element-citation></ref><ref id="B26-sensors-25-01092"><label>26.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Miguel</surname><given-names>A.</given-names></name>
<name><surname>Liu</surname><given-names>J.</given-names></name>
<name><surname>Barney</surname><given-names>D.</given-names></name>
<name><surname>Ladner</surname><given-names>R.</given-names></name>
<name><surname>Riskin</surname><given-names>E.</given-names></name>
</person-group><article-title>Near-lossless compression of hyperspectral images</article-title><source>Proceedings of the 2006 International Conference on Image Processing</source><conf-loc>Atlanta, GA, USA</conf-loc><conf-date>8&#x02013;11 October 2006</conf-date><fpage>1153</fpage><lpage>1156</lpage></element-citation></ref><ref id="B27-sensors-25-01092"><label>27.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Aiazzi</surname><given-names>B.</given-names></name>
<name><surname>Alparone</surname><given-names>L.</given-names></name>
<name><surname>Baronti</surname><given-names>S.</given-names></name>
</person-group><article-title>Near-lossless compression of 3-D optical data</article-title><source>IEEE Trans. Geosci. Remote Sens.</source><year>2001</year><volume>39</volume><fpage>2547</fpage><lpage>2557</lpage><pub-id pub-id-type="doi">10.1109/36.964993</pub-id></element-citation></ref><ref id="B28-sensors-25-01092"><label>28.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Qian</surname><given-names>S.-E.</given-names></name>
<name><surname>Bergeron</surname><given-names>M.</given-names></name>
<name><surname>Cunningham</surname><given-names>I.</given-names></name>
<name><surname>Gagnon</surname><given-names>L.</given-names></name>
<name><surname>Hollinger</surname><given-names>A.</given-names></name>
</person-group><article-title>Near lossless data compression onboard a hyperspectral satellite</article-title><source>IEEE Trans. Aerosp. Electron. Syst.</source><year>2006</year><volume>42</volume><fpage>851</fpage><lpage>866</lpage><pub-id pub-id-type="doi">10.1109/TAES.2006.248183</pub-id></element-citation></ref><ref id="B29-sensors-25-01092"><label>29.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Wu</surname><given-names>X.</given-names></name>
<name><surname>Memon</surname><given-names>N.</given-names></name>
<name><surname>Sayood</surname><given-names>K.</given-names></name>
</person-group><article-title>A context-based, adaptive, lossless/nearly-lossless coding scheme for continuous-tone images</article-title><source>ISO/IEC JTC 1/SC 29/WG</source><year>1995</year><volume>1</volume><fpage>1</fpage><lpage>33</lpage></element-citation></ref><ref id="B30-sensors-25-01092"><label>30.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Wu</surname><given-names>X.</given-names></name>
<name><surname>Memon</surname><given-names>N.</given-names></name>
</person-group><article-title>Context-based lossless interband compression-extending CALIC</article-title><source>IEEE Trans. Image Process.</source><year>2000</year><volume>9</volume><fpage>994</fpage><lpage>1001</lpage><pub-id pub-id-type="pmid">18255470</pub-id>
</element-citation></ref><ref id="B31-sensors-25-01092"><label>31.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Magli</surname><given-names>E.</given-names></name>
<name><surname>Olmo</surname><given-names>G.</given-names></name>
<name><surname>Quacchio</surname><given-names>E.</given-names></name>
</person-group><article-title>Optimized onboard lossless and near-lossless compression of hyperspectral data using CALIC</article-title><source>IEEE Geosci. Remote Sens. Lett.</source><year>2004</year><volume>1</volume><fpage>21</fpage><lpage>25</lpage><pub-id pub-id-type="doi">10.1109/LGRS.2003.822312</pub-id></element-citation></ref><ref id="B32-sensors-25-01092"><label>32.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Blanes</surname><given-names>I.</given-names></name>
<name><surname>Magli</surname><given-names>E.</given-names></name>
<name><surname>Serra-Sagrist&#x000e0;</surname><given-names>J.</given-names></name>
</person-group><article-title>A tutorial on image compression for optical space imaging systems</article-title><source>IEEE Geosci. Remote Sens. Mag.</source><year>2014</year><volume>2</volume><fpage>8</fpage><lpage>26</lpage><pub-id pub-id-type="doi">10.1109/MGRS.2014.2352465</pub-id></element-citation></ref><ref id="B33-sensors-25-01092"><label>33.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Bartrina-Rapesta</surname><given-names>J.</given-names></name>
<name><surname>Blanes</surname><given-names>I.</given-names></name>
<name><surname>Aul&#x000ed;-Llin&#x000e0;s</surname><given-names>F.</given-names></name>
<name><surname>Serra-Sagrist&#x000e0;</surname><given-names>J.</given-names></name>
<name><surname>Sanchez</surname><given-names>V.</given-names></name>
<name><surname>Marcellin</surname><given-names>M.W.</given-names></name>
</person-group><article-title>A lightweight contextual arithmetic coder for on-board remote sensing data compression</article-title><source>IEEE Trans. Geosci. Remote Sens.</source><year>2017</year><volume>55</volume><fpage>4825</fpage><lpage>4835</lpage><pub-id pub-id-type="doi">10.1109/TGRS.2017.2701837</pub-id></element-citation></ref><ref id="B34-sensors-25-01092"><label>34.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Carvajal</surname><given-names>G.</given-names></name>
<name><surname>Penna</surname><given-names>B.</given-names></name>
<name><surname>Magli</surname><given-names>E.</given-names></name>
</person-group><article-title>Unified lossy and near-lossless hyperspectral image compression based on JPEG 2000</article-title><source>IEEE Geosci. Remote Sens. Lett.</source><year>2008</year><volume>5</volume><fpage>593</fpage><lpage>597</lpage><pub-id pub-id-type="doi">10.1109/LGRS.2008.2000651</pub-id></element-citation></ref><ref id="B35-sensors-25-01092"><label>35.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Barrios</surname><given-names>Y.</given-names></name>
<name><surname>S&#x000e1;nchez</surname><given-names>A.</given-names></name>
<name><surname>Guerra</surname><given-names>R.</given-names></name>
<name><surname>Sarmiento</surname><given-names>R.</given-names></name>
</person-group><article-title>Hardware implementation of the CCSDS 123.0-B-2 near-lossless compression standard following an HLS design methodology</article-title><source>Remote Sens.</source><year>2021</year><volume>13</volume><elocation-id>4388</elocation-id><pub-id pub-id-type="doi">10.3390/rs13214388</pub-id></element-citation></ref><ref id="B36-sensors-25-01092"><label>36.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>S&#x000e1;nchez</surname><given-names>A.</given-names></name>
<name><surname>Blanes</surname><given-names>I.</given-names></name>
<name><surname>Barrios</surname><given-names>Y.</given-names></name>
<name><surname>Hern&#x000e1;ndez-Cabronero</surname><given-names>M.</given-names></name>
<name><surname>Bartrina-Rapesta</surname><given-names>J.</given-names></name>
<name><surname>Serra-Sagrist&#x000e0;</surname><given-names>J.</given-names></name>
<name><surname>Sarmiento</surname><given-names>R.</given-names></name>
</person-group><article-title>Reducing Data Dependencies in the Feedback Loop of the CCSDS 123.0-B-2 Predictor</article-title><source>IEEE Geosci. Remote Sens. Lett.</source><year>2022</year><volume>19</volume><fpage>6014505</fpage><pub-id pub-id-type="doi">10.1109/LGRS.2022.3213975</pub-id></element-citation></ref><ref id="B37-sensors-25-01092"><label>37.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Paschalis</surname><given-names>A.</given-names></name>
<name><surname>Chatziantoniou</surname><given-names>P.</given-names></name>
<name><surname>Theodoropoulos</surname><given-names>D.</given-names></name>
<name><surname>Tsigkanos</surname><given-names>A.</given-names></name>
<name><surname>Kranitis</surname><given-names>N.</given-names></name>
</person-group><article-title>High-Performance Hardware Accelerators for Next Generation On-Board Data Processing</article-title><source>Proceedings of the 2022 IFIP/IEEE 30th International Conference on Very Large Scale Integration (VLSI-SoC)</source><conf-loc>Patras, Greece</conf-loc><conf-date>3&#x02013;5 October 2022</conf-date><fpage>1</fpage><lpage>4</lpage></element-citation></ref><ref id="B38-sensors-25-01092"><label>38.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Chatziantoniou</surname><given-names>P.</given-names></name>
<name><surname>Tsigkanos</surname><given-names>A.</given-names></name>
<name><surname>Theodoropoulos</surname><given-names>D.</given-names></name>
<name><surname>Kranitis</surname><given-names>N.</given-names></name>
<name><surname>Paschalis</surname><given-names>A.</given-names></name>
</person-group><article-title>An Efficient Architecture and High-Throughput Implementation of CCSDS-123.0-B-2 Hybrid Entropy Coder Targeting Space-Grade SRAM FPGA Technology</article-title><source>IEEE Trans. Aerosp. Electron. Syst.</source><year>2022</year><volume>58</volume><fpage>5470</fpage><lpage>5482</lpage><pub-id pub-id-type="doi">10.1109/TAES.2022.3173583</pub-id></element-citation></ref><ref id="B39-sensors-25-01092"><label>39.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>B&#x000e1;scones</surname><given-names>D.</given-names></name>
<name><surname>Gonzalez</surname><given-names>C.</given-names></name>
<name><surname>Mozos</surname><given-names>D.</given-names></name>
</person-group><article-title>A real-time FPGA implementation of the CCSDS 123.0-B-2 standard</article-title><source>IEEE Trans. Geosci. Remote Sens.</source><year>2022</year><volume>60</volume><fpage>5525113</fpage><pub-id pub-id-type="doi">10.1109/TGRS.2022.3160646</pub-id></element-citation></ref><ref id="B40-sensors-25-01092"><label>40.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Altamimi</surname><given-names>A.</given-names></name>
<name><surname>Ben Youssef</surname><given-names>B.</given-names></name>
</person-group><article-title>Lossless and Near-Lossless Compression Algorithms for Remotely Sensed Hyperspectral Images</article-title><source>Entropy</source><year>2024</year><volume>26</volume><elocation-id>316</elocation-id><pub-id pub-id-type="doi">10.3390/e26040316</pub-id><pub-id pub-id-type="pmid">38667870</pub-id>
</element-citation></ref><ref id="B41-sensors-25-01092"><label>41.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<collab>AMD</collab>
</person-group><article-title>Square Root</article-title><comment>Available online: <ext-link xlink:href="https://docs.amd.com/r/en-US/am004-versal-dsp-engine/Square-Root" ext-link-type="uri">https://docs.amd.com/r/en-US/am004-versal-dsp-engine/Square-Root</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-06-26">(accessed on 26 June 2024)</date-in-citation></element-citation></ref><ref id="B42-sensors-25-01092"><label>42.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<collab>Consultative Committee for Space Data Systems (CCSDS)</collab>
</person-group><article-title>Corpus Datasets</article-title><comment>Available online: <ext-link xlink:href="https://cwe.ccsds.org/sls/docs/SLS-DC/123.0-B-Info/TestData/" ext-link-type="uri">https://cwe.ccsds.org/sls/docs/SLS-DC/123.0-B-Info/TestData/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2023-07-04">(accessed on 4 July 2023)</date-in-citation></element-citation></ref><ref id="B43-sensors-25-01092"><label>43.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Altamimi</surname><given-names>A.</given-names></name>
<name><surname>Ben Youssef</surname><given-names>B.</given-names></name>
</person-group><article-title>Leveraging Seed Generation for Efficient Hardware Acceleration of Lossless Compression of Remotely Sensed Hyperspectral Images</article-title><source>Electronics</source><year>2024</year><volume>13</volume><elocation-id>2164</elocation-id><pub-id pub-id-type="doi">10.3390/electronics13112164</pub-id></element-citation></ref><ref id="B44-sensors-25-01092"><label>44.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Altamimi</surname><given-names>A.</given-names></name>
<name><surname>Ben Youssef</surname><given-names>B.</given-names></name>
</person-group><article-title>Novel seed generation and quadrature-based square rooting algorithms</article-title><source>Sci. Rep.</source><year>2022</year><volume>12</volume><elocation-id>20540</elocation-id><pub-id pub-id-type="doi">10.1038/s41598-022-25039-y</pub-id><pub-id pub-id-type="pmid">36446880</pub-id>
</element-citation></ref><ref id="B45-sensors-25-01092"><label>45.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Bhaskaran</surname><given-names>V.</given-names></name>
<name><surname>Konstantinides</surname><given-names>K.</given-names></name>
</person-group><source>Image and Video Compression Standards: Algorithms and Architectures</source><publisher-name>Kluwer Academic Publishers</publisher-name><publisher-loc>Zurich, Switzerland</publisher-loc><year>2012</year></element-citation></ref><ref id="B46-sensors-25-01092"><label>46.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Young</surname><given-names>C.Y.</given-names></name>
</person-group><source>Precalculus</source><publisher-name>Wiley</publisher-name><publisher-loc>London, UK</publisher-loc><year>2009</year><fpage>966</fpage></element-citation></ref><ref id="B47-sensors-25-01092"><label>47.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Warren</surname><given-names>H.S.</given-names></name>
</person-group><source>Hacker&#x02019;s Delight</source><publisher-name>Pearson Education</publisher-name><publisher-loc>London, UK</publisher-loc><year>2013</year></element-citation></ref><ref id="B48-sensors-25-01092"><label>48.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Mehlhorn</surname><given-names>K.</given-names></name>
<name><surname>Sanders</surname><given-names>P.</given-names></name>
</person-group><article-title>Algorithms and data structures</article-title><source>Basic Toolbox</source><year>2007</year><volume>295</volume><fpage>160</fpage><lpage>164</lpage></element-citation></ref><ref id="B49-sensors-25-01092"><label>49.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Sedgewick</surname><given-names>R.</given-names></name>
<name><surname>Wayne</surname><given-names>K.</given-names></name>
</person-group><source>Algorithms</source><publisher-name>Addison-Wesley</publisher-name><publisher-loc>Boston, MA, USA</publisher-loc><year>2011</year></element-citation></ref></ref-list></back><floats-group><fig position="float" id="sensors-25-01092-f001"><label>Figure 1</label><caption><p>Flow diagram of the near-lossless compression of HSI employing the quadrature-based square rooting method.</p></caption><graphic xlink:href="sensors-25-01092-g001" position="float"/></fig><fig position="float" id="sensors-25-01092-f002"><label>Figure 2</label><caption><p>Geometric construction of a square with the same area <italic toggle="yes">x</italic> using the quadrature of rectangle ABCD.</p></caption><graphic xlink:href="sensors-25-01092-g002" position="float"/></fig><fig position="float" id="sensors-25-01092-f003"><label>Figure 3</label><caption><p>Skewed distribution of <inline-formula><mml:math id="mm139" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> across the range of <inline-formula><mml:math id="mm140" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> values for <inline-formula><mml:math id="mm141" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>x</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mo>[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msup><mml:mn>2</mml:mn><mml:mn>16</mml:mn></mml:msup><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></caption><graphic xlink:href="sensors-25-01092-g003" position="float"/></fig><fig position="float" id="sensors-25-01092-f004"><label>Figure 4</label><caption><p>Near-lossless compression of CASI (t0477f06, U) band 70.</p></caption><graphic xlink:href="sensors-25-01092-g004" position="float"/></fig><fig position="float" id="sensors-25-01092-f005"><label>Figure 5</label><caption><p>Near-lossless compression of AIRS (granule 16, U) band 208.</p></caption><graphic xlink:href="sensors-25-01092-g005" position="float"/></fig><fig position="float" id="sensors-25-01092-f006"><label>Figure 6</label><caption><p>Near-lossless compression of AVIRIS Yellowstone (sc10, C) band 106.</p></caption><graphic xlink:href="sensors-25-01092-g006" position="float"/></fig><fig position="float" id="sensors-25-01092-f007"><label>Figure 7</label><caption><p>Block diagram showing the computation process of the initial estimate of the square root value, <inline-formula><mml:math id="mm142" overflow="scroll"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>.</p></caption><graphic xlink:href="sensors-25-01092-g007" position="float"/></fig><fig position="float" id="sensors-25-01092-f008"><label>Figure 8</label><caption><p>A nine-stage pipeline employed to bypass the two division operations in the quadrature-based method.</p></caption><graphic xlink:href="sensors-25-01092-g008" position="float"/></fig><fig position="float" id="sensors-25-01092-f009"><label>Figure 9</label><caption><p>Example illustrating the computation of the index value for the seed (<inline-formula><mml:math id="mm143" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>) within the set corresponding to a <inline-formula><mml:math id="mm144" overflow="scroll"><mml:mrow><mml:mrow><mml:mo form="prefix">sin</mml:mo><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> of 0.006. A value of 2 for this index is obtained by summing the ones up to bit position 6.</p></caption><graphic xlink:href="sensors-25-01092-g009" position="float"/></fig><table-wrap position="float" id="sensors-25-01092-t001"><object-id pub-id-type="pii">sensors-25-01092-t001_Table 1</object-id><label>Table 1</label><caption><p>Comparison of lossless and near-lossless compression results, which highlight the improvement in reduction percentage with MRE and PSNR values for the near-lossless approach. The scenes are taken from the publicly available Corpus dataset.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Imager</th><th align="left" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Scene</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Lossless&#x000a0;[<xref rid="B40-sensors-25-01092" ref-type="bibr">40</xref>]</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Near-Lossless</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">MRE</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">PSNR (dB)</th></tr></thead><tbody><tr><td align="left" valign="middle" rowspan="1" colspan="1">AVIRIS</td><td align="left" valign="middle" rowspan="1" colspan="1">YS *_sc00_uncal</td><td align="center" valign="middle" rowspan="1" colspan="1">22%</td><td align="center" valign="middle" rowspan="1" colspan="1">38.60%</td><td align="center" valign="middle" rowspan="1" colspan="1">0.0102</td><td align="center" valign="middle" rowspan="1" colspan="1">50.95</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">AVIRIS</td><td align="left" valign="middle" rowspan="1" colspan="1">YS_sc03_uncal</td><td align="center" valign="middle" rowspan="1" colspan="1">24%</td><td align="center" valign="middle" rowspan="1" colspan="1">38.60%</td><td align="center" valign="middle" rowspan="1" colspan="1">0.0101</td><td align="center" valign="middle" rowspan="1" colspan="1">51.08</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">AIRS</td><td align="left" valign="middle" rowspan="1" colspan="1">gran9</td><td align="center" valign="middle" rowspan="1" colspan="1">25%</td><td align="center" valign="middle" rowspan="1" colspan="1">38.50%</td><td align="center" valign="middle" rowspan="1" colspan="1">0.0100</td><td align="center" valign="middle" rowspan="1" colspan="1">50.61</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">AIRS</td><td align="left" valign="middle" rowspan="1" colspan="1">gran16</td><td align="center" valign="middle" rowspan="1" colspan="1">26%</td><td align="center" valign="middle" rowspan="1" colspan="1">38.60%</td><td align="center" valign="middle" rowspan="1" colspan="1">0.0100</td><td align="center" valign="middle" rowspan="1" colspan="1">50.57</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">AIRS</td><td align="left" valign="middle" rowspan="1" colspan="1">gran60</td><td align="center" valign="middle" rowspan="1" colspan="1">20%</td><td align="center" valign="middle" rowspan="1" colspan="1">38.50%</td><td align="center" valign="middle" rowspan="1" colspan="1">0.0100</td><td align="center" valign="middle" rowspan="1" colspan="1">50.74</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">AIRS</td><td align="left" valign="middle" rowspan="1" colspan="1">gran82</td><td align="center" valign="middle" rowspan="1" colspan="1">32%</td><td align="center" valign="middle" rowspan="1" colspan="1">38.60%</td><td align="center" valign="middle" rowspan="1" colspan="1">0.0100</td><td align="center" valign="middle" rowspan="1" colspan="1">50.48</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">AIRS</td><td align="left" valign="middle" rowspan="1" colspan="1">gran120</td><td align="center" valign="middle" rowspan="1" colspan="1">27%</td><td align="center" valign="middle" rowspan="1" colspan="1">38.50%</td><td align="center" valign="middle" rowspan="1" colspan="1">0.0100</td><td align="center" valign="middle" rowspan="1" colspan="1">50.61</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">AIRS</td><td align="left" valign="middle" rowspan="1" colspan="1">gran126</td><td align="center" valign="middle" rowspan="1" colspan="1">22%</td><td align="center" valign="middle" rowspan="1" colspan="1">38.50%</td><td align="center" valign="middle" rowspan="1" colspan="1">0.0100</td><td align="center" valign="middle" rowspan="1" colspan="1">50.68</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">AIRS</td><td align="left" valign="middle" rowspan="1" colspan="1">gran129</td><td align="center" valign="middle" rowspan="1" colspan="1">34%</td><td align="center" valign="middle" rowspan="1" colspan="1">38.60%</td><td align="center" valign="middle" rowspan="1" colspan="1">0.0100</td><td align="center" valign="middle" rowspan="1" colspan="1">50.65</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">AIRS</td><td align="left" valign="middle" rowspan="1" colspan="1">gran151</td><td align="center" valign="middle" rowspan="1" colspan="1">26%</td><td align="center" valign="middle" rowspan="1" colspan="1">38.50%</td><td align="center" valign="middle" rowspan="1" colspan="1">0.0101</td><td align="center" valign="middle" rowspan="1" colspan="1">50.66</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">AIRS</td><td align="left" valign="middle" rowspan="1" colspan="1">gran182</td><td align="center" valign="middle" rowspan="1" colspan="1">22%</td><td align="center" valign="middle" rowspan="1" colspan="1">38.50%</td><td align="center" valign="middle" rowspan="1" colspan="1">0.0101</td><td align="center" valign="middle" rowspan="1" colspan="1">50.71</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">CASI</td><td align="left" valign="middle" rowspan="1" colspan="1">t0180f07</td><td align="center" valign="middle" rowspan="1" colspan="1">18%</td><td align="center" valign="middle" rowspan="1" colspan="1">38.50%</td><td align="center" valign="middle" rowspan="1" colspan="1">0.0100</td><td align="center" valign="middle" rowspan="1" colspan="1">50.23</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">CASI</td><td align="left" valign="middle" rowspan="1" colspan="1">t0477f06</td><td align="center" valign="middle" rowspan="1" colspan="1">27%</td><td align="center" valign="middle" rowspan="1" colspan="1">38.80%</td><td align="center" valign="middle" rowspan="1" colspan="1">0.0100</td><td align="center" valign="middle" rowspan="1" colspan="1">50.28</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">CRISM</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">sc182</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">37%</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">38.60%</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.0100</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">50.69</td></tr></tbody></table><table-wrap-foot><fn><p>* YS: yellowstone.</p></fn></table-wrap-foot></table-wrap><table-wrap position="float" id="sensors-25-01092-t002"><object-id pub-id-type="pii">sensors-25-01092-t002_Table 2</object-id><label>Table 2</label><caption><p>Maximum values of <italic toggle="yes">x</italic> used as pivots in the binary search algorithm for each binary representation length <italic toggle="yes">n</italic>, along with the corresponding shift amounts, which are calculated as <inline-formula><mml:math id="mm146" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>&#x0230a;</mml:mo><mml:mi>n</mml:mi><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo>&#x0230b;</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Number of Bits (<italic toggle="yes">n</italic>)</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Pivot</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Shift Amount (<inline-formula><mml:math id="mm147" overflow="scroll"><mml:mrow><mml:mstyle mathvariant="bold"><mml:mrow><mml:mo>&#x0230a;</mml:mo><mml:mi mathvariant="bold-italic">n</mml:mi><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo>&#x0230b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow></mml:math></inline-formula>)</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">16</td><td align="center" valign="middle" rowspan="1" colspan="1">65535</td><td align="center" valign="middle" rowspan="1" colspan="1">8</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">15</td><td align="center" valign="middle" rowspan="1" colspan="1">32767</td><td align="center" valign="middle" rowspan="1" colspan="1">7</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">14</td><td align="center" valign="middle" rowspan="1" colspan="1">16383</td><td align="center" valign="middle" rowspan="1" colspan="1">7</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">13</td><td align="center" valign="middle" rowspan="1" colspan="1">8191</td><td align="center" valign="middle" rowspan="1" colspan="1">6</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">12</td><td align="center" valign="middle" rowspan="1" colspan="1">4095</td><td align="center" valign="middle" rowspan="1" colspan="1">6</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">11</td><td align="center" valign="middle" rowspan="1" colspan="1">2047</td><td align="center" valign="middle" rowspan="1" colspan="1">5</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">10</td><td align="center" valign="middle" rowspan="1" colspan="1">1023</td><td align="center" valign="middle" rowspan="1" colspan="1">5</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">9</td><td align="center" valign="middle" rowspan="1" colspan="1">511</td><td align="center" valign="middle" rowspan="1" colspan="1">4</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">8</td><td align="center" valign="middle" rowspan="1" colspan="1">255</td><td align="center" valign="middle" rowspan="1" colspan="1">4</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">7</td><td align="center" valign="middle" rowspan="1" colspan="1">127</td><td align="center" valign="middle" rowspan="1" colspan="1">3</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">6</td><td align="center" valign="middle" rowspan="1" colspan="1">63</td><td align="center" valign="middle" rowspan="1" colspan="1">3</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">5</td><td align="center" valign="middle" rowspan="1" colspan="1">31</td><td align="center" valign="middle" rowspan="1" colspan="1">2</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">4</td><td align="center" valign="middle" rowspan="1" colspan="1">15</td><td align="center" valign="middle" rowspan="1" colspan="1">2</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">3</td><td align="center" valign="middle" rowspan="1" colspan="1">7</td><td align="center" valign="middle" rowspan="1" colspan="1">1</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">2</td><td align="center" valign="middle" rowspan="1" colspan="1">3</td><td align="center" valign="middle" rowspan="1" colspan="1">1</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-01092-t003"><object-id pub-id-type="pii">sensors-25-01092-t003_Table 3</object-id><label>Table 3</label><caption><p>Performance metrics comparison between the division-based and division-free implementations. A positive value in relative enhancement means that the division-free approach yielded more improvement.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Metric</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Division-Based Approach</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Division-Free Approach</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Relative Enhancement (%)</th></tr></thead><tbody><tr><td align="left" valign="middle" rowspan="1" colspan="1">Clock rate (MHz)</td><td align="center" valign="middle" rowspan="1" colspan="1">20.77</td><td align="center" valign="middle" rowspan="1" colspan="1">
<bold>84.83 *</bold>
</td><td align="center" valign="middle" rowspan="1" colspan="1">308.43</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">Throughput (MSps)</td><td align="center" valign="middle" rowspan="1" colspan="1">394.6</td><td align="center" valign="middle" rowspan="1" colspan="1">
<bold>1611.77</bold>
</td><td align="center" valign="middle" rowspan="1" colspan="1">308.46</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">Power (Watts)</td><td align="center" valign="middle" rowspan="1" colspan="1">
<bold>0.783</bold>
</td><td align="center" valign="middle" rowspan="1" colspan="1">0.886</td><td align="center" valign="middle" rowspan="1" colspan="1">&#x02212;13.15 **</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Efficiency (MSps/Watts)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">504</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>1819.15</bold>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">260.94</td></tr></tbody></table><table-wrap-foot><fn><p>* Bold faced values indicate the best results. ** The negative value represents an increase in power requirement of 13.15% for the division-free approach.</p></fn></table-wrap-foot></table-wrap><table-wrap position="float" id="sensors-25-01092-t004"><object-id pub-id-type="pii">sensors-25-01092-t004_Table 4</object-id><label>Table 4</label><caption><p>Performance metrics of FPGA-based implementations of HSI near-lossless compression and their comparison with our work using the division-free approach.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">FPGA<break/>Platform</th><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Compression<break/>Method</th><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Throughput<break/>(MSps)</th><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Power<break/>(Watt)</th><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Efficiency<break/>(MSps/Watt)</th><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Instances</th><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Reference</th></tr></thead><tbody><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Xilinx Kintex UltraScale</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">CCSDS 123.0-B-2</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">12.5</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">2.48</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">5</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">NA</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B35-sensors-25-01092" ref-type="bibr">35</xref>]</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">NA</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">CCSDS 123.0-B-2</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">125</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">-</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">-</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">NA</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B36-sensors-25-01092" ref-type="bibr">36</xref>]</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Xilinx Kintex Ultrascale XCKU040</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">CCSDS 123.0-B-2</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1375</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">4.221</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">325.8</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">5</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B37-sensors-25-01092" ref-type="bibr">37</xref>]</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Xilinx Kintex Ultrascale XCKU040 SRAM</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">CCSDS 123.0-B-2</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">305</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1.525</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">200</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">NA</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B38-sensors-25-01092" ref-type="bibr">38</xref>]</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Virtex-7 VC709 with XCKU040</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">CCSDS 123.0-B-2</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">249.6</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1.2</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">208</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">NA</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B39-sensors-25-01092" ref-type="bibr">39</xref>]</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Cyclone V FPGA 5CGTFD9E5F35C7</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Quadrature Based</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>1611.77 *</bold>
</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>0.886</bold>
</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>1819.15</bold>
</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">19</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">This&#x000a0;work</td></tr></tbody></table><table-wrap-foot><fn><p>* Bold faced values indicate the best results.</p></fn></table-wrap-foot></table-wrap><table-wrap position="float" id="sensors-25-01092-t005"><object-id pub-id-type="pii">sensors-25-01092-t005_Table 5</object-id><label>Table 5</label><caption><p>Resource utilization of different FPGA-based implementations of HSI near-lossless compression and their comparison with this work.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Reference</th><th align="left" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">LUTs</th><th align="left" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">FFs</th><th align="left" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">DSPs</th><th align="left" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">BRAMs</th></tr></thead><tbody><tr><td align="left" valign="middle" rowspan="1" colspan="1">[<xref rid="B35-sensors-25-01092" ref-type="bibr">35</xref>]</td><td align="left" valign="middle" rowspan="1" colspan="1">17,185</td><td align="left" valign="middle" rowspan="1" colspan="1">11,915</td><td align="left" valign="middle" rowspan="1" colspan="1">63</td><td align="left" valign="middle" rowspan="1" colspan="1">85</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">[<xref rid="B36-sensors-25-01092" ref-type="bibr">36</xref>]</td><td align="left" valign="middle" rowspan="1" colspan="1">-</td><td align="left" valign="middle" rowspan="1" colspan="1">-</td><td align="left" valign="middle" rowspan="1" colspan="1">-</td><td align="left" valign="middle" rowspan="1" colspan="1">-</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">[<xref rid="B37-sensors-25-01092" ref-type="bibr">37</xref>]</td><td align="left" valign="middle" rowspan="1" colspan="1">67,362</td><td align="left" valign="middle" rowspan="1" colspan="1">68,987</td><td align="left" valign="middle" rowspan="1" colspan="1">115</td><td align="left" valign="middle" rowspan="1" colspan="1">306</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">[<xref rid="B38-sensors-25-01092" ref-type="bibr">38</xref>]</td><td align="left" valign="middle" rowspan="1" colspan="1">5058</td><td align="left" valign="middle" rowspan="1" colspan="1">3322</td><td align="left" valign="middle" rowspan="1" colspan="1">17</td><td align="left" valign="middle" rowspan="1" colspan="1">1</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">[<xref rid="B39-sensors-25-01092" ref-type="bibr">39</xref>]</td><td align="left" valign="middle" rowspan="1" colspan="1">17,390</td><td align="left" valign="middle" rowspan="1" colspan="1">16,135</td><td align="left" valign="middle" rowspan="1" colspan="1">30</td><td align="left" valign="middle" rowspan="1" colspan="1">443.5</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">This Work</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">10,320</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">6873</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">114</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">23</td></tr></tbody></table></table-wrap></floats-group></article>