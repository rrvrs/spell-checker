<!DOCTYPE article
PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with MathML3 v1.3 20210610//EN" "JATS-archivearticle1-3-mathml3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.3" xml:lang="en" article-type="research-article"><?properties open_access?><processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats"><restricted-by>pmc</restricted-by></processing-meta><front><journal-meta><journal-id journal-id-type="nlm-ta">Front Artif Intell</journal-id><journal-id journal-id-type="iso-abbrev">Front Artif Intell</journal-id><journal-id journal-id-type="publisher-id">Front. Artif. Intell.</journal-id><journal-title-group><journal-title>Frontiers in Artificial Intelligence</journal-title></journal-title-group><issn pub-type="epub">2624-8212</issn><publisher><publisher-name>Frontiers Media S.A.</publisher-name></publisher></journal-meta>
<article-meta><article-id pub-id-type="pmid">40012584</article-id><article-id pub-id-type="pmc">PMC11861366</article-id><article-id pub-id-type="doi">10.3389/frai.2025.1496653</article-id><article-categories><subj-group subj-group-type="heading"><subject>Artificial Intelligence</subject><subj-group><subject>Original Research</subject></subj-group></subj-group></article-categories><title-group><article-title>Enhanced vehicle routing for medical waste management via hybrid deep reinforcement learning and optimization algorithms</article-title></title-group><contrib-group><contrib contrib-type="author" corresp="yes"><name><surname>Khallaf</surname><given-names>Norhan</given-names></name><xref rid="aff1" ref-type="aff">
<sup>1</sup>
</xref><xref rid="c001" ref-type="corresp">
<sup>*</sup>
</xref><uri xlink:href="https://loop.frontiersin.org/people/2837037/overview"/><role content-type="https://credit.niso.org/contributor-roles/conceptualization/"/><role content-type="https://credit.niso.org/contributor-roles/data-curation/"/><role content-type="https://credit.niso.org/contributor-roles/formal-analysis/"/><role content-type="https://credit.niso.org/contributor-roles/funding-acquisition/"/><role content-type="https://credit.niso.org/contributor-roles/investigation/"/><role content-type="https://credit.niso.org/contributor-roles/methodology/"/><role content-type="https://credit.niso.org/contributor-roles/project-administration/"/><role content-type="https://credit.niso.org/contributor-roles/resources/"/><role content-type="https://credit.niso.org/contributor-roles/software/"/><role content-type="https://credit.niso.org/contributor-roles/supervision/"/><role content-type="https://credit.niso.org/contributor-roles/validation/"/><role content-type="https://credit.niso.org/contributor-roles/visualization/"/><role content-type="https://credit.niso.org/contributor-roles/writing-original-draft/"/><role content-type="https://credit.niso.org/contributor-roles/writing-review-editing/"/></contrib><contrib contrib-type="author"><name><surname>Abd-El Rouf</surname><given-names>Osama</given-names></name><xref rid="aff1" ref-type="aff">
<sup>1</sup>
</xref><role content-type="https://credit.niso.org/contributor-roles/formal-analysis/"/><role content-type="https://credit.niso.org/contributor-roles/investigation/"/><role content-type="https://credit.niso.org/contributor-roles/software/"/><role content-type="https://credit.niso.org/contributor-roles/supervision/"/><role content-type="https://credit.niso.org/contributor-roles/validation/"/><role content-type="https://credit.niso.org/contributor-roles/visualization/"/><role content-type="https://credit.niso.org/contributor-roles/writing-review-editing/"/></contrib><contrib contrib-type="author"><name><surname>Algarni</surname><given-names>Abeer D.</given-names></name><xref rid="aff2" ref-type="aff">
<sup>2</sup>
</xref><role content-type="https://credit.niso.org/contributor-roles/funding-acquisition/"/><role content-type="https://credit.niso.org/contributor-roles/resources/"/><role content-type="https://credit.niso.org/contributor-roles/writing-review-editing/"/></contrib><contrib contrib-type="author"><name><surname>Hadhoud</surname><given-names>Mohy</given-names></name><xref rid="aff3" ref-type="aff">
<sup>3</sup>
</xref><role content-type="https://credit.niso.org/contributor-roles/writing-review-editing/"/></contrib><contrib contrib-type="author"><name><surname>Kafafy</surname><given-names>Ahmed</given-names></name><xref rid="aff4" ref-type="aff">
<sup>4</sup>
</xref><role content-type="https://credit.niso.org/contributor-roles/formal-analysis/"/><role content-type="https://credit.niso.org/contributor-roles/investigation/"/><role content-type="https://credit.niso.org/contributor-roles/software/"/><role content-type="https://credit.niso.org/contributor-roles/supervision/"/><role content-type="https://credit.niso.org/contributor-roles/writing-review-editing/"/></contrib></contrib-group><aff id="aff1"><sup>1</sup><institution>Machine Learning Department, Faculty of Artificial Intelligence, Menoufia University</institution>, <addr-line>Menoufia</addr-line>, <country>Egypt</country></aff><aff id="aff2"><sup>2</sup><institution>College of Computer and Information Sciences, Princess Nourah Bint Abdulrahman University</institution>, <addr-line>Riyadh</addr-line>, <country>Saudi Arabia</country></aff><aff id="aff3"><sup>3</sup><institution>Faculty of Computer and Information, Menoufia University</institution>, <addr-line>Menoufia</addr-line>, <country>Egypt</country></aff><aff id="aff4"><sup>4</sup><institution>Data Science Department, Faculty of Artificial Intelligence, Menoufia University</institution>, <addr-line>Menoufia</addr-line>, <country>Egypt</country></aff><author-notes><fn fn-type="edited-by" id="fn0001"><p>Edited by: Alberto Ochoa Zezzatti, Universidad Aut&#x000f3;noma de Ciudad Ju&#x000e1;rez, Mexico</p></fn><fn fn-type="edited-by" id="fn0002"><p>Reviewed by: Miodrag Zivkovic, Singidunum University, Serbia</p><p>Adis Alihod&#x0017e;i&#x00107;, University of Sarajevo, Bosnia and Herzegovina</p></fn><corresp id="c001">*Correspondence: Norhan Khallaf, <email>nourhan.khalaf@ci.menofia.edu.eg</email>; <email>norhankhalaf@yahoo.com</email></corresp></author-notes><pub-date pub-type="epub"><day>12</day><month>2</month><year>2025</year></pub-date><pub-date pub-type="collection"><year>2025</year></pub-date><volume>8</volume><elocation-id>1496653</elocation-id><history><date date-type="received"><day>26</day><month>10</month><year>2024</year></date><date date-type="accepted"><day>20</day><month>1</month><year>2025</year></date></history><permissions><copyright-statement>Copyright &#x000a9; 2025 Khallaf, Abd-El Rouf, Algarni, Hadhoud and Kafafy.</copyright-statement><copyright-year>2025</copyright-year><copyright-holder>Khallaf, Abd-El Rouf, Algarni, Hadhoud and Kafafy</copyright-holder><license><ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License (CC BY). The use, distribution or reproduction in other forums is permitted, provided the original author(s) and the copyright owner(s) are credited and that the original publication in this journal is cited, in accordance with accepted academic practice. No use, distribution or reproduction is permitted which does not comply with these terms.</license-p></license></permissions><abstract><p>Modern technologies, particularly artificial intelligence, play a crucial role in improving medical waste management by developing intelligent systems that optimize the shortest routes for waste transport, from its generation to final disposal. Algorithms such as Q-learning and Deep Q Network enhance the efficiency of transport and disposal while reducing environmental pollution risks. In this study, artificial intelligence algorithms were trained using Homogeneous agent systems with a capacity of 3 tons to optimize routes between hospitals within the Closed Capacitated Vehicle Routing Problem framework. Integrating AI with pathfinding techniques, especially the hybrid A*-Deep Q Network approach, led to advanced results despite initial challenges. K-means clustering was used to divide hospitals into zones, allowing agents to navigate the shortest paths using the Deep Q Network. Analysis revealed that the agents&#x02019; capacity was not fully utilized. This led to the application of Fractional Knapsack dynamic programming with Deep Q Network to maximize capacity utilization while achieving optimal routes. Since the criteria used to compare the algorithms&#x02019; effectiveness are the number of vehicles and the utilization of the total vehicle capacity, it was found that the Fractional Knapsack with DQN stands out by requiring the fewest number of vehicles (4), achieving 0% loss in this metric as it matches the optimal value. Compared to other algorithms that require 5 or 7 vehicles, it reduces the fleet size by 20 and 42.86%, respectively. Additionally, it maximizes vehicle capacity utilization at 100%, unlike other methods, which utilize only 33 to 66% of vehicle capacity. However, this improvement comes at the cost of a 9% increase in distance, reflecting the longer routes needed to serve more hospitals per trip. Despite this trade-off, the algorithm&#x02019;s ability to minimize fleet size while fully utilizing vehicle capacity makes it the optimal choice in scenarios where these factors are critical. This approach not only improved performance but also enhanced environmental sustainability, making it the most effective and challenging solution among all the algorithms used in the study.</p></abstract><kwd-group><kwd>closed capacity vehicle routing problem</kwd><kwd>Q learning</kwd><kwd>DQN</kwd><kwd>medical waste routing optimization</kwd><kwd>unsupervised learning algorithm</kwd><kwd>hybrid optimization algorithms</kwd><kwd>multi-homogeneous agent systems</kwd></kwd-group><funding-group><award-group><funding-source id="cn1"><institution-wrap><institution>Princess NOURAH BINT ABDULRAHMAN University</institution><institution-id institution-id-type="doi">10.13039/501100004242</institution-id></institution-wrap></funding-source><award-id award-type="contract" rid="cn1">PNURSP2023R51</award-id></award-group><funding-statement>The author(s) declare that financial support was received for the research, authorship, and/or publication of this article. This research was funded by Princess NOURAH BINT ABDULRAHMAN University Researchers Supporting Project number (&#x0201c;PNURSP2023R51&#x0201d;), Riyadh, Saudi Arabia.</funding-statement></funding-group><counts><fig-count count="0"/><table-count count="0"/><equation-count count="17"/><ref-count count="37"/><page-count count="14"/><word-count count="13906"/></counts><custom-meta-group><custom-meta><meta-name>section-at-acceptance</meta-name><meta-value>Machine Learning and Artificial Intelligence</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec sec-type="intro" id="sec1"><label>1</label><title>Introduction</title><p>Medical waste management is a crucial concern for hospitals and healthcare facilities, as it involves handling a wide range of materials that can harm human health and the environment if not properly managed (<xref rid="ref9" ref-type="bibr">Fawkia et al., 2019</xref>). Medical waste is classified into two types: hazardous and non-hazardous. Effective management requires stringent practices and protocols to prevent the spread of infections, environmental contamination, and harm to healthcare workers (<xref rid="ref1" ref-type="bibr">Attrah et al., 2022</xref>). These practices include sorting waste into various types of bags, utilizing specialized vehicles to transport it to disposal sites without leaking harmful substances, securely storing it temporarily before final disposal, and employing methods such as incineration in specialized facilities or waste burial (<xref rid="ref36" ref-type="bibr">Zhao et al., 2021</xref>). Artificial intelligence aims to develop systems capable of performing tasks that traditionally require human intelligence (<xref rid="ref31" ref-type="bibr">Stahl, 2021</xref>). It significantly contributes to healthcare by devising methods to train agents (vehicles) and create strategic plans for the safe transportation of medical waste from hospitals to disposal sites via the shortest routes possible, while also considering the available capacity of the agents. This challenge is known as the Closed Capacity Vehicles Routing Problem (CCVRP), which falls under the category of NP-hard problems, as agents are required to return to the depot (collection center) (<xref rid="ref30" ref-type="bibr">Sluijk et al., 2023</xref>). There are two main types of Capacity Vehicle Routing Problems: closed and open. In the closed CVRP, each route originates and terminates at the same depot, necessitating the return of vehicles to the depot after serving all hospitals (<xref rid="ref3" ref-type="bibr">Borcinova, 2017</xref>).</p><p>In contrast, the open CVRP allows routes to terminate at any hospital location without the need to return to a central depot. Machine Learning, a branch of Artificial Intelligence, focuses on developing models that enable systems to learn from data and improve performance over time. It encompasses various learning paradigms, including Supervised, Unsupervised, Semi-supervised, and Reinforcement Learning (RL).</p><p>RL is a branch of machine learning where an agent learns to make optimal decisions by interacting with an environment and receiving feedback in the form of rewards. Unlike supervised learning, which trains models on fixed datasets with labeled examples, RL focuses on learning from the outcomes of actions through a trial-and-error process. This approach is particularly effective for complex decision-making tasks where the optimal strategy is not immediately apparent (<xref rid="ref8" ref-type="bibr">Farhaoui, 2024</xref>).</p><p>In the context of the CVRP, RL is highly advantageous as it optimizes routes and resource allocation in dynamic, large-scale scenarios. By training agents to explore various routes and adapt to changing conditions, RL can significantly reduce operational costs, enhance efficiency, and respond to real-time changes. RL methods include Model-Free RL, where the agent learns solely through trial and error without relying on an explicit model of the environment, and Model-Based RL, where the agent constructs a model for simulation and planning to inform its decisions (<xref rid="ref22" ref-type="bibr">Mazyavkina et al., 2021</xref>). Deep Reinforcement Learning (DRL) extends traditional RL by incorporating deep learning techniques, such as Deep Q-networks (DQN), to address more complex tasks effectively. DRL offers a robust framework for tackling challenging problems and achieving superior performance in dynamic environments.</p><p>A fundamental concept in RL is the policy, which governs the agent&#x02019;s actions in any given state. The policy essentially maps states or observations of the environment to the actions the agent should take to maximize cumulative rewards. Policies can be categorized into two main types: on-policy and off-policy. In on-policy learning, the agent learns and improves the policy it is currently using, with examples including SARSA and policy gradient algorithms. In off-policy learning, the agent learns the value of a different policy, allowing it to leverage historical data or experiences, which can be more efficient and flexible, especially in scenarios where exploring a new policy might be risky or costly. Examples of off-policy algorithms include Q-learning (QL) and DQN (<xref rid="ref7" ref-type="bibr">Dong et al., 2020</xref>).</p><p>The proposed solution in our paper involves the use of Q-learning, DQN, and a hybrid approach that integrates A* with DQN. Additionally, a strategy is introduced where hospitals in the case study are divided into different zones, with DQN applied within these zones to determine the shortest route using a cluster DQN approach. To further optimize the utilization of each agent&#x02019;s total capacity, fractional knapsack dynamic programming combined with DQN will be employed. This approach provides an optimal solution to this NP-hard problem.</p><p>Q-learning is a machine learning algorithm used in reinforcement learning (RL). In Q-learning, the agent learns a policy to take actions in the environment that maximize cumulative rewards over time. Here&#x02019;s a basic explanation of how Q-learning works: it involves states (S), actions (A), rewards (R), a Q-table, and the balance between exploration and exploitation. Over time, as the agent interacts with the environment and updates its Q-table, it learns the best actions to take in each state to maximize the expected cumulative reward. Q-learning is widely used in applications like robotics, game-playing, and autonomous systems, where agents learn optimal decision-making policies through trial and error (<xref rid="ref6" ref-type="bibr">Clifton and Laber, 2020</xref>).</p><p>To enhance results, multi-agent training and testing will be employed using neural networks to select the shortest route through the DQN approach. DQN utilizes deep neural networks to approximate the Q-value function (<xref rid="ref8" ref-type="bibr">Farhaoui, 2024</xref>). This function estimates the expected cumulative rewards for taking specific actions in a given state. By iteratively updating its Q-values based on experiences from interacting with the environment, DQN learns to optimize routing decisions for vehicles. Leveraging deep learning techniques, DQN effectively handles the complex decision-making process involved in solving CVRP (<xref rid="ref12" ref-type="bibr">Hou et al., 2023</xref>).</p><p>To further refine the results, the hybrid A* approach is integrated with DQN. A* (pronounced &#x0201c;A-star&#x0201d;) is a widely used pathfinding algorithm designed to determine the shortest path between nodes in a graph. It blends uniform cost search and greedy best-first search (<xref rid="ref20" ref-type="bibr">Laparra, 2019</xref>). A* assesses nodes by weighing the cost to reach the node from the start and an estimation of the cost to reach the goal from the node, typically using a heuristic function. In the context of CVRP, A* efficiently explores potential routes for vehicles, considering variables such as distance, capacity constraints, and time (<xref rid="ref2" ref-type="bibr">Birkenes, 2023</xref>).</p><p>Additionally, alternative methods are explored to achieve optimal solutions for CVRP. One approach hybridizes K-means clustering with DQN, while another incorporates fractional knapsack dynamic programming with DQN (<xref rid="ref37" ref-type="bibr">Zhu, 2022</xref>). The K-means clustering technique partitions a dataset into &#x0201c;k&#x0201d; distinct, non-overlapping clusters based on data point similarities (<xref rid="ref28" ref-type="bibr">Rahul et al., 2023</xref>). Within each cluster, the shortest route between nodes is selected using the DQN approach.</p><p>These algorithms significantly enhance medical waste management in large-scale hospitals, ensuring safe transport to waste disposal centers. However, conventional algorithms either collect all waste or none, based on agent capacity. This limitation often results in underutilized vehicle capacity. In contrast, the Fractional Knapsack Dynamic Programming approach allows agents to collect partial or full waste amounts based on available capacity. This ensures maximum utilization of each agent&#x02019;s capacity with no wasted space in the vehicles (<xref rid="ref27" ref-type="bibr">Piedra de la Cuadra, 2023</xref>).</p><p>Fractional Knapsack Dynamic Programming addresses the problem of maximizing the total value of items in a knapsack, allowing fractional inclusion of items. Unlike the 0/1 knapsack problem, which requires full inclusion or exclusion of items, the fractional version enables partial inclusion. The solution involves sorting items by their value-to-weight ratio and selecting the most valuable items or fractions until the knapsack&#x02019;s capacity is reached (<xref rid="ref10" ref-type="bibr">Frank et al., 2024</xref>).</p><p>This approach is typically solved using a greedy algorithm, which efficiently ensures the optimal distribution of value given the weight constraints. The Main challenge in this research was training and testing agents using DQN and then integrating them with other algorithms for managing medical waste across a set of hospitals in the Menoufia Governorate. The results revealed differences among various combinations, with each algorithm offering specific advantages based on criteria such as finding the shortest path between hospitals and reducing time, distance, cost, and the number of agents needed. The research did not only focus on minimizing costs but also included a comparison between fuel-powered agents and battery-operated agents to determine the most cost-effective and environmentally friendly option. The main contribution of this research lies in:</p><list list-type="order"><list-item><p>Novel Application of Algorithms: The research applies algorithms to train vehicles for selecting the shortest routes between government hospitals in Menoufia Governorate, Egypt, to collect and dispose of medical waste. The system enhances agent decision-making through reinforcement learning algorithms.</p></list-item><list-item><p>Integration of Deep Reinforcement Learning and Optimization: By combining deep reinforcement learning with optimization algorithms, the study seeks to improve solution quality and achieve optimal results. Additionally, integrating the fractional knapsack problem ensures full vehicle capacity utilization, leading to increased economic efficiency and reduced environmental impact by decreasing the number of vehicles required.</p></list-item><list-item><p>Reduction in Labor Costs: The reduction in the number of vehicles directly lowers the need for workers, thus reducing wage expenses.</p></list-item><list-item><p>Electric Vehicle Simulation: The research includes a simulation of converting vehicles to electric models to evaluate the potential economic impact of transitioning to electric-powered vehicles.</p></list-item></list><p>Despite significant advancements in vehicle routing algorithms and medical waste management strategies, current studies often fail to integrate reinforcement learning techniques and optimization methods that fully address the challenges of the Capacitated Vehicle Routing Problem (CCVRP), especially in large-scale scenarios with strict capacity and environmental constraints. This research aims to bridge this gap by proposing a novel hybrid approach to optimize routes, reduce operational costs, and enhance environmental sustainability. The optimization process involves initially using exact or greedy algorithms (non-learning algorithms), followed by improving the output (such as the shortest route) using reinforcement learning algorithms such as Q-learning, DQN, or SARSA. This integration of traditional methods with reinforcement learning techniques helps develop effective applications for managing and solving environmental and economic crises in fields such as healthcare, agriculture, industry, and others. This integrated solution is validated within the case study of the Menoufia Governorate, achieving superior performance metrics, including reduced agent deployment and optimized fuel consumption. By addressing these limitations, the research bridges the identified gaps and establishes a scalable, efficient, and environmentally friendly framework for medical waste management. The research paper presents a comprehensive analysis of these aspects, with Section 2 defining the problem, Section 3 explaining the set of algorithms used, Section 4 detailing the results, Section 5 discussing the algorithms, and Section 6 presenting the conclusions.</p></sec><sec id="sec2"><label>2</label><title>Related work</title><p>Most of the previous research that relies on AI and agent training using the reward and punishment approach, or the integration of AI algorithms with other algorithms such as heuristic search algorithms or greedy algorithms in medical waste management, has not been sufficiently available in the published literature. This problem requires the agent to manage the process of collecting waste from hospitals according to its capacity and disposing of it in waste centers while achieving the shortest possible route. This problem is known as CVRP. Below are some studies that have contributed to addressing this issue.</p><p>In this study (<xref rid="ref5" ref-type="bibr">Bozanta et al., 2022</xref>), the problem involves optimizing revenue in a food delivery service with a limited number of couriers using a Markov decision process model. Three approaches were tested: simplifying to a single courier with Q-Learning, using Double Deep Q-Networks (DDQN) for a single courier, and applying DDQN to an extensive model with multiple couriers and orders. The results indicated that Q-Learning for a single courier achieved higher rewards than a rule-based policy. DDQN outperformed both Q-Learning and the rule-based approach, though its effectiveness was dependent on hyper-parameters. The study has several limitations. The Q-learning algorithm struggled with large state spaces, necessitating approximation methods like single-courier models and DDQN. DDQN&#x02019;s performance was highly sensitive to hyper-parameters. The model only included courier and order locations, missing factors like working time and order preparation time. Additionally, the number of couriers was limited to control the state space size.</p><p>Reference study (<xref rid="ref35" ref-type="bibr">Yue et al., 2024</xref>), the focus is on the time-dependent green vehicle routing problem with time windows, which is more complex than traditional vehicle routing problems due to its simultaneous consideration of transportation time, carbon emissions, and customer satisfaction under time-dependent conditions. The proposed solution involves a multi-objective optimization algorithm that integrates a learnable crossover strategy and an adaptive search strategy based on reinforcement learning. This approach is implemented in two stages: the first stage uses a hybrid initialization strategy to generate high-quality initial solutions and employs crossover strategies to enhance convergence and explore the solution space. The second stage involves the adaptive search for further learning and refinement. Experimental results indicate that this approach achieves better solution quality compared to existing methods, demonstrating superior convergence and diversity. The research has several limitations. The model focuses on a multi-objective optimization problem but does not fully address production scheduling alongside vehicle scheduling. It also lacks consideration of more realistic constraints, such as combined pick-up and delivery needs of customers. Additionally, the model does not account for dynamic changes in the problem, which could be crucial for real-world applications. Future improvements are needed to address these aspects for a more comprehensive solution. The study (<xref rid="ref4" ref-type="bibr">Boudanga and Medromi, 2023</xref>) addressed in this study is the complex task of managing medical waste, which requires effective strategies to reduce health risks, comply with regulations, and minimize environmental impact. The study proposes a novel approach that utilizes advanced technologies and collaboration to enhance waste management. This approach includes the use of colored bags with identification tags, smart containers with sensors, GPS-equipped vehicles, and outsourced waste treatment. Additionally, it incorporates explainable artificial intelligence (XAI) technologies and genetic algorithms to optimize waste sorting, storage, treatment, and vehicle routing. The results show that integrating these technologies leads to an efficient and intelligent medical waste management system, improving public health and environmental outcomes. The article&#x02019;s main limitations include a focus primarily on vehicle routing models and cross-docking techniques, potentially overlooking other crucial aspects of medical waste management. While it highlights the use of smart cross-docking centers and specialized treatment centers, it may not fully address the practical challenges of implementing these technologies at scale. The reliance on statistical tests like ANOVA and Tukey may not capture all nuances of system performance. Furthermore, although IoT and XAI technologies are used, their real-world effectiveness and scalability remain uncertain. Future research could benefit from exploring additional optimization strategies and advanced AI techniques to address these gaps.</p><p>The study (<xref rid="ref18" ref-type="bibr">Khallaf et al., 2024</xref>) addressed in the study is the complex issue of routing vehicles with limited capacity for collecting and transporting hazardous medical waste from multiple hospitals to a disposal site. To solve this, various techniques were employed, including reinforcement learning with the SARSA algorithm, Dijkstra&#x02019;s algorithm, knapsack dynamic programming, and hybrid approaches combining these methods. The results indicate that the hybrid approach of SARSA and knapsack dynamic programming was the most effective. It reduced the number of vehicles required, maximized vehicle capacity, and identified the shortest routes between hospitals, ultimately lowering transportation costs and improving the efficiency of medical waste management. This study faces several limitations. First, the SARSA algorithm, while useful, may not always provide accurate results, particularly for large-scale problems or when dealing with a higher number of hospitals. Additionally, the vehicle routing problem with fixed capacities and specific routes may not be fully addressed by SARSA alone. The study suggests exploring alternative AI methods, such as deep neural networks and advanced reinforcement learning techniques like Double DQN and deep learning approaches. Furthermore, incorporating time windows for hospital visits and developing models with varying vehicle capacities and clustered zones could enhance the system&#x02019;s effectiveness and flexibility.</p><p>The study (<xref rid="ref16" ref-type="bibr">Kapadia and Mehta, 2023</xref>) addresses the challenges of efficient waste management in urban areas, including increasing waste generation, high transportation costs, and environmental impact due to inefficient collection systems. The proposed solution utilizes IoT-enabled smart bins and advanced algorithms, such as SC-KNN clustering for grouping bins and the Op-A* heuristic for dynamic route optimization. By leveraging real-time data from smart bins, the system minimizes unnecessary trips, reduces fuel consumption, and lowers transportation costs, contributing to environmental sustainability. However, the study highlights limitations, including scalability challenges with larger datasets, integration issues with real-world variables like traffic, and potential inefficiencies in clustering methods. Future work focuses on enhancing the system through predictive models, improved heuristics, and broader validation across diverse geographic contexts. This research demonstrates the potential of IoT and intelligent algorithms in creating sustainable and cost-effective waste management systems.</p><p>This study (<xref rid="ref17" ref-type="bibr">Karimi et al., 2024</xref>) addresses the challenges of managing hazardous medical waste (HMW) during the COVID-19 pandemic, which led to a significant increase in infectious waste volumes, posing risks to public health and the environment. To tackle these issues, a reverse logistics supply chain network is proposed, incorporating temporary treatment centers (TTCs), robust possibilistic programming, and multi-objective optimization techniques such as goal attainment and Lp-metrics. The model optimizes waste allocation, reduces exposure risks, and improves treatment efficiency, validated through a real-case application in Tonekabon City, Iran. Despite its effectiveness, the study faces limitations related to data uncertainty, cost constraints, and environmental trade-offs from certain treatment technologies. Future work suggests integrating advanced waste treatment methods, developing dynamic models with real-time data, validating the approach in diverse regions, and refining sustainability metrics. This research provides a comprehensive framework for addressing medical waste management challenges during pandemics with a focus on sustainability and risk mitigation.</p></sec><sec id="sec3"><label>3</label><title>Problem definition</title><p>In this section, the specific issue is defined, focusing on evaluating the most efficient and shortest route for the disposal of hospital waste in Menoufia Governorate. Hospital waste is collected and disposed of two to three times a week, depending on the volume of waste, services provided, and the area of the hospitals. A sample of extracted waste from the first week of January 2024 is used to train our mathematical model. This model aims to find the optimal solution for planning the transportation of waste to disposal sites via the shortest path. The goal is to develop a model that can be used internationally for any waste management CVRP. The Ministry of Health enters into agreements to hire several agents from transportation companies to transport waste from hospitals two or three times a week each month. It should be noted that these agents have their work during the rest of the week not covered by the contract. The cost is calculated based on the rental period specified in the contract. These wastes are considered hazardous, carrying pollutants and diseases. Therefore, they must be disposed of safely, away from residential areas. The waste disposal site is located in Kafr Dawood (node D) in the city of Sadat. The waste transport vehicles depart from the central collection center known as the Health Affairs Center (node C) in Menoufia Governorate. The path of any agent starts from the collection center, then selects the shortest route between hospitals, proceeds to the disposal site, and finally returns to the starting point. This is classified as a Closed CVRP. The hospitals are situated at different indices and locations on Google Maps, as discussed in reference (<xref rid="ref18" ref-type="bibr">Khallaf et al., 2024</xref>). The geographical positions of each hospital on the map. For example, Node 1, corresponding to Quwisna General Hospital, is located at coordinates (30.55 and 31.13) on the x and y axes, respectively. This study focuses on a sample comprising 15 government and fever hospitals situated in the Menoufia Governorate. Defining the objective of calculating the shortest route connecting a group of hospitals, considering waste disposal capacities, the shortest distance, and time, allows us to classify the problem as a CVRP. CVRP is a logistical challenge that involves optimizing the transportation of wastes using a fleet of vehicles, each with a limited capacity of 3 tons. It is characterized as a directed graph <inline-formula>
<mml:math id="M1" overflow="scroll"><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mfenced open="(" close=")" separators=","><mml:mi>N</mml:mi><mml:mi>A</mml:mi></mml:mfenced></mml:math>
</inline-formula>, where <inline-formula>
<mml:math id="M2" overflow="scroll"><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mfenced open="{" close="}"><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mspace width="0.5em"/><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>
</inline-formula> constitutes a set of nodes, and <inline-formula>
<mml:math id="M3" overflow="scroll"><mml:mi>A</mml:mi><mml:mo>=</mml:mo><mml:mfenced open="{" close="}"><mml:mrow><mml:mfenced open="(" close=")" separators=","><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mfenced><mml:mo>&#x02208;</mml:mo><mml:mi>N</mml:mi><mml:mo>&#x000d7;</mml:mo><mml:mi>N</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02260;</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mfenced></mml:math>
</inline-formula> forms a set of arcs. Node <inline-formula>
<mml:math id="M4" overflow="scroll"><mml:mn>0</mml:mn></mml:math>
</inline-formula> (Node C) denotes the collection center (depot) for a fleet of <inline-formula>
<mml:math id="M5" overflow="scroll"><mml:mi>V</mml:mi></mml:math>
</inline-formula> agents (vehicles) with identical capacity Q. Node 16 (Node D) signifies the disposal site where waste is managed, while the remaining <inline-formula>
<mml:math id="M6" overflow="scroll"><mml:mi>N</mml:mi></mml:math>
</inline-formula> nodes represent hospitals with the demand <inline-formula>
<mml:math id="M7" overflow="scroll"><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math>
</inline-formula>, <inline-formula>
<mml:math id="M8" overflow="scroll"><mml:mi>i</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>N</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mfenced open="{" close="}" separators=","><mml:mn>0</mml:mn><mml:mn>16</mml:mn></mml:mfenced></mml:math>
</inline-formula>. Every arc <inline-formula>
<mml:math id="M9" overflow="scroll"><mml:mfenced open="(" close=")" separators=","><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mfenced><mml:mo>&#x02208;</mml:mo><mml:mi>A</mml:mi></mml:math>
</inline-formula> is associated with a positive travel cost, which is represented by the distance between hospitals and denoted as <inline-formula>
<mml:math id="M10" overflow="scroll"><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math>
</inline-formula>
<inline-formula>
<mml:math id="M11" overflow="scroll"><mml:mi mathvariant="italic">over</mml:mi><mml:mspace width="thickmathspace"/><mml:mi mathvariant="italic">arc</mml:mi><mml:mspace width="thickmathspace"/><mml:mfenced open="(" close=")" separators=","><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mfenced><mml:mo>&#x02208;</mml:mo><mml:mi>A</mml:mi></mml:math>
</inline-formula>. The following is a mathematical formulation for CVRP (<xref rid="EQ1 EQ2 EQ3 EQ4 EQ5 EQ6 EQ7" ref-type="disp-formula">Equations 1&#x02013;7</xref>) (<xref rid="ref32" ref-type="bibr">Tirkolaee et al., 2021</xref>):</p><disp-formula id="EQ1">
<label>(1)</label>
<mml:math id="M12" overflow="scroll"><mml:mo>min</mml:mo><mml:mspace width="thickmathspace"/><mml:munder><mml:mstyle displaystyle="true"><mml:mo stretchy="true">&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>A</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mspace width="thickmathspace"/><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mspace width="thickmathspace"/><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mspace width="thickmathspace"/><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math>
</disp-formula><disp-formula id="EQ2">
<label>(2)</label>
<mml:math id="M13" overflow="scroll"><mml:mi>s</mml:mi><mml:mo>.</mml:mo><mml:mi>t</mml:mi><mml:mo>.</mml:mo><mml:munder><mml:mstyle displaystyle="true"><mml:mo stretchy="true">&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>j</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>N</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>&#x02260;</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:math>
</disp-formula><disp-formula id="EQ3">
<label>(3)</label>
<mml:math id="M14" overflow="scroll"><mml:munder><mml:mstyle displaystyle="true"><mml:mo stretchy="true">&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>i</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>N</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02260;</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:math>
</disp-formula><disp-formula id="EQ4">
<label>(4)</label>
<mml:math id="M15" overflow="scroll"><mml:munder><mml:mstyle displaystyle="true"><mml:mo stretchy="true">&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>j</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>N</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>&#x02260;</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.25em"/></mml:mrow></mml:munder><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mn>0</mml:mn><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>V</mml:mi><mml:mspace width="thickmathspace"/><mml:mi mathvariant="italic">and</mml:mi><mml:mspace width="thickmathspace"/><mml:munder><mml:mstyle displaystyle="true"><mml:mo stretchy="true">&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>i</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>N</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02260;</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.25em"/></mml:mrow></mml:munder><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>V</mml:mi></mml:math>
</disp-formula><disp-formula id="EQ5">
<label>(5)</label>
<mml:math id="M16" overflow="scroll"><mml:munder><mml:mstyle displaystyle="true"><mml:mo stretchy="true">&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>i</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mstyle displaystyle="true"><mml:mo stretchy="true">&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>j</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>N</mml:mi><mml:mfenced open="{" close="}"><mml:mn>0</mml:mn></mml:mfenced><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02260;</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mspace width="thickmathspace"/><mml:msup><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mi>n</mml:mi></mml:msup><mml:mo>&#x02264;</mml:mo><mml:mi>Q</mml:mi><mml:mo>&#x02200;</mml:mo><mml:mi>n</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>N</mml:mi></mml:math>
</disp-formula><disp-formula id="EQ6">
<label>(6)</label>
<mml:math id="M17" overflow="scroll"><mml:munder><mml:mstyle displaystyle="true"><mml:mo stretchy="true">&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>i</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mstyle displaystyle="true"><mml:mo stretchy="true">&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>j</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>N</mml:mi><mml:mfenced open="{" close="}"><mml:mn>0</mml:mn></mml:mfenced><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02260;</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mspace width="thickmathspace"/><mml:msup><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mi>n</mml:mi></mml:msup><mml:mo>=</mml:mo><mml:mi>T</mml:mi><mml:mspace width="thickmathspace"/><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#x02208;</mml:mo><mml:mi>T</mml:mi></mml:math>
</disp-formula><disp-formula id="EQ7">
<label>(7)</label>
<mml:math id="M18" overflow="scroll"><mml:munder><mml:mstyle displaystyle="true"><mml:mo stretchy="true">&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>i</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mstyle displaystyle="true"><mml:mo stretchy="true">&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>j</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>N</mml:mi><mml:mfenced open="{" close="}"><mml:mn>0</mml:mn></mml:mfenced><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02260;</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mspace width="thickmathspace"/><mml:msup><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mi>n</mml:mi></mml:msup><mml:mo>=</mml:mo><mml:mi>D</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mspace width="thickmathspace"/><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#x02208;</mml:mo><mml:mi>D</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:math>
</disp-formula><p>Where,<list list-type="bullet"><list-item><p><inline-formula>
<mml:math id="M19" overflow="scroll"><mml:mi>N</mml:mi></mml:math>
</inline-formula>denotes a group of hospitals, with <inline-formula>
<mml:math id="M20" overflow="scroll"><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mfenced open="{" close="}" separators=",,,,"><mml:mn>1</mml:mn><mml:mn>2</mml:mn><mml:mn>3</mml:mn><mml:mo>&#x02026;</mml:mo><mml:mn>15</mml:mn></mml:mfenced></mml:math>
</inline-formula>.</p></list-item><list-item><p><inline-formula>
<mml:math id="M21" overflow="scroll"><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math>
</inline-formula>is cost of travel.</p></list-item><list-item><p><inline-formula>
<mml:math id="M22" overflow="scroll"><mml:mi>A</mml:mi></mml:math>
</inline-formula>denotes arcs.</p></list-item><list-item><p><inline-formula>
<mml:math id="M23" overflow="scroll"><mml:mi>V</mml:mi></mml:math>
</inline-formula>represents the total number of agents in the system.</p></list-item><list-item><p><inline-formula>
<mml:math id="M24" overflow="scroll"><mml:mi mathvariant="normal">Q</mml:mi></mml:math>
</inline-formula>is the vehicle capacity.</p></list-item><list-item><p><inline-formula>
<mml:math id="M25" overflow="scroll"><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math>
</inline-formula>hospitals waste and deliver them to a disposal site.</p></list-item><list-item><p><inline-formula>
<mml:math id="M26" overflow="scroll"><mml:msub><mml:mi>t</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math>
</inline-formula>is a time of travel over arc<inline-formula>
<mml:math id="M27" overflow="scroll"><mml:mfenced open="(" close=")" separators=","><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mfenced><mml:mo>&#x02208;</mml:mo><mml:mi>A</mml:mi></mml:math>
</inline-formula>, <inline-formula>
<mml:math id="M28" overflow="scroll"><mml:mi>T</mml:mi></mml:math>
</inline-formula>mean summation of total time<inline-formula>
<mml:math id="M29" overflow="scroll"><mml:mfenced open="(" close=")"><mml:msub><mml:mi>t</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mfenced></mml:math>
</inline-formula>.</p></list-item><list-item><p><inline-formula>
<mml:math id="M30" overflow="scroll"><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math>
</inline-formula>is a distance of travel over arc<inline-formula>
<mml:math id="M31" overflow="scroll"><mml:mfenced open="(" close=")" separators=","><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mfenced></mml:math>
</inline-formula>.</p></list-item><list-item><p><inline-formula>
<mml:math id="M32" overflow="scroll"><mml:mi mathvariant="italic">dis</mml:mi></mml:math>
</inline-formula>is a summation of total time<inline-formula>
<mml:math id="M33" overflow="scroll"><mml:mfenced open="(" close=")"><mml:mrow><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced><mml:mtext>.</mml:mtext></mml:math>
</inline-formula></p></list-item></list></p><p>To compute this mathematical model, RL and DRL algorithms, such as Q-learning and DQN, are utilized. Additionally, each algorithm is adapted to address the vehicle routing problem, estimating not only the shortest route between agents but also allocating each shortest route to a designated number of agents based on their maximum capacity.</p></sec><sec id="sec4"><label>4</label><title>Proposed algorithm</title><p>Our closed capacity vehicle routing problem has been addressed using multiple mathematical learning approaches such as QL, DQN, a hybrid of DQN with the A* algorithm, and a hybrid of DQN with the fractional knapsack problem. The following subsections introduce each algorithm in the context of our problem.</p><sec id="sec5"><label>4.1</label><title>Q learning approach</title><p>Q-learning is used to enable an interactive system to learn how to make optimal decisions in each environment to achieve specific goals. It is an offline temporal difference RL algorithm. A set of agents <inline-formula>
<mml:math id="M34" overflow="scroll"><mml:mi>V</mml:mi><mml:mo>=</mml:mo><mml:mfenced open="{" close="}" separators=",,,"><mml:mn>1</mml:mn><mml:mn>2</mml:mn><mml:mo>&#x02026;</mml:mo><mml:mn>15</mml:mn></mml:mfenced></mml:math>
</inline-formula> is considered, where each agent picks up waste from hospitals <inline-formula>
<mml:math id="M35" overflow="scroll"><mml:mi>h</mml:mi><mml:mo>=</mml:mo><mml:mfenced open="{" close="}" separators=",,,"><mml:mn>1</mml:mn><mml:mn>2</mml:mn><mml:mo>&#x02026;</mml:mo><mml:mn>15</mml:mn></mml:mfenced></mml:math>
</inline-formula> and delivers it to the disposal site (node 16) on a <inline-formula>
<mml:math id="M36" overflow="scroll"><mml:mi>m</mml:mi><mml:mo>&#x000d7;</mml:mo><mml:mi>m</mml:mi></mml:math>
</inline-formula> grid. Q-learning is defined by a set of states, actions, and a Q-matrix. The states represent the various conditions or configurations the system can be in during the waste collection process. Actions refer to the specific choices available to the agent for movement at each state. The Q-matrix, or Q-table, stores the estimated values or rewards associated with taking specific actions in specific states. The different components of the model are detailed below in <xref rid="SM1" ref-type="supplementary-material">Supplementary Figure 1</xref> (<xref rid="ref14" ref-type="bibr">Kalakanti et al., 2019</xref>).</p><p><xref rid="SM1" ref-type="supplementary-material">Supplementary Figure 1</xref> presents the RL framework adopted for our specific case study. The formulated model is designed to determine the optimal shortest routes between hospitals while considering the waste collection capacity of the agents. A 17&#x000d7;17 grid was created where each cell contains a distance value based on recommendations. Initially, the values in the Q-matrix are set to zero. The Q-learning algorithm is used to iteratively improve these values through trial-and-error learning. The system updates the values interactively by assessing the disparities between current values and target values, which are computed using the Bellman equation (<xref rid="ref26" ref-type="bibr">Nazib and Moh, 2021</xref>).</p><disp-formula id="EQ8">
<label>(8)</label>
<mml:math id="M37" overflow="scroll"><mml:mi>Q</mml:mi><mml:mfenced open="(" close=")" separators=","><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:msub><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mfenced><mml:mo>&#x02190;</mml:mo><mml:mi>Q</mml:mi><mml:mfenced open="(" close=")" separators=","><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:msub><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mfenced><mml:mo>+</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mfenced open="[" close="]"><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi>&#x003b3;</mml:mi><mml:munder><mml:mo>max</mml:mo><mml:mi>a</mml:mi></mml:munder><mml:mi>Q</mml:mi><mml:mfenced open="(" close=")" separators=","><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mi>a</mml:mi></mml:mfenced><mml:mo>&#x02212;</mml:mo><mml:mi>Q</mml:mi><mml:mfenced open="(" close=")" separators=","><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:msub><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mfenced></mml:math>
</disp-formula><p>where <inline-formula>
<mml:math id="M38" overflow="scroll"><mml:mi>&#x003b1;</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mfenced open="(" close=")" separators=","><mml:mn>0</mml:mn><mml:mn>1</mml:mn></mml:mfenced></mml:math>
</inline-formula> is the learning rate.</p><p>It&#x02019;s important to note that the Bellman equation has been adjusted to prioritize minimizing distance, time, and cost while finding the shortest routes between nodes. The original equation typically uses the max function, but our adaptation focuses on minimization instead. To align our problem with the Q-learning algorithm&#x02019;s requirements, each arc <inline-formula>
<mml:math id="M39" overflow="scroll"><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02208;</mml:mo><mml:mi>A</mml:mi></mml:math>
</inline-formula> is considered as <inline-formula>
<mml:math id="M40" overflow="scroll"><mml:mfrac bevelled="true"><mml:mn>1</mml:mn><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mfrac></mml:math>
</inline-formula>, which involves adjustments to the adjacency matrix. However, managing the state space becomes increasingly complex in our model due to the presence of multiple agents and their concurrent positions on the grid. This complexity grows with larger numbers of vehicles and grid sizes, posing challenges for the Q-learning algorithm to derive optimal policies in larger problem instances.</p><sec id="sec6"><label>4.1.1</label><title>States</title><p>The set of states in our health care problem can be characterized as <inline-formula>
<mml:math id="M41" overflow="scroll"><mml:mi mathvariant="script">S</mml:mi><mml:mo>=</mml:mo><mml:mfenced open="{" close="}"><mml:mrow><mml:mi>v</mml:mi><mml:mo>,</mml:mo><mml:mi>h</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mspace width="thickmathspace"/></mml:mrow></mml:mfenced></mml:math>
</inline-formula>; Were:<list list-type="bullet"><list-item><p><inline-formula>
<mml:math id="M42" overflow="scroll"><mml:mi>v</mml:mi></mml:math>
</inline-formula>represent Agent (vehicles)</p></list-item><list-item><p><inline-formula>
<mml:math id="M43" overflow="scroll"><mml:mi>h</mml:mi></mml:math>
</inline-formula> represents the hospital node</p></list-item><list-item><p><inline-formula>
<mml:math id="M44" overflow="scroll"><mml:mi>d</mml:mi></mml:math>
</inline-formula>represents a disposal site where waste is generated from hospitals.</p></list-item></list>moreover, for a given <inline-formula>
<mml:math id="M45" overflow="scroll"><mml:mi>s</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi mathvariant="script">S</mml:mi></mml:math>
</inline-formula>,<inline-formula>
<mml:math id="M46" overflow="scroll"><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math>
</inline-formula> describe the state dimension for<inline-formula>
<mml:math id="M47" overflow="scroll"><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfenced open="{" close="}"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mspace width="thickmathspace"/></mml:mrow></mml:mfenced></mml:math>
</inline-formula>;Were:<list list-type="bullet"><list-item><p><inline-formula>
<mml:math id="M48" overflow="scroll"><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math>
</inline-formula>constitutes the set of vehicle locations.</p></list-item><list-item><p><inline-formula>
<mml:math id="M49" overflow="scroll"><mml:msub><mml:mi>h</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math>
</inline-formula> constitutes the set of hospital locations.</p></list-item><list-item><p><inline-formula>
<mml:math id="M50" overflow="scroll"><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math>
</inline-formula> constitutes the set of disposal based on the location of hospitals.</p></list-item></list></p><p>In the first each agent is centralized in the depot zone in the first cell with index <inline-formula>
<mml:math id="M51" overflow="scroll"><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:math>
</inline-formula> within the grid the variety of potential hospital locations is equal to the rest number of the grids <inline-formula>
<mml:math id="M52" overflow="scroll"><mml:mi mathvariant="italic">from</mml:mi><mml:mspace width="thickmathspace"/><mml:mn>1</mml:mn><mml:mo>&#x022ef;</mml:mo><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mspace width="thickmathspace"/><mml:mn>15</mml:mn></mml:math>
</inline-formula>. Demands of hospital waste accumulation take place within matrix cells that correspond to distinct hospital premises. Disposal sites can be found in specific location cells of the grid in addition to the hospital location inside the grid with index <inline-formula>
<mml:math id="M53" overflow="scroll"><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mn>16</mml:mn></mml:math>
</inline-formula>. The values in the grid represent the distances between hospitals, from each hospital to the depot, and from the hospitals to the disposal location. If there is no route between any two hospitals, the distance value is-1. When the agent reaches the disposal site, the maximum value in the grid (Reward), equal to 100, is assigned. <xref rid="SM1" ref-type="supplementary-material">Supplementary Figure 2</xref> illustrates a random scenario of the locations for each hospital, depot, and disposal site inside a matrix. In this configuration, agents collect wastes from hospitals and then deposit them in the disposal site.</p></sec><sec id="sec7"><label>4.1.2</label><title>Actions</title><p>Permission must be obtained for using copyrighted material from other sources (including the web). For every individual agent &#x1d463;&#x02208;&#x1d465;, the set of available actions is &#x1d44b;&#x0202f;=&#x0202f;left, right up, down, pick&#x02212;up, and<inline-formula>
<mml:math id="M54" overflow="scroll"><mml:mtext>.</mml:mtext></mml:math>
</inline-formula></p><p>It&#x02019;s crucial to emphasize that the first four actions in our model determine the direction of movement within the grid (<xref rid="ref19" ref-type="bibr">Laidlaw et al., 2023</xref>). When the agents&#x02019; location aligns with their load capacity, they will collect waste from hospitals. Once an agent reaches its maximum load capacity, it is required to deliver the waste to the specified disposal location. The primary objective of our model is to estimate the shortest route while maximizing the vehicle&#x02019;s capacity and minimizing time, as illustrated in <xref rid="SM1" ref-type="supplementary-material">Supplementary Figure 3</xref>.</p><p>In <xref rid="SM1" ref-type="supplementary-material">Supplementary Figure 3</xref>, if a state is randomly selected, such as Hospital-1, the agent remains in the current state by choosing the shortest route between this hospital (current action) and the next. For example, if the agent selects Hospital-2 as the shortest route from Hospital-1, and let us assume the next action chosen is to the left of Hospital-1 according to the matrix containing the distances between the hospitals, then the next state is Hospital-2, towards which the agent moves.</p></sec><sec id="sec8"><label>4.1.3</label><title>Reward</title><p>For every individual agent <inline-formula>
<mml:math id="M55" overflow="scroll"><mml:mi>v</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>x</mml:mi></mml:math>
</inline-formula>, a set of available actions is The primary aim of Q-learning is to guide the agent to the state with the maximum reward. Once the agent reaches this goal state, it stays there permanently. To determine the current action (<inline-formula>
<mml:math id="M56" overflow="scroll"><mml:msub><mml:mi>a</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math>
</inline-formula>) from the current state (<inline-formula>
<mml:math id="M57" overflow="scroll"><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math>
</inline-formula>), the agent follows the <italic>&#x003b5;</italic>-greedy policy (<xref rid="ref11" ref-type="bibr">Gilbert et al., 2023</xref>). This action is executed in the environment, resulting in feedback in the form of a reward (<inline-formula>
<mml:math id="M58" overflow="scroll"><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math>
</inline-formula>) and the next state (<inline-formula>
<mml:math id="M59" overflow="scroll"><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math>
</inline-formula>). The value inside the grid represents the distance between each hospital, between the hospital and the Directorate of Health Affairs location, and finally between hospitals and the disposal location. When the agent successfully reaches the goal state, it receives the maximum reward, which is set to 100. However, if the agent fails to reach the target state, it is penalized with a negative value. This penalty discourages the agent from failing. Incentivizing it to find alternative routes or strategies to reach the desired goal state. By adjusting the rewards and penalties, the agent can learn from its experiences and optimize its decision-making process to achieve higher success rates in reaching the goal.</p></sec><sec id="sec9"><label>4.1.4</label><title>Enhancement</title><p>The plan involves implementing QL to address the CCVRP and determine the optimal route for each hospital. After that, capacity constraints are incorporated into the Q-learning approach. As part of this refinement, modifications are made to the QL algorithm to address capacity limitations, leading to the development of Capacity-constrained QL (CQL), which allows each vehicle to manage loads of up to 3 tons. The result of Q-learning is a separate greedy traversal of the shortest route for each hospital. To enhance this, the number of agents serving groups of hospitals is inserted based on their respective capacities. When applying this challenge, the results were unsatisfactory because the agent did not fully utilize its available capacity, and there were too many agents providing the service. Therefore, it was necessary to use algorithms that train the agents more effectively to provide useful outcomes for solving the problem. In the next section, the approach used will be DQN.</p></sec></sec><sec id="sec10"><label>4.2</label><title>DQN approach</title><p>DQN is an advanced reinforcement learning algorithm that combines deep learning with Q-learning, a fundamental approach in reinforcement learning. Utilizing a deep neural network, DQN approximates the Q-function, which forecasts the anticipated future rewards based on actions taken within a given state. In the context of CVRP, DQN applies deep learning capabilities to tackle the intricate decision-making required for vehicle routing under capacity constraints, thereby providing improved and efficient solutions for route planning. In our problem scenario, DQN involves multiple agents (<xref rid="ref21" ref-type="bibr">Majid et al., 2023</xref>). It experiences training across numerous time steps and episodes to optimize performance. The DQN model configuration includes two neural networks: The Q Network and the Target Network, as shown in <xref rid="SM1" ref-type="supplementary-material">Supplementary Figure 4</xref>.</p><p><xref rid="SM1" ref-type="supplementary-material">Supplementary Figure 4</xref> illustrates the DQN architecture. In this scenario, there is a 17&#x000d7;17 grid with the following inputs to the neural network.<list list-type="bullet"><list-item><p>Current Location: 17 inputs (one hot encoded vector representing 15 hospitals, 1 central collection point, and 1 disposal center).</p></list-item><list-item><p>Remaining Load Capacity: 1 input (single scalar value).</p></list-item><list-item><p>Visitation Status: 15 inputs (binary vector for the visitation status of each hospital).</p></list-item><list-item><p>Demands: 15 inputs (demands of each hospital).</p></list-item><list-item><p>Distances: 17 inputs (distances from the current location to each of the 17 locations).</p></list-item><list-item><p>The total number of inputs is 65.</p></list-item></list></p><p>The network has two hidden layers, with the first hidden layer consisting of 128 neurons and the second hidden layer consisting of 64 neurons. The activation function used for the hidden layers is (Rectified Linear Unit) <inline-formula>
<mml:math id="M60" overflow="scroll"><mml:mi mathvariant="italic">ReLU</mml:mi><mml:mfenced open="(" close=")"><mml:mi>x</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:mo>max</mml:mo><mml:mfenced open="(" close=")" separators=","><mml:mn>0</mml:mn><mml:mi>x</mml:mi></mml:mfenced></mml:math>
</inline-formula>, while the activation function for the output layer is Linear <inline-formula>
<mml:math id="M61" overflow="scroll"><mml:mi mathvariant="normal">f</mml:mi><mml:mfenced open="(" close=")"><mml:mi mathvariant="normal">x</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:mi mathvariant="normal">ax</mml:mi><mml:mo>+</mml:mo><mml:mi mathvariant="normal">b</mml:mi></mml:math>
</inline-formula>, as it outputs continuous Q-values. The architecture includes two neural networks: The Q Network and the Target Network. The Q Network is responsible for predicting the Q-values for each action given a specific state. It is updated frequently and learns the optimal policy by minimizing the difference between predicted Q-values and the target Q-values. The Target Network provides stable target Q-values during training. It is updated less frequently, such as every few thousand steps, with the weights of the Q Network. This helps stabilize the training process by providing consistent Q-value targets, preventing oscillations and divergence. The DQN formula is derived from the Bellman equation for Q-learning (<xref rid="EQ7" ref-type="disp-formula">Equation 7</xref>). In practice, DQN uses a neural network to approximate the Q-function. The formula for DQN is structured around Bellman&#x02019;s equation (<xref rid="ref24" ref-type="bibr">Moussaoui et al., 2023</xref>).</p><disp-formula id="EQ9">
<label>(9)</label>
<mml:math id="M62" overflow="scroll"><mml:mi>Q</mml:mi><mml:mfenced open="(" close=")" separators=","><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:msub><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mfenced><mml:mo>=</mml:mo><mml:mi mathvariant="italic">reward</mml:mi><mml:mspace width="0.25em"/><mml:mi mathvariant="italic">if</mml:mi><mml:mspace width="0.25em"/><mml:mi mathvariant="italic">the</mml:mi><mml:mspace width="thickmathspace"/><mml:mi mathvariant="italic">new</mml:mi><mml:mspace width="thickmathspace"/><mml:mi mathvariant="italic">state</mml:mi><mml:mspace width="0.25em"/><mml:mi mathvariant="italic">is</mml:mi><mml:mspace width="0.25em"/><mml:mi mathvariant="italic">the</mml:mi><mml:mspace width="0.25em"/><mml:mi mathvariant="italic">terminal</mml:mi><mml:mspace width="0.25em"/><mml:mi mathvariant="italic">state</mml:mi><mml:mo>&#x02026;</mml:mo><mml:mo>.</mml:mo><mml:mi mathvariant="italic">else</mml:mi></mml:math>
</disp-formula><disp-formula id="EQ10">
<label>(10)</label>
<mml:math id="M63" overflow="scroll"><mml:mi>Q</mml:mi><mml:mfenced open="(" close=")" separators=",,"><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:msub><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mi>&#x003b8;</mml:mi></mml:mfenced><mml:mo>&#x02190;</mml:mo><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mspace width="thickmathspace"/><mml:mi>&#x003b3;</mml:mi><mml:munder><mml:mo>max</mml:mo><mml:mi>a</mml:mi></mml:munder><mml:mi>Q</mml:mi><mml:mfenced open="(" close=")" separators=",,"><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:msup><mml:mi>&#x003b8;</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup></mml:mfenced></mml:math>
</disp-formula><p>where <inline-formula>
<mml:math id="M64" overflow="scroll"><mml:mi>r</mml:mi></mml:math>
</inline-formula> is the reward, <inline-formula>
<mml:math id="M65" overflow="scroll"><mml:mi>&#x003b3;</mml:mi></mml:math>
</inline-formula> is the discount factor, <inline-formula>
<mml:math id="M66" overflow="scroll"><mml:mi>&#x003b1;</mml:mi></mml:math>
</inline-formula> is the learning rate, Q Network weights with parameters <inline-formula>
<mml:math id="M67" overflow="scroll"><mml:mi>&#x003b8;</mml:mi></mml:math>
</inline-formula> and target network weights with parameters <inline-formula>
<mml:math id="M68" overflow="scroll"><mml:msup><mml:mi>&#x003b8;</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup></mml:math>
</inline-formula>. Effective neural network training requires a well-defined loss (or cost) function. In the context of DQN, this function is formulated as the squared difference between the two terms of the Bellman equation, commonly referred to as the DQN loss function.</p><disp-formula id="EQ11">
<label>(11)</label>
<mml:math id="M69" overflow="scroll"><mml:mi mathvariant="italic">Loss</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mfenced open="(" close=")"><mml:mrow><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mi>&#x003b3;</mml:mi><mml:munder><mml:mo>max</mml:mo><mml:mi>a</mml:mi></mml:munder><mml:mi>Q</mml:mi><mml:mfenced open="(" close=")" separators=",,"><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:msup><mml:mi>&#x003b8;</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup></mml:mfenced><mml:mo>&#x02212;</mml:mo><mml:mi>Q</mml:mi><mml:mfenced open="(" close=")" separators=",,"><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:msub><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mi>&#x003b8;</mml:mi></mml:mfenced></mml:mrow></mml:mfenced><mml:mn>2</mml:mn></mml:msup></mml:math>
</disp-formula><p>As the number of hospitals increases, employing a DQN introduces several challenges, such as high-dimensional state and action spaces, scalability issues, training instability, difficulty in balancing exploration and exploitation, insufficient state representation, significant computational demands, and the risk of suboptimal solutions. Combining DQN with the A* algorithm offers an effective strategy to overcome these challenges.</p></sec><sec id="sec11"><label>4.3</label><title>Hybrid A* with DQN approach (A*DQN)</title><p>A* is a widely used pathfinding algorithm in computer science and artificial intelligence that efficiently finds a route from a starting node to a goal node within a graph or grid. A* employs a heuristic to guide its search, evaluating nodes based on their cumulative cost from the start node (referred to as the &#x0201c;g-value&#x0201d;) and the estimated cost to reach the goal node (referred to as the &#x0201c;h-value&#x0201d;). It prioritizes nodes for exploration by combining these values to identify the most optimal path. During each iteration of its main loop, A* selects the path to extend by considering both the cost of the current path and the estimated additional cost to reach the goal, specifically choosing the path that minimizes the total cost, as defined by the following equation (<xref rid="ref34" ref-type="bibr">Yan, 2023</xref>).</p><disp-formula id="EQ12">
<label>(12)</label>
<mml:math id="M70" overflow="scroll"><mml:mi>f</mml:mi><mml:mfenced open="(" close=")"><mml:mi>n</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:mi>g</mml:mi><mml:mfenced open="(" close=")"><mml:mi>n</mml:mi></mml:mfenced><mml:mo>+</mml:mo><mml:mi>h</mml:mi><mml:mfenced open="(" close=")"><mml:mi>n</mml:mi></mml:mfenced></mml:math>
</disp-formula><p>Here, <inline-formula>
<mml:math id="M71" overflow="scroll"><mml:mi>n</mml:mi></mml:math>
</inline-formula> represents the next node on the path, <inline-formula>
<mml:math id="M72" overflow="scroll"><mml:mi>g</mml:mi><mml:mfenced open="(" close=")"><mml:mi>n</mml:mi></mml:mfenced></mml:math>
</inline-formula> denotes the cost of the path from the start node to <inline-formula>
<mml:math id="M73" overflow="scroll"><mml:mi>n</mml:mi></mml:math>
</inline-formula>, and <inline-formula>
<mml:math id="M74" overflow="scroll"><mml:mi>h</mml:mi><mml:mfenced open="(" close=")"><mml:mi>n</mml:mi></mml:mfenced></mml:math>
</inline-formula> is a heuristic function that estimates the cost of the most efficient path from <inline-formula>
<mml:math id="M75" overflow="scroll"><mml:mi>n</mml:mi></mml:math>
</inline-formula> to the goal. These values are extracted from the 17&#x000d7;17 distance matrix between hospitals, previously employed by Q-learning and DQN. The A* algorithm was applied to the problem and then hybridized with DQN to enhance the solutions. This integration of the two algorithms is shown in <xref rid="SM1" ref-type="supplementary-material">Supplementary Figure 5</xref>.</p><p><xref rid="SM1" ref-type="supplementary-material">Supplementary Figure 5</xref> shows that, given the specified environment, including hospital locations, their numbers, and the distances between them, the A* algorithm was initially used alone to generate and present the results. These results were then refined using DQN. To integrate the A* algorithm with DQN for solving the CVRP problem, A* is first applied to generate initial routes between hospitals, the central collection point, and the disposal center. A* provides a preliminary solution based on distance and waste load. Then, DQN is used to optimize these routes through continuous learning. DQN utilizes a Q Network to estimate the value of different actions, while the Target Network helps stabilize the training process. Combining A* for initial route planning with DQN for dynamic optimization enhances solution efficiency, improves resource utilization, and reduces transportation costs. This method leverages the strengths of both algorithms: A* provides a robust starting point, and DQN offers ongoing improvements based on accumulated experience. Given the increase in the number of hospitals operating on a larger scale, meaning that this system works with a group of provinces together, the quality of computing solutions for this algorithm becomes more complex as it requires greater computational resources due to dealing with a larger number of potential routes directly. Therefore, it is better to group nearby hospitals into one zone to make it easier to handle a larger number. This will be explained in the next section.</p></sec><sec id="sec12"><label>4.4</label><title>K-means cluster with DQN approach (CDQN)</title><p>Clustering hospitals for CVRP involves grouping them based on proximity, which simplifies the routing process and reduces computational complexity. This approach allows each cluster to be treated as an independent CVRP, making it easier to identify optimal routes. By minimizing the number of potential routes evaluated, clustering improves efficiency and facilitates parallel processing, significantly accelerating the solution process. Moreover, clustering enhances scalability as the number of hospitals increases, preventing excessive complexity. It also enables localized optimization, allowing specific characteristics of each cluster to inform better route planning (<xref rid="ref29" ref-type="bibr">Sinaga and Yang, 2020</xref>). Overall, clustering transforms the CVRP into manageable sub-problems, leading to more effective solutions. K-Means was utilized to perform the clustering process, as illustrated in <xref rid="SM1" ref-type="supplementary-material">Supplementary Figure 6</xref>.</p><p><xref rid="SM1" ref-type="supplementary-material">Supplementary Figure 6</xref> illustrates the K-Means clustering applied to the CVRP. The K-Means algorithm is a widely used method for partitioning a set of points into a predetermined number of clusters (K) based on proximity. Its objective is to minimize the distance between points(hospitals) within each cluster while maximizing the distance between different clusters. The process starts with randomly selecting K initial cluster centers, assigning each point to the nearest center, and iteratively updating the centers until they stabilize. Steps to Execute K-Means (<xref rid="ref23" ref-type="bibr">Morissette and Chartier, 2013</xref>):<list list-type="bullet"><list-item><p>Step 1: Initialize Cluster Centers: Randomly select <inline-formula>
<mml:math id="M76" overflow="scroll"><mml:mi>K</mml:mi></mml:math>
</inline-formula> initial centroids from the dataset.</p></list-item></list>
<disp-formula id="EQ13">
<label>(13)</label>
<mml:math id="M77" overflow="scroll"><mml:mi>C</mml:mi><mml:mo>=</mml:mo><mml:mfenced open="{" close="}"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>&#x02026;</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:mfenced></mml:math>
</disp-formula>
<list list-type="bullet"><list-item><p>Step 2: Assign Points to Clusters: Assign each data point <inline-formula>
<mml:math id="M78" overflow="scroll"><mml:msub><mml:mi>h</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math>
</inline-formula> to the closest centroid <inline-formula>
<mml:math id="M79" overflow="scroll"><mml:msub><mml:mi>c</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math>
</inline-formula>.</p></list-item></list>
<disp-formula id="EQ14">
<label>(14)</label>
<mml:math id="M80" overflow="scroll"><mml:mi mathvariant="italic">Assign</mml:mi><mml:mfenced open="(" close=")"><mml:msub><mml:mi>h</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfenced><mml:mo>=</mml:mo><mml:mo>arg</mml:mo><mml:munder><mml:mo>min</mml:mo><mml:mi>k</mml:mi></mml:munder><mml:mo stretchy="true">|</mml:mo><mml:mo stretchy="true">|</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="true">|</mml:mo><mml:mo stretchy="true">|</mml:mo><mml:msup><mml:mrow/><mml:mn>2</mml:mn></mml:msup></mml:math>
</disp-formula>
<list list-type="bullet"><list-item><p>Step 3: Update Cluster Centers: After assigning all points, determine the new centroid for each cluster <inline-formula>
<mml:math id="M81" overflow="scroll"><mml:msub><mml:mi>c</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math>
</inline-formula> by calculating the average of all points in that cluster</p></list-item></list>
<disp-formula id="EQ15">
<label>(15)</label>
<mml:math id="M82" overflow="scroll"><mml:msub><mml:mi>c</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mfenced open="|" close="|"><mml:msub><mml:mi>S</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mfenced></mml:mfrac><mml:mspace width="thickmathspace"/><mml:munder><mml:mstyle displaystyle="true"><mml:mo stretchy="true">&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#x02208;</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:munder><mml:msub><mml:mi>h</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math>
</disp-formula>
<list list-type="bullet"><list-item><p>Step 4: Check for Convergence: Repeat steps 2 and 3 until the centroids change only slightly or the assignments remain unchanged. A common criterion for convergence is</p></list-item></list><disp-formula id="EQ16">
<label>(16)</label>
<mml:math id="M83" overflow="scroll"><mml:mo stretchy="true">|</mml:mo><mml:mo stretchy="true">|</mml:mo><mml:msubsup><mml:mi>c</mml:mi><mml:mi>k</mml:mi><mml:mi mathvariant="italic">new</mml:mi></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>c</mml:mi><mml:mi>k</mml:mi><mml:mi mathvariant="italic">old</mml:mi></mml:msubsup><mml:mo stretchy="true">|</mml:mo><mml:mo stretchy="true">|</mml:mo><mml:mo>&#x0003c;</mml:mo><mml:mo>&#x02208;</mml:mo></mml:math>
</disp-formula><list list-type="bullet"><list-item><p>where <inline-formula>
<mml:math id="M84" overflow="scroll"><mml:mo>&#x02208;</mml:mo></mml:math>
</inline-formula>epsilon&#x003f5; is a small threshold.</p></list-item><list-item><p>Step 5: Output the Final Clusters: after convergence is achieved, provide the final cluster assignments and centroids.</p></list-item></list></p><p>After applying the K-means algorithm to divide the specified hospitals on the Google map, the results revealed the number of hospitals and their names within each zone. This is where the DQN algorithm, as previously discussed, is utilized to find the shortest path between the hospitals within each zone individually. When applying K-means clustering with DQN, it was found that while it ensures maximum capacity for some agents, it does not do so for all. Additionally, there are constraints arising from this integration when the number of hospitals is larger at the provincial level, which may lead to suboptimal partitions from K-means that affect the final solution. Therefore, it was necessary to integrate certain algorithms with DQN to address these issues and ensure that each agent reaches its maximum capacity, such as the Fractional Knapsack Problem.</p></sec><sec id="sec13"><label>4.5</label><title>Fractional knapsack problem with DQN APPROACH (FKPDQN)</title><p>The Fractional Knapsack Problem (FKP) is an optimization challenge that aims to maximize the total value of items that can be placed in a knapsack without exceeding a specified weight limit. Unlike the 0/1 Knapsack Problem, where only whole items can be selected, the FKP allows for the inclusion of fractional quantities of items. Each item is defined by its weight and value, and the objective is to select items in such a way that the total value is maximized while staying within the weight capacity of the knapsack.</p><p>To solve the Capacitated Vehicle Routing Problem (CVRP) using dynamic programming alongside the Fractional Knapsack Problem, we break down the larger problem into smaller, manageable subproblems. By combining dynamic programming with the Fractional Knapsack Problem and using Deep Q Networks (DQN), we can find effective solutions to complex challenges. Dynamic programming assists in decomposing the problem, while DQN is employed to formulate decision-making policies in uncertain environments like CVRP.</p><p>By leveraging results from dynamic programming to estimate optimal values, the performance of DQN is enhanced through improved state evaluations. This hybrid approach enhances the decision-making capability of the model by integrating optimal solutions with experiential learning, as illustrated in <xref rid="SM1" ref-type="supplementary-material">Supplementary Figure 7</xref>.</p><p>In <xref rid="SM1" ref-type="supplementary-material">Supplementary Figure 7</xref>, the solution to the Fractional Knapsack Problem in a waste management environment is illustrated. This solution aims to achieve the shortest path between hospitals to collect waste. In this environment, each hospital collects hazardous waste in a set of bags, each weighing 30&#x0202f;kg. When the agent visits the hospital, it collects these bags (<xref rid="ref33" ref-type="bibr">Windfeld and Brooks, 2015</xref>). The concept of the Fractional Knapsack is applied, meaning it is not necessary to collect all the waste bags from a single hospital in one visit. This is because the agent&#x02019;s capacity may be full, leaving no room for the remaining bags. As a result, the hospital may be visited multiple times by different agents. For instance, in the illustrated figure, the agent collected all the bags from Hospitals 1 and 2. However, when visiting Hospital 3, it collected two bags and left one bag to be picked up by another agent, as multiple agents are used. If the 0/1 Knapsack approach were applied, the agent would leave Hospital 3 without collecting any bags if the remaining capacity was insufficient for all the hospital&#x02019;s waste, thus wasting some of the agent&#x02019;s capacity. Below are the steps to implement a waste management solution using the Fractional Knapsack algorithm (<xref rid="ref13" ref-type="bibr">Jain, n.d.</xref>):<list list-type="bullet"><list-item><p>Step 1: Define the Problem: Clarify both of the following: items(n) =15 hospitals,one depot,and one disposal site</p></list-item><list-item><p>Each item has a weight (waste)={w<sub>i</sub>}.</p></list-item><list-item><p>Each item has a value (profit)(v)={1/(cost for transporting wastes)<sub>i</sub>}.</p></list-item><list-item><p>A knapsack with Total capacity W =3 Tons.</p></list-item><list-item><p>The objective is to maximize the total value <inline-formula>
<mml:math id="M86" overflow="scroll"><mml:mi mathvariant="normal">V</mml:mi></mml:math>
</inline-formula> in the knapsack without exceeding its capacity <inline-formula>
<mml:math id="M87" overflow="scroll"><mml:mi mathvariant="normal">W</mml:mi></mml:math>
</inline-formula>.</p></list-item><list-item><p>Step 2: Initialize a DP Table: Create a 2D DP table where <inline-formula>
<mml:math id="M88" overflow="scroll"><mml:mi>d</mml:mi><mml:mfenced open="[" close="]"><mml:mi>i</mml:mi></mml:mfenced><mml:mfenced open="[" close="]"><mml:mi>w</mml:mi></mml:mfenced></mml:math>
</inline-formula>.</p></list-item><list-item><p>i represent several items, initialize from 0 to i.</p></list-item><list-item><p>w represents the maximum allowable capacity of</p></list-item><list-item><p>agents, initialized from 0 to W.</p></list-item><list-item><p>Step 3: Populate the DP Table: the dimension of the table equals (number of items +1)&#x0202f;&#x000d7;&#x0202f;(capacity of the knapsack +1). The first row of the DP table is filled with zeros, representing the base case where no items are included, which results in a maximum value of zero, regardless of the knapsack&#x02019;s capacity. The remaining values in the table are filled using the following equation.</p></list-item></list><disp-formula id="EQ17">
<label>(17)</label>
<mml:math id="M89" overflow="scroll"><mml:mi>d</mml:mi><mml:mfenced open="(" close=")" separators=","><mml:mi>i</mml:mi><mml:mi>w</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:mo>max</mml:mo><mml:mfenced open="(" close=")"><mml:mrow><mml:mi>d</mml:mi><mml:mfenced open="(" close=")"><mml:mrow><mml:mi>i</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>w</mml:mi></mml:mrow></mml:mfenced><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mfenced open="(" close=")"><mml:mrow><mml:mi>i</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>w</mml:mi><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mfenced></mml:math>
</disp-formula>
<list list-type="bullet"><list-item><p>Step 4: Steps to Extract the Result: To extract the result after filling the DP table.</p></list-item><list-item><p>Identify the Final Cell: The maximum value that can be obtained with the knapsack of capacity <inline-formula>
<mml:math id="M90" overflow="scroll"><mml:mi mathvariant="normal">will</mml:mi></mml:math>
</inline-formula> be stored in<inline-formula>
<mml:math id="M91" overflow="scroll"><mml:mi mathvariant="normal">d</mml:mi><mml:mfenced open="[" close="]"><mml:mi mathvariant="normal">i</mml:mi></mml:mfenced><mml:mfenced open="[" close="]"><mml:mi mathvariant="normal">w</mml:mi></mml:mfenced></mml:math>
</inline-formula>.</p></list-item><list-item><p>Backtrack to Find the Items Included:</p></list-item></list><list list-type="order"><list-item><p>Start from <inline-formula>
<mml:math id="M92" overflow="scroll"><mml:mi mathvariant="normal">d</mml:mi><mml:mfenced open="[" close="]"><mml:mi mathvariant="normal">i</mml:mi></mml:mfenced><mml:mfenced open="[" close="]"><mml:mi mathvariant="normal">w</mml:mi></mml:mfenced></mml:math>
</inline-formula>.</p></list-item><list-item><p>Check if the value came from the inclusion of the current item or from the previous item without including the current item.</p></list-item><list-item><p>If the value came from the inclusion of the current item, add this item (or the fractional part of it) to the solution list.</p></list-item><list-item><p>Adjust the remaining capacity of the knapsack accordingly.</p></list-item><list-item><p>Move to the next item and repeat until you reach <inline-formula>
<mml:math id="M93" overflow="scroll"><mml:mi>d</mml:mi><mml:mfenced open="[" close="]"><mml:mn>0</mml:mn></mml:mfenced><mml:mfenced open="[" close="]"><mml:mn>0</mml:mn></mml:mfenced></mml:math>
</inline-formula>.</p></list-item></list></p><p>After following all the steps, the shortest route for each agent is determined using dynamic programming for the Fractional Knapsack Problem. This approach ensures that all agents can fully utilize their 3-ton capacity without leaving any unused space. By dividing the waste among all hospitals and determining the shortest path between them, the solution from the Fractional Knapsack Problem becomes the input for the DQN algorithm in the neural network. This output is then trained and improved by comparing it with the DQN output to obtain optimal solutions, as previously explained in detail for DQN.</p><p>All agents tasked with finding the shortest route between hospitals for collecting and transporting waste to the disposal center have a carrying capacity of 3 tons. These vehicles require fuel, either 92-octane gasoline or diesel. In this study, 92-octane gasoline is used. The average fuel efficiency for transport vehicles up to 5 tons is 6.5&#x0202f;km/liter (<xref rid="ref25" ref-type="bibr">Mu&#x000f1;oz et al., 2022</xref>). The cost for each agent will be calculated based on the distance covered, starting from the moment the vehicle leaves the depot, traveling along the shortest route between hospitals, reaching the disposal center, and returning to the depot. Finally, a comparison will be made between the average fuel cost for these agents and the cost of operating battery-powered agents (<xref rid="ref15" ref-type="bibr">Kaleg et al., 2015</xref>).</p></sec></sec><sec id="sec14"><label>5</label><title>Study results</title><p>The experimental case study presented in this paper applied the proposed artificial intelligence techniques described earlier to address the CVRP problem. The implementation was carried out in Python on a Windows 10 (64-bit) system featuring a 3.10&#x0202f;GHz CPU, 16&#x0202f;GB of RAM, and a 512&#x0202f;GB SSD. The results provide insights into the number of agents used, the shortest routes assigned to each agent, and the load capacity transported by each agent along their respective routes.</p><sec id="sec15"><label>5.1</label><title>CQL result</title><p>Upon training our approaches to address the identified issue during the parameter tuning process, such as the learning rate <italic>&#x003b1;</italic> and discounting factor <italic>&#x003b3;</italic>, the optimal training selection for each parameter was found to be <inline-formula>
<mml:math id="M94" overflow="scroll"><mml:mi>&#x003b1;</mml:mi><mml:mo>=</mml:mo><mml:mn>.9</mml:mn></mml:math>
</inline-formula> and <inline-formula>
<mml:math id="M95" overflow="scroll"><mml:mi>&#x003b3;</mml:mi><mml:mo>=</mml:mo><mml:mn>.8</mml:mn></mml:math>
</inline-formula>. Q-learning algorithm is utilized to optimize our problem of finding the shortest route between hospitals while considering the waste amount from each hospital and the maximum capacity of the agent, set at 3 tons. The output includes a greedy traversal route designed for each hospital. We modified the Q-learning implementation to incorporate the constraints of the Capacitated Vehicle Routing Problem (CVRP). Our goal is to establish connections between the different routes assigned to each hospital, using multiple agents for service. Additionally, we need to set a constraint: if the medical waste generated by a single hospital reaches approximately 3 tons, the assigned agent will serve that hospital exclusively and then proceed directly to the waste disposal center. Specifically, node 15, which represents the Liver Institute, generates about 3 tons of waste with each visit. As a result, this hospital has been assigned a dedicated agent, as each agent has a capacity of 3 tons. These agents begin their trips from a collection center, visit hospitals to collect waste, transport it to a designated disposal site, and then return to the collection center, as shown in <xref rid="SM1" ref-type="supplementary-material">Supplementary Table 1</xref>.</p><p>In <xref rid="SM1" ref-type="supplementary-material">Supplementary Table 1</xref>, the first column lists the number of vehicles (Agents No.) employed by CQL to address the waste collection issue. The second column outlines each vehicle&#x02019;s route, starting from the depot, passing through nearby hospitals, and reaching the waste disposal site during the first visit of the week. The third column displays the total waste capacity collected along each vehicle&#x02019;s route during these hospital visits. The fourth column details the vehicle routes for the second visit within the same week, which occurs 3&#x0202f;days after the first. The fifth column indicates the waste capacity generated by the hospitals during the second visit of the week.</p><p>This table identifies the shortest routes for all hospitals by deploying multiple agents, each according to its maximum capacity. For instance, the first column indicates that a total of seven agents were assigned, as determined by CQL, to manage waste collection across all hospitals. The second column presents the shortest route for each agent. For instance, Agent-1 (<inline-formula>
<mml:math id="M96" overflow="scroll"><mml:msub><mml:mi>A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math>
</inline-formula>) follows the route (C&#x0202f;&#x02192;&#x0202f;15&#x0202f;&#x02192;&#x0202f;D&#x0202f;&#x02192;&#x0202f;C), starting at depot <inline-formula>
<mml:math id="M97" overflow="scroll"><mml:mfenced open="(" close=")"><mml:mi>C</mml:mi></mml:mfenced></mml:math>
</inline-formula>, moving to node 15, and continuing to the next node until the agent&#x02019;s capacity reaches 3 tons. Once this capacity is reached, the agent proceeds to the disposal site <inline-formula>
<mml:math id="M98" overflow="scroll"><mml:mfenced open="(" close=")"><mml:mi>D</mml:mi></mml:mfenced></mml:math>
</inline-formula> to offload the waste and returns it to the depot, adhering to the closed CVRP model. This process occurs during the agent&#x02019;s first visit of the week.</p><p>Columns 3 and 5 display the route and vehicle capacity during the second visit in the same week. Agent <inline-formula>
<mml:math id="M99" overflow="scroll"><mml:msub><mml:mi>A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math>
</inline-formula> serves only the Liver Institute node, as it reaches its maximum capacity after collecting waste. This node is visited three times per week due to the accumulation of waste, totaling nearly 3 tons. For instance, <inline-formula>
<mml:math id="M100" overflow="scroll"><mml:msub><mml:mi>A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math>
</inline-formula> selects the shortest route, which involves visiting Quwisna General Hospital first, then Qasr Hospital, before heading to the disposal site to dispose of the waste and returning it to the collection center. On the <inline-formula>
<mml:math id="M101" overflow="scroll"><mml:msup><mml:mn>1</mml:mn><mml:mrow><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msup></mml:math>
</inline-formula>visit, the agent handles 2.379 tons, and on the <inline-formula>
<mml:math id="M102" overflow="scroll"><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:mi>n</mml:mi><mml:mi>d</mml:mi></mml:mrow></mml:msup></mml:math>
</inline-formula>visit, the total capacity is 2.46 tons over the week. It is noted that the agent&#x02019;s route during the <inline-formula>
<mml:math id="M103" overflow="scroll"><mml:msup><mml:mn>1</mml:mn><mml:mrow><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msup></mml:math>
</inline-formula> visit is identical to that of the <inline-formula>
<mml:math id="M104" overflow="scroll"><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:mi>n</mml:mi><mml:mi>d</mml:mi></mml:mrow></mml:msup></mml:math>
</inline-formula> visit, but the capacity varies. This variation can be attributed to the changing amounts of waste generated by the hospitals each time.</p><p>Ultimately, it was observed that the value of each agent did not reach its maximum capacity. Therefore, a more precise training and testing process is required to fully utilize the maximum capacity of each agent. Hence, DQN is selected for this purpose.</p></sec><sec id="sec16"><label>5.2</label><title>DQN result</title><p>Upon training our approaches to address the identified issue After applying the DQN approach, the optimal tuning parameters for each variable are as follows: <inline-formula>
<mml:math id="M105" overflow="scroll"><mml:mi>&#x003b1;</mml:mi><mml:mo>=</mml:mo><mml:mn>.001</mml:mn></mml:math>
</inline-formula>, <inline-formula>
<mml:math id="M106" overflow="scroll"><mml:mi>&#x003b3;</mml:mi><mml:mo>=</mml:mo><mml:mn>.95</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">&#x003b5;</mml:mi><mml:mspace width="thickmathspace"/><mml:mfenced open="(" close=")"><mml:mi mathvariant="normal">Exploration rate</mml:mi></mml:mfenced></mml:math>
</inline-formula>starts at <inline-formula>
<mml:math id="M107" overflow="scroll"><mml:mn>1.0</mml:mn></mml:math>
</inline-formula> and gradually decaying to a minimum value of <inline-formula>
<mml:math id="M108" overflow="scroll"><mml:mn>0.01</mml:mn></mml:math>
</inline-formula>. The multi-agent system utilizes exploration and exploitation during training to determine the optimal shortest route for each agent, serving the nearest hospital, as shown in <xref rid="SM1" ref-type="supplementary-material">Supplementary Table 2</xref>.</p><p><xref rid="SM1" ref-type="supplementary-material">Supplementary Table 2</xref> presents the optimal solution for each agent in serving a group of hospitals. <inline-formula>
<mml:math id="M109" overflow="scroll"><mml:msub><mml:mi>A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math>
</inline-formula> exclusively served node 15, as discussed previously. The remaining agents served the rest of the group of hospitals. For instance, <inline-formula>
<mml:math id="M110" overflow="scroll"><mml:msub><mml:mi>A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math>
</inline-formula> visited node 1, then node 2, followed by node 9, and finally, node 6, disposing of wastes at the disposal site and returning to the collection center with 2.981 tons during the first visit and 2.997 tons during the second visit, depending on the extracted waste amount. The total number of agents used to serve our problem during the first and second visits is five. It&#x02019;s important to note that the DQN-trained network aims to find the shortest route while considering the maximum capacity, which is close to 3 for this agent compared to the Q-learning approach. However, not all agents consistently achieve their maximum capacity. Combining A-star with DQN will contribute significantly to enhancing these outcomes.</p></sec><sec id="sec17"><label>5.3</label><title>A* result</title><p>Initially, A* was implemented exclusively to find the shortest path by assigning the values of g(n) and h(n) between each node and between each node with the collection center and the disposal site, represented as a matrix. This resulted in the optimal path for each agent, as shown in <xref rid="SM1" ref-type="supplementary-material">Supplementary Table 3</xref>.</p><p><xref rid="SM1" ref-type="supplementary-material">Supplementary Table 3</xref> illustrates the optimal path for each agent. During the week&#x02019;s first visit, all hospitals were served by four agents, but in the second visit, five agents were used. Hospital 3, which was initially served by agent <inline-formula>
<mml:math id="M111" overflow="scroll"><mml:msub><mml:mi>A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math>
</inline-formula>, was served by agent <inline-formula>
<mml:math id="M112" overflow="scroll"><mml:msub><mml:mi>A</mml:mi><mml:mn>5</mml:mn></mml:msub></mml:math>
</inline-formula> on the second visit. This change was due to the amount of waste extracted during the second visit exceeding the maximum capacity of agent <inline-formula>
<mml:math id="M113" overflow="scroll"><mml:msub><mml:mi>A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math>
</inline-formula>, requiring the assistance of another agent. Some agents&#x02019; capacities are close to 3 tons, indicating that the A* approach effectively addressed our problem. This efficiency suggests that integrating A* with DQN could further enhance the network, enabling the Q-network to overcome near-optimal results when using DQN alone and ultimately determine the optimal solution for each agent through hybridization as shown in <xref rid="SM1" ref-type="supplementary-material">Supplementary Table 4</xref>.</p><p><xref rid="SM1" ref-type="supplementary-material">Supplementary Table 4</xref> depicts the integration of A* with DQN, which improves the outcomes of the DQN approach. In this hybridization, agents&#x02019; capacities are closer to the optimal 3 tons, unlike when using DQN alone. In the upcoming section, a clustering approach will be introduced to categorize hospitals before the implementation of the DQN network, aiming to evaluate enhancements in the outcomes.</p></sec><sec id="sec18"><label>5.4</label><title>CDQN result</title><p>After applying the K-means clustering approach, which divided all hospitals on Google Maps into three zones with the nearest nodes grouped, the Directorate of Health Affairs node was chosen as the centroid based on the points of other hospitals. The shortest route within each zone was then determined using the DQN approach as shown in <xref rid="SM1" ref-type="supplementary-material">Supplementary Table 5</xref>.</p><p><xref rid="SM1" ref-type="supplementary-material">Supplementary Table 5</xref> illustrates how the K-means approach divides all hospitals into three zones: the first zone includes nodes 2, 5, 11, 12, and 15; the second zone includes nodes 3, 6, 7, 8, 10, and 13; and the third zone includes nodes 1, 4, 9, and 14. During the first visit, node 15 contained nearly 3 tons of waste, so the agent served only this hospital. The second agent served the remaining hospitals in this zone using the DQN approach to find the shortest route between them. The third agent served the second zone, also using the DQN approach to consider the shortest route between hospitals. The fourth agent served the third zone. However, during the second visit, the second agent could not serve all hospitals in its zone because its capacity exceeded 3 tons, so it only served nodes 2, 5, and 11. Similarly, the fourth agent did not serve all nodes in zone three; it served only nodes 4, 1, and 9. Consequently, nodes 12 and 14 were not served, and a fifth agent was required to serve these two hospitals while respecting the shortest route. Finally, it was observed that all the approaches aimed to achieve the shortest route between hospitals while maximizing the capacity of each agent. However, if there is a small amount of remaining capacity, such as one-eighth of a ton, the vehicle would go to the disposal site to offload it because there is no hospital with just one-eighth of a ton of waste. Therefore, it is suggested that the waste in the hospitals be divided to utilize the remaining capacity of the agents. In other words, the waste in the hospitals should be split so that part of it fills the remaining capacity of one agent, and the other part is served by another agent.</p></sec><sec id="sec19"><label>5.5</label><title>FKPDQN result</title><p>Every hospital produces a certain amount of waste. According to the fractional knapsack approach, it is important to know how many bags of waste each hospital produces out of the total amount of waste it generates. This approach relies on collecting part or all of the waste from a hospital based on the available capacity of each agent during their visit to any hospital. Since the capacity of a single waste bag in any hospital is 30&#x0202f;kg, a hospital may need to be visited once or multiple times depending on the available load capacity of the agent. Here is an explanation of the shortest path between hospitals using this algorithm, as shown in <xref rid="SM1" ref-type="supplementary-material">Supplementary Table 6</xref>.</p><p><xref rid="SM1" ref-type="supplementary-material">Supplementary Table 6</xref> shows that four agents were utilized during both the first and second visits. Each agent can carry a maximum capacity of 3 tons, but the fourth agent did not reach this capacity because all nodes were serviced and no additional nodes remained. Node 4 was visited by two different agents. Initially, <inline-formula>
<mml:math id="M114" overflow="scroll"><mml:msub><mml:mi>A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math>
</inline-formula> serviced node 4 and loaded 2 bags, along with bags from other nodes along the same path. Subsequently, <inline-formula>
<mml:math id="M115" overflow="scroll"><mml:msub><mml:mi>A</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:math>
</inline-formula> loaded the remaining 34 bags at node 4, following a different path and servicing different nodes compared to <inline-formula>
<mml:math id="M116" overflow="scroll"><mml:msub><mml:mi>A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math>
</inline-formula>. Similarly, node 2 was serviced by <inline-formula>
<mml:math id="M117" overflow="scroll"><mml:msub><mml:mi>A</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:math>
</inline-formula> and <inline-formula>
<mml:math id="M118" overflow="scroll"><mml:msub><mml:mi>A</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:math>
</inline-formula>. <inline-formula>
<mml:math id="M119" overflow="scroll"><mml:msub><mml:mi>A</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:math>
</inline-formula> serviced nodes 4, 5, 8, and 2, taking only 21 bags from node 2. The remaining 29 bags from node 2 were serviced by <inline-formula>
<mml:math id="M120" overflow="scroll"><mml:msub><mml:mi>A</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:math>
</inline-formula>, along with its assigned path. Node 15 was served three times a week by agent <inline-formula>
<mml:math id="M121" overflow="scroll"><mml:msub><mml:mi>A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math>
</inline-formula>, with a total load of 100 bags each time.</p></sec></sec><sec sec-type="discussion" id="sec20"><label>6</label><title>Discussion</title><p>In general, an EV will submit a charging request when the strategic plans must be developed to determine agents who will visit hospitals periodically and efficiently. By optimizing the number of agents visiting hospitals, economic savings can be achieved in terms of fuel, agent wages, vehicle maintenance, as well as the time, distance, and cost associated with waste transportation.</p><p>The proposed approach integrates advanced reinforcement learning techniques, including Q-learning, DQN, and hybrid methods such as DQN combined with fractional knapsack and A* algorithms, to address the complexities of medical waste management. A comparison of various algorithms highlighted their effectiveness in optimizing resource utilization. For instance, using CQL required 7 agents to cover all hospitals with a visitation rate of twice per week, while DQN reduced this number to 5 agents for the same rate. A* initially assigned 4 agents for the first visit but needed 5 for the second visit. Both the combination of DQN and A* and Cluster DQN required 4 agents for the first visit and 5 for the second. FKPDQN outperformed others by achieving a consistent outcome of requiring only 4 agents for both visits. Although the number of agents assigned by algorithms like A*, DQN, A*DQN, and CDQN was similar, with each agent&#x02019;s capacity approaching the total limit of 3 tons, none of these algorithms reached full capacity utilization. In contrast, FKPDQN proved to be the most effective, not only reducing the fleet size to 4 agents but also ensuring that each agent achieved the maximum capacity of 3 tons.</p><p>These results demonstrate the practical implications of the approach, including reduced fleet size, optimized capacity utilization, and minimized operational costs. By assigning existing agents with the remaining capacity to service additional hospitals, the approach further reduces the distance traveled and minimizes return trips, resulting in significant savings in fuel, time, and maintenance costs. The scalability of techniques like clustering (e.g., K-means) and hybrid models ensures efficient management of large-scale hospital networks. Moreover, the framework promotes sustainability by encouraging the use of electric vehicles, reducing emissions, and lowering fuel dependency, making it environmentally friendly.</p><p>Ultimately, the preference for algorithms requiring fewer agents aligns with the goals of reducing fuel consumption, costs, and environmental impact. The ability of FKPDQN to utilize all agents to their full capacity while minimizing the number of required agents positions it as the optimal choice in medical waste management. This balance between operational efficiency and environmental sustainability underscores the practical and scalable benefits of the proposed approaches. The distance and time covered by each algorithm will be presented subsequently in <xref rid="SM1" ref-type="supplementary-material">Supplementary Figures 8</xref>, <xref rid="SM1" ref-type="supplementary-material">9</xref>.</p><p><xref rid="SM1" ref-type="supplementary-material">Supplementary Figures 8</xref>, <xref rid="SM1" ref-type="supplementary-material">9</xref> show the total distance covered during two visits in a week using six different approaches established in our problem. The distance for <inline-formula>
<mml:math id="M122" overflow="scroll"><mml:msub><mml:mi>A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math>
</inline-formula> remains the same across all approaches because this agent exclusively serves node 15, which generates 3 tons of waste, matching the agent&#x02019;s capacity. The distances traveled by the other agents differ across the various approaches, depending on the hospitals they visit. The total distance traveled by multi-agents (from A1 to A7) between hospitals during the first visit is as follows: 622.34&#x0202f;km for CQL, 487.6&#x0202f;km for A*, 609.2&#x0202f;km for DQN, 489.33&#x0202f;km for A* DQN, 492.33&#x0202f;km for CDQN, and 580.2&#x0202f;km for FKPDQN. In the second visit within the same week, CQL&#x02019;s distance remains unchanged at 622.34&#x0202f;km. For the other methods, the distances are: A* covers 529.6&#x0202f;km, DQN remains at 609.2&#x0202f;km, A* DQN covers 588.3&#x0202f;km, CDQN covers 599.43&#x0202f;km, and FKPDQN remains at 580.2&#x0202f;km. It is observed that the longest distance traveled by multi-agents was achieved using FKPDQN. This is because FKPDQN aimed to optimize the maximum value for each agent; it does not head to the depot if there is still available capacity but instead looks for the nearest hospital to fill the remaining capacity, even if it means taking some waste from that hospital. In contrast, the other approaches also sought the shortest route while considering capacity, but they operated on a 0/1 loading waste system from hospitals. Therefore, FKPDQN achieved longer distances because it visited more hospitals to fully utilize the available 3-ton capacity. When the number of multi-agents used is reduced, it improves the quality of the algorithm because saving an agent means saving the distance they would have traveled. The distances that the removed agent would have covered are distributed among the remaining agents who are already serving the hospitals until they reach their total capacity of 3 tons. If the number of agents used to serve the hospitals is ranked while achieving maximum capacity, FKPDQN performs the best among the other approaches used here. <xref rid="SM1" ref-type="supplementary-material">Supplementary Figures 10</xref>, <xref rid="SM1" ref-type="supplementary-material">11</xref> present the time metrics for each approach.</p><p><xref rid="SM1" ref-type="supplementary-material">Supplementary Figures 10</xref>, <xref rid="SM1" ref-type="supplementary-material">11</xref> show the time consumed during two weekly visits. In each approach that was implemented, every agent travels a specific distance until completing its route, and this distance corresponds to the time for the agent. The total time consumed by multi-agents (from A1 to A7) between hospitals during the first visit is as follows: 1006&#x0202f;min for CQL, 771&#x0202f;min for A*, 912&#x0202f;min for DQN, 770&#x0202f;min for A* DQN, 772&#x0202f;min for CDQN, and 913&#x0202f;min for FKPDQN. During the second visit within the same week, CQL&#x02019;s time remains at 1006&#x0202f;min. For the other approaches, the times are: A* takes 841&#x0202f;min, DQN remains at 912&#x0202f;min, A* DQN takes 949&#x0202f;min, CDQN takes 940&#x0202f;min, and FKPDQN stays at 913&#x0202f;min. Ranking the time consumed according to the distance calculated for each approach shows that FKPDQN is the best and CQL is the worst. Each waste transfer from the hospital to the disposal site by agents incurs a fee as shown in <xref rid="SM1" ref-type="supplementary-material">Supplementary Figures 12</xref>, <xref rid="SM1" ref-type="supplementary-material">13</xref>.</p><p><xref rid="SM1" ref-type="supplementary-material">Supplementary Figures 12</xref>, <xref rid="SM1" ref-type="supplementary-material">13</xref> illustrate the fees incurred for transporting waste from each hospital to the disposal site based on the amount of waste from each hospital. The average cost of transporting one ton of waste from hospitals is half a dollar. To calculate the waste transportation cost for any hospital, multiply the amount of waste in tons by half a dollar. <inline-formula>
<mml:math id="M123" overflow="scroll"><mml:msub><mml:mi>A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math>
</inline-formula> incurs the same fee across different approaches because it consistently serves node 15, while other agents experience varying costs across different approaches. The total waste fees for multiple agents (A1 to A7) between hospitals during the first visit are uniformly $6.40 across all methods: CQL, A*, DQN, A* DQN, CDQN, and FKPDQN. On the second visit within the same week, the fee increases to $6.51 for all methods, including CQL, A*, DQN, A* DQN, CDQN, and FKPDQN. The cost of waste transportation from hospitals remains constant across all algorithms, despite differences in routes and the number of agents used. This consistency is because each algorithm serves the same number of hospitals (15) with the same amount of waste, resulting in the same final transportation cost. Additionally, to operate effectively, agents require fuel to complete their journeys, as shown in <xref rid="SM1" ref-type="supplementary-material">Supplementary Figures 14</xref>, <xref rid="SM1" ref-type="supplementary-material">15</xref>.</p><p><xref rid="SM1" ref-type="supplementary-material">Supplementary Figures 14</xref>, <xref rid="SM1" ref-type="supplementary-material">15</xref> illustrate the transportation cost for each agent. It is essential to determine the fuel consumption for each agent, given that each agent has a capacity of 3 tons and the average distance covered per liter of fuel is 8&#x0202f;km/liter. This is achieved by calculating the distance each agent travels during their journey, dividing it by the fuel consumption per kilometer, and then multiplying the result by the specified fuel cost in Egyptian pounds. This allows for determining the actual fuel cost for each agent based on the distance traveled. All values are converted into dollars to comply with international standards. If these agents are fueled with 92 octane gasoline, which costs 12.5 Egyptian pounds per liter, the total fuel cost for each agent based on the total distance traveled is as follows: $20.39 for CQL, $15.97 for A*, $19.96 for DQN, $16.03 for A* DQN, $16.13 for CDQN, and $19.01 for FKPDQN during the first visit to the group of hospitals. During the second visit within the same week, the costs are: $20.39 for CQL, $17.35 for A*, $19.96 for DQN, $19.27 for A* DQN, $19.67 for CDQN and $19.01 for FKPDQN. The total fuel cost for agents using the CQL and FKPDQN algorithms remains the same during both the first and second visits of the week, as each agent follows the same route for waste collection, leading to identical distances traveled and, consequently, identical costs.</p><p>Naturally, reducing the number of agents results in savings in their usage, which translates to reduced fuel consumption and maintenance costs, all achieved with the FKPDQN algorithm. If these agents are switched from fuel to electric power, the economic impact is illustrated in <xref rid="SM1" ref-type="supplementary-material">Supplementary Figures 16</xref>, <xref rid="SM1" ref-type="supplementary-material">17</xref>.</p><p><xref rid="SM1" ref-type="supplementary-material">Supplementary Figures 16</xref>, <xref rid="SM1" ref-type="supplementary-material">17</xref> show the battery costs for each agent across different methods. Given the continuous rise in fuel prices in Egypt and the resulting harmful emissions, it is crucial to find solutions to these issues by converting fuel-powered agents to battery-powered ones. Charging these agents requires connecting them to a fast charger at charging stations, where a direct payment system is used. Battery-powered agents are more efficient and require less maintenance compared to those running on fuel. To calculate the cost for battery-powered agents, it is important to know that the average cost of electricity per kilowatt-hour is 1 Egyptian pound, and the battery efficiency allows for a range of 5 kilometers per kilowatt-hour for 3-ton agents. The distance traveled by the agent during their journey is also considered, and all values are converted into dollars for easier reading and international classification.</p><p>The battery costs for multiple agents covering different distances in each approach are as follows: $2.61 for the CQL algorithm, $2.04 for the A* algorithm, $2.55 for the DQN algorithm, $2.05 for the A* DQN algorithm, $2.06 for the CDQN algorithm, and $2.43 for the FKPDQN algorithm during the first visit to the group of hospitals. During the second visit within the same week, the costs are: $2.61 for the CQL algorithm, $2.22 for the A* algorithm, $2.55 for the DQN algorithm, $2.47 for the A* DQN algorithm, $2.51 for the CDQN algorithm, and $2.43 for the FKPDQN algorithm.</p><p>When comparing the cost of fuel to using batteries, it is clear that battery costs are significantly lower. Therefore, battery-powered agents are preferred for CVRP problems. This preference is not only due to the higher fuel costs compared to batteries but also because battery use reduces environmental pollution from fuel emissions and decreases the need for regular maintenance of agents. The worst-case scenario for waste collection was studied, which occurred during the second visit of the week. This was considered the worst case because the amount of waste generated by each hospital was larger than during the first visit. When evaluating the quality metrics across different algorithms, it was observed that the performance metrics were measured based on several key factors: the number of vehicles used, the utilization of vehicle capacity, distance traveled, time taken, fuel cost, and battery cost.</p><p><xref rid="SM1" ref-type="supplementary-material">Supplementary Table 7</xref> presents a comparative analysis in percentages, based on the reference values, to assess the performance of each algorithm. <xref rid="SM1" ref-type="supplementary-material">Supplementary Table 7</xref> shows the Reference (Optimal) Values and the Percentage differences between the algorithms used. The FKPDQN algorithm is the best for minimizing the number of vehicles required, as it uses only 4 vehicles, achieving 0% loss compared to other algorithms. Additionally, it achieves 100% vehicle capacity utilization. Although it results in a higher distance and time compared to the algorithm with the lowest reference values, this is because it visits more hospitals to maximize vehicle capacity, thereby reducing the number of vehicles needed. Ultimately, the primary goal or key metric is to minimize the number of vehicles and fully utilize their capacity. So, the FKPDQN algorithm reduces the number of agents needed, leading to effective savings in cost, distance, and time.</p></sec><sec sec-type="conclusions" id="sec21"><label>7</label><title>Conclusion</title><p>The study, while demonstrating promising results, has certain limitations that require further elaboration. One of the main challenges is algorithmic scalability, as hybrid algorithms might encounter computational complexity when applied to larger datasets or multi-depot scenarios. Additionally, real-world integration poses practical implementation challenges, such as dynamic changes in hospital waste generation and fluctuating traffic conditions, which were not fully addressed in this study. Another limitation is the potential inefficiency of K-means clustering, which may lead to suboptimal groupings, especially in large provincial networks. Lastly, while the results are based on a specific case study, their broader applicability to other regions or contexts needs further validation to ensure their generalization.</p><p>In this paper, flexible reinforcement learning techniques were combined with optimization methods to train multiple agents for solving the CVRP in waste management. Several effective approaches were applied to address this problem, including CQL, A* with DQN, clustering with DQN, and FKPDQN. The most effective algorithm was FKPDQN, which integrates the fractional knapsack problem with DQN. This hybrid algorithm reduces the number of agents required to find the shortest path for collecting medical waste between hospitals and utilizes the maximum capacity of each agent, which is up to 3 tons, ensuring full utilization of available capacity without any wastage, compared to other methodologies used in this study.</p><p>The ranking of these approaches in terms of effectiveness is as follows: FKPDQN, followed by CDQN, A* DQN, A*, DQN, and finally CQL. Given that hospitals handle waste by dividing it into 30&#x0202f;kg bags, using the FKPDQN algorithm, which allows for collecting some or all of the waste according to the available agent capacity, is more effective than using the 0/1 knapsack problem that requires either taking all the waste or leaving it entirely, as seen with other approaches.</p><p>The options CDQN and A* DQN are nearly equal in terms of the following criteria: the number of agents used, the proximity of each agent&#x02019;s capacity to 3 tons, and the reduction in distance and time per agent. However, CDQN has an advantage due to its ability to handle large hospital networks more effectively. In such large-scale scenarios, CDQN can implement a shared cluster agent, which reduces the number of agents needed and lowers both cost and time. On the other hand, A* and DQN compete similarly in terms of the factors contributing to algorithm quality. However, A* is more precise and faster in execution for small hospital networks because it functions as a heuristic search algorithm. For large hospital networks, DQN is preferred as it trains the agent extensively to achieve an optimal solution rather than a near-optimal one, which is the case with A* when applied to a larger number of hospitals.</p><p>The agents start their journey from a single depot, the &#x0201c;Directorate of Health Affairs,&#x0201d; where they search for the shortest path to collect waste from hospitals. They then fill their agent capacity and head to the only disposal site, &#x0201c;Kafr Dawood Al-Sadat,&#x0201d; to dispose of the waste. FKPDQN used 4 agents to find the shortest path and collect waste from 15 hospitals located in different areas on the map, covering a total distance of 580.2&#x0202f;km in 913&#x0202f;min, with a fuel cost of $19.01 for 92 octane gasoline. If the agents were operating on batteries, the savings would amount to $2.43.</p><p>Future work includes applying CVRP with a time window for hospital waste management. In addition to the previously mentioned DQN, other advanced deep reinforcement learning (DRL) algorithms, such as Proximal Policy Optimization (PPO), Twin Delayed Deep Deterministic Policy Gradient (TD3), and A3C (Asynchronous Advantage Actor-Critic), will be explored to improve decision-making and the overall optimization of routes. Additionally, performance could be further improved by using a multi-depot algorithm to achieve shorter routes and lower costs, and Open CVRP could be used to reduce the distance traveled. Moreover, to expand the applicability of the model, future research will involve integrating data from different provinces, enabling the use of shared cluster agents. These agents would optimize the routing by estimating the shortest routes between hospitals across regions, creating a more scalable and adaptable system for waste management. This research can provide solutions not only for hospital waste management within a single area but also across multiple regions, helping to further reduce costs and improve efficiency in large-scale urban environments.</p></sec></body><back><sec sec-type="data-availability" id="sec22"><title>Data availability statement</title><p>The original contributions presented in the study are included in the article/<xref rid="SM1" ref-type="supplementary-material">Supplementary material</xref>, further inquiries can be directed to the corresponding author.</p></sec><sec sec-type="author-contributions" id="sec23"><title>Author contributions</title><p>NK: Conceptualization, Data curation, Formal analysis, Funding acquisition, Investigation, Methodology, Project administration, Resources, Software, Supervision, Validation, Visualization, Writing &#x02013; original draft, Writing &#x02013; review &#x00026; editing. OA-E: Formal analysis, Investigation, Software, Supervision, Validation, Visualization, Writing &#x02013; review &#x00026; editing. AA: Funding acquisition, Resources, Writing &#x02013; review &#x00026; editing. MH: Writing &#x02013; review &#x00026; editing. AK: Formal analysis, Investigation, Software, Supervision, Writing &#x02013; review &#x00026; editing.</p></sec><sec sec-type="COI-statement" id="sec25"><title>Conflict of interest</title><p>The authors declare that the research was conducted in the absence of any commercial or financial relationships that could be construed as a potential conflict of interest.</p></sec><sec sec-type="ai-statement" id="sec26"><title>Generative AI statement</title><p>The author(s) declare that no Gen AI was used in the creation of this manuscript.</p></sec><sec sec-type="disclaimer" id="sec27"><title>Publisher&#x02019;s note</title><p>All claims expressed in this article are solely those of the authors and do not necessarily represent those of their affiliated organizations, or those of the publisher, the editors and the reviewers. Any product that may be evaluated in this article, or claim that may be made by its manufacturer, is not guaranteed or endorsed by the publisher.</p></sec><sec sec-type="supplementary-material" id="sec28"><title>Supplementary material</title><p>The Supplementary material for this article can be found online at: <ext-link xlink:href="https://www.frontiersin.org/articles/10.3389/frai.2025.1496653/full#supplementary-material" ext-link-type="uri">https://www.frontiersin.org/articles/10.3389/frai.2025.1496653/full#supplementary-material</ext-link></p><supplementary-material id="SM1" position="float" content-type="local-data"><media xlink:href="Data_Sheet_1.pdf"/></supplementary-material></sec><ref-list><title>References</title><ref id="ref1"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Attrah</surname><given-names>M.</given-names></name><name><surname>Elmanadely</surname><given-names>A.</given-names></name><name><surname>Akter</surname><given-names>D.</given-names></name><name><surname>Rene</surname><given-names>E. R.</given-names></name></person-group> (<year>2022</year>). <article-title>A review on medical waste management: treatment, recycling, and disposal options</article-title>. <source>Environments</source>
<volume>9</volume>:<fpage>146</fpage>. doi: <pub-id pub-id-type="doi">10.3390/environments9110146</pub-id></mixed-citation></ref><ref id="ref2"><mixed-citation publication-type="other"><person-group person-group-type="author"><name><surname>Birkenes</surname><given-names>V. &#x000d8;.</given-names></name></person-group>, (<year>2023</year>). <source>A deep reinforcement learning-based Hyperheuristic for the flexible traveling repairman problem with drones</source>.</mixed-citation></ref><ref id="ref3"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Borcinova</surname><given-names>Z.</given-names></name></person-group> (<year>2017</year>). <article-title>Two models of the capacitated vehicle routing problem</article-title>. <source>Croat. Operat. Res. Rev.</source>
<volume>8</volume>, <fpage>463</fpage>&#x02013;<lpage>469</lpage>. doi: <pub-id pub-id-type="doi">10.17535/crorr.2017.0029</pub-id></mixed-citation></ref><ref id="ref4"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Boudanga</surname><given-names>Z.</given-names></name><name><surname>Medromi</surname><given-names>H.</given-names></name></person-group> (<year>2023</year>). <article-title>An innovative medical waste management system in a smart city using XAI and vehicle routing optimization</article-title>. <source>F1000Research</source>
<volume>12</volume>:<fpage>1060</fpage>. doi: <pub-id pub-id-type="doi">10.12688/f1000research.138867.1</pub-id>, PMID: <pub-id pub-id-type="pmid">37928174</pub-id>
</mixed-citation></ref><ref id="ref5"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bozanta</surname><given-names>A.</given-names></name><name><surname>Cevik</surname><given-names>M.</given-names></name><name><surname>Kavaklioglu</surname><given-names>C.</given-names></name><name><surname>Kavuk</surname><given-names>E. M.</given-names></name><name><surname>Tosun</surname><given-names>A.</given-names></name><name><surname>Sonuc</surname><given-names>S. B.</given-names></name><etal/></person-group>. (<year>2022</year>). <article-title>Courier routing and assignment for food delivery service using reinforcement learning</article-title>. <source>Comput. Ind. Eng.</source>
<volume>164</volume>:<fpage>107871</fpage>. doi: <pub-id pub-id-type="doi">10.1016/j.cie.2021.107871</pub-id></mixed-citation></ref><ref id="ref6"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Clifton</surname><given-names>J.</given-names></name><name><surname>Laber</surname><given-names>E.</given-names></name></person-group> (<year>2020</year>). <article-title>Q-learning: theory and applications</article-title>. <source>Ann. Rev. Stat. Appl.</source>
<volume>7</volume>, <fpage>279</fpage>&#x02013;<lpage>301</lpage>. doi: <pub-id pub-id-type="doi">10.1146/annurev-statistics-031219-041220</pub-id></mixed-citation></ref><ref id="ref7"><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Dong</surname><given-names>H.</given-names></name><name><surname>Dong</surname><given-names>H.</given-names></name><name><surname>Ding</surname><given-names>Z.</given-names></name><name><surname>Zhang</surname><given-names>S.</given-names></name><name><surname>Chang</surname><given-names>T.</given-names></name></person-group> (<year>2020</year>). <source>Deep reinforcement learning</source>: <publisher-name>Springer</publisher-name>.</mixed-citation></ref><ref id="ref8"><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Farhaoui</surname><given-names>Y.</given-names></name></person-group> (<year>2024</year>). <source>Artificial intelligence, data science and applications: ICAISE'2023, Volume 1</source>: <publisher-name>Springer Nature</publisher-name>.</mixed-citation></ref><ref id="ref9"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fawkia</surname><given-names>E. A.</given-names></name><name><surname>Mahmoud</surname><given-names>M. A.</given-names></name><name><surname>Nehal</surname><given-names>M. F.</given-names></name><name><surname>Gehad</surname><given-names>A.</given-names></name></person-group> (<year>2019</year>). <article-title>Evaluation of hazardous medical wastes management system in great Cairo governorates</article-title>. <source>J. Environ. Sci.</source>
<volume>46</volume>, <fpage>1</fpage>&#x02013;<lpage>250</lpage>. doi: <pub-id pub-id-type="doi">10.21608/jes.2019.69641</pub-id></mixed-citation></ref><ref id="ref10"><mixed-citation publication-type="other"><person-group person-group-type="author"><name><surname>Frank</surname><given-names>E.</given-names></name><name><surname>Oluwaseyi</surname><given-names>J.</given-names></name><name><surname>Olaoye</surname><given-names>G.</given-names></name></person-group>, (<year>2024</year>). <source>Knapsack Problem</source>.</mixed-citation></ref><ref id="ref11"><mixed-citation publication-type="other"><person-group person-group-type="author"><name><surname>Gilbert</surname><given-names>T. K.</given-names></name><name><surname>Lambert</surname><given-names>N.</given-names></name><name><surname>Dean</surname><given-names>S.</given-names></name><name><surname>Zick</surname><given-names>T.</given-names></name><name><surname>Snoswell</surname><given-names>A.</given-names></name><name><surname>Mehta</surname><given-names>S.</given-names></name></person-group>, (<year>2023</year>). "Reward reports for reinforcement learning." in <italic>Proceedings of the 2023 AAAI/ACM Conference on AI, Ethics, and Society</italic>.</mixed-citation></ref><ref id="ref12"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hou</surname><given-names>B.</given-names></name><name><surname>Zhang</surname><given-names>K.</given-names></name><name><surname>Gong</surname><given-names>Z.</given-names></name><name><surname>Li</surname><given-names>Q.</given-names></name><name><surname>Zhou</surname><given-names>J.</given-names></name><name><surname>Zhang</surname><given-names>J.</given-names></name><etal/></person-group>. (<year>2023</year>). <article-title>SoC-VRP: a deep-reinforcement-learning-based vehicle route planning mechanism for service-oriented cooperative ITS</article-title>. <source>Electronics</source>
<volume>12</volume>:<fpage>4191</fpage>. doi: <pub-id pub-id-type="doi">10.3390/electronics12204191</pub-id></mixed-citation></ref><ref id="ref13"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Jain</surname><given-names>L.</given-names></name></person-group>, (<year>n.d.</year>). <source>A study on different techniques to solve knapsack problem</source>. Algorithms for Knapsack Problems. <volume>224</volume>. doi: <pub-id pub-id-type="doi">10.1016/S0304-0208(08)73237-7</pub-id></mixed-citation></ref><ref id="ref14"><mixed-citation publication-type="other"><person-group person-group-type="author"><name><surname>Kalakanti</surname><given-names>A. K.</given-names></name><name><surname>Verma</surname><given-names>S.</given-names></name><name><surname>Paul</surname><given-names>T.</given-names></name><name><surname>Yoshida</surname><given-names>T.</given-names></name></person-group>, (<year>2019</year>). &#x0201c;RL SolVeR pro: reinforcement learning for solving vehicle routing problem." in <italic>2019 1st international conference on artificial intelligence and data sciences (AiDAS)</italic>.</mixed-citation></ref><ref id="ref15"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kaleg</surname><given-names>S.</given-names></name><name><surname>Hapid</surname><given-names>A.</given-names></name><name><surname>Kurnia</surname><given-names>M. R.</given-names></name></person-group> (<year>2015</year>). <article-title>Electric vehicle conversion based on distance, speed, and cost requirements</article-title>. <source>Energy Procedia</source>
<volume>68</volume>, <fpage>446</fpage>&#x02013;<lpage>454</lpage>. doi: <pub-id pub-id-type="doi">10.1016/j.egypro.2015.03.276</pub-id></mixed-citation></ref><ref id="ref16"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kapadia</surname><given-names>N.</given-names></name><name><surname>Mehta</surname><given-names>R.</given-names></name></person-group> (<year>2023</year>). <article-title>Dynamic route optimization for IoT based intelligent waste collection vehicle routing system</article-title>. <source>Intelligent Dec. Technol.</source>
<volume>17</volume>, <fpage>751</fpage>&#x02013;<lpage>772</lpage>. doi: <pub-id pub-id-type="doi">10.3233/IDT-230032</pub-id></mixed-citation></ref><ref id="ref17"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Karimi</surname><given-names>H.</given-names></name><name><surname>Wassan</surname><given-names>N.</given-names></name><name><surname>Ehsani</surname><given-names>B.</given-names></name><name><surname>Tavakkoli-Moghaddam</surname><given-names>R.</given-names></name><name><surname>Ghodratnama</surname><given-names>A.</given-names></name></person-group> (<year>2024</year>). <article-title>Optimizing COVID-19 medical waste management using goal and robust possibilistic programming</article-title>. <source>Eng. Appl. Artif. Intell.</source>
<volume>131</volume>:<fpage>107838</fpage>. doi: <pub-id pub-id-type="doi">10.1016/j.engappai.2023.107838</pub-id></mixed-citation></ref><ref id="ref18"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Khallaf</surname><given-names>N. M.</given-names></name><name><surname>Abdel-Raouf</surname><given-names>O.</given-names></name><collab id="coll1">others</collab></person-group> (<year>2024</year>). <article-title>Reinforcement learning-driven enhancement of medical waste collection within capacity-homogeneous vehicle routing</article-title>. <source>Int. J. Comp. Inform.</source>
<volume>11</volume>, <fpage>79</fpage>&#x02013;<lpage>94</lpage>. doi: <pub-id pub-id-type="doi">10.21608/ijci.2024.288957.1163</pub-id></mixed-citation></ref><ref id="ref19"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Laidlaw</surname><given-names>C.</given-names></name><name><surname>Russell</surname><given-names>S. J.</given-names></name><name><surname>Dragan</surname><given-names>A.</given-names></name></person-group> (<year>2023</year>). <article-title>Bridging RL theory and practice with the effective horizon</article-title>. <source>Adv. Neural Inf. Proces. Syst.</source>
<volume>36</volume>, <fpage>58953</fpage>&#x02013;<lpage>59007</lpage>. doi: <pub-id pub-id-type="doi">10.48550/arXiv.2304.09853</pub-id></mixed-citation></ref><ref id="ref20"><mixed-citation publication-type="other"><person-group person-group-type="author"><name><surname>Laparra</surname><given-names>D. Monzonis</given-names></name></person-group>, (<year>2019</year>). <source>Pathfinding algorithms in graphs and applications</source>.</mixed-citation></ref><ref id="ref21"><mixed-citation publication-type="other"><person-group person-group-type="author"><name><surname>Majid</surname><given-names>A. Y.</given-names></name><name><surname>Saaybi</surname><given-names>S.</given-names></name><name><surname>Francois-Lavet</surname><given-names>V.</given-names></name><name><surname>Prasad</surname><given-names>R. V.</given-names></name><name><surname>Verhoeven</surname><given-names>C.</given-names></name></person-group>, (<year>2023</year>). "Deep reinforcement learning versus evolution strategies: a comparative survey." in <italic>IEEE Transactions on Neural Networks and Learning Systems</italic>.</mixed-citation></ref><ref id="ref22"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mazyavkina</surname><given-names>N.</given-names></name><name><surname>Sviridov</surname><given-names>S.</given-names></name><name><surname>Ivanov</surname><given-names>S.</given-names></name><name><surname>Burnaev</surname><given-names>E.</given-names></name></person-group> (<year>2021</year>). <article-title>Reinforcement learning for combinatorial optimization: a survey</article-title>. <source>Comput. Oper. Res.</source>
<volume>134</volume>:<fpage>105400</fpage>. doi: <pub-id pub-id-type="doi">10.1016/j.cor.2021.105400</pub-id></mixed-citation></ref><ref id="ref23"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Morissette</surname><given-names>L.</given-names></name><name><surname>Chartier</surname><given-names>S.</given-names></name></person-group> (<year>2013</year>). <article-title>The k-means clustering technique: general considerations and implementation in Mathematica</article-title>. <source>Tutor. Quant. Methods Psychol.</source>
<volume>9</volume>, <fpage>15</fpage>&#x02013;<lpage>24</lpage>. doi: <pub-id pub-id-type="doi">10.20982/tqmp.09.1.p015</pub-id></mixed-citation></ref><ref id="ref24"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Moussaoui</surname><given-names>H.</given-names></name><name><surname>Benslimane</surname><given-names>M.</given-names></name><collab id="coll2">others</collab></person-group> (<year>2023</year>). <article-title>Reinforcement learning: a review</article-title>. <source>Int. J. Comp. Dig. Syst.</source>
<volume>13</volume>, <fpage>1465</fpage>&#x02013;<lpage>1483</lpage>. doi: <pub-id pub-id-type="doi">10.12785/ijcds/1301118</pub-id>, PMID: <pub-id pub-id-type="pmid">16760924</pub-id>
</mixed-citation></ref><ref id="ref25"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mu&#x000f1;oz</surname><given-names>P.</given-names></name><name><surname>Franceschini</surname><given-names>E. A.</given-names></name><name><surname>Levitan</surname><given-names>D.</given-names></name><name><surname>Rodriguez</surname><given-names>C. R.</given-names></name><name><surname>Humana</surname><given-names>T.</given-names></name><name><surname>Perelmuter</surname><given-names>G. C.</given-names></name></person-group> (<year>2022</year>). <article-title>Comparative analysis of cost, emissions and fuel consumption of diesel, natural gas, electric, and hydrogen urban buses</article-title>. <source>Energy Convers. Manag.</source>
<volume>257</volume>:<fpage>115412</fpage>. doi: <pub-id pub-id-type="doi">10.1016/j.enconman.2022.115412</pub-id></mixed-citation></ref><ref id="ref26"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Nazib</surname><given-names>J. R. A.</given-names></name><name><surname>Moh</surname><given-names>S.</given-names></name></person-group> (<year>2021</year>). <article-title>Reinforcement learning-based routing protocols for vehicular ad hoc networks: a comparative survey</article-title>. <source>IEEE Access</source>
<volume>9</volume>, <fpage>27552</fpage>&#x02013;<lpage>27587</lpage>. doi: <pub-id pub-id-type="doi">10.1109/ACCESS.2021.3058388</pub-id></mixed-citation></ref><ref id="ref27"><mixed-citation publication-type="other"><person-group person-group-type="author"><name><surname>Piedra de la Cuadra</surname><given-names>R.</given-names></name></person-group>, (<year>2023</year>). <source>Knapsack models applied to the solution of complex problems in transport planning</source>.</mixed-citation></ref><ref id="ref28"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rahul</surname><given-names>J. K.</given-names></name><name><surname>Chakraborty</surname><given-names>S.</given-names></name><name><surname>Khayer</surname><given-names>N.</given-names></name><name><surname>Uddin</surname><given-names>M. F.</given-names></name><name><surname>Haque</surname><given-names>M. R.</given-names></name></person-group> (<year>2023</year>). <article-title>Designing an energy-efficient transportation network to transport perishable crops: An aggregated VRP and X-means clustering approach</article-title>. <source>Heliyon</source>
<volume>9</volume>:<fpage>e19692</fpage>. doi: <pub-id pub-id-type="doi">10.1016/j.heliyon.2023.e19692</pub-id>, PMID: <pub-id pub-id-type="pmid">37810121</pub-id>
</mixed-citation></ref><ref id="ref29"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sinaga</surname><given-names>K. P.</given-names></name><name><surname>Yang</surname><given-names>M.-S.</given-names></name></person-group> (<year>2020</year>). <article-title>Unsupervised K-means clustering algorithm</article-title>. <source>IEEE Access</source>
<volume>8</volume>, <fpage>80716</fpage>&#x02013;<lpage>80727</lpage>. doi: <pub-id pub-id-type="doi">10.1109/ACCESS.2020.2988796</pub-id></mixed-citation></ref><ref id="ref30"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sluijk</surname><given-names>N.</given-names></name><name><surname>Florio</surname><given-names>A. M.</given-names></name><name><surname>Kinable</surname><given-names>J.</given-names></name><name><surname>Dellaert</surname><given-names>N.</given-names></name><name><surname>Van Woensel</surname><given-names>T.</given-names></name></person-group> (<year>2023</year>). <article-title>Two-echelon vehicle routing problems: a literature review</article-title>. <source>Eur. J. Oper. Res.</source>
<volume>304</volume>, <fpage>865</fpage>&#x02013;<lpage>886</lpage>. doi: <pub-id pub-id-type="doi">10.1016/j.ejor.2022.02.022</pub-id></mixed-citation></ref><ref id="ref31"><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Stahl</surname><given-names>B. C.</given-names></name></person-group> (<year>2021</year>). <source>Artificial intelligence for a better future: An ecosystem perspective on the ethics of AI and emerging digital technologies</source>: <publisher-name>Springer Nature</publisher-name>.</mixed-citation></ref><ref id="ref32"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tirkolaee</surname><given-names>E. B.</given-names></name><name><surname>Abbasian</surname><given-names>P.</given-names></name><name><surname>Weber</surname><given-names>G.-W.</given-names></name></person-group> (<year>2021</year>). <article-title>Sustainable fuzzy multi-trip location-routing problem for medical waste management during the COVID-19 outbreak</article-title>. <source>Sci. Total Environ.</source>
<volume>756</volume>:<fpage>143607</fpage>. doi: <pub-id pub-id-type="doi">10.1016/j.scitotenv.2020.143607</pub-id>, PMID: <pub-id pub-id-type="pmid">33220997</pub-id>
</mixed-citation></ref><ref id="ref33"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Windfeld</surname><given-names>E. S.</given-names></name><name><surname>Brooks</surname><given-names>M. S.-L.</given-names></name></person-group> (<year>2015</year>). <article-title>Medical waste management&#x02013;a review</article-title>. <source>J. Environ. Manag.</source>
<volume>163</volume>, <fpage>98</fpage>&#x02013;<lpage>108</lpage>. doi: <pub-id pub-id-type="doi">10.1016/j.jenvman.2015.08.013</pub-id>, PMID: <pub-id pub-id-type="pmid">26301686</pub-id>
</mixed-citation></ref><ref id="ref34"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yan</surname><given-names>Y.</given-names></name></person-group> (<year>2023</year>). <article-title>Research on the a star algorithm for finding shortest path</article-title>. <source>Highligh. Sci. Eng. Technol.</source>
<volume>46</volume>, <fpage>154</fpage>&#x02013;<lpage>161</lpage>. doi: <pub-id pub-id-type="doi">10.54097/hset.v46i.7697</pub-id></mixed-citation></ref><ref id="ref35"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yue</surname><given-names>B.</given-names></name><name><surname>Ma</surname><given-names>J.</given-names></name><name><surname>Shi</surname><given-names>J.</given-names></name><name><surname>Yang</surname><given-names>J.</given-names></name></person-group> (<year>2024</year>). <article-title>A deep reinforcement learning-based adaptive search for solving time-dependent green vehicle routing problem</article-title>. <source>IEEE Access</source>
<volume>12</volume>, <fpage>33400</fpage>&#x02013;<lpage>33419</lpage>. doi: <pub-id pub-id-type="doi">10.1109/ACCESS.2024.3369474</pub-id></mixed-citation></ref><ref id="ref36"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhao</surname><given-names>H.-L.</given-names></name><name><surname>Wang</surname><given-names>L.</given-names></name><name><surname>Liu</surname><given-names>F.</given-names></name><name><surname>Liu</surname><given-names>H.-Q.</given-names></name><name><surname>Zhang</surname><given-names>N.</given-names></name><name><surname>Zhu</surname><given-names>Y.-W.</given-names></name></person-group> (<year>2021</year>). <article-title>Energy, environment and economy assessment of medical waste disposal technologies in China</article-title>. <source>Sci. Total Environ.</source>
<volume>796</volume>:<fpage>148964</fpage>. doi: <pub-id pub-id-type="doi">10.1016/j.scitotenv.2021.148964</pub-id>, PMID: <pub-id pub-id-type="pmid">34273841</pub-id>
</mixed-citation></ref><ref id="ref37"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhu</surname><given-names>J.</given-names></name></person-group> (<year>2022</year>). <article-title>Solving capacitated vehicle routing problem by an improved genetic algorithm with fuzzy C-means clustering</article-title>. <source>Sci. Program.</source>
<volume>2022</volume>:<fpage>8514660</fpage>. doi: <pub-id pub-id-type="doi">10.1016/j.scitotenv.2021.148964</pub-id></mixed-citation></ref></ref-list></back></article>