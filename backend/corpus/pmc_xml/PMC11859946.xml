<!DOCTYPE article
PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with MathML3 v1.3 20210610//EN" "JATS-archivearticle1-3-mathml3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.3" xml:lang="en" article-type="research-article"><?properties open_access?><processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats"><restricted-by>pmc</restricted-by></processing-meta><front><journal-meta><journal-id journal-id-type="nlm-ta">Sensors (Basel)</journal-id><journal-id journal-id-type="iso-abbrev">Sensors (Basel)</journal-id><journal-id journal-id-type="publisher-id">sensors</journal-id><journal-title-group><journal-title>Sensors (Basel, Switzerland)</journal-title></journal-title-group><issn pub-type="epub">1424-8220</issn><publisher><publisher-name>MDPI</publisher-name></publisher></journal-meta>
<article-meta><article-id pub-id-type="pmid">40006445</article-id><article-id pub-id-type="pmc">PMC11859946</article-id><article-id pub-id-type="doi">10.3390/s25041216</article-id><article-id pub-id-type="publisher-id">sensors-25-01216</article-id><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title>Implementing Anomaly-Based Intrusion Detection for Resource-Constrained Devices in IoMT Networks</article-title></title-group><contrib-group><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0001-9130-4605</contrib-id><name><surname>Zachos</surname><given-names>Georgios</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Conceptualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/conceptualization/">Conceptualization</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Methodology" vocab-term-identifier="https://credit.niso.org/contributor-roles/methodology/">Methodology</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Software" vocab-term-identifier="https://credit.niso.org/contributor-roles/software/">Software</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Validation" vocab-term-identifier="https://credit.niso.org/contributor-roles/validation/">Validation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Investigation" vocab-term-identifier="https://credit.niso.org/contributor-roles/investigation/">Investigation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x02013; original draft" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-original-draft/">Writing &#x02013; original draft</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x02013; review &#x00026; editing" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-review-editing/">Writing &#x02013; review &#x00026; editing</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Visualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/visualization/">Visualization</role><xref rid="af1-sensors-25-01216" ref-type="aff">1</xref><xref rid="af2-sensors-25-01216" ref-type="aff">2</xref><xref rid="c1-sensors-25-01216" ref-type="corresp">*</xref></contrib><contrib contrib-type="author"><name><surname>Mantas</surname><given-names>Georgios</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Conceptualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/conceptualization/">Conceptualization</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Methodology" vocab-term-identifier="https://credit.niso.org/contributor-roles/methodology/">Methodology</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Validation" vocab-term-identifier="https://credit.niso.org/contributor-roles/validation/">Validation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Investigation" vocab-term-identifier="https://credit.niso.org/contributor-roles/investigation/">Investigation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x02013; original draft" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-original-draft/">Writing &#x02013; original draft</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x02013; review &#x00026; editing" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-review-editing/">Writing &#x02013; review &#x00026; editing</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Visualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/visualization/">Visualization</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Supervision" vocab-term-identifier="https://credit.niso.org/contributor-roles/supervision/">Supervision</role><xref rid="af1-sensors-25-01216" ref-type="aff">1</xref><xref rid="af2-sensors-25-01216" ref-type="aff">2</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0003-1364-0261</contrib-id><name><surname>Porfyrakis</surname><given-names>Kyriakos</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Conceptualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/conceptualization/">Conceptualization</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x02013; review &#x00026; editing" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-review-editing/">Writing &#x02013; review &#x00026; editing</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Supervision" vocab-term-identifier="https://credit.niso.org/contributor-roles/supervision/">Supervision</role><xref rid="af2-sensors-25-01216" ref-type="aff">2</xref></contrib><contrib contrib-type="author"><name><surname>Rodriguez</surname><given-names>Jonathan</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Conceptualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/conceptualization/">Conceptualization</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x02013; review &#x00026; editing" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-review-editing/">Writing &#x02013; review &#x00026; editing</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Supervision" vocab-term-identifier="https://credit.niso.org/contributor-roles/supervision/">Supervision</role><xref rid="af1-sensors-25-01216" ref-type="aff">1</xref><xref rid="af3-sensors-25-01216" ref-type="aff">3</xref></contrib></contrib-group><contrib-group><contrib contrib-type="editor"><name><surname>Rizzardi</surname><given-names>Alessandra</given-names></name><role>Academic Editor</role></contrib></contrib-group><aff id="af1-sensors-25-01216"><label>1</label>Instituto de Telecomunica&#x000e7;&#x000f5;es, 3810-193 Aveiro, Portugal; <email>g.mantas@greenwich.ac.uk</email> (G.M.); <email>jonathan@av.it.pt</email> (J.R.)</aff><aff id="af2-sensors-25-01216"><label>2</label>Faculty of Engineering and Science, University of Greenwich, Chatham Maritime ME4 4TB, UK; <email>k.porfyrakis@greenwich.ac.uk</email></aff><aff id="af3-sensors-25-01216"><label>3</label>Faculty of Computing, Engineering and Science, University of South Wales, Pontypridd CF37 1DL, UK</aff><author-notes><corresp id="c1-sensors-25-01216"><label>*</label>Correspondence: <email>g.zachos@av.it.pt</email></corresp></author-notes><pub-date pub-type="epub"><day>17</day><month>2</month><year>2025</year></pub-date><pub-date pub-type="collection"><month>2</month><year>2025</year></pub-date><volume>25</volume><issue>4</issue><elocation-id>1216</elocation-id><history><date date-type="received"><day>09</day><month>1</month><year>2025</year></date><date date-type="rev-recd"><day>07</day><month>2</month><year>2025</year></date><date date-type="accepted"><day>14</day><month>2</month><year>2025</year></date></history><permissions><copyright-statement>&#x000a9; 2025 by the authors.</copyright-statement><copyright-year>2025</copyright-year><license><ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>).</license-p></license></permissions><abstract><p>Internet of Medical Things (IoMT) technology has emerged from the introduction of the Internet of Things in the healthcare sector. However, the resource-constrained characteristics and heterogeneity of IoMT networks make these networks susceptible to various types of threats. Thus, it is necessary to develop novel security solutions (e.g., efficient and accurate Anomaly-based Intrusion Detection Systems), considering the inherent limitations of IoMT networks, before these networks reach their full potential in the market. In this paper, we propose an AIDS specifically designed for resource-constrained devices within IoMT networks. The proposed lightweight AIDS leverages novelty detection and outlier detection algorithms instead of conventional classification algorithms to achieve (a) enhanced detection performance against both known and unknown attack patterns and (b) minimal computational costs.</p></abstract><kwd-group><kwd>anomaly-based intrusion detection</kwd><kwd>dataset generation</kwd><kwd>Internet of Medical Things (IoMT)</kwd><kwd>intrusion detection system (IDS)</kwd><kwd>machine learning algorithms</kwd><kwd>novelty detection algorithms</kwd><kwd>outlier detection algorithms</kwd></kwd-group><funding-group><funding-statement>This research received no external funding.</funding-statement></funding-group></article-meta></front><body><sec sec-type="intro" id="sec1-sensors-25-01216"><title>1. Introduction</title><p>Internet of Medical Things (IoMT) technology has emerged from the introduction of the Internet of Things in the healthcare sector. The purpose of the IoMT is to improve the patient&#x02019;s quality of life by enabling personalized e-health services without time and location limitations [<xref rid="B1-sensors-25-01216" ref-type="bibr">1</xref>,<xref rid="B2-sensors-25-01216" ref-type="bibr">2</xref>,<xref rid="B3-sensors-25-01216" ref-type="bibr">3</xref>,<xref rid="B4-sensors-25-01216" ref-type="bibr">4</xref>]. Nevertheless, the resource-constrained characteristics and heterogeneity of IoMT networks make these networks susceptible to various types of threats, and this, in turn, means that IoMT networks, as well as the healthcare systems relying on these networks, face several security and privacy challenges [<xref rid="B5-sensors-25-01216" ref-type="bibr">5</xref>,<xref rid="B6-sensors-25-01216" ref-type="bibr">6</xref>]. For example, an attacker may intrude into the IoMT network with the goal of gaining unauthorized access to sensitive information (e.g., medical data). In addition, an adversary may exploit vulnerabilities in the IoMT networks to compromise the corresponding IoT-based healthcare systems in order to disrupt the normal operation of compromised IoT-based healthcare systems (e.g., by flooding the resource-constrained IoMT network with a large number of requests) and/or to tamper with sensing data (e.g., by injecting fake data). This, in turn, can endanger the availability and/or integrity of the healthcare services provided by the compromised IoT-based healthcare systems [<xref rid="B2-sensors-25-01216" ref-type="bibr">2</xref>]. Consequently, the development of security solutions protecting IoMT networks from attackers is crucial to ensure the acceptance and wide adoption of IoMT networks in the coming years.</p><p>However, conventional security mechanisms are complex and resource-intensive; therefore, they are not suitable for IoMT networks. On the one hand, conventional security mechanisms cannot be afforded by IoMT devices, which are resource-constrained and possess limited processing power, storage capacities, and battery lives. On the other hand, the IoMT devices are deployed and interconnected using lightweight communication protocols in a constrained environment that cannot support conventional security mechanisms [<xref rid="B7-sensors-25-01216" ref-type="bibr">7</xref>]. Therefore, to ensure that IoMT networks earn the trust of all stakeholders and realize their full potential in the healthcare sector, it is crucial to create innovative security mechanisms. These mechanisms must effectively and efficiently tackle the significant security challenges faced by IoMT networks, taking into account their unique limitations due to resource constraints [<xref rid="B6-sensors-25-01216" ref-type="bibr">6</xref>,<xref rid="B8-sensors-25-01216" ref-type="bibr">8</xref>].</p><p>To achieve this goal, anomaly-based intrusion detection systems (AIDSs) are recognized by both industry professionals and researchers as a promising security solution that can significantly enhance the protection of IoT networks. However, for these systems to be effective, it is essential to develop innovative lightweight AIDSs tailored for resource-constrained environments [<xref rid="B7-sensors-25-01216" ref-type="bibr">7</xref>,<xref rid="B9-sensors-25-01216" ref-type="bibr">9</xref>]. Currently, as far as we are aware, only a limited number of AIDSs (i.e., [<xref rid="B10-sensors-25-01216" ref-type="bibr">10</xref>,<xref rid="B11-sensors-25-01216" ref-type="bibr">11</xref>,<xref rid="B12-sensors-25-01216" ref-type="bibr">12</xref>,<xref rid="B13-sensors-25-01216" ref-type="bibr">13</xref>,<xref rid="B14-sensors-25-01216" ref-type="bibr">14</xref>,<xref rid="B15-sensors-25-01216" ref-type="bibr">15</xref>,<xref rid="B16-sensors-25-01216" ref-type="bibr">16</xref>]) have been introduced in the literature for protecting resource-limited IoMT devices within IoMT networks. In addition, only two of them (i.e., [<xref rid="B13-sensors-25-01216" ref-type="bibr">13</xref>,<xref rid="B14-sensors-25-01216" ref-type="bibr">14</xref>]) appear to have been implemented. However, they have not been evaluated during runtime. Moreover, most of the proposed AIDSs for IoMT networks in the literature employ conventional classification machine learning (ML) algorithms (e.g., Na&#x000ef;ve Bayes or Random Forest) that are more focused on classifying a new record into one of the classes for which the classification algorithms have been trained [<xref rid="B17-sensors-25-01216" ref-type="bibr">17</xref>]. In the case of a record that was not part of the training data, conventional classification ML algorithms cannot make accurate predictions.</p><p>Towards this direction, in this work, we propose an AIDS specifically designed for resource-constrained devices within IoMT networks. The proposed AIDS consists of two main components: (a) the monitoring and data acquisition (MDA) component, which is specifically engineered to operate on resource-constrained IoMT devices, and (b) the remote detection engine (RDE) component, which functions on the gateway. The proposed AIDS leverages novelty detection and outlier detection algorithms instead of conventional classification algorithms. The runtime performance of the proposed AIDS was evaluated using an IoMT testbed and dataset produced in our previous works [<xref rid="B18-sensors-25-01216" ref-type="bibr">18</xref>,<xref rid="B19-sensors-25-01216" ref-type="bibr">19</xref>]. The runtime performance of the implemented AIDS was evaluated using custom scripts that launched both known and unknown (i.e., unknown to the trained ML models) attacks. The runtime performance evaluation results showed that the implemented AIDS can achieve (a) enhanced detection performance against both known and unknown attack patterns and (b) minimal computational costs, with CPU and memory usage for the MDA component remaining below 0.1%.</p><p>The rest of this work is organized as follows. <xref rid="sec2-sensors-25-01216" ref-type="sec">Section 2</xref> provides the design of the proposed AIDS for resource-constrained IoMT devices including a detailed description of its various components and internal modules. Afterward, <xref rid="sec3-sensors-25-01216" ref-type="sec">Section 3</xref> describes the novelty detection and outlier detection algorithms employed, the training dataset used, and the runtime performance evaluation of the implemented AIDS. Moreover, <xref rid="sec4-sensors-25-01216" ref-type="sec">Section 4</xref> presents a comparison with state-of-the-art AIDSs. Lastly, <xref rid="sec5-sensors-25-01216" ref-type="sec">Section 5</xref> concludes this paper and provides hints for future work.</p></sec><sec id="sec2-sensors-25-01216"><title>2. Proposed AIDS</title><sec id="sec2dot1-sensors-25-01216"><title>2.1. System Architecture</title><p>The proposed AIDS is designed to protect resource-constrained IoMT devices within an IoMT network from both internal and external threats that exploit the inherent security vulnerabilities associated with IoT technology. Our approach not only addresses currently known IoT attack vectors but also potential unknown threats that may emerge in the future, affecting all four layers of the ITU-T IoT reference model [<xref rid="B20-sensors-25-01216" ref-type="bibr">20</xref>]. As illustrated in <xref rid="sensors-25-01216-f001" ref-type="fig">Figure 1</xref>, the proposed AIDS consists of two main components: (a) the monitoring and data acquisition (MDA) component, which is specifically engineered to operate on resource-constrained IoMT devices, and (b) the remote detection engine (RDE) component, which functions on the gateway. Detailed descriptions of the MDA and RDE components can be found in <xref rid="sec2dot2-sensors-25-01216" ref-type="sec">Section 2.2</xref> and <xref rid="sec2dot3-sensors-25-01216" ref-type="sec">Section 2.3</xref>, respectively.</p><p>At this point, it is important to mention that alerts are produced by the RDE component when intrusions that target the IoMT devices connected to the gateway are detected. These produced alerts are sent to a cloud server for further processing and visualization, as depicted in <xref rid="sensors-25-01216-f001" ref-type="fig">Figure 1</xref>. Additionally, the gateway, where the RDE component runs, is required to have enough computational resources (e.g., Raspberry Pi 4 Model B) to support both its standard operations as a relay node and the functions of the RDE component running on it.</p><p>In addition, each IoMT device that incorporates the MDA component must meet several essential requirements to function effectively. First, it should have the capability to access its own behavioral data, such as CPU usage and memory utilization. This access is crucial for monitoring performance and identifying potential issues. Second, the device must possess adequate communication bandwidth to efficiently transmit the collected behavioral data to the gateway. This ensures timely and accurate data transfer, which is vital for continuous monitoring and analysis. Lastly, the device needs sufficient computational resources to manage its primary functions as a sensor or actuator while simultaneously supporting the operations of the MDA component. For the implementation of the MDA component, we utilized a Raspberry Pi 4 Model B, which serves as an exemplary IoMT sensor device capable of generating humidity and temperature sensing data. This choice of hardware not only demonstrates the practical application of the MDA component but also highlights its effectiveness in a resource-constrained environment.</p></sec><sec id="sec2dot2-sensors-25-01216"><title>2.2. Monitoring and Data Acquisition (MDA) Component</title><p>The MDA component runs on an IoMT device connected to the gateway. The MDA component performs two operations: (a) monitoring of the behavior of the IoMT device, hosting it, and collection of relevant behavior data (e.g., CPU usage and memory usage) during a specific monitoring period (i.e., the sampling period) and (b) transmission of the collected data to the gateway where the RDE component runs. Then, the RDE component on the gateway can identify whether an attack incident has occurred in the IoMT device hosting the MDA component.</p><p>In essence, the MDA component runs on a resource-constrained IoMT device that cannot perform local intrusion detection on its own. The MDA component was implemented by considering an IoMT device (e.g., Raspberry Pi 4 Model B) running a Linux-based OS, and more specifically, a Debian-based OS (e.g., Ubuntu OS [<xref rid="B21-sensors-25-01216" ref-type="bibr">21</xref>]). For the implementation of the MDA component, the C programming language was used to minimize the required resources. In addition, apart from the standard C libraries, the implementation uses one external and freely available library, the Eclipse Paho C client library [<xref rid="B22-sensors-25-01216" ref-type="bibr">22</xref>], so that the collected behavior data can be sent to the gateway through the MQTT protocol. The internal architecture of the MDA component, along with its modules, is shown in <xref rid="sensors-25-01216-f002" ref-type="fig">Figure 2</xref>.</p><sec id="sec2dot2dot1-sensors-25-01216"><title>2.2.1. Data Collection</title><p>The &#x0201c;data collection&#x0201d; module is responsible for the collection of behavior data regarding the IoMT device on runtime during a sampling period (i.e., behavior sampling period). The collected behavior data include the set of features presented in <xref rid="sensors-25-01216-t001" ref-type="table">Table 1</xref> along with their descriptions. Based on the collected behavior data, a record in CSV format is created as the output of the &#x0201c;data collection&#x0201d; module.</p><p>In particular, the module accesses a specific directory (i.e., &#x0201c;/proc&#x0201d; directory) that is present in a Linux-based OS and gathers the required feature values that are present in the &#x0201c;/proc/stat&#x0201d;, &#x0201c;/proc/meminfo&#x0201d;, and &#x0201c;/proc/diskstats&#x0201d; files. <xref rid="sensors-25-01216-t001" ref-type="table">Table 1</xref> presents the feature values collected by the &#x0201c;data collection&#x0201d; module along with their descriptions based on the documentation of the &#x0201c;/proc&#x0201d; directory included in [<xref rid="B23-sensors-25-01216" ref-type="bibr">23</xref>,<xref rid="B24-sensors-25-01216" ref-type="bibr">24</xref>,<xref rid="B25-sensors-25-01216" ref-type="bibr">25</xref>,<xref rid="B26-sensors-25-01216" ref-type="bibr">26</xref>].</p><p>At this point, it is important to note that some of the collected feature values in <xref rid="sensors-25-01216-t001" ref-type="table">Table 1</xref> are related to a specific system resource type (i.e., CPU, memory, or storage) and thus can be organized into the following three feature groups:<list list-type="bullet"><list-item><p>the CPU mode group (i.e., indexes 2&#x02013;11) containing all feature values related to the time (in ticks) that the CPU spends in a specific mode of operation,</p></list-item><list-item><p>the memory group (i.e., indexes 17&#x02013;25) containing all feature values that describe how the system memory is used, and</p></list-item><list-item><p>the disk stats group (i.e., indexes 26&#x02013;33) containing all feature values that describe how the OS interacts with storage drives.</p></list-item></list></p></sec><sec id="sec2dot2dot2-sensors-25-01216"><title>2.2.2. Data Reporter</title><p>The &#x0201c;data reporter&#x0201d; module receives the collected records from the &#x0201c;data collection&#x0201d; module. For each collected record, a report is created and transmitted to the gateway by the &#x0201c;data reporter&#x0201d; module. The implemented &#x0201c;data reporter&#x0201d; module transmits reports to the gateway using the MQTT application protocol. A report includes two types of information: (i) one line containing a unique identifier of the device where the MDA component is running, and (ii) another line involving the collected record in CSV format. An example of a report is shown below.
<array><tbody><tr><td align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1"><bold>Title:</bold> MDA report (two lines)</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">iomtSensor2</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1733143854599,102899,11863,20796,1155510,1625,0,1016,0,0,0,3532646,11824936,6992,2, 1717639,2035460,124560,610688,614092,886328,826624,126760,8624,20364,68185,5664298, 20705,45733,3789920,75991,0,124190</td></tr></tbody></array></p></sec></sec><sec id="sec2dot3-sensors-25-01216"><title>2.3. Remote Detection Engine (RDE) Component</title><p>The RDE component runs on the gateway of the IoMT network. The aim of the RDE component is to:<list list-type="order"><list-item><p>receive the MDA reports from the IoMT devices (i.e., hosting the MDA component) that are connected to the gateway and leverage the received MDA reports to identify whether an attack incident has occurred in the connected IoMT devices, and</p></list-item><list-item><p>send appropriate security alerts to the cloud server for further processing and visualization when attack incidents are detected.</p></list-item></list></p><p>The RDE component was implemented by considering a gateway device (e.g., Raspberry Pi 4 Model B) running a Linux-based OS, and more specifically, a Debian-based OS (e.g., Ubuntu OS [<xref rid="B21-sensors-25-01216" ref-type="bibr">21</xref>]). The RDE component is implemented using the Java programming language and the Python programming language. In addition, apart from the standard included Java and Python libraries, the implementation uses the external and freely available libraries described in <xref rid="sensors-25-01216-t002" ref-type="table">Table 2</xref>. The internal architecture of the RDE component, along with its modules, is shown in <xref rid="sensors-25-01216-f003" ref-type="fig">Figure 3</xref>.</p><sec id="sec2dot3dot1-sensors-25-01216"><title>2.3.1. Report Receiver</title><p>The &#x0201c;report receiver&#x0201d; module receives an MDA report during runtime on the gateway from a connected IoMT device where the MDA component is running. The purpose of the &#x0201c;report receiver&#x0201d; module is to (a) either create a new CPU thread (i.e., monitoring thread) to process the current MDA report or (b) to redirect the MDA report to an existing processing thread. At this point, it is worth mentioning that the intrusion detection for IoMT devices where the MDA components are running is performed on a per-device basis, meaning that a specific thread created by the &#x0201c;report receiver&#x0201d; module is responsible for performing intrusion detection for only one specific IoMT device based only on the corresponding received MDA reports.</p><p>As a new MDA report is received, the &#x0201c;report receiver&#x0201d; module performs the following operations:<list list-type="order"><list-item><p>The &#x0201c;report receiver&#x0201d; module splits the report into its two parts: (a) the unique ID of the IoMT device from where the MDA report originates and (b) the enclosed record collected on the IoMT device.</p></list-item><list-item><p>The &#x0201c;report receiver&#x0201d; module checks if the unique ID of the IoMT device is present (i.e., registered) in the configuration file of the RDE component. The configuration file of the RDE component contains an array of unique device IDs that must include all unique IDs of the IoMT devices that are connected to the gateway and where MDA components are running.</p></list-item><list-item><p>Only after ensuring that the IoMT device related to the received MDA report is registered in the configuration file of the RDE component does the &#x0201c;report receiver&#x0201d; module proceed to check whether a processing thread regarding this IoMT device already exists.</p></list-item><list-item><p>In the case of an existing thread, the new MDA report is redirected to it; otherwise, a new thread is created to process the new MDA report.</p></list-item></list></p></sec><sec id="sec2dot3dot2-sensors-25-01216"><title>2.3.2. Report Verifier</title><p>The &#x0201c;report verifier&#x0201d; module processes an MDA report on runtime. The module performs the following operations:<list list-type="order"><list-item><p>The &#x0201c;report verifier&#x0201d; module splits the report into its two parts: (a) the unique ID of the IoMT device from where the MDA report originates and (b) the enclosed record collected on the IoMT device.</p></list-item><list-item><p>The &#x0201c;report verifier&#x0201d; module performs a check on the enclosed record to verify whether the record is valid. In particular, the check is performed to ensure that the record follows the CSV format and that it contains the expected number of features with their expected types.</p></list-item><list-item><p>If the record is deemed valid, it is forwarded to the &#x0201c;data preprocessing&#x0201d; module. Otherwise, if the record is deemed invalid, it is discarded, and the thread waits for a new MDA report.</p></list-item></list></p></sec><sec id="sec2dot3dot3-sensors-25-01216"><title>2.3.3. Data Preprocessing</title><p>The input of the &#x0201c;data preprocessing&#x0201d; module is a record produced by the &#x0201c;report verifier&#x0201d; module. The output of the &#x0201c;data preprocessing&#x0201d; module is a preprocessed record in CSV format that can be used by the &#x0201c;detection engine&#x0201d; module. The &#x0201c;data preprocessing&#x0201d; module processes the input record in two stages to produce the output preprocessed record.</p><p>Based on the description of the features in <xref rid="sensors-25-01216-t001" ref-type="table">Table 1</xref>, it can be observed that some feature values (i.e., features with indexes 1&#x02013;14, 16, 26&#x02013;31, and 33) depend heavily on the time that has elapsed since the system boot. As long as the monitored system (i.e., IoMT device) is up and running, these feature values will be continuously increasing. In this context, our focus is not on the actual value of these features but on the increment that has occurred between subsequent sampling periods. Thus, the objective of the first preprocessing stage is the decoupling of the feature values of a collected record from the runtime duration of the underlying system.</p><p>The first preprocessing stage processes the values of the features with indexes 1&#x02013;14, 16, 26&#x02013;31, and 33. In contrast, the values of the remaining features (i.e., features with indexes 15, 17&#x02013;25, and 32) do not depend on the runtime duration of the system. Therefore, they are simply forwarded to the second preprocessing stage without being processed in the first preprocessing stage.</p><p>Below, we present an appropriate equation to clarify further how the first preprocessing stage works. We assume that the record (<inline-formula><mml:math id="mm1" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>) collected at time <inline-formula><mml:math id="mm2" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, containing 33 feature values, is denoted as <inline-formula><mml:math id="mm3" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mo>&#x02265;</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mn>33</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>. In addition, we present <inline-formula><mml:math id="mm4" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mo>&#x02265;</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mn>33</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> as the record produced after the first preprocessing stage (i.e., pp1) based on <inline-formula><mml:math id="mm5" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>. In addition, let <inline-formula><mml:math id="mm6" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mo>&#x02265;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> denote the <inline-formula><mml:math id="mm7" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> feature value of <inline-formula><mml:math id="mm8" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm9" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">*</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> is an integer in range [1, 33]. Furthermore, we assume that <inline-formula><mml:math id="mm10" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mo>&#x02265;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> represents the corresponding output feature value, after the first preprocessing stage, for the feature value <inline-formula><mml:math id="mm11" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>. Finally, we assume that the first record is collected at <inline-formula><mml:math id="mm12" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>. Then, Equation (1) shows how <inline-formula><mml:math id="mm13" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> is computed based on <inline-formula><mml:math id="mm14" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> for different moments in time and different features indexes. Furthermore, the output feature values of a record, after the first preprocessing stage, are summarized in <xref rid="sensors-25-01216-t003" ref-type="table">Table 3</xref>.<disp-formula id="FD1-sensors-25-01216"><label>(1)</label><mml:math id="mm15" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mfenced open="{" close="" separators="|"><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#x0003e;</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02208;</mml:mo><mml:mfenced open="{" close="}" separators="|"><mml:mrow><mml:mn>15</mml:mn></mml:mrow></mml:mfenced><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x0222a;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mfenced open="{" close="}" separators="|"><mml:mrow><mml:mn>17</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:mn>25</mml:mn></mml:mrow></mml:mfenced><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x0222a;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mfenced open="{" close="}" separators="|"><mml:mrow><mml:mn>32</mml:mn></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#x0003e;</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02208;</mml:mo><mml:mfenced open="{" close="}" separators="|"><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:mn>14</mml:mn></mml:mrow></mml:mfenced><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x0222a;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mfenced open="{" close="}" separators="|"><mml:mrow><mml:mn>16</mml:mn></mml:mrow></mml:mfenced><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x0222a;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mfenced open="{" close="}" separators="|"><mml:mrow><mml:mn>26</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:mn>31</mml:mn></mml:mrow></mml:mfenced><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x0222a;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mfenced open="{" close="}" separators="|"><mml:mrow><mml:mn>33</mml:mn></mml:mrow></mml:mfenced><mml:mo>&#x000a0;</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>The output of the first preprocessing stage is received by the second preprocessing stage that, in turn, performs normalization on: (a) the feature values of the &#x0201c;CPU mode&#x0201d; feature group, (b) the feature values of the &#x0201c;memory&#x0201d; feature group, and (c) the output &#x0201c;delta values&#x0201d; of the first preprocessing stage based on the &#x0201c;timestamp_delta&#x0201d; value (i.e., the feature value with index 1). The objective of the second preprocessing stage is the decoupling of the feature values of a record produced by the first preprocessing stage from the collection sampling period of the &#x0201c;data collection&#x0201d; module of the MDA component.</p><p>Below, we present an appropriate equation to further clarify how the second preprocessing stage works. We denote <inline-formula><mml:math id="mm16" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mo>&#x02265;</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mn>33</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> as a record generated by the first preprocessing stage at time <inline-formula><mml:math id="mm17" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> containing 33 feature values. In addition, we define <inline-formula><mml:math id="mm18" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mo>&#x02265;</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mn>31</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> as the record produced by the second preprocessing stage (i.e., pp2), containing 31 feature values, based on <inline-formula><mml:math id="mm19" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>. In addition, let <inline-formula><mml:math id="mm20" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mo>&#x02265;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> represent the <inline-formula><mml:math id="mm21" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> feature value of <inline-formula><mml:math id="mm22" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm23" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">*</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> is an integer in range [1, 33]. Similarly, we consider <inline-formula><mml:math id="mm24" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mo>&#x02265;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> as the <inline-formula><mml:math id="mm25" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> feature value of <inline-formula><mml:math id="mm26" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm27" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">*</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> is an integer in range [1, 31]. Finally, we consider that the first record is collected at <inline-formula><mml:math id="mm28" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>. Then, Equation (2) shows how <inline-formula><mml:math id="mm29" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> is computed based on <inline-formula><mml:math id="mm30" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> for different feature indexes.<disp-formula id="FD2-sensors-25-01216"><label>(2)</label><mml:math id="mm31" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mfenced open="{" close="" separators="|"><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mrow><mml:mrow><mml:mrow><mml:munderover><mml:mo stretchy="false">&#x02211;</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mn>11</mml:mn></mml:mrow></mml:munderover><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#x02265;</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>k</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02208;</mml:mo><mml:mfenced open="{" close="}" separators="|"><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:mfenced><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x000a0;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>m</mml:mi><mml:mi>o</mml:mi><mml:mi>d</mml:mi><mml:mi>e</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>f</mml:mi><mml:mi>e</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>u</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>g</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi><mml:mi>u</mml:mi><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#x02265;</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>k</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02208;</mml:mo><mml:mfenced open="{" close="}" separators="|"><mml:mrow><mml:mn>11</mml:mn><mml:mo>,</mml:mo><mml:mn>12</mml:mn><mml:mo>,</mml:mo><mml:mn>13</mml:mn><mml:mo>,</mml:mo><mml:mn>15</mml:mn></mml:mrow></mml:mfenced><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#x02265;</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>14</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>15</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mn>17</mml:mn></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#x02265;</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>k</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02208;</mml:mo><mml:mfenced open="{" close="}" separators="|"><mml:mrow><mml:mn>16</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:mn>23</mml:mn></mml:mrow></mml:mfenced><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mo>&#x000a0;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mi>e</mml:mi><mml:mi>m</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:mi>y</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>f</mml:mi><mml:mi>e</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>u</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>g</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi><mml:mi>u</mml:mi><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#x02265;</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>k</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02208;</mml:mo><mml:mfenced open="{" close="}" separators="|"><mml:mrow><mml:mn>24</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:mn>29</mml:mn></mml:mrow></mml:mfenced><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x0222a;</mml:mo><mml:mfenced open="{" close="}" separators="|"><mml:mrow><mml:mn>31</mml:mn></mml:mrow></mml:mfenced><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#x02265;</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>30</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>32</mml:mn></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>At this point, it is worth explaining the above Equation (2) further. In a record produced by the first preprocessing stage, the values of the &#x0201c;CPU mode&#x0201d; feature group (i.e., feature indexes 2 to 11) detail the time (i.e., in ticks) that the CPU has spent in different modes of operation during the last behavior sampling period. During the second preprocessing stage, the feature values of the &#x0201c;CPU mode&#x0201d; group are summed, with the sum being equal to the total CPU ticks during the last behavior sampling period. Then, each feature value of the &#x0201c;CPU mode&#x0201d; group (i.e., feature indexes 2 to 11) is divided by the computed sum. The ten computed feature values are among the output values of the second preprocessing stage, and they describe the percentage of CPU ticks that the CPU has spent in a specific mode of operation during the last behavior sampling period.</p><p>Afterward, regarding the values of the &#x0201c;memory&#x0201d; feature group (i.e., feature indexes 17 to 25), almost every value (i.e., feature indexes 18 to 25) is divided by the value of the &#x0201c;memTotal&#x0201d; feature (i.e., feature index 17). The eight computed feature values are among the output values of the second preprocessing stage, and they describe the memory usage as percentages in the range [0, 1].</p><p>Moreover, the values of features with indexes of 12&#x02013;14, 16, 26&#x02013;31, and 33 from the first preprocessing stage are divided by the value of the elapsed time between two collected records (i.e., the &#x0201c;timestamp_delta&#x0201d; value in index 1). The eleven computed feature values are among the output values of the second preprocessing stage. As a result of the performed division process, the eleven computed values do not depend anymore on the magnitude of the elapsed time between two collected records.</p><p>Lastly, the remaining feature values from the first preprocessing stage (i.e., feature values with indexes 15 and 32) are not processed in the second preprocessing stage and thus are simply forwarded to the output.</p><p>The output feature values of a record after the second preprocessing stage are the output of the &#x0201c;data preprocessing&#x0201d; module and are summarized in <xref rid="sensors-25-01216-t004" ref-type="table">Table 4</xref>.</p></sec><sec id="sec2dot3dot4-sensors-25-01216"><title>2.3.4. Detection Engine</title><p>The output of the &#x0201c;data preprocessing&#x0201d; module is a preprocessed record, and it is received by the &#x0201c;detection engine&#x0201d; module as shown in <xref rid="sensors-25-01216-f003" ref-type="fig">Figure 3</xref>. Based on the input preprocessed record, the &#x0201c;detection engine&#x0201d; module detects whether or not an intrusion has occurred on the connected device hosting the MDA component, meaning that the output of the &#x0201c;detection engine&#x0201d; module is a detection decision. In principle, this is the core module of the proposed RDE component and uses ML algorithms to identify both known and unknown attacks targeting the resource-constrained devices connected to the gateway. The internal architecture of the &#x0201c;detection engine&#x0201d; module is depicted in <xref rid="sensors-25-01216-f004" ref-type="fig">Figure 4</xref>.</p><p>As shown in <xref rid="sensors-25-01216-f004" ref-type="fig">Figure 4</xref>, for each received preprocessed record, a trained ML model is used to calculate a prediction result. There are two possible values (i.e., &#x0201c;1&#x0201d; or &#x0201c;0&#x0201d;) for the prediction result, signifying whether an intrusion event has occurred or not based on a specific preprocessed record. Subsequently, the calculated prediction result for each record is stored in a FIFO buffer with a length equal to &#x0201c;n&#x0201d;, which is configurable within the RDE component. The FIFO buffer stores the most recent prediction result, as well as the previous &#x0201c;n &#x02212; 1&#x0201d; prediction results that were computed based on the last &#x0201c;n &#x02212; 1&#x0201d; preprocessed records. Afterward, an average value is computed based on all the values of the prediction results inside the buffer. The computed value (i.e., intrusion probability) is then compared to a &#x0201c;threshold&#x0201d; value so that the &#x0201c;detection engine&#x0201d; module can determine whether an intrusion event has occurred or not.</p><p>In principle, the purpose of the FIFO buffer is to enable the &#x0201c;detection engine&#x0201d; module to consider not only the last received preprocessed record but also a specific number (i.e., n &#x02212; 1) of previously received preprocessed records for the task of performing intrusion detection. In addition, the length of the FIFO buffer inside the &#x0201c;detection engine&#x0201d; module is configurable and this, in turn, means that the intrusion detection process can be fine-tuned in one more way than by just training a better ML algorithm.</p><p>Moreover, as mentioned, a &#x0201c;threshold&#x0201d; value is compared with the intrusion probability calculated by averaging the prediction results in the FIFO buffer to determine whether an intrusion event has occurred or not. The &#x0201c;threshold&#x0201d; value is also controlled by a respective configuration parameter (i.e., &#x0201c;threshold&#x0201d; parameter) of the RDE component. The purpose of the &#x0201c;threshold&#x0201d; parameter is to provide an extra manner of fine-tuning the intrusion detection process of the &#x0201c;detection engine&#x0201d; module. A higher value for the &#x0201c;threshold&#x0201d; parameter means that positive decisions (i.e., decisions that an intrusion event has occurred) will occur only at a higher intrusion probability value and vice versa.</p><p>Lastly, it is important to mention that the &#x0201c;detection engine&#x0201d; module makes a prediction based on one preprocessed record by using a custom Python script. The functionality of the custom Python scripts follows three steps:
<list list-type="order"><list-item><p>Parse the input preprocessed record,</p></list-item><list-item><p>Load the trained ML model, and</p></list-item><list-item><p>Make a prediction.</p></list-item></list></p><p>The use of custom Python scripts increases the ease and flexibility of integrating different ML algorithms into the &#x0201c;detection engine&#x0201d; module of the RDE component.</p></sec><sec id="sec2dot3dot5-sensors-25-01216"><title>2.3.5. Alert Reporter</title><p>The input of the &#x0201c;alert reporter&#x0201d; module is the detection decisions from the &#x0201c;detection engine&#x0201d; module. When an intrusion is detected, the &#x0201c;alert reporter&#x0201d; module sends an appropriate alert, in JSON format, to the cloud server. The &#x0201c;alert reporter&#x0201d; module is implemented to be able to send alerts to the cloud server through either the HTTP application protocol or the MQTT application protocol. Each alert contains three key pieces of information: (i) a timestamp indicating the time that the intrusion incident occurred, (ii) a unique identifier of the device hosting the MDA component, and (iii) the intrusion probability, represented as a decimal number within the range [0, 1], which reflects the likelihood that an intrusion incident has occurred. An example of an alert, in JSON format, produced by the RDE component for a connected resource-constrained device (i.e., &#x0201c;iomtSensor1&#x0201d;), hosting the MDA component, is shown below.
<array><tbody><tr><td align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1"><bold>Title:</bold> RDE intrusion alert based on detection decisions in JSON format</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">&#x000a0;&#x000a0; {</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">&#x02003;&#x02003;&#x02003; &#x0201c;ts&#x0201d;: &#x0201c;2024-10-04 10:13:34&#x0201d;,</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">&#x02003;&#x02003;&#x02003; &#x0201c;dev_ID&#x0201d;: &#x0201c;iomtSensor1&#x0201d;,</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">&#x02003;&#x02003;&#x02003; &#x0201c;intrusion_prob&#x0201d;: &#x0201c;1.0&#x0201d;</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">&#x000a0;&#x000a0; }</td></tr></tbody></array></p></sec></sec></sec><sec id="sec3-sensors-25-01216"><title>3. Runtime Performance Evaluation</title><p>The proposed AIDS was implemented on the IoMT security testbed that was developed as part of our previous works in [<xref rid="B18-sensors-25-01216" ref-type="bibr">18</xref>,<xref rid="B19-sensors-25-01216" ref-type="bibr">19</xref>]. The next step is to train and integrate novelty detection and outlier detection algorithms into the &#x0201c;detection engine&#x0201d; module of the RDE component in order to evaluate the performance of the implemented AIDS during runtime. The runtime performance evaluation focuses on two key aspects: (a) assessing the performance of the ML models in detecting attacks during runtime and (b) measuring the computational cost of the implemented AIDS components on the IoMT device (i.e., MDA component) and the gateway (i.e., RDE component).</p><sec id="sec3dot1-sensors-25-01216"><title>3.1. Employed Detection Algorithms, Training Dataset, and Hyperparameters</title><p>At this point, it is necessary to discuss why the focus is on novelty detection and outlier detection algorithms in this work. This is because these algorithms need to be trained mostly on records from a single known class to determine whether a new record is similar to the training records [<xref rid="B17-sensors-25-01216" ref-type="bibr">17</xref>,<xref rid="B31-sensors-25-01216" ref-type="bibr">31</xref>]. In our context, it is feasible to collect training records that represent the normal operation of the IoMT network, which corresponds to a single known class. On the other hand, obtaining training records related to IoMT networks under attack (i.e., known or unknown attacks) is not possible. This limitation underscores the necessity for advanced detection algorithms, such as novelty detection and outlier detection algorithms, capable of identifying anomalies without relying on labeled datasets from attack scenarios. By focusing on these algorithms, we aim to enhance the intrusion detection performance in IoMT networks, where labeled attack data are unavailable.</p><p>In addition, the aim is to use algorithms that are already implemented and readily available for use. This leads to focusing on novelty detection and outlier detection algorithms available in two popular Python libraries, namely Scikit-Learn [<xref rid="B32-sensors-25-01216" ref-type="bibr">32</xref>,<xref rid="B33-sensors-25-01216" ref-type="bibr">33</xref>] and PyOD [<xref rid="B34-sensors-25-01216" ref-type="bibr">34</xref>,<xref rid="B35-sensors-25-01216" ref-type="bibr">35</xref>]. These libraries provide robust implementations of these algorithms, facilitating the integration into the proposed AIDS.</p><p>Furthermore, regarding the novelty detection and outlier detection algorithms that are to be integrated into the RDE component (i.e., the &#x0201c;detection engine&#x0201d; module), we are using a dataset generated in our work in [<xref rid="B19-sensors-25-01216" ref-type="bibr">19</xref>], along with the hyperparameters for training these algorithms as presented in [<xref rid="B19-sensors-25-01216" ref-type="bibr">19</xref>]. In [<xref rid="B19-sensors-25-01216" ref-type="bibr">19</xref>], a dataset (i.e., the LDE dataset) was generated by capturing behavior records from an IoMT device (i.e., the Raspberry Pi device) that was meant to function as a sensor device, similarly to the IoMT sensor device (i.e., the Raspberry Pi device) hosting the MDA component. In addition, the &#x0201c;LDE dataset&#x0201d; contains records with the same features as those used by the &#x0201c;detection engine&#x0201d; module of the RDE component. Thus, in this case, we trained the employed algorithms using the &#x0201c;LDE dataset&#x0201d; and applied the same hyperparameters for these algorithms as investigated in [<xref rid="B19-sensors-25-01216" ref-type="bibr">19</xref>].</p><p>Based on our work in [<xref rid="B19-sensors-25-01216" ref-type="bibr">19</xref>], we trained and evaluated the runtime performance of five novelty detection algorithms and one outlier detection algorithm: (i) one class support vector machine (OCSVM), (ii) local outlier factor (LOF), (iii) Gaussian kernel density estimation (G_KDE), (iv) Parzen window kernel density estimation (PW_KDE), (v) Bayesian Gaussian mixture models (B_GMM), and minimum covariance determinant (MCD). Moreover, based on our work in [<xref rid="B19-sensors-25-01216" ref-type="bibr">19</xref>], <xref rid="sensors-25-01216-t005" ref-type="table">Table 5</xref> shows the hyperparameters used when training the six detection algorithms.</p></sec><sec sec-type="methods" id="sec3dot2-sensors-25-01216"><title>3.2. Runtime Performance Evaluation Methodology</title><p>The performance evaluation was performed during various sessions (i.e., evaluation sessions). During each session, a trained ML model is integrated into the RDE component and its performance is evaluated during runtime. More specifically, we followed the steps described below during each evaluation session:<list list-type="order"><list-item><p>It is ensured that all the components of the IoMT testbed are up and running.</p></list-item><list-item><p>One detection algorithm is selected from <xref rid="sensors-25-01216-t005" ref-type="table">Table 5</xref>, along with its hyperparameter set. The &#x0201c;LDE dataset&#x0201d; is used to train a corresponding ML model that is then integrated into the &#x0201c;detection engine&#x0201d; module of the RDE component of the AIDS.</p></list-item><list-item><p>The RDE component is executed on the Raspberry Pi 4 device acting as a gateway.</p></list-item><list-item><p>The MDA component is executed on the Raspberry Pi 4 device acting as a sensor device.</p></list-item><list-item><p>We measure the CPU usage and memory usage of the MDA component on the IoMT device, hosting it by executing a custom bash script (i.e., the &#x0201c;cpu-mem usage&#x0201d; script) on the IoMT device during runtime.</p></list-item><list-item><p>We measure the CPU usage and memory usage of the RDE component on the gateway by executing the &#x0201c;cpu-mem usage&#x0201d; script on the gateway during runtime.</p></list-item><list-item><p>We launch attacks against the IoMT device hosting the MDA component by executing custom scripts.</p></list-item><list-item><p>The successful (or unsuccessful) detection of the launched attacks is verified by checking both the logs generated by the attack scripts during execution as well as the internal logs produced by the AIDS.</p></list-item></list></p><p>At this point, it is worth describing how attacks were launched against the IoMT device hosting the MDA component. During the evaluation, we created artificial resource consumption on the IoMT device of the testbed by executing the stress-ng tool [<xref rid="B36-sensors-25-01216" ref-type="bibr">36</xref>]. This artificial resource consumption is designed to replicate a scenario where an adversary executes an attack that exhausts the computational resources of the IoMT device. The documentation of the stress-ng tool presented in [<xref rid="B37-sensors-25-01216" ref-type="bibr">37</xref>] is used, and we execute the stress-ng tool on the IoMT device using the following two commands during the evaluation sessions. It is worth mentioning that the following two commands were used to assess the performance of the implemented AIDS against attacks included in the training dataset of the ML model.
<array><tbody><tr><td align="left" valign="middle" rowspan="1" colspan="1">stress-ng --cpu 1 --vm 1 --vm-bytes 512M</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">stress-ng --cpu 2 --vm 2 --vm-bytes 512M</td></tr></tbody></array></p><p>In addition, during evaluation sessions, the following new commands were used to assess the performance of the implemented AIDS against attacks that were not included in the training dataset of the ML model.
<array><tbody><tr><td align="left" valign="middle" rowspan="1" colspan="1">stress-ng --matrix 4 --matrix-size 64 </td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">stress-ng --vm 2 --vm-bytes 2G --mmap 2 --mmap-bytes 2G</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">stress-ng --timer 32 --timer-freq 1000000</td></tr></tbody></array></p><p>During the evaluation, each command was executed for a certain period of time (e.g., 4 min) and periods with no command execution were mixed in. The purpose of using two different groups of commands is to measure the performance of the AIDS in detecting both known and unknown attack patterns.</p></sec><sec id="sec3dot3-sensors-25-01216"><title>3.3. Runtime Performance Evaluation of Detection Algorithms</title><p>As mentioned in <xref rid="sec3dot1-sensors-25-01216" ref-type="sec">Section 3.1</xref>, the six detection algorithms are integrated into the &#x0201c;detection engine&#x0201d; module of the RDE component. The runtime evaluation results of the six detection algorithms, when measured during various evaluation sessions, are presented in <xref rid="sensors-25-01216-t006" ref-type="table">Table 6</xref> and <xref rid="sensors-25-01216-f005" ref-type="fig">Figure 5</xref>.</p><p>The runtime evaluation results indicate that among the six algorithms tested, LOF, G_KDE, and MCD display low performance. The inferior performance of these algorithms suggests that these algorithms have been overfitted on the training dataset. On the other hand, OCSVM, PW_KDE, and B_GMM demonstrate relatively good performance, effectively distinguishing between attack incidents and non-attack incidents. Even though the evaluation metrics of these three algorithms indicate that overfitting may have occurred, they still exhibit adequate performance overall.</p></sec><sec id="sec3dot4-sensors-25-01216"><title>3.4. Runtime CPU and Memory Usage Measurements</title><p>We executed the &#x0201c;cpu-mem usage&#x0201d; script in two scenarios: (a) on the gateway while the RDE component was running, and on (b) the IoMT device while the MDA component was running. The CPU and memory consumption of the RDE component, when running on the gateway, for different detection algorithms during runtime are shown in <xref rid="sensors-25-01216-t007" ref-type="table">Table 7</xref> and depicted in <xref rid="sensors-25-01216-f006" ref-type="fig">Figure 6</xref> and <xref rid="sensors-25-01216-f007" ref-type="fig">Figure 7</xref>.</p><p>In addition, the CPU and memory usage of the MDA component on the IoMT device hosting it were approximately 0.01% and 0.05%, respectively. The measurements taken during the runtime operation of the AIDS indicate that the implemented RDE component requires a minimal percentage (i.e., less than 1%) of the available CPU resources and a moderate percentage of the available memory. Moreover, it is clear that the computational cost of the MDA component, designed for resource-constrained IoMT devices, is further minimized (i.e., less than 0.1%). In addition, as shown in <xref rid="sensors-25-01216-t007" ref-type="table">Table 7</xref>, the resource requirements during runtime for the RDE component are not significantly affected by the type of algorithm used in the &#x0201c;detection engine&#x0201d; module. Therefore, the implemented AIDS represents a lightweight solution for detecting intrusions targeting resource-constrained IoMT devices.</p></sec></sec><sec id="sec4-sensors-25-01216"><title>4. Comparison with Existing Works</title><p>As mentioned in the introduction, currently, as far as we are aware, only a limited number of AIDSs (i.e., [<xref rid="B10-sensors-25-01216" ref-type="bibr">10</xref>,<xref rid="B11-sensors-25-01216" ref-type="bibr">11</xref>,<xref rid="B12-sensors-25-01216" ref-type="bibr">12</xref>,<xref rid="B13-sensors-25-01216" ref-type="bibr">13</xref>,<xref rid="B14-sensors-25-01216" ref-type="bibr">14</xref>,<xref rid="B15-sensors-25-01216" ref-type="bibr">15</xref>,<xref rid="B16-sensors-25-01216" ref-type="bibr">16</xref>]) exist in the literature for protecting resource-limited IoMT devices within IoMT networks. In addition, only two of them (i.e., [<xref rid="B13-sensors-25-01216" ref-type="bibr">13</xref>,<xref rid="B14-sensors-25-01216" ref-type="bibr">14</xref>]) appear to have been implemented. However, they have not been evaluated during runtime. In this context, our work is compared only to the works in [<xref rid="B13-sensors-25-01216" ref-type="bibr">13</xref>,<xref rid="B14-sensors-25-01216" ref-type="bibr">14</xref>].</p><p>Firstly, in [<xref rid="B13-sensors-25-01216" ref-type="bibr">13</xref>], a simulated topology is used to generate datasets to train only one OCSVM model for identifying cyberattacks. The performance of the trained OCSVM model was measured using the recall metric, which ranged from 60.8% to 93.4% for different types of attacks (i.e., rank attacks, version number modification attacks, and flooding attacks). In comparison, in our work, as mentioned in <xref rid="sec3dot3-sensors-25-01216" ref-type="sec">Section 3.3</xref>, the three best-performing models (i.e., OCSVM, PW_KDE, and B_GMM) showed better performances, with values ranging from 80% to 97% for the corresponding recall metric (i.e., recall on abnormal class) for different types of attacks (i.e., DoS attacks, CPU exhaustion attacks, and memory exhaustion attacks).</p><p>On the other hand, in [<xref rid="B14-sensors-25-01216" ref-type="bibr">14</xref>], a smart healthcare testbed is used to generate two datasets with the purpose of training several supervised and unsupervised ML algorithms for identifying cyberattacks (i.e., man-in-the-middle attacks and DoS attacks). This work and the work in [<xref rid="B14-sensors-25-01216" ref-type="bibr">14</xref>] are comparable only in the detection of DoS attacks. <xref rid="sensors-25-01216-t008" ref-type="table">Table 8</xref> compares (a) the performance evaluation metrics for the best supervised model (i.e., random forest&#x02014;RF) from the work in [<xref rid="B14-sensors-25-01216" ref-type="bibr">14</xref>] and (b) the runtime evaluation metrics for the best novelty detection model (i.e., OCSVM) mentioned in <xref rid="sec3dot4-sensors-25-01216" ref-type="sec">Section 3.4</xref> of this manuscript.</p><p><xref rid="sensors-25-01216-t008" ref-type="table">Table 8</xref> shows that the RF model from the work in [<xref rid="B14-sensors-25-01216" ref-type="bibr">14</xref>] has a better performance than the novelty detection model of this work. This is an expected outcome as conventional supervised ML algorithms, such as RF, focus more on the classification of a new record into one of the classes for which the classification algorithms have been trained [<xref rid="B17-sensors-25-01216" ref-type="bibr">17</xref>]. Conventional classification ML algorithms are capable of accurate predictions in cases where a new record is included in the training dataset. In contrast, conventional classification ML algorithms cannot make accurate predictions if a new record is not part of the training dataset.</p><p>On the other hand, novelty detection and outlier detection algorithms are trained mostly on records from a single known class. This, in turn, means that novelty detection and outlier detection algorithms can assess whether a new record is similar to the training records or not [<xref rid="B17-sensors-25-01216" ref-type="bibr">17</xref>]. In essence, the main advantage of using novelty detection and outlier detection algorithms in this work is their ability to detect both known and unknown attacks (i.e., unknown to the training data).</p><p>This work advances the state-of-the-art in two ways. Firstly, our proposed AIDS is evaluated during runtime in contrast to the state-of-the-art AIDSs that do not include a runtime performance evaluation. Secondly, we use novelty detection and outlier detection algorithms for detecting both known and unknown (i.e., unknown to the training data) attack patterns. In parallel, the computational costs of the implemented AIDS are kept at low levels, meaning that the proposed AIDS constitutes a lightweight security solution that is suitable for IoMT networks and their resource-constrained IoMT devices.</p></sec><sec sec-type="conclusions" id="sec5-sensors-25-01216"><title>5. Conclusions</title><p>In this paper, an AIDS specifically designed for resource-constrained devices within IoMT networks was proposed. The design of the proposed lightweight AIDS was presented along with implementation details. The proposed AIDS leverages novelty detection and outlier detection algorithms instead of conventional classification algorithms. The runtime performance of the proposed AIDS was evaluated using an IoMT testbed and dataset developed in our previous works [<xref rid="B18-sensors-25-01216" ref-type="bibr">18</xref>,<xref rid="B19-sensors-25-01216" ref-type="bibr">19</xref>]. The runtime evaluation results showed that the implemented AIDS can achieve (a) enhanced detection performance against both known and unknown attack patterns and (b) minimal computational costs, with CPU and memory usage for the MDA component remaining below 0.1%.</p><p>For future work, we aim to investigate additional outlier detection algorithms that are available in the PyOD [<xref rid="B35-sensors-25-01216" ref-type="bibr">35</xref>] library for intrusion detection purposes. In addition, we plan to investigate (a) various combinations (i.e., ensembles) of novelty detection algorithms and/or outlier detection algorithms, (b) deep learning (DL) algorithms, and (c) the possibility of integrating novelty/outlier detection algorithms with conventional classification ML algorithms in an effort to improve the intrusion detection capabilities of the proposed AIDS while keeping the computational cost at low levels as it would need to run on a resource-constrained gateway in an IoMT network (e.g., Raspberry Pi 4 device). The newly explored detection algorithms could be integrated into the detection engine of the proposed AIDS, allowing us to evaluate their performance in detecting intrusions and their computational overhead during runtime.</p><p>Furthermore, we aim to experiment with various feature importance and feature reduction methods in order to discover the important features among the full set of features used in the training and decision-making processes. Through these experiments, we will be able to pinpoint combinations of features that can be used in the training and decision-making processes to enhance the performance of the proposed AIDS in detecting intrusions during runtime.</p><p>Moreover, we intend to extend the implementation of the MDA component so that it can operate on IoMT devices without requiring a Linux-based OS. For example, popular IoT OSes such as Contiki OS [<xref rid="B38-sensors-25-01216" ref-type="bibr">38</xref>] and Zephyr RTOS [<xref rid="B39-sensors-25-01216" ref-type="bibr">39</xref>] could be supported. In parallel, the IoMT testbed from our previous work [<xref rid="B18-sensors-25-01216" ref-type="bibr">18</xref>] needs to be extended to include devices supporting a wide range of OSes, such as integrating Tmote Sky devices [<xref rid="B40-sensors-25-01216" ref-type="bibr">40</xref>] running the Contiki OS.</p></sec></body><back><fn-group><fn><p><bold>Disclaimer/Publisher&#x02019;s Note:</bold> The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.</p></fn></fn-group><notes><title>Author Contributions</title><p>Conceptualization, G.Z., G.M., K.P. and J.R.; methodology, G.Z. and G.M.; software, G.Z.; validation, G.Z. and G.M.; investigation, G.Z. and G.M.; writing&#x02014;original draft preparation, G.Z. and G.M.; writing&#x02014;review and editing, G.Z., G.M., K.P. and J.R.; visualization, G.Z. and G.M.; supervision, G.M., K.P. and J.R. All authors have read and agreed to the published version of the manuscript.</p></notes><notes><title>Institutional Review Board Statement</title><p>Not applicable.</p></notes><notes><title>Informed Consent Statement</title><p>Not applicable.</p></notes><notes notes-type="data-availability"><title>Data Availability Statement</title><p>Data are contained within the article.</p></notes><notes notes-type="COI-statement"><title>Conflicts of Interest</title><p>The authors declare no conflicts of interest.</p></notes><ref-list><title>References</title><ref id="B1-sensors-25-01216"><label>1.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Rodrigues</surname><given-names>J.J.P.C.</given-names></name>
<name><surname>Segundo</surname><given-names>D.B.D.R.</given-names></name>
<name><surname>Junqueira</surname><given-names>H.A.</given-names></name>
<name><surname>Sabino</surname><given-names>M.H.</given-names></name>
<name><surname>Prince</surname><given-names>R.M.I.</given-names></name>
<name><surname>Al-Muhtadi</surname><given-names>J.</given-names></name>
<name><surname>De Albuquerque</surname><given-names>V.H.C.</given-names></name>
</person-group><article-title>Enabling Technologies for the Internet of Health Things</article-title><source>IEEE Access</source><year>2018</year><volume>6</volume><fpage>13129</fpage><lpage>13141</lpage><pub-id pub-id-type="doi">10.1109/ACCESS.2017.2789329</pub-id></element-citation></ref><ref id="B2-sensors-25-01216"><label>2.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Papaioannou</surname><given-names>M.</given-names></name>
<name><surname>Karageorgou</surname><given-names>M.</given-names></name>
<name><surname>Mantas</surname><given-names>G.</given-names></name>
<name><surname>Sucasas</surname><given-names>V.</given-names></name>
<name><surname>Essop</surname><given-names>I.</given-names></name>
<name><surname>Rodriguez</surname><given-names>J.</given-names></name>
<name><surname>Lymberopoulos</surname><given-names>D.</given-names></name>
</person-group><article-title>A Survey on Security Threats and Countermeasures in Internet of Medical Things (IoMT)</article-title><source>Trans. Emerg. Telecommun. Technol.</source><year>2020</year><volume>33</volume><fpage>e4049</fpage><pub-id pub-id-type="doi">10.1002/ett.4049</pub-id></element-citation></ref><ref id="B3-sensors-25-01216"><label>3.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Islam</surname><given-names>S.M.R.</given-names></name>
<name><surname>Kwak</surname><given-names>D.</given-names></name>
<name><surname>Kabir</surname><given-names>M.H.</given-names></name>
<name><surname>Hossain</surname><given-names>M.</given-names></name>
<name><surname>Kwak</surname><given-names>K.S.</given-names></name>
</person-group><article-title>The Internet of Things for Health Care: A Comprehensive Survey</article-title><source>IEEE Access</source><year>2015</year><volume>3</volume><fpage>678</fpage><lpage>708</lpage><pub-id pub-id-type="doi">10.1109/ACCESS.2015.2437951</pub-id></element-citation></ref><ref id="B4-sensors-25-01216"><label>4.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Fengou</surname><given-names>M.-A.</given-names></name>
<name><surname>Mantas</surname><given-names>G.</given-names></name>
<name><surname>Lymberopoulos</surname><given-names>D.</given-names></name>
<name><surname>Komninos</surname><given-names>N.</given-names></name>
<name><surname>Fengos</surname><given-names>S.</given-names></name>
<name><surname>Lazarou</surname><given-names>N.</given-names></name>
</person-group><article-title>A New Framework Architecture for Next Generation E-Health Services</article-title><source>IEEE J. Biomed. Health Inform.</source><year>2013</year><volume>17</volume><fpage>9</fpage><lpage>18</lpage><pub-id pub-id-type="doi">10.1109/TITB.2012.2224876</pub-id><pub-id pub-id-type="pmid">23086531</pub-id>
</element-citation></ref><ref id="B5-sensors-25-01216"><label>5.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Makhdoom</surname><given-names>I.</given-names></name>
<name><surname>Abolhasan</surname><given-names>M.</given-names></name>
<name><surname>Lipman</surname><given-names>J.</given-names></name>
<name><surname>Liu</surname><given-names>R.P.</given-names></name>
<name><surname>Ni</surname><given-names>W.</given-names></name>
</person-group><article-title>Anatomy of Threats to the Internet of Things</article-title><source>IEEE Commun. Surv. Tutor.</source><year>2019</year><volume>21</volume><fpage>1636</fpage><lpage>1675</lpage><pub-id pub-id-type="doi">10.1109/COMST.2018.2874978</pub-id></element-citation></ref><ref id="B6-sensors-25-01216"><label>6.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Zhang</surname><given-names>M.</given-names></name>
<name><surname>Raghunathan</surname><given-names>A.</given-names></name>
<name><surname>Jha</surname><given-names>N.K.</given-names></name>
</person-group><article-title>Trustworthiness of Medical Devices and Body Area Networks</article-title><source>Proc. IEEE</source><year>2014</year><volume>102</volume><fpage>1174</fpage><lpage>1188</lpage><pub-id pub-id-type="doi">10.1109/JPROC.2014.2322103</pub-id></element-citation></ref><ref id="B7-sensors-25-01216"><label>7.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Essop</surname><given-names>I.</given-names></name>
<name><surname>Ribeiro</surname><given-names>J.C.</given-names></name>
<name><surname>Papaioannou</surname><given-names>M.</given-names></name>
<name><surname>Zachos</surname><given-names>G.</given-names></name>
<name><surname>Mantas</surname><given-names>G.</given-names></name>
<name><surname>Rodriguez</surname><given-names>J.</given-names></name>
</person-group><article-title>Generating Datasets for Anomaly-Based Intrusion Detection Systems in Iot and Industrial Iot Networks</article-title><source>Sensors</source><year>2021</year><volume>21</volume><elocation-id>1528</elocation-id><pub-id pub-id-type="doi">10.3390/s21041528</pub-id><pub-id pub-id-type="pmid">33672108</pub-id>
</element-citation></ref><ref id="B8-sensors-25-01216"><label>8.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Alsubaei</surname><given-names>F.</given-names></name>
<name><surname>Abuhussein</surname><given-names>A.</given-names></name>
<name><surname>Shiva</surname><given-names>S.</given-names></name>
</person-group><article-title>Security and Privacy in the Internet of Medical Things: Taxonomy and Risk Assessment</article-title><source>Proceedings of the 2017 IEEE 42nd Conference on Local Computer Networks Workshops, LCN Workshops 2017</source><conf-loc>Singapore</conf-loc><conf-date>9&#x02013;12 October 2017</conf-date><publisher-name>Institute of Electrical and Electronics Engineers Inc.</publisher-name><publisher-loc>New York, NY, USA</publisher-loc><year>2017</year><fpage>112</fpage><lpage>120</lpage></element-citation></ref><ref id="B9-sensors-25-01216"><label>9.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Asharf</surname><given-names>J.</given-names></name>
<name><surname>Moustafa</surname><given-names>N.</given-names></name>
<name><surname>Khurshid</surname><given-names>H.</given-names></name>
<name><surname>Debie</surname><given-names>E.</given-names></name>
<name><surname>Haider</surname><given-names>W.</given-names></name>
<name><surname>Wahab</surname><given-names>A.</given-names></name>
</person-group><article-title>A Review of Intrusion Detection Systems Using Machine and Deep Learning in Internet of Things: Challenges, Solutions and Future Directions</article-title><source>Electronics</source><year>2020</year><volume>9</volume><elocation-id>1177</elocation-id><pub-id pub-id-type="doi">10.3390/electronics9071177</pub-id></element-citation></ref><ref id="B10-sensors-25-01216"><label>10.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Newaz</surname><given-names>A.I.</given-names></name>
<name><surname>Sikder</surname><given-names>A.K.</given-names></name>
<name><surname>Rahman</surname><given-names>M.A.</given-names></name>
<name><surname>Uluagac</surname><given-names>A.S.</given-names></name>
</person-group><article-title>HealthGuard: A Machine Learning-Based Security Framework for Smart Healthcare Systems</article-title><source>Proceedings of the 2019 6th International Conference on Social Networks Analysis, Management and Security, SNAMS 2019</source><conf-loc>Granada, Spain</conf-loc><conf-date>22&#x02013;25 October 2019</conf-date><publisher-name>Institute of Electrical and Electronics Engineers Inc.</publisher-name><publisher-loc>New York, NY, USA</publisher-loc><year>2019</year><fpage>389</fpage><lpage>396</lpage></element-citation></ref><ref id="B11-sensors-25-01216"><label>11.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Schneble</surname><given-names>W.</given-names></name>
<name><surname>Thamilarasu</surname><given-names>G.</given-names></name>
</person-group><article-title>Attack Detection Using Federated Learning in Medical Cyber-Physical Systems</article-title><source>Proceedings of the 28th International Conference on Computer Communication and Networks (ICCCN)</source><conf-loc>Valencia, Spain</conf-loc><conf-date>29 July&#x02013;1 August 2019</conf-date><volume>Volume 29</volume><fpage>1</fpage><lpage>8</lpage></element-citation></ref><ref id="B12-sensors-25-01216"><label>12.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Thamilarasu</surname><given-names>G.</given-names></name>
<name><surname>Odesile</surname><given-names>A.</given-names></name>
<name><surname>Hoang</surname><given-names>A.</given-names></name>
</person-group><article-title>An Intrusion Detection System for Internet of Medical Things</article-title><source>IEEE Access</source><year>2020</year><volume>8</volume><fpage>181560</fpage><lpage>181576</lpage><pub-id pub-id-type="doi">10.1109/ACCESS.2020.3026260</pub-id></element-citation></ref><ref id="B13-sensors-25-01216"><label>13.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Said</surname><given-names>A.M.</given-names></name>
<name><surname>Yahyaoui</surname><given-names>A.</given-names></name>
<name><surname>Abdellatif</surname><given-names>T.</given-names></name>
</person-group><article-title>Efficient Anomaly Detection for Smart Hospital IoT Systems</article-title><source>Sensors</source><year>2021</year><volume>21</volume><elocation-id>1026</elocation-id><pub-id pub-id-type="doi">10.3390/s21041026</pub-id><pub-id pub-id-type="pmid">33546169</pub-id>
</element-citation></ref><ref id="B14-sensors-25-01216"><label>14.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Zubair</surname><given-names>M.</given-names></name>
<name><surname>Ghubaish</surname><given-names>A.</given-names></name>
<name><surname>Unal</surname><given-names>D.</given-names></name>
<name><surname>Al-Ali</surname><given-names>A.</given-names></name>
<name><surname>Reimann</surname><given-names>T.</given-names></name>
<name><surname>Alinier</surname><given-names>G.</given-names></name>
<name><surname>Hammoudeh</surname><given-names>M.</given-names></name>
<name><surname>Qadir</surname><given-names>J.</given-names></name>
</person-group><article-title>Secure Bluetooth Communication in Smart Healthcare Systems: A Novel Community Dataset and Intrusion Detection System</article-title><source>Sensors</source><year>2022</year><volume>22</volume><elocation-id>8280</elocation-id><pub-id pub-id-type="doi">10.3390/s22218280</pub-id><pub-id pub-id-type="pmid">36365978</pub-id>
</element-citation></ref><ref id="B15-sensors-25-01216"><label>15.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Nandini</surname><given-names>A.</given-names></name>
<name><surname>Behera</surname><given-names>A.</given-names></name>
<name><surname>Mishra</surname><given-names>T.K.</given-names></name>
</person-group><article-title>Detecting Threats in IoT Based Healthcare Using Machine Learning Algorithms</article-title><source>Proceedings of the 2024 IEEE 9th International Conference for Convergence in Technology (I2CT)</source><conf-loc>Pune, India</conf-loc><conf-date>5&#x02013;7 April 2024</conf-date><fpage>1</fpage><lpage>6</lpage></element-citation></ref><ref id="B16-sensors-25-01216"><label>16.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Zukaib</surname><given-names>U.</given-names></name>
<name><surname>Cui</surname><given-names>X.</given-names></name>
<name><surname>Zheng</surname><given-names>C.</given-names></name>
<name><surname>Hassan</surname><given-names>M.</given-names></name>
<name><surname>Shen</surname><given-names>Z.</given-names></name>
</person-group><article-title>Meta-IDS: Meta-Learning-Based Smart Intrusion Detection System for Internet of Medical Things (IoMT) Network</article-title><source>IEEE Internet Things J.</source><year>2024</year><volume>11</volume><fpage>23080</fpage><lpage>23095</lpage><pub-id pub-id-type="doi">10.1109/JIOT.2024.3387294</pub-id></element-citation></ref><ref id="B17-sensors-25-01216"><label>17.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Pimentel</surname><given-names>M.A.F.</given-names></name>
<name><surname>Clifton</surname><given-names>D.A.</given-names></name>
<name><surname>Clifton</surname><given-names>L.</given-names></name>
<name><surname>Tarassenko</surname><given-names>L.</given-names></name>
</person-group><article-title>A Review of Novelty Detection</article-title><source>Signal Process.</source><year>2014</year><volume>99</volume><fpage>215</fpage><lpage>249</lpage><pub-id pub-id-type="doi">10.1016/j.sigpro.2013.12.026</pub-id></element-citation></ref><ref id="B18-sensors-25-01216"><label>18.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Zachos</surname><given-names>G.</given-names></name>
<name><surname>Mantas</surname><given-names>G.</given-names></name>
<name><surname>Essop</surname><given-names>I.</given-names></name>
<name><surname>Porfyrakis</surname><given-names>K.</given-names></name>
<name><surname>Bastos</surname><given-names>J.M.C.S.</given-names></name>
<name><surname>Rodriguez</surname><given-names>J.</given-names></name>
</person-group><article-title>An IoT/IoMT Security Testbed for Anomaly-Based Intrusion Detection Systems</article-title><source>Proceedings of the 2023 IFIP Networking Conference (IFIP Networking)</source><conf-loc>Barcelona, Spain</conf-loc><conf-date>12&#x02013;15 June 2023</conf-date><fpage>1</fpage><lpage>6</lpage></element-citation></ref><ref id="B19-sensors-25-01216"><label>19.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Zachos</surname><given-names>G.</given-names></name>
<name><surname>Mantas</surname><given-names>G.</given-names></name>
<name><surname>Porfyrakis</surname><given-names>K.</given-names></name>
<name><surname>Bastos</surname><given-names>J.M.C.S.</given-names></name>
<name><surname>Rodriguez</surname><given-names>J.</given-names></name>
</person-group><article-title>Anomaly-Based Intrusion Detection for IoMT Networks: Design, Implementation, Dataset Generation and ML Algorithms Evaluation</article-title><source>IEEE Access</source><year>2024</year><comment>
<italic toggle="yes">under review</italic>
</comment></element-citation></ref><ref id="B20-sensors-25-01216"><label>20.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>Sector</surname><given-names>I.T.U.T.S.</given-names></name>
</person-group><article-title>Recommendation ITU-T Y.2060: Overview of the Internet of Things</article-title><comment>Available online: <ext-link xlink:href="https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=y.2060" ext-link-type="uri">https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=y.2060</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2022-10-20">(accessed on 20 October 2022)</date-in-citation></element-citation></ref><ref id="B21-sensors-25-01216"><label>21.</label><element-citation publication-type="webpage"><article-title>Ubuntu 20.04.5 LTS (Focal Fossa)</article-title><comment>Available online: <ext-link xlink:href="https://releases.ubuntu.com/focal/" ext-link-type="uri">https://releases.ubuntu.com/focal/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2023-03-20">(accessed on 20 March 2023)</date-in-citation></element-citation></ref><ref id="B22-sensors-25-01216"><label>22.</label><element-citation publication-type="webpage"><article-title>Eclipse Paho|The Eclipse Foundation</article-title><comment>Available online: <ext-link xlink:href="https://eclipse.dev/" ext-link-type="uri">https://eclipse.dev/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-01-08">(accessed on 8 January 2024)</date-in-citation></element-citation></ref><ref id="B23-sensors-25-01216"><label>23.</label><element-citation publication-type="webpage"><article-title>Proc(5)&#x02014;Linux Manual Page</article-title><comment>Available online: <ext-link xlink:href="https://man7.org/linux/man-pages/man5/proc.5.html" ext-link-type="uri">https://man7.org/linux/man-pages/man5/proc.5.html</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-02-22">(accessed on 22 February 2024)</date-in-citation></element-citation></ref><ref id="B24-sensors-25-01216"><label>24.</label><element-citation publication-type="webpage"><article-title>Proc_stat(5)&#x02014;Linux Manual Page</article-title><comment>Available online: <ext-link xlink:href="https://man7.org/linux/man-pages/man5/proc_stat.5.html" ext-link-type="uri">https://man7.org/linux/man-pages/man5/proc_stat.5.html</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-08-23">(accessed on 23 August 2024)</date-in-citation></element-citation></ref><ref id="B25-sensors-25-01216"><label>25.</label><element-citation publication-type="webpage"><article-title>Proc_meminfo(5)&#x02014;Linux Manual Page</article-title><comment>Available online: <ext-link xlink:href="https://man7.org/linux/man-pages/man5/proc_meminfo.5.html" ext-link-type="uri">https://man7.org/linux/man-pages/man5/proc_meminfo.5.html</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-08-23">(accessed on 23 August 2024)</date-in-citation></element-citation></ref><ref id="B26-sensors-25-01216"><label>26.</label><element-citation publication-type="webpage"><article-title>Proc_diskstats(5)&#x02014;Linux Manual Page</article-title><comment>Available online: <ext-link xlink:href="https://man7.org/linux/man-pages/man5/proc_diskstats.5.html" ext-link-type="uri">https://man7.org/linux/man-pages/man5/proc_diskstats.5.html</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-08-23">(accessed on 23 August 2024)</date-in-citation></element-citation></ref><ref id="B27-sensors-25-01216"><label>27.</label><element-citation publication-type="webpage"><article-title>JSON-Java</article-title><comment>Available online: <ext-link xlink:href="https://stleary.github.io/JSON-java/index.html" ext-link-type="uri">https://stleary.github.io/JSON-java/index.html</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-11-13">(accessed on 13 November 2024)</date-in-citation></element-citation></ref><ref id="B28-sensors-25-01216"><label>28.</label><element-citation publication-type="webpage"><article-title>Apache HttpComponents</article-title><comment>Available online: <ext-link xlink:href="https://hc.apache.org/" ext-link-type="uri">https://hc.apache.org/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-11-13">(accessed on 13 November 2024)</date-in-citation></element-citation></ref><ref id="B29-sensors-25-01216"><label>29.</label><element-citation publication-type="webpage"><article-title>Apache Commons IO</article-title><comment>Available online: <ext-link xlink:href="https://commons.apache.org/proper/commons-io/" ext-link-type="uri">https://commons.apache.org/proper/commons-io/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-11-13">(accessed on 13 November 2024)</date-in-citation></element-citation></ref><ref id="B30-sensors-25-01216"><label>30.</label><element-citation publication-type="webpage"><article-title>Argparse4j</article-title><comment>Available online: <ext-link xlink:href="https://argparse4j.github.io/" ext-link-type="uri">https://argparse4j.github.io/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-11-13">(accessed on 13 November 2024)</date-in-citation></element-citation></ref><ref id="B31-sensors-25-01216"><label>31.</label><element-citation publication-type="webpage"><article-title>Scikit-Learn: Novelty and Outlier Detection</article-title><comment>Available online: <ext-link xlink:href="https://scikit-learn.org/stable/modules/outlier_detection.html" ext-link-type="uri">https://scikit-learn.org/stable/modules/outlier_detection.html</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-11-13">(accessed on 13 November 2024)</date-in-citation></element-citation></ref><ref id="B32-sensors-25-01216"><label>32.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Pedregosa</surname><given-names>F.</given-names></name>
<name><surname>Varoquaux</surname><given-names>G.</given-names></name>
<name><surname>Gramfort</surname><given-names>A.</given-names></name>
<name><surname>Michel</surname><given-names>V.</given-names></name>
<name><surname>Thirion</surname><given-names>B.</given-names></name>
<name><surname>Grisel</surname><given-names>O.</given-names></name>
<name><surname>Blondel</surname><given-names>M.</given-names></name>
<name><surname>Prettenhofer</surname><given-names>P.</given-names></name>
<name><surname>Weiss</surname><given-names>R.</given-names></name>
<name><surname>Dubourg</surname><given-names>V.</given-names></name>
<etal/>
</person-group><article-title>Scikit-Learn: Machine Learning in Python</article-title><source>J. Mach. Learn. Res.</source><year>2011</year><volume>12</volume><fpage>2825</fpage><lpage>2830</lpage></element-citation></ref><ref id="B33-sensors-25-01216"><label>33.</label><element-citation publication-type="webpage"><article-title>Scikit-Learn</article-title><comment>Available online: <ext-link xlink:href="https://scikit-learn.org/stable/" ext-link-type="uri">https://scikit-learn.org/stable/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2021-11-10">(accessed on 10 November 2021)</date-in-citation></element-citation></ref><ref id="B34-sensors-25-01216"><label>34.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Zhao</surname><given-names>Y.</given-names></name>
<name><surname>Nasrullah</surname><given-names>Z.</given-names></name>
<name><surname>Li</surname><given-names>Z.</given-names></name>
</person-group><article-title>PyOD: A Python Toolbox for Scalable Outlier Detection</article-title><source>J. Mach. Learn. Res.</source><year>2019</year><volume>20</volume><fpage>1</fpage><lpage>7</lpage></element-citation></ref><ref id="B35-sensors-25-01216"><label>35.</label><element-citation publication-type="webpage"><article-title>Pyod 2.0.2 Documentation</article-title><comment>Available online: <ext-link xlink:href="https://pyod.readthedocs.io/en/latest/index.html" ext-link-type="uri">https://pyod.readthedocs.io/en/latest/index.html</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-09-09">(accessed on 9 September 2024)</date-in-citation></element-citation></ref><ref id="B36-sensors-25-01216"><label>36.</label><element-citation publication-type="webpage"><article-title>GitHub&#x02014;ColinIanKing/Stress-Ng</article-title><comment>Available online: <ext-link xlink:href="https://github.com/ColinIanKing/stress-ng" ext-link-type="uri">https://github.com/ColinIanKing/stress-ng</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-09-03">(accessed on 3 September 2024)</date-in-citation></element-citation></ref><ref id="B37-sensors-25-01216"><label>37.</label><element-citation publication-type="webpage"><article-title>Kernel/Reference/Stress-Ng&#x02014;Ubuntu Wiki</article-title><comment>Available online: <ext-link xlink:href="https://wiki.ubuntu.com/Kernel/Reference/stress-ng" ext-link-type="uri">https://wiki.ubuntu.com/Kernel/Reference/stress-ng</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-09-03">(accessed on 3 September 2024)</date-in-citation></element-citation></ref><ref id="B38-sensors-25-01216"><label>38.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Oikonomou</surname><given-names>G.</given-names></name>
<name><surname>Duquennoy</surname><given-names>S.</given-names></name>
<name><surname>Elsts</surname><given-names>A.</given-names></name>
<name><surname>Eriksson</surname><given-names>J.</given-names></name>
<name><surname>Tanaka</surname><given-names>Y.</given-names></name>
<name><surname>Tsiftes</surname><given-names>N.</given-names></name>
</person-group><article-title>The {Contiki-NG} Open Source Operating System for next Generation {IoT} Devices</article-title><source>SoftwareX</source><year>2022</year><volume>18</volume><fpage>101089</fpage><pub-id pub-id-type="doi">10.1016/j.softx.2022.101089</pub-id></element-citation></ref><ref id="B39-sensors-25-01216"><label>39.</label><element-citation publication-type="webpage"><article-title>Zephyr Project Documentation&#x02014;Zephyr Project Documentation</article-title><comment>Available online: <ext-link xlink:href="https://docs.zephyrproject.org/latest/index.html" ext-link-type="uri">https://docs.zephyrproject.org/latest/index.html</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2023-01-24">(accessed on 24 January 2023)</date-in-citation></element-citation></ref><ref id="B40-sensors-25-01216"><label>40.</label><element-citation publication-type="webpage"><article-title>Moteiv Corporation Tmote Sky&#x02014;Ultra Low Power IEEE 802.15.4 Compliant Wireless Sensor Module</article-title><comment>Available online: <ext-link xlink:href="http://www.crew-project.eu/sites/default/files/tmote-sky-datasheet.pdf" ext-link-type="uri">http://www.crew-project.eu/sites/default/files/tmote-sky-datasheet.pdf</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2021-09-06">(accessed on 6 September 2021)</date-in-citation></element-citation></ref></ref-list></back><floats-group><fig position="float" id="sensors-25-01216-f001"><label>Figure 1</label><caption><p>Architecture of the proposed AIDS in the IoMT network.</p></caption><graphic xlink:href="sensors-25-01216-g001" position="float"/></fig><fig position="float" id="sensors-25-01216-f002"><label>Figure 2</label><caption><p>The Monitoring and Data Acquisition (MDA) component.</p></caption><graphic xlink:href="sensors-25-01216-g002" position="float"/></fig><fig position="float" id="sensors-25-01216-f003"><label>Figure 3</label><caption><p>The Remote Detection Engine (RDE) component.</p></caption><graphic xlink:href="sensors-25-01216-g003" position="float"/></fig><fig position="float" id="sensors-25-01216-f004"><label>Figure 4</label><caption><p>Internal architecture of the &#x0201c;Detection Engine&#x0201d; module of the RDE component.</p></caption><graphic xlink:href="sensors-25-01216-g004" position="float"/></fig><fig position="float" id="sensors-25-01216-f005"><label>Figure 5</label><caption><p>Runtime evaluation results of the six detection algorithms when integrated into the &#x0201c;Detection Engine&#x0201d; module of the RDE component of the AIDS.</p></caption><graphic xlink:href="sensors-25-01216-g005" position="float"/></fig><fig position="float" id="sensors-25-01216-f006"><label>Figure 6</label><caption><p>CPU consumption of the RDE component for different detection algorithms.</p></caption><graphic xlink:href="sensors-25-01216-g006" position="float"/></fig><fig position="float" id="sensors-25-01216-f007"><label>Figure 7</label><caption><p>Memory consumption of the RDE component for different detection algorithms.</p></caption><graphic xlink:href="sensors-25-01216-g007" position="float"/></fig><table-wrap position="float" id="sensors-25-01216-t001"><object-id pub-id-type="pii">sensors-25-01216-t001_Table 1</object-id><label>Table 1</label><caption><p>Summary of features collected by the &#x0201c;Data Collection&#x0201d; module of the MDA component.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Feature Name</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Index</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Description</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">timestamp</td><td align="center" valign="middle" rowspan="1" colspan="1">1</td><td align="center" valign="middle" rowspan="1" colspan="1">Time in milliseconds when the current record was collected.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">user_ticks</td><td align="center" valign="middle" rowspan="1" colspan="1">2</td><td align="center" valign="middle" rowspan="1" colspan="1">Duration in ticks <sup>1</sup> that the CPU has been in user mode after system boot.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">nice_ticks</td><td align="center" valign="middle" rowspan="1" colspan="1">3</td><td align="center" valign="middle" rowspan="1" colspan="1">Duration in ticks <sup>1</sup> that the CPU has been in user mode with low priority after system boot.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">system_ticks</td><td align="center" valign="middle" rowspan="1" colspan="1">4</td><td align="center" valign="middle" rowspan="1" colspan="1">Duration in ticks <sup>1</sup> that the CPU has been in system mode after system boot.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">idle_ticks</td><td align="center" valign="middle" rowspan="1" colspan="1">5</td><td align="center" valign="middle" rowspan="1" colspan="1">Duration in ticks <sup>1</sup> that the CPU has been idling after system boot.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">iowait_ticks</td><td align="center" valign="middle" rowspan="1" colspan="1">6</td><td align="center" valign="middle" rowspan="1" colspan="1">Duration in ticks <sup>1</sup> that the CPU has been waiting for I/O to complete after system boot.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">irq_ticks</td><td align="center" valign="middle" rowspan="1" colspan="1">7</td><td align="center" valign="middle" rowspan="1" colspan="1">Duration in ticks <sup>1</sup> that the CPU has been servicing interrupts after system boot.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">softirq_ticks</td><td align="center" valign="middle" rowspan="1" colspan="1">8</td><td align="center" valign="middle" rowspan="1" colspan="1">Duration in ticks <sup>1</sup> that the CPU has been servicing software interrupts after system boot.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">steal_ticks</td><td align="center" valign="middle" rowspan="1" colspan="1">9</td><td align="center" valign="middle" rowspan="1" colspan="1">Duration in ticks <sup>1</sup> that the CPU has been spending in other operating systems when running in a virtualized environment after system boot.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">guest_ticks</td><td align="center" valign="middle" rowspan="1" colspan="1">10</td><td align="center" valign="middle" rowspan="1" colspan="1">Duration in ticks <sup>1</sup> that the CPU has been running a virtual CPU for guest operating systems under the control of the Linux kernel after system boot.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">guest_nice_ticks</td><td align="center" valign="middle" rowspan="1" colspan="1">11</td><td align="center" valign="middle" rowspan="1" colspan="1">Duration in ticks <sup>1</sup> that the CPU has been running a niced (low priority) virtual CPU for guest operating systems under the control of the Linux kernel after system boot.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">intr</td><td align="center" valign="middle" rowspan="1" colspan="1">12</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of interrupts serviced after system boot.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">ctxt</td><td align="center" valign="middle" rowspan="1" colspan="1">13</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of context switches that the system has undergone after system boot.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">processes</td><td align="center" valign="middle" rowspan="1" colspan="1">14</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of newly created processes after system boot.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">procs_running</td><td align="center" valign="middle" rowspan="1" colspan="1">15</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of processes in a runnable state.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">softirq</td><td align="center" valign="middle" rowspan="1" colspan="1">16</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of software interrupts serviced after system boot.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_total</td><td align="center" valign="middle" rowspan="1" colspan="1">17</td><td align="center" valign="middle" rowspan="1" colspan="1">Size of total usable RAM.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_free</td><td align="center" valign="middle" rowspan="1" colspan="1">18</td><td align="center" valign="middle" rowspan="1" colspan="1">Sum of sizes of free memory in the low-memory region and the high-memory region.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_available</td><td align="center" valign="middle" rowspan="1" colspan="1">19</td><td align="center" valign="middle" rowspan="1" colspan="1">Estimated size of memory available for starting new applications without swapping.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_cached</td><td align="center" valign="middle" rowspan="1" colspan="1">20</td><td align="center" valign="middle" rowspan="1" colspan="1">Size of memory used for caching files read from the disk.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_active</td><td align="center" valign="middle" rowspan="1" colspan="1">21</td><td align="center" valign="middle" rowspan="1" colspan="1">Size of memory that is used frequently and usually not reclaimed unless absolutely necessary.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_inactive</td><td align="center" valign="middle" rowspan="1" colspan="1">22</td><td align="center" valign="middle" rowspan="1" colspan="1">Size of memory that is used less frequently and can be reclaimed for other purposes.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_slab</td><td align="center" valign="middle" rowspan="1" colspan="1">23</td><td align="center" valign="middle" rowspan="1" colspan="1">Size of memory that is used as a cache for in-kernel data structures.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_kernel_stack</td><td align="center" valign="middle" rowspan="1" colspan="1">24</td><td align="center" valign="middle" rowspan="1" colspan="1">Size of memory allocated to kernel stacks.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_pagetables</td><td align="center" valign="middle" rowspan="1" colspan="1">25</td><td align="center" valign="middle" rowspan="1" colspan="1">Size of memory dedicated to the lowest level of page tables.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">reads</td><td align="center" valign="middle" rowspan="1" colspan="1">26</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of total read operations that have been completed successfully after system boot.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">sectors_rd_num</td><td align="center" valign="middle" rowspan="1" colspan="1">27</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of total sectors that have been read successfully after system boot.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">msecs_rd</td><td align="center" valign="middle" rowspan="1" colspan="1">28</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of milliseconds spent during read operations after system boot.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">writes</td><td align="center" valign="middle" rowspan="1" colspan="1">29</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of total write operations that have been completed successfully after system boot.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">sectors_wr_num</td><td align="center" valign="middle" rowspan="1" colspan="1">30</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of total sectors that have been written successfully after system boot.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">msecs_wr</td><td align="center" valign="middle" rowspan="1" colspan="1">31</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of milliseconds spent during write operations after system boot.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">cur_IOs</td><td align="center" valign="middle" rowspan="1" colspan="1">32</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of I/O operations currently in progress.</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">msecs_io</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">33</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Number of milliseconds spent during I/O operations after system boot.</td></tr></tbody></table><table-wrap-foot><fn><p><sup>1</sup> Ticks = amount of time measured in units of USER_HZ (1/100ths of a second on most processor architectures). The number of ticks starts from zero during system boot.</p></fn></table-wrap-foot></table-wrap><table-wrap position="float" id="sensors-25-01216-t002"><object-id pub-id-type="pii">sensors-25-01216-t002_Table 2</object-id><label>Table 2</label><caption><p>Employed external libraries and short descriptions of their use.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Library</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Short Description</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">JSON-java [<xref rid="B27-sensors-25-01216" ref-type="bibr">27</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">This library is used to load JSON objects from text, create JSON objects, and transform JSON objects to text.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Apache HttpComponents (Core &#x00026; Client) [<xref rid="B28-sensors-25-01216" ref-type="bibr">28</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">These libraries were used to send intrusion alerts to a remote host through the HTTP protocol.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Eclipse Paho Java Client [<xref rid="B22-sensors-25-01216" ref-type="bibr">22</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">This library is used to create MQTT clients so that (a) intrusion alerts can be sent to a remote host through MQTT and (b) IoMT device behavior data can be received by the connected IoMT device through MQTT.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Apache Commons IOUtils [<xref rid="B29-sensors-25-01216" ref-type="bibr">29</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">This library is used to simplify input/output operations when using standard Java classes.</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Argparse4j [<xref rid="B30-sensors-25-01216" ref-type="bibr">30</xref>]</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">This library is used to be able to include a command-line argument parser in the implementation of the RDE component.</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-01216-t003"><object-id pub-id-type="pii">sensors-25-01216-t003_Table 3</object-id><label>Table 3</label><caption><p>Output feature values after the first preprocessing stage.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Feature Name</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Index</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Description</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">timestamp_delta</td><td align="center" valign="middle" rowspan="1" colspan="1">1</td><td align="center" valign="middle" rowspan="1" colspan="1">Elapsed time in milliseconds between the currently collected record and the previously collected record.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">user_ticks_delta</td><td align="center" valign="middle" rowspan="1" colspan="1">2</td><td align="center" valign="middle" rowspan="1" colspan="1">Duration in ticks <sup>1</sup> that the CPU has been in user mode since the previously collected record.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">nice_ticks_delta</td><td align="center" valign="middle" rowspan="1" colspan="1">3</td><td align="center" valign="middle" rowspan="1" colspan="1">Duration in ticks <sup>1</sup> that the CPU has been in user mode with low priority since the previously collected record.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">system_ticks_delta</td><td align="center" valign="middle" rowspan="1" colspan="1">4</td><td align="center" valign="middle" rowspan="1" colspan="1">Duration in ticks <sup>1</sup> that the CPU has been in system mode since the previously collected record.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">idle_ticks_delta</td><td align="center" valign="middle" rowspan="1" colspan="1">5</td><td align="center" valign="middle" rowspan="1" colspan="1">Duration in ticks <sup>1</sup> that the CPU has been idling since the previously collected record.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">iowait_ticks_delta</td><td align="center" valign="middle" rowspan="1" colspan="1">6</td><td align="center" valign="middle" rowspan="1" colspan="1">Duration in ticks <sup>1</sup> that the CPU has been waiting for I/O to complete since the previously collected record.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">irq_ticks_delta</td><td align="center" valign="middle" rowspan="1" colspan="1">7</td><td align="center" valign="middle" rowspan="1" colspan="1">Duration in ticks <sup>1</sup> that the CPU has been servicing interrupts since the previously collected record.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">softirq_ticks_delta</td><td align="center" valign="middle" rowspan="1" colspan="1">8</td><td align="center" valign="middle" rowspan="1" colspan="1">Duration in ticks <sup>1</sup> that the CPU has been servicing software interrupts since the previously collected record.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">steal_ticks_delta</td><td align="center" valign="middle" rowspan="1" colspan="1">9</td><td align="center" valign="middle" rowspan="1" colspan="1">Duration in ticks <sup>1</sup> that the CPU has been spending in other operating systems when running in a virtualized environment since the previously collected record.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">guest_ticks_delta</td><td align="center" valign="middle" rowspan="1" colspan="1">10</td><td align="center" valign="middle" rowspan="1" colspan="1">Duration in ticks <sup>1</sup> that the CPU has been running a virtual CPU for guest operating systems under the control of the Linux kernel since the previously collected record.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">guest_nice_ticks_delta</td><td align="center" valign="middle" rowspan="1" colspan="1">11</td><td align="center" valign="middle" rowspan="1" colspan="1">Duration in ticks <sup>1</sup> that the CPU has been running a niced (low priority) virtual CPU for guest operating systems under the control of the Linux kernel since the previously collected record.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">intr_delta</td><td align="center" valign="middle" rowspan="1" colspan="1">12</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of interrupts serviced since the previously collected record.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">ctxt_delta</td><td align="center" valign="middle" rowspan="1" colspan="1">13</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of context switches that the system has undergone since the previously collected record.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">processes_delta</td><td align="center" valign="middle" rowspan="1" colspan="1">14</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of newly created processes since the previously collected record.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">procs_running</td><td align="center" valign="middle" rowspan="1" colspan="1">15</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of processes in a runnable state.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">softirq_delta</td><td align="center" valign="middle" rowspan="1" colspan="1">16</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of software interrupts serviced since the previously collected record.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_total</td><td align="center" valign="middle" rowspan="1" colspan="1">17</td><td align="center" valign="middle" rowspan="1" colspan="1">Size of total usable RAM.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_free</td><td align="center" valign="middle" rowspan="1" colspan="1">18</td><td align="center" valign="middle" rowspan="1" colspan="1">Sum of sizes of free memory in the low-memory region and the high-memory region.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_available</td><td align="center" valign="middle" rowspan="1" colspan="1">19</td><td align="center" valign="middle" rowspan="1" colspan="1">Estimated size of memory available for starting new applications without swapping.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_cached</td><td align="center" valign="middle" rowspan="1" colspan="1">20</td><td align="center" valign="middle" rowspan="1" colspan="1">Size of memory used for caching files read from the disk.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_active</td><td align="center" valign="middle" rowspan="1" colspan="1">21</td><td align="center" valign="middle" rowspan="1" colspan="1">Size of memory that is used frequently and usually not reclaimed unless absolutely necessary.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_inactive</td><td align="center" valign="middle" rowspan="1" colspan="1">22</td><td align="center" valign="middle" rowspan="1" colspan="1">Size of memory that is used less frequently and can be reclaimed for other purposes.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_slab</td><td align="center" valign="middle" rowspan="1" colspan="1">23</td><td align="center" valign="middle" rowspan="1" colspan="1">Size of memory that is used as a cache for in-kernel data structures.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_kernel_stack</td><td align="center" valign="middle" rowspan="1" colspan="1">24</td><td align="center" valign="middle" rowspan="1" colspan="1">Size of memory allocated to kernel stacks.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_pagetables</td><td align="center" valign="middle" rowspan="1" colspan="1">25</td><td align="center" valign="middle" rowspan="1" colspan="1">Size of memory dedicated to the lowest level of page tables.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">reads_delta</td><td align="center" valign="middle" rowspan="1" colspan="1">26</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of total read operations that have been completed successfully since the previously collected record.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">sectors_rd_num_delta</td><td align="center" valign="middle" rowspan="1" colspan="1">27</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of total sectors that have been read successfully since the previously collected record.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">msecs_rd_delta</td><td align="center" valign="middle" rowspan="1" colspan="1">28</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of milliseconds spent during read operations since the previously collected record.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">writes_delta</td><td align="center" valign="middle" rowspan="1" colspan="1">29</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of total write operations that have been completed successfully since the previously collected record.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">sectors_wr_num_delta</td><td align="center" valign="middle" rowspan="1" colspan="1">30</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of total sectors that have been written successfully since the previously collected record.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">msecs_wr_delta</td><td align="center" valign="middle" rowspan="1" colspan="1">31</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of milliseconds spent during write operations since the previously collected record.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">cur_IOs</td><td align="center" valign="middle" rowspan="1" colspan="1">32</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of I/O operations currently in progress.</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">msecs_io_delta</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">33</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Number of milliseconds spent during I/O operations since the previously collected record.</td></tr></tbody></table><table-wrap-foot><fn><p><sup>1</sup> Ticks = amount of time measured in units of USER_HZ (1/100ths of a second on most processor architectures). The number of ticks starts from zero during system boot.</p></fn></table-wrap-foot></table-wrap><table-wrap position="float" id="sensors-25-01216-t004"><object-id pub-id-type="pii">sensors-25-01216-t004_Table 4</object-id><label>Table 4</label><caption><p>Output feature values after the second preprocessing stage of the &#x0201c;Data Preprocessing&#x0201d; module.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Feature Name</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Index</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Description</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">user_ticks_perc</td><td align="center" valign="middle" rowspan="1" colspan="1">1</td><td align="center" valign="middle" rowspan="1" colspan="1">Percentage of ticks that the CPU has been in user mode during the last behavior sampling period.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">nice_ticks_perc</td><td align="center" valign="middle" rowspan="1" colspan="1">2</td><td align="center" valign="middle" rowspan="1" colspan="1">Percentage of ticks that the CPU has been in user mode with low priority during the last behavior sampling period.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">system_ticks_perc</td><td align="center" valign="middle" rowspan="1" colspan="1">3</td><td align="center" valign="middle" rowspan="1" colspan="1">Percentage of ticks that the CPU has been in system mode during the last behavior sampling period.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">idle_ticks_perc</td><td align="center" valign="middle" rowspan="1" colspan="1">4</td><td align="center" valign="middle" rowspan="1" colspan="1">Percentage of ticks that the CPU has been idling during the last behavior sampling period.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">iowait_ticks_perc</td><td align="center" valign="middle" rowspan="1" colspan="1">5</td><td align="center" valign="middle" rowspan="1" colspan="1">Percentage of ticks that the CPU has been waiting for I/O to complete during the last behavior sampling period.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">irq_ticks_perc</td><td align="center" valign="middle" rowspan="1" colspan="1">6</td><td align="center" valign="middle" rowspan="1" colspan="1">Percentage of ticks that the CPU has been servicing interrupts during the last behavior sampling period.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">softirq_ticks_perc</td><td align="center" valign="middle" rowspan="1" colspan="1">7</td><td align="center" valign="middle" rowspan="1" colspan="1">Percentage of ticks that the CPU has been servicing software interrupts during the last behavior sampling period.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">steal_ticks_perc</td><td align="center" valign="middle" rowspan="1" colspan="1">8</td><td align="center" valign="middle" rowspan="1" colspan="1">Percentage of ticks that the CPU has been spending in other operating systems when running in a virtualized environment during the last behavior sampling period.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">guest_ticks_perc</td><td align="center" valign="middle" rowspan="1" colspan="1">9</td><td align="center" valign="middle" rowspan="1" colspan="1">Percentage of ticks that the CPU has been running a virtual CPU for guest operating systems under the control of the Linux kernel during the last behavior sampling period.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">guest_nice_ticks_perc</td><td align="center" valign="middle" rowspan="1" colspan="1">10</td><td align="center" valign="middle" rowspan="1" colspan="1">Percentage of ticks that the CPU has been running a niced (low priority) virtual CPU for guest operating systems under the control of the Linux kernel during the last behavior sampling period.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">intr_per_ms</td><td align="center" valign="middle" rowspan="1" colspan="1">11</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of interrupts serviced per millisecond during the last behavior sampling period.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">ctxt_per_ms</td><td align="center" valign="middle" rowspan="1" colspan="1">12</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of context switches per millisecond that the system has undergone during the last behavior sampling period.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">processes_per_ms</td><td align="center" valign="middle" rowspan="1" colspan="1">13</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of newly created processes per millisecond during the last behavior sampling period.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">procs_running</td><td align="center" valign="middle" rowspan="1" colspan="1">14</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of processes in a runnable state.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">softirq_per_ms</td><td align="center" valign="middle" rowspan="1" colspan="1">15</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of software interrupts serviced per millisecond during the last behavior sampling period.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_free_perc</td><td align="center" valign="middle" rowspan="1" colspan="1">16</td><td align="center" valign="middle" rowspan="1" colspan="1">Sum of sizes of free memory in the low-memory region and the high-memory region as a percentage of total RAM memory.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_available_perc</td><td align="center" valign="middle" rowspan="1" colspan="1">17</td><td align="center" valign="middle" rowspan="1" colspan="1">Estimated size of memory available for starting new applications without swapping as a percentage of total RAM memory.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_cached_perc</td><td align="center" valign="middle" rowspan="1" colspan="1">18</td><td align="center" valign="middle" rowspan="1" colspan="1">Size of memory used for caching files read from the disk as a percentage of total RAM memory.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_active_perc</td><td align="center" valign="middle" rowspan="1" colspan="1">19</td><td align="center" valign="middle" rowspan="1" colspan="1">Size of memory that is used frequently and usually not reclaimed unless absolutely necessary as a percentage of total RAM memory.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_inactive_perc</td><td align="center" valign="middle" rowspan="1" colspan="1">20</td><td align="center" valign="middle" rowspan="1" colspan="1">Size of memory that is used less frequently and can be reclaimed for other purposes as a percentage of total RAM memory.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_slab_perc</td><td align="center" valign="middle" rowspan="1" colspan="1">21</td><td align="center" valign="middle" rowspan="1" colspan="1">Size of memory that is used as a cache for in-kernel data structures as a percentage of total RAM memory.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_kernel_stack_perc</td><td align="center" valign="middle" rowspan="1" colspan="1">22</td><td align="center" valign="middle" rowspan="1" colspan="1">Size of memory allocated to kernel stacks as a percentage of total RAM memory.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">mem_pagetables_perc</td><td align="center" valign="middle" rowspan="1" colspan="1">23</td><td align="center" valign="middle" rowspan="1" colspan="1">Size of memory dedicated to the lowest level of page tables as a percentage of total RAM memory.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">reads_per_ms</td><td align="center" valign="middle" rowspan="1" colspan="1">24</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of total read operations that have been completed successfully per millisecond during the last behavior sampling period.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">sectors_rd_num_per_ms</td><td align="center" valign="middle" rowspan="1" colspan="1">25</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of total sectors that have been read successfully per millisecond during the last behavior sampling period.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">msecs_rd_perc</td><td align="center" valign="middle" rowspan="1" colspan="1">26</td><td align="center" valign="middle" rowspan="1" colspan="1">Percentage of milliseconds spent during read operations during the last behavior sampling period.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">writes_per_ms</td><td align="center" valign="middle" rowspan="1" colspan="1">27</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of total write operations that have been completed successfully per millisecond during the last behavior sampling period.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">sectors_wr_num_per_ms</td><td align="center" valign="middle" rowspan="1" colspan="1">28</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of total sectors that have been written successfully per millisecond during the last behavior sampling period.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">msecs_wr_perc</td><td align="center" valign="middle" rowspan="1" colspan="1">29</td><td align="center" valign="middle" rowspan="1" colspan="1">Percentage of milliseconds spent during write operations during the last behavior sampling period.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">cur_IOs</td><td align="center" valign="middle" rowspan="1" colspan="1">30</td><td align="center" valign="middle" rowspan="1" colspan="1">Number of I/O operations currently in progress.</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">msecs_io_perc</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">31</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Percentage of milliseconds spent during I/O operations during the last behavior sampling period.</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-01216-t005"><object-id pub-id-type="pii">sensors-25-01216-t005_Table 5</object-id><label>Table 5</label><caption><p>Hyperparameters used when training the six detection algorithms based on the LDE dataset.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">
</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Algorithm</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Hyperparameters</th></tr></thead><tbody><tr><td rowspan="5" align="center" valign="middle" style="border-bottom:solid thin" colspan="1">Novelty<break/>Detection</td><td align="center" valign="middle" rowspan="1" colspan="1">OCSVM</td><td align="center" valign="middle" rowspan="1" colspan="1">nu = 0.01, gamma = 0.02, kernel = rbf</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">LOF</td><td align="center" valign="middle" rowspan="1" colspan="1">algorithm = ball_tree, contamination = auto, metric = euclidean, neighbors = 10, novelty = True</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">G_KDE</td><td align="center" valign="middle" rowspan="1" colspan="1">bandwidth = 0.2, kernel = gaussian, metric = manhattan</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">PW_KDE</td><td align="center" valign="middle" rowspan="1" colspan="1">bandwidth = 0.6, kernel = tophat, metric = euclidean</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">B_GMM</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">components = 2, covariance = full</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Outlier<break/>Detection</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">MCD</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">contamination = 0.1, assume_centered = true</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-01216-t006"><object-id pub-id-type="pii">sensors-25-01216-t006_Table 6</object-id><label>Table 6</label><caption><p>Runtime evaluation results of the six detection algorithms when integrated into the &#x0201c;Detection Engine&#x0201d; module of the RDE component of the AIDS.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">
</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Algorithm</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Area Under ROC Curve</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Accuracy</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Precision on Normal Class</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Recall on Normal Class</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">F1-Score on Normal Class</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Precision<break/>on<break/>Abnormal Class</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Recall on Abnormal Class</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">F1-Score on<break/>Abnormal Class</th></tr></thead><tbody><tr><td rowspan="5" align="center" valign="middle" style="border-bottom:solid thin" colspan="1">Novelty<break/>Detection</td><td align="center" valign="middle" rowspan="1" colspan="1">OCSVM</td><td align="center" valign="middle" rowspan="1" colspan="1">81.85</td><td align="center" valign="middle" rowspan="1" colspan="1">77.76</td><td align="center" valign="middle" rowspan="1" colspan="1">97.94</td><td align="center" valign="middle" rowspan="1" colspan="1">66.06</td><td align="center" valign="middle" rowspan="1" colspan="1">78.9</td><td align="center" valign="middle" rowspan="1" colspan="1">62.86</td><td align="center" valign="middle" rowspan="1" colspan="1">97.64</td><td align="center" valign="middle" rowspan="1" colspan="1">76.48</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">LOF</td><td align="center" valign="middle" rowspan="1" colspan="1">47.85</td><td align="center" valign="middle" rowspan="1" colspan="1">36.28</td><td align="center" valign="middle" rowspan="1" colspan="1">38.3</td><td align="center" valign="middle" rowspan="1" colspan="1">2.51</td><td align="center" valign="middle" rowspan="1" colspan="1">4.72</td><td align="center" valign="middle" rowspan="1" colspan="1">36.2</td><td align="center" valign="middle" rowspan="1" colspan="1">93.18</td><td align="center" valign="middle" rowspan="1" colspan="1">52.14</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">G_KDE</td><td align="center" valign="middle" rowspan="1" colspan="1">50.21</td><td align="center" valign="middle" rowspan="1" colspan="1">37.52</td><td align="center" valign="middle" rowspan="1" colspan="1">100</td><td align="center" valign="middle" rowspan="1" colspan="1">0.42</td><td align="center" valign="middle" rowspan="1" colspan="1">0.83</td><td align="center" valign="middle" rowspan="1" colspan="1">37.36</td><td align="center" valign="middle" rowspan="1" colspan="1">100</td><td align="center" valign="middle" rowspan="1" colspan="1">54.39</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">PW_KDE</td><td align="center" valign="middle" rowspan="1" colspan="1">78.17</td><td align="center" valign="middle" rowspan="1" colspan="1">77.67</td><td align="center" valign="middle" rowspan="1" colspan="1">86.73</td><td align="center" valign="middle" rowspan="1" colspan="1">76.25</td><td align="center" valign="middle" rowspan="1" colspan="1">81.15</td><td align="center" valign="middle" rowspan="1" colspan="1">66.4</td><td align="center" valign="middle" rowspan="1" colspan="1">80.09</td><td align="center" valign="middle" rowspan="1" colspan="1">72.61</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">B_GMM</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">73.48</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">67.37</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">96.76</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">49.79</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">65.75</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">53.3</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">97.17</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">68.84</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Outlier<break/>Detection</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">MCD</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">50.56</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">38.8</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">70</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">3.94</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">7.47</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">37.66</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">97.17</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">34.28</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-01216-t007"><object-id pub-id-type="pii">sensors-25-01216-t007_Table 7</object-id><label>Table 7</label><caption><p>CPU and Memory consumption of the RDE component for different detection algorithms.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Algorithm</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">CPU Usage</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Memory Usage</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">OCSVM</td><td align="center" valign="middle" rowspan="1" colspan="1">0.30%</td><td align="center" valign="middle" rowspan="1" colspan="1">11.22%</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">LOF</td><td align="center" valign="middle" rowspan="1" colspan="1">0.25%</td><td align="center" valign="middle" rowspan="1" colspan="1">10.7%</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">G_KDE</td><td align="center" valign="middle" rowspan="1" colspan="1">0.35%</td><td align="center" valign="middle" rowspan="1" colspan="1">9.7%</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">PW_KDE</td><td align="center" valign="middle" rowspan="1" colspan="1">0.23%</td><td align="center" valign="middle" rowspan="1" colspan="1">10.35%</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">B_GMM</td><td align="center" valign="middle" rowspan="1" colspan="1">0.20%</td><td align="center" valign="middle" rowspan="1" colspan="1">10.33%</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">MCD</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.30%</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">10.2%</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-01216-t008"><object-id pub-id-type="pii">sensors-25-01216-t008_Table 8</object-id><label>Table 8</label><caption><p>Comparison of metrics for DoS attacks with work in [<xref rid="B14-sensors-25-01216" ref-type="bibr">14</xref>].</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Work</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Model</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">AUC</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Accuracy</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Precision</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Recall</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B14-sensors-25-01216" ref-type="bibr">14</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">RF</td><td align="center" valign="middle" rowspan="1" colspan="1">100</td><td align="center" valign="middle" rowspan="1" colspan="1">99.15</td><td align="center" valign="middle" rowspan="1" colspan="1">99</td><td align="center" valign="middle" rowspan="1" colspan="1">98.6</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">This work</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">OCSVM</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">81.85</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">77.76</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">62.86</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">97.64</td></tr></tbody></table></table-wrap></floats-group></article>