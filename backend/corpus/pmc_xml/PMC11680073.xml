<!DOCTYPE article
PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with MathML3 v1.3 20210610//EN" "JATS-archivearticle1-3-mathml3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.3" xml:lang="en" article-type="research-article"><?properties open_access?><processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats"><restricted-by>pmc</restricted-by></processing-meta><front><journal-meta><journal-id journal-id-type="nlm-ta">Sensors (Basel)</journal-id><journal-id journal-id-type="iso-abbrev">Sensors (Basel)</journal-id><journal-id journal-id-type="publisher-id">sensors</journal-id><journal-title-group><journal-title>Sensors (Basel, Switzerland)</journal-title></journal-title-group><issn pub-type="epub">1424-8220</issn><publisher><publisher-name>MDPI</publisher-name></publisher></journal-meta>
<article-meta><article-id pub-id-type="pmc">PMC11680073</article-id><article-id pub-id-type="doi">10.3390/s24248136</article-id><article-id pub-id-type="publisher-id">sensors-24-08136</article-id><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title>Empowering Privacy Through Peer-Supervised Self-Sovereign Identity: Integrating Zero-Knowledge Proofs, Blockchain Oversight, and Peer Review Mechanism</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Liu</surname><given-names>Junliang</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Conceptualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/conceptualization/">Conceptualization</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Methodology" vocab-term-identifier="https://credit.niso.org/contributor-roles/methodology/">Methodology</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Validation" vocab-term-identifier="https://credit.niso.org/contributor-roles/validation/">Validation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Formal analysis" vocab-term-identifier="https://credit.niso.org/contributor-roles/formal-analysis/">Formal analysis</role><xref rid="af1-sensors-24-08136" ref-type="aff">1</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0001-7192-8541</contrib-id><name><surname>Liang</surname><given-names>Zhiyao</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Conceptualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/conceptualization/">Conceptualization</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Methodology" vocab-term-identifier="https://credit.niso.org/contributor-roles/methodology/">Methodology</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Software" vocab-term-identifier="https://credit.niso.org/contributor-roles/software/">Software</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Validation" vocab-term-identifier="https://credit.niso.org/contributor-roles/validation/">Validation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Formal analysis" vocab-term-identifier="https://credit.niso.org/contributor-roles/formal-analysis/">Formal analysis</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Supervision" vocab-term-identifier="https://credit.niso.org/contributor-roles/supervision/">Supervision</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Project administration" vocab-term-identifier="https://credit.niso.org/contributor-roles/project-administration/">Project administration</role><xref rid="af1-sensors-24-08136" ref-type="aff">1</xref><xref rid="c1-sensors-24-08136" ref-type="corresp">*</xref></contrib><contrib contrib-type="author"><name><surname>Lyu</surname><given-names>Qiuyun</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Conceptualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/conceptualization/">Conceptualization</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Methodology" vocab-term-identifier="https://credit.niso.org/contributor-roles/methodology/">Methodology</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Validation" vocab-term-identifier="https://credit.niso.org/contributor-roles/validation/">Validation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Supervision" vocab-term-identifier="https://credit.niso.org/contributor-roles/supervision/">Supervision</role><xref rid="af2-sensors-24-08136" ref-type="aff">2</xref></contrib></contrib-group><contrib-group><contrib contrib-type="editor"><name><surname>Wu</surname><given-names>Cong</given-names></name><role>Academic Editor</role></contrib><contrib contrib-type="editor"><name><surname>Chen</surname><given-names>Jing</given-names></name><role>Academic Editor</role></contrib><contrib contrib-type="editor"><name><surname>Feng</surname><given-names>Yebo</given-names></name><role>Academic Editor</role></contrib><contrib contrib-type="editor"><name><surname>Chen</surname><given-names>Xianhao</given-names></name><role>Academic Editor</role></contrib></contrib-group><aff id="af1-sensors-24-08136"><label>1</label>School of Computer Science and Engineering, Macau University of Science and Technology, Macau, China</aff><aff id="af2-sensors-24-08136"><label>2</label>School of Cyberspace, Hangzhou Dianzi University, Hangzhou 310005, China</aff><author-notes><corresp id="c1-sensors-24-08136"><label>*</label>Correspondence: <email>zyliang@must.edu.mo</email></corresp></author-notes><pub-date pub-type="epub"><day>20</day><month>12</month><year>2024</year></pub-date><pub-date pub-type="collection"><month>12</month><year>2024</year></pub-date><volume>24</volume><issue>24</issue><elocation-id>8136</elocation-id><history><date date-type="received"><day>01</day><month>11</month><year>2024</year></date><date date-type="rev-recd"><day>15</day><month>12</month><year>2024</year></date><date date-type="accepted"><day>18</day><month>12</month><year>2024</year></date></history><permissions><copyright-statement>&#x000a9; 2024 by the authors.</copyright-statement><copyright-year>2024</copyright-year><license><ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>).</license-p></license></permissions><abstract><p>Frequent user data breaches and misuse incidents highlight the flaws in current identity management systems. This study proposes a blockchain-based, peer-supervised self-sovereign identity (SSI) generation and privacy protection technology. Our approach creates unique digital identities on the blockchain, enabling secure cross-domain recognition and data sharing and satisfying the essential users&#x02019; requirements for SSI. Compared to existing SSI solutions, our approach has the practical advantages of less implementation cost, ease of users&#x02019; understanding and agreement, and better possibility of being soon adopted by current society and legal systems. The key innovative technical features include (1) using a zero-knowledge proof technology to ensure data remain &#x0201c;usable but invisible&#x0201d;, mitigating data breach risks; (2) introducing a peer review mechanism among service providers to prevent excessive data requests and misuse; and (3) implementing a comprehensive multi-party supervision system to audit all involved parties and prevent misconduct.</p></abstract><kwd-group><kwd>data security</kwd><kwd>privacy protection</kwd><kwd>self-sovereign identity (SSI)</kwd><kwd>blockchain</kwd><kwd>zero-knowledge proof</kwd><kwd>chameleon hash</kwd></kwd-group><funding-group><award-group><funding-source>Science and Technology Development Fund of the Macao SAR</funding-source><award-id>0083/2022/A</award-id></award-group><funding-statement>This work is partly supported by a grant from the Science and Technology Development Fund of the Macao SAR (Grant no. 0083/2022/A).</funding-statement></funding-group></article-meta></front><body><sec sec-type="intro" id="sec1-sensors-24-08136"><title>1. Introduction</title><p>In recent years, incidents of user data leakage have become increasingly frequent both domestically and internationally. In 2018, Aadhaar, India&#x02019;s national identity authentication system, leaked sensitive data of 1.1 billion Indian citizens. Similarly, Starwood Hotels exposed 500 million consumer records, and Facebook faced a data breach affecting 87 million users.</p><p>In 2020, 7.4 billion records were leaked from various sources, including the French newspaper Le Figaro. That same year, 538 million pieces of Weibo data were sold on the darknet, and employees of China Construction Bank illicitly sold over 50,000 pieces of information [<xref rid="B1-sensors-24-08136" ref-type="bibr">1</xref>,<xref rid="B2-sensors-24-08136" ref-type="bibr">2</xref>,<xref rid="B3-sensors-24-08136" ref-type="bibr">3</xref>].</p><p>In 2021, on June 14, cybersecurity firm Cognyte leaked 5 billion pieces of sensitive information [<xref rid="B4-sensors-24-08136" ref-type="bibr">4</xref>]. More recently, in 2024, AT&#x00026;T experienced a data breach that impacted nearly all its customers and many non-customers.</p><p>These incidents involve three types of entities: users, service providers, and regulatory agencies, each facing distinct challenges and concerns. Service providers require user data to deliver services, leading to the accumulation of large amounts of user data, which creates data silos and increases the risk of data breaches [<xref rid="B5-sensors-24-08136" ref-type="bibr">5</xref>]. On the other hand, users must provide their data to service providers without the needed control over these entities, exposing them to data breaches and misuse risks.</p><p>Second, illegitimate gainers see the demand for data and the opportunity for illegal profit. They can obtain information about many users directly (internal personnel) or indirectly (cyber attackers). Therefore, they will continue to steal and leak user information.</p><p>For regulatory agencies, regulation is often reactive, meaning regulators cannot prevent incidents from occurring. Attackers exploit this issue by targeting various service providers extensively. When a service provider is breached, a substantial amount of data, often stored in plain text, is compromised.</p><p>In summary, the issues associated with these user data security incidents can be distilled into four key points:<list list-type="bullet"><list-item><p>User Data Breaches: Service providers often tend to store user data in plain text, making each provider a potential single point of failure.</p></list-item><list-item><p>User Data Misuse: Users lack control over the data collected by service providers, which increases the risk of unauthorized use of these data.</p></list-item><list-item><p>Excessive Data Collection: Service providers often collect more user data than necessary, heightening the risks of data breaches and misuse.</p></list-item><list-item><p>Insufficient Regulation: Regulatory measures are typically reactive and lack stringent constraints on the behaviors of both users and service providers.</p></list-item></list></p><p>Based on the four problems above, the following solutions are desired:<list list-type="order"><list-item><p>User Control Over Personal Data: Users should have greater control over their data.</p></list-item><list-item><p>Encryption of User Data: Storing and using user data in an encrypted format rather than plain text can significantly reduce risks.</p></list-item><list-item><p>Unified User Authentication and Data Sharing: Implementing a standardized method for user authentication and data sharing would allow service providers to share data across domains, reducing the need for separate storage.</p></list-item><list-item><p>Peer Review Mechanism: Introducing an effective peer review mechanism can ensure that no single service provider collects more user data than necessary for the industry, addressing the issue of excessive data collection.</p></list-item><list-item><p>Enhanced Regulatory Measures: Strengthening regulatory methods to ensure mutual monitoring among all interaction parties can address the lack of regulation.</p></list-item></list></p><p>Our research is designed to realize these solutions. Our approach not only introduces self-sovereign identity (SSI) to ensure that users have control over the data they provide to service providers but also guarantees that the relevant data can be utilized across domains in a standardized form and can be accepted by multiple service providers (SPs) without the need for data transformation.</p><p>The innovative features of this research that made critical contributions to the quality of the proposed system are listed below.</p><list list-type="order"><list-item><p>Incorporating zero-knowledge proofs (ZKPs) for privacy protection in SSI mechanisms: ZKPs enhance the perpetual privacy of information during multiparty computations, ensuring that information remains &#x0201c;usable but invisible&#x0201d; during its flow and usage. Our approach uniquely brings ZKP, safeguarding user data in scenarios where plain text interaction is unnecessary.</p></list-item><list-item><p>Development of a blockchain-based content-sharing oversight mechanism: Existing SSI generation mechanisms often lack regulatory frameworks to mitigate malicious behavior by users and service providers. Our research introduces an innovative three-party supervisory mechanism, empowering regulatory bodies to effectively trace and monitor all behaviors of parties involved in information sharing on the blockchain. This comprehensive oversight system ensures no blind spots in regulatory coverage and holds all interacting parties accountable, including the regulatory bodies.</p></list-item><list-item><p>Introduction of a peer review mechanism to prevent excessive data requests: Current solutions often overlook the risk of service providers excessively requesting user data. Our research introduces a peer review mechanism that evaluates the necessity of service providers&#x02019; requests for data. This mechanism, supported by regulatory authorities, ensures that any additional data requests undergo scrutiny by industry peers, thereby mitigating the risk of data misuse.</p></list-item></list><p>The paper is structured as follows: <xref rid="sec2-sensors-24-08136" ref-type="sec">Section 2</xref> introduces and discusses the status of user identity and data usage, including a survey of the existing development processes of user identity, along with a comparative analysis of the advantages and disadvantages of the latest practices related to self-sovereign identity. <xref rid="sec3-sensors-24-08136" ref-type="sec">Section 3</xref> introduces the proposed system. <xref rid="sec4-sensors-24-08136" ref-type="sec">Section 4</xref> introduces the experimental analysis of the system, including formal verification using Scyther, theoretical analysis of specific key concerns through logical reasoning, and simulation experiments. <xref rid="sec5-sensors-24-08136" ref-type="sec">Section 5</xref> provides a summary and a forward-looking perspective on the future of our research.</p></sec><sec id="sec2-sensors-24-08136"><title>2. Related Work</title><p>ISO/IEC 24760-1 defines identity as &#x0201c;a set of attributes associated with an entity&#x0201d; [<xref rid="B6-sensors-24-08136" ref-type="bibr">6</xref>]. In digital identity, this &#x0201c;set of attributes&#x0201d; refers to the information computer systems used to represent external entities, including individuals, organizations, applications, or devices. When the entity in question is a person, digital identity often contains elements related to citizenship and personal identity. A digital identity encompasses the entire collection of information generated by a person&#x02019;s online activities, such as usernames, passwords, online search history, date of birth, social identification, and personal privacy information [<xref rid="B7-sensors-24-08136" ref-type="bibr">7</xref>].</p><p>Given this definition, user data fall under the category of digital identity and are suitable for management within a digital identity framework. Current models for managing digital identity include centralized, federated, user-centric, and self-sovereign identities.</p><sec id="sec2dot1-sensors-24-08136"><title>2.1. Centralized Identity</title><p>Centralized identity manages and controls users&#x02019; digital identities by a single institution or organization. In the early days of the Internet, centralized institutions became the issuers and certifiers of digital identities, and most service providers still use this model. The essence of the centralized identity system is that the central organization holds the identity information, as the authentication and authorization of the information are also determined by this centralized organization [<xref rid="B8-sensors-24-08136" ref-type="bibr">8</xref>]. Consequently, identity is not controlled by the user. Additionally, the problem is that different centralized websites have different identity systems, where the corresponding account information used is not interoperable across websites, forcing users to register dozens of identities on various sites without controlling any of them. This problem becomes more severe as the users deal with an increasing number of websites.</p></sec><sec id="sec2dot2-sensors-24-08136"><title>2.2. Federated Identity</title><p>Federated identities are managed and controlled by multiple federal agencies, first proposed by Microsoft&#x02019;s Passport [<xref rid="B9-sensors-24-08136" ref-type="bibr">9</xref>] project, which envisages federated identities that allow users to use the same identity on various websites. In other words, compared with the one-to-one correspondence between user digital identities and service providers in centralized identities, in federated identities, users can obtain a digital identity from a federation and use this identity to identify multiple service providers [<xref rid="B10-sensors-24-08136" ref-type="bibr">10</xref>]. The mechanism of federated identities improves the Balkanization problem of centralized identities. However, the result is still an oligarchy, where the centralized powers of centralized identities are now dispersed among several powerful entities, and users still have no control.</p></sec><sec id="sec2dot3-sensors-24-08136"><title>2.3. User-Centric Identity</title><p>The user-centric identity mechanism eliminates the need for a federation, allowing digital identities to be managed across multiple individuals or institutions. It assumes that users can create and maintain a persistent online identity (ID) on their own, which can be used to interact with various service providers [<xref rid="B11-sensors-24-08136" ref-type="bibr">11</xref>]. Many digital identity projects are based on this concept, including OpenID [<xref rid="B12-sensors-24-08136" ref-type="bibr">12</xref>], OpenID 2.0 [<xref rid="B13-sensors-24-08136" ref-type="bibr">13</xref>], OpenID Connect [<xref rid="B14-sensors-24-08136" ref-type="bibr">14</xref>], OAuth [<xref rid="B15-sensors-24-08136" ref-type="bibr">15</xref>], and FIDO [<xref rid="B16-sensors-24-08136" ref-type="bibr">16</xref>].</p><p>User-centric approaches focus on two main elements: user empowerment and interoperability. These approaches allow users to authorize and share their identities from one service to another. For instance, OpenID enables users to register their own OpenID, allowing them to access multiple service providers without needing to register again. However, the technical complexity often leads most Internet users to prefer obtaining an OpenID from a long-term, reliable website. While this approach offers users autonomy and control over their identities, it also introduces a dependency on the specific website providing the OpenID. If the OpenID is managed by an external website rather than the user, the actual autonomy of the user is compromised, making this mechanism resemble a centralized identity model.</p></sec><sec id="sec2dot4-sensors-24-08136"><title>2.4. Self-Sovereign Identity</title><p>Self-sovereign identity (SSI) represents the next stage in the evolution of user-centric identity management, where the user is at the center of identity management [<xref rid="B17-sensors-24-08136" ref-type="bibr">17</xref>]. SSI ensures the interoperability of user identities across multiple platforms with user consent and accurate user control over their digital identities, creating genuine user autonomy. This means users can manage and control their identity data, deciding when, how, and with whom to share their information.</p><p>The core principles of SSI include decentralization, autonomy, and privacy protection. For an SSI to achieve these goals, it must be portable and not tied to a specific site or region. Blockchain technology is a suitable choice to meet these requirements. Current SSI systems in the industry include Sovrin [<xref rid="B18-sensors-24-08136" ref-type="bibr">18</xref>,<xref rid="B19-sensors-24-08136" ref-type="bibr">19</xref>,<xref rid="B20-sensors-24-08136" ref-type="bibr">20</xref>] and ShoCard [<xref rid="B21-sensors-24-08136" ref-type="bibr">21</xref>]. Sovrin is dedicated to standardizing self-sovereign identity (SSI) and creating the necessary infrastructure, utilizing blockchain to store distributed identity. In theory, anyone can issue or verify an identity. The SSI model Sovrin employs does not rely on any specific distributed ledger and can work with any blockchain that meets the required attributes. All private data are stored off-chain by each self-sovereign identity owner, who decides where to keep it. However, this setup also allows users with insufficient security awareness to share plaintext information. Many may not fully grasp the implications of sharing unencrypted data or the importance of protecting their digital identity. This gap in understanding can lead to unintentional privacy breaches. Sovrin relies on legal frameworks like GDPR to restrict the misuse of information, which is only sometimes practical. Under significant pressure from technological and regulatory constraints, Sovrin is increasingly struggling to operate and may cease operations on 31 March 2025 [<xref rid="B22-sensors-24-08136" ref-type="bibr">22</xref>].</p><p>ShoCard is a blockchain-based digital identity and verification platform. Users&#x02019; identity information is stored on the blockchain as signed encrypted hashes. On the blockchain, users initiate identity verification handshakes with third parties. The information is in secure data envelopes that only the recipient can decrypt. This method allows users and third-party entities to securely and verifiably confirm each other&#x02019;s identities and share additional data. However, it does not fully address the issue of data misuse. While the shared data are transmitted in encrypted form, third parties can ultimately decrypt it to access plaintext information. This subsequent use of the data is beyond the user&#x02019;s control, leading to significant privacy concerns. ShoCard has been rebranded as PingOne and is operating commercially; however, the similar design between the two still raises related security issues [<xref rid="B23-sensors-24-08136" ref-type="bibr">23</xref>].</p><p>uPort is an open identity system that allows users to register their digital identity, known as uPortID, on the Ethereum blockchain [<xref rid="B24-sensors-24-08136" ref-type="bibr">24</xref>]. Users can control the creation of their uPortID and decide how to share their personal information with third parties. Personal data are stored on the user&#x02019;s device and in off-chain areas designated by the user, ensuring they always have access to it. uPort places greater control and responsibility for the uPortID in the hands of the user [<xref rid="B25-sensors-24-08136" ref-type="bibr">25</xref>,<xref rid="B26-sensors-24-08136" ref-type="bibr">26</xref>]. However, like Sovrin, uPort cannot protect user privacy through its protocol. If users mistakenly provide plaintext information, it can lead to privacy risks. Additionally, uPort does not address the legitimacy of third-party requests for user data or the management of its use, which may result in users being excessively asked for unnecessary information and experiencing data misuse.</p><p>Veramo is a new iterative version of uPort at a developmental level and continues to evolve [<xref rid="B27-sensors-24-08136" ref-type="bibr">27</xref>]. It provides an open-source library with modular APIs for self-sovereign identity (SSI) and verifiable data [<xref rid="B28-sensors-24-08136" ref-type="bibr">28</xref>,<xref rid="B29-sensors-24-08136" ref-type="bibr">29</xref>]. However, the related issues persist due to the similarities in design between the two.</p><p>TCID is a self-sovereign identity system designed by Quinten Stokkink and colleagues in collaboration with the Dutch government [<xref rid="B30-sensors-24-08136" ref-type="bibr">30</xref>]. TCID posits that without addressing privacy issues at the network level, SSI systems cannot fulfill their privacy protection promises. TCID includes components, including a communication layer and two peer-to-peer network overlay layers, designed to meet seven functional requirements that ensure ideal system attributes. While TCID emphasizes and optimizes privacy and performance at the network level, it does not delve deeply into potential issues within SSI, such as data misuse, excessive data requests, or the lack of effective oversight.</p><p>DT-SSIM provides a decentralized, trusted self-sovereign identity management framework for Internet of Things (IoT) environments [<xref rid="B31-sensors-24-08136" ref-type="bibr">31</xref>]. This framework aims to enhance the security and decentralization of identity management in IoT by combining secret sharing and blockchain technology. By distributing the storage of identity credentials, the DT-SSIM framework strengthens the protection of these credentials and reduces the risks associated with centralized storage. Although decentralizing storage mitigates issues related to data monopolies, DT-SSIM still lacks controls to address challenges in SSI, such as data misuse, privacy breaches, excessive data requests, and limited oversight from data recipients.</p><p>PT-SSIM, an updated version of DT-SSIM, introduces a frequent identity share update mechanism, enhancing the protection of users&#x02019; digital identities and reducing the likelihood of data collection, linkage attacks, aggregation, and inference attacks [<xref rid="B32-sensors-24-08136" ref-type="bibr">32</xref>]. However, it remains insufficient in tackling core issues of privacy breaches, misuse, and lack of oversight.</p><p>SISSI is a self-sovereign identity (SSI)-based network authentication and authorization system designed for semantic interoperability across different SSI approaches [<xref rid="B33-sensors-24-08136" ref-type="bibr">33</xref>]. The SISSI architecture demonstrates how existing Web-based SSI technologies can support access control with enhanced end-to-end performance over blockchain-based methods. While SISSI enables cross-domain recognition among SSI systems and effective integration via Web methods, it lacks exploration of privacy issues, such as data misuse and oversight challenges. Furthermore, entirely replacing blockchain with Web approaches may increase the risk of centralization.</p><p>INCHAIN is an innovative network insurance architecture that leverages blockchain technology to ensure data transparency and traceability, automates the insurance process through smart contracts, and strengthens identification using self-sovereign identity (SSI) [<xref rid="B34-sensors-24-08136" ref-type="bibr">34</xref>]. It significantly advances combating fraudulent claims and ensuring client identity verification. INCHAIN focuses on identifying and detecting claim initiators for insurers but overlooks the risk of malicious behavior among interacting entities within SSI. A design with mutual oversight among parties would be more effective. Additionally, architecture lacks measures to prevent potential data misuse or excessive data requests by insurers, posing privacy risks for claim initiators.</p><p>AASSI balances privacy and accountability with two modes: Normal Mode, allowing users to generate credentials for access control, and Accountability Mode, where trackers can trace real identities in collaboration with issuers [<xref rid="B35-sensors-24-08136" ref-type="bibr">35</xref>]. While AASSI provides effective regulation by concealing identities in typical interactions and revealing them to designated trackers, it risks potential tracker misuse. Mutual oversight might enhance security, and the system lacks safeguards against data leaks, misuse, and excessive data requests within SSI.</p></sec></sec><sec sec-type="methods" id="sec3-sensors-24-08136"><title>3. Methodology</title><p>Our solution divides the process into four stages: registration, usage, update, and deletion of digital identity. Interactions between four types of entities and four types of blockchains are applied in one or more stages using multiple smart contract functions. The names and descriptions of the entities are shown in <xref rid="sensors-24-08136-t001" ref-type="table">Table 1</xref>, and the names and descriptions of the blockchains are shown in <xref rid="sensors-24-08136-t002" ref-type="table">Table 2</xref>. The symbols and their descriptions used in this Section are provided in <xref rid="sensors-24-08136-t003" ref-type="table">Table 3</xref>. We will introduce the usage of various smart contract functions separately in each of the four stages of the solution.</p><sec id="sec3dot1-sensors-24-08136"><title>3.1. Stage 1: Digital Identity Registration Stage</title><p>In the digital identity registration stage, users initially register and create their digital identity. This stage involves six steps and utilizes two smart contract functions. The names and descriptions of the smart contract functions are shown in <xref rid="sensors-24-08136-t004" ref-type="table">Table 4</xref>.</p><p>The interaction steps of this stage are illustrated in <xref rid="sensors-24-08136-f001" ref-type="fig">Figure 1</xref>.</p><p>Step 1: The user goes offline to the Issuing Center (IC), providing their physical proof of identity and the public key PubU to apply for and obtain a digital identity. We can describe the process with the following symbolic description:<disp-formula>User &#x02192; IC: {Physical Identity, PubU}<label>(1)</label></disp-formula></p><p>Step 2: The Issuing Center (IC) verifies the user&#x02019;s physical identity and, upon confirming its authenticity, provides them with a UID, which will serve as the unique identifier for the user&#x02019;s digital identity. We can describe the process with the following symbolic description:<disp-formula>IC &#x02192; User: {UID}<label>(2)</label></disp-formula></p><p>Step 3: The Issuing Center (IC) creates a new user digital identity block on the digital identity chain using the smart contract function Create(PriIC(UID, PubU)), whereas PriIC is the private key of the Issuing Center. We can describe the process with the following symbolic description:<disp-formula>IC &#x02192; Digital Identity Chain: {Create(PriIC(UID, PubU))}<label>(3)</label></disp-formula></p><p>Step 4: The user provides a set of personal information {PI_id, PI_phone, &#x02026; PI_n} for registration. All this information is real and in plaintext. We can describe the process with the following symbolic description:<disp-formula>User &#x02192; IC: {PI_id, PI_phone, &#x02026; PI_n}<label>(4)</label></disp-formula></p><p>Step 5: The Issuing Center (IC) physically verifies the authenticity of the set of personal information {PI_id, PI_phone, &#x02026; PI_n} that the user wishes to register, corresponding to physical characteristics. Upon successful verification, IC and the user jointly generate a set of personal information verification {PIV_id, PIV_phone, &#x02026; PIV_n}. Each PIV_x item is a set containing {PriIC(PriU(Hash1(PI_x&#x000b7;Nonce))), PriIC(PriU(Hash2(PI_x&#x000b7;Nonce))), &#x02026;, PriIC(PriU(Hashm(PI_x&#x000b7;Nonce)))}. IC updates the above content to the chain by a call of the smart contract Add(PriIC(UID, Hash(PubSC(PIV_x), PIN_x, m), Ts), PubSC(PIV_x), PIN_x, m). PubSC is the public key of the smart contract, and all smart contract functions use the same public&#x02013;private key pair in our design. Although mainstream blockchains have not widely adopted cryptographic operations within smart contracts, there are methods in the industry to achieve our goals. For example, the enterprise blockchain platform Hyperledger Fabric supports encryption and decryption operations within chain code [<xref rid="B40-sensors-24-08136" ref-type="bibr">40</xref>]. Alternatively, off-chain services can be used to perform encryption and decryption operations. Smart contracts can communicate with these external services to handle cryptographic tasks. For instance, decentralized oracles like Chainlink can securely connect smart contracts with external cryptographic services [<xref rid="B41-sensors-24-08136" ref-type="bibr">41</xref>].</p><p>We can describe the process with the following symbolic description:
<disp-formula>IC &#x02192; Digital Identity Chain:<break/>{Add(PriIC(UID, Hash(PubSC(PIV_id), PIN_id, m), Ts), PubSC(PIV_id), PIN_id, m) &#x02026; Add(PriIC(UID, Hash(PubSC(PIV_n), PIN_n, m), Ts), PubSC(PIV_n), PIN_n, m)}<label>(5)</label></disp-formula></p><p>Step 6: The Issuing Center (IC) gives the user the random number Nonce generated in Step 5. The user must securely store this random number, which will be used for subsequent verification steps in the digital identity usage stage. We can describe the process with the following symbolic description:<disp-formula>IC &#x02192; User: {Nonce}<label>(6)</label></disp-formula></p><p>Upon completion of the digital identity registration stage, the user&#x02019;s association with their digital identity is illustrated in <xref rid="sensors-24-08136-f002" ref-type="fig">Figure 2</xref>. It is important to note that this is an idealized view provided for ease of understanding. The branching chain design shown in the diagram will not exist in actual storage. Instead, data will be stored linearly and accessed through smart contracts.</p></sec><sec id="sec3dot2-sensors-24-08136"><title>3.2. Stage 2: Digital Identity Usage Stage</title><p>In the digital identity usage stage, users will utilize their registered digital identities to interact with service providers (SPs) to obtain specific services. This stage will involve two scenarios: sharing UID only and sharing the UID along with specific categories of user personal information. We will discuss each scenario separately. This stage will utilize three smart contract functions; their names and descriptions are shown in <xref rid="sensors-24-08136-t005" ref-type="table">Table 5</xref>.</p><sec id="sec3dot2dot1-sensors-24-08136"><title>3.2.1. Scenario 1: Sharing UID Only</title><p>This scenario is applicable when the service provider only needs to verify the legitimacy of the UID in the user&#x02019;s digital identity to provide services, meaning such providers do not require additional user personal information when delivering services. The digital identity usage in this scenario will involve six steps, as illustrated in <xref rid="sensors-24-08136-f003" ref-type="fig">Figure 3</xref>.</p><p>Step 1: The user sends a login request to the specific service provider (SP), uses the user&#x02019;s private key (PriU) to digitally sign the current real-time timestamp (Ts1) and current service provider (SPID), obtains PriU (SPID, Ts1) as a zero-knowledge assertion, uses the current service provider&#x02019;s public key (PubSP) to encrypt their UID and PriU (SPID, Ts1), and sends the obtained PubSP (UID, PriU(SPID, Ts1)) to the service provider. We can describe the process with the following symbolic description:<disp-formula>User &#x02192; SP: {PubSP(UID, PriU(SPID, Ts1))}<label>(7)</label></disp-formula></p><p>Step 2: The service provider (SP) obtains the PubSP (UID, PriU(SPID, Ts1)) and decrypts it to obtain the UID and PriU (SPID, Ts1); then, it obtains the PubU from the digital identity chain through the smart contract function GetPubKey (UID) based on the UID. The service provider (SP) will use the PubU to verify the PriU (SPID, Ts1) signature. Suppose the timestamp (Ts1) can be successfully obtained within the valid time range, and the SPID matches the SPID of the current service provider. In that case, the verification will be passed, and the user&#x02019;s identity will be proven. We can describe the process with the following symbolic description:<disp-formula>SP &#x02192; Digital Identity Chain: {GetPubKey(UID)}<label>(8)</label></disp-formula></p><p>Step 3: If the user&#x02019;s digital identity is authenticated in Step 2, the service provider (SP) starts to provide services to the user in this step. If authentication fails, the user is required to re-authenticate.</p><p>Step 4: The user uploads the authentication success/failure results obtained from the service provider (SP) to the user behavior chain. The relevant data will be encrypted using the public key, PubRA, of the regulatory authority (RA) in the following format:<disp-formula>PubRA(UID, PriU(SPID, Success/Fail, NULL, Ts2))<label>(9)</label></disp-formula></p><p>We can describe the process with the following symbolic description:
<disp-formula>User &#x02192; User Behavior Chain: <break/>{PubRA(UID, PriU(SPID, Success/Fail, NULL, Ts2))}<label>(10)</label></disp-formula></p><p>Step 5: The service provider (SP) uploads the success/failure result of the user&#x02019;s digital identity authentication to the user behavior chain. The relevant data will be encrypted using the public key, PubRA, of the regulatory authority (RA) in the following format:<disp-formula>PubRA(SPID, PriSP(UID, Success/Fail, NULL, Ts3))<label>(11)</label></disp-formula></p><p>We can describe the process with the following symbolic description:
<disp-formula>SP &#x02192; User Behavior Chain: <break/>{PubRA(SPID, PriSP(UID, Success/Fail, NULL, Ts3))}<label>(12)</label></disp-formula></p><p>Step 6: The regulatory authority (RA) can access the data on the user behavior chain at any time. Using RA&#x02019;s private key, PriRA, can review the authentication results of any user for specific service providers and regulate users suspected of suspicious logins or brute force attacks.</p></sec><sec id="sec3dot2dot2-sensors-24-08136"><title>3.2.2. Scenario 2: Sharing UID and Specific Personal Identity Category Information</title><p>In this scenario, the service provider (SP) aims to deliver effective services by requesting users share specific categories of personal information from their digital identities and authenticating the UID. The personal information verification set {PIV_id, PIV_phone, &#x02026; PIV_n}, uploaded by users during digital identity registration, plays a crucial role. The system achieves zero-knowledge proof for sharing personal information by utilizing a hash chain verification mechanism.</p><p>This scenario will be divided into nine steps, as detailed in <xref rid="sensors-24-08136-f004" ref-type="fig">Figure 4</xref>.</p><p>Steps 1 and 2 are identical to the corresponding steps in Scenario 1 and will not be reiterated.</p><p>Step 3: After confirming the user&#x02019;s identity, if the service provider (SP) needs to use a certain type of personal information from the user&#x02019;s digital identity, suppose the service provider requests the user&#x02019;s identity card information, the following data request is made:<disp-formula>PriSP(PubU(UID, PIN_id, Ts2))<label>(13)</label></disp-formula></p><p>We can describe the process with the following symbolic description:<disp-formula>SP &#x02192; User: {PriSP(PubU(UID, PIN_id, Ts2))}<label>(14)</label></disp-formula></p><p>Step 4: The user uses the smart contract function GetC(UID, PriU(SPID, PIN_id, Ts3)) to lock the sharing rights of the current personal data category PIN_id to the current service provider through SPID. Determine the remaining verifiable times corresponding to PIN_id. If c &#x0003e; 1, the user can continue providing zero-knowledge proof information to SP; otherwise, the digital identity must be updated first.</p><p>We can describe the process with the following symbolic description:<disp-formula>User &#x02192; Digital Identity Chain: {GetC(UID, PriU(SPID, PIN_id, Ts3))}<label>(15)</label></disp-formula></p><p>In the case of c &#x0003e; 1, the user will calculate and generate Hashx(PI_id&#x000b7;Nonce) locally, where x = c &#x02212; 1, which means perform c &#x02212; 1 hashing on PI_id&#x000b7;Nonce. The data will next be used as the assertion for a zero-knowledge proof.</p><p>Step 5: The user provides the service provider (SP) with Hashx(PI_id&#x000b7;Nonce). The transmitted data format is as follows:<disp-formula>PubSP(UID, PIN_id, PriU(Hashx(PI_id&#x000b7;Nonce), Ts4))<label>(16)</label></disp-formula></p><p>We can describe the process with the following symbolic description:<disp-formula>User &#x02192; SP: {PubSP(UID, PIN_id, PriU(Hashx(PI_id&#x000b7;Nonce), Ts4))}<label>(17)</label></disp-formula></p><p>Step 6: The service provider (SP) obtains the returned data PriIC(PriU(Hashc(PI_id&#x000b7;Nonce))) through the smart contract function Fetch(UID, SPID, PIN_id) on the digital identity chain. The service provider (SP) can obtain Hashc (PI_id&#x000b7;Nonce) with the help of the public key PubIC and PubU. We can describe the process with the following symbolic description:<disp-formula>SP &#x02192; Digital Identity Chain: {Fetch(UID, SPID, PIN_id)}<label>(18)</label></disp-formula></p><p>If the zero-knowledge proof assertion provided by the user in step 5 is true, then the operational relationship between the Hashc(PI_id&#x000b7;Nonce) obtained by the service provider (SP) from the digital identity chain and the Hashx(PI_id&#x000b7;Nonce) provided by the user is as follows:<disp-formula>Hashc(PI_id&#x000b7;Nonce) = Hash(Hashx(PI_id&#x000b7;Nonce))<label>(19)</label></disp-formula></p><p>If the service provider (SP) can obtain the above operation relationship result after performing a hash operation on Hashc(PI_id&#x000b7;Nonce), it proves that the personal information shared by the user is authentic. This is an excellent example of proving your citizenship without revealing your ID information, using zero-knowledge proof technology to support decentralized identity.</p><p>Step 7: The service provider (SP) uploads the success/failure result of the user&#x02019;s digital identity authentication for this session to the user behavior chain. The relevant data will be encrypted using the public key, PubRA, of the regulatory authority (RA) in the following format:<disp-formula>PubRA(SPID, PriSP(UID, Success/Fail, PIN_id, Ts5))<label>(20)</label></disp-formula></p><p>We can describe the process with the following symbolic description:
<disp-formula>SP &#x02192; User Behavior Chain: <break/>{PubRA(SPID, PriSP(UID, Success/Fail, PIN_id, Ts5))}<label>(21)</label></disp-formula></p><p>Step 8: The user uploads the authentication success/failure results obtained from the service provider (SP) to the user behavior chain. The relevant data will be encrypted using the public key PubRA of the regulatory authority (RA) in the following format:<disp-formula>PubRA(UID, PriU(SPID, Success/Fail, PIN_id, Ts6))<label>(22)</label></disp-formula></p><p>We can describe the process with the following symbolic description:
<disp-formula>User &#x02192; User Behavior Chain: <break/>{PubRA(UID, PriU(SPID, Success/Fail, PIN_id, Ts6))}<label>(23)</label></disp-formula></p><p>Step 9: The regulatory authority (RA) can access the data on the user behavior chain at any time. Using RA&#x02019;s private key, PriRA, can review the authentication results of any user for specific service providers and regulate users suspected of suspicious logins or brute force attacks.</p><p>In the scenario of sharing UID and specific categories of personal information, the solution adopts a unique hash chain design to construct a personal information verification set {PIV_id, PIV_phone, &#x02026; PIV_n}, ensuring that no plaintext user personal information will be transmitted between the service provider and the user during the sharing process, protecting user privacy, and successfully achieving data sharing between the user and the service provider while keeping the user data &#x0201c;available but invisible&#x0201d;. With the help of the synchronization semaphore design of the GetC() and Fetch() functions, in addition to ensuring that the user authorizes each data sharing, it can also effectively ensure that the hash provided by the user each time is a reliable zero-knowledge proof credential, preventing attackers from replaying the hash due to asynchronous counter c values (such as race conditions caused by multiple service providers simultaneously requesting specific personal data categories of the same user).</p><p>This zero-knowledge proof-based data-sharing technology offers numerous benefits, particularly privacy protection and data misuse prevention. As shown in <xref rid="sensors-24-08136-f005" ref-type="fig">Figure 5</xref>, for example, in our system, a user&#x02019;s ID information is verified by the IC and converted into a zero-knowledge proof before being uploaded to the digital identity chain. Suppose a service provider requires the user to undergo real-name authentication. When the user provides this zero-knowledge proof to the service provider, the provider can use the information on the digital identity chain to verify the user&#x02019;s true identity. However, the service provider cannot access the plaintext of this identity, thus preventing misuse of the information, such as for advertising or other commercial purposes. When the IC processes the user&#x02019;s ID information, it can also create a zero-knowledge proof confirming the &#x0201c;user is of legal age&#x0201d;, which is uploaded to the digital identity chain. If the service provider requests proof of age, the user can provide this zero-knowledge proof. According to the method outlined in our paper, the service provider can verify the user&#x02019;s legal age via hash validation but cannot obtain the user&#x02019;s exact age, thus preventing further data mining or tracking. Furthermore, suppose the service provider requires the user to provide their landline number as proof of residency in a specific area. The user can still provide the number through proof of zero knowledge. Based on our description, the service provider can use the information uploaded by the IC to the digital identity chain to validate the authenticity of the zero-knowledge proof, thus confirming the user has a legitimate landline number. However, the provider cannot obtain the actual plaintext of the number, preventing misuse such as harassing or marketing calls.</p></sec></sec><sec id="sec3dot3-sensors-24-08136"><title>3.3. Stage 3: Digital Identity Update Stage</title><p>In our user self-sovereign identity solution, users&#x02019; digital identities can be updated. These updates occur in two scenarios: when a service provider (SP) requires the user to share a specific category of personal information that the user has not previously uploaded to their digital identity and when the counter c of PIV_x for a specific personal information category has decreased to 1. We will discuss these two scenarios separately. In this stage, four types of smart contract functions will be utilized, as listed and described in <xref rid="sensors-24-08136-t006" ref-type="table">Table 6</xref>.</p><sec id="sec3dot3dot1-sensors-24-08136"><title>3.3.1. Scenario 1: Service Provider Requests User to Add a Specific Category of Personal Identity Information</title><p>When a service provider needs a user to share a specific category of personal information, but the user has not yet added the requested category to their digital identity, this scenario is triggered. In this scenario, the initiating service provider requesting personal information sharing needs to initiate the request through a smart contract function, and other service providers in the same industry vote on the request through smart contract functions. Through this peer review process, it is first determined whether the request should be submitted to the user. Suppose the number of service providers approving the request exceeds a specific threshold. In that case, the request will be forwarded to the user, who will ultimately decide whether to add the category of personal information for sharing. During this process, regulatory agencies will assist in verifying the authenticity of the voting results to ensure the authenticity and effectiveness of the peer review.</p><p>This scenario will involve ten steps, as illustrated in <xref rid="sensors-24-08136-f006" ref-type="fig">Figure 6</xref>. We assume that the service provider applying for the addition of the personal information category is SP2, and the service providers participating in this peer review are SP1 to SPn.</p><p>Step 1: Service provider SP2 initiates a new personal information sharing request for a specific UID user, along with the request reason parameter Reason and the corresponding personal information name PIN_x. The request is initiated through the following smart contract function:<disp-formula>Request(PriSP2(UID, Reason, PIN_x, Ts1))<label>(24)</label></disp-formula></p><p>We can describe the process with the following symbolic description:
<disp-formula>SP2 &#x02192; Service Provider Behavior Chain: <break/>{Request(PriSP2(UID, Reason, PIN_x, Ts1))}<label>(25)</label></disp-formula></p><p>Step 2: The smart contract function initiates a request review to other service providers (SPs) in the industry, and the other SPs determine whether the reason for the request is reasonable in the industry. The SP that approves the request will return its SPID to the service provider behavior chain through the smart contract function in the following format:<disp-formula>Vote(PubSC(PriSPn(SPnID, UID, Ts2)))<label>(26)</label></disp-formula></p><p>We can describe the process with the following symbolic description:
<disp-formula>{SP1, SP3, &#x02026;, SPn} &#x02192; Service Provider Behavior Chain: <break/>{Vote(PubSC(PriSPn(SPnID, UID, Ts2)))}<label>(27)</label></disp-formula></p><p>Step 3: The service provider behavior chain collects the number of SPs and corresponding SPIDs that approve the request through the Vote() function and collects the SPIDs into a LIST. If the number of approvals exceeds a specific set threshold, the application request will be forwarded to the user. The format of the request data to be sent is as follows:<disp-formula>PriSC(PubU(LIST, Reason, PIN_x, SP2ID, Ts3))<label>(28)</label></disp-formula></p><p>We can describe the process with the following symbolic description:
<disp-formula>Service Provider Behavior Chain &#x02192; User: <break/>{PriSC(PubU(LIST, Reason, PIN_x, SP2ID, Ts3))}<label>(29)</label></disp-formula></p><p>Step 4: The user has the right to adjudicate the request. If the user agrees to add the personal information, they must notify the regulatory agency (RA) to verify the review results. This process is implemented through data transmission in the following format:<disp-formula>PubRA(PriU(Ts4), UID, LIST, Reason, PIN_x, SP2ID)<label>(30)</label></disp-formula></p><p>We can describe the process with the following symbolic description:<disp-formula>User &#x02192; RA: {PubRA(PriU(Ts4), UID, LIST, Reason, PIN_x, SP2ID)}<label>(31)</label></disp-formula></p><p>Step 5: The regulatory agency (RA) first obtains PubU from the digital identity chain through the smart contract function GetPubKey(UID) based on the UID and uses PubU to verify the PriU(Ts4) signature. The user&#x02019;s identity can be proven if the signature passes the verification. We can describe the process with the following symbolic description:<disp-formula>RA &#x02192; Digital Identity Chain: {GetPubKey(UID)}<label>(32)</label></disp-formula></p><p>Step 6: After authenticating the user&#x02019;s identity, the regulator RA will make a smart contract function call SamplingVerification(PriRA(PubSC(UID, PIN_x, Reason, LIST, SP2ID, Ts1))) to the service provider behavior chain. This is used to verify the authenticity of the peer review in this application. We can describe the process with the following symbolic description:
<disp-formula>RA &#x02192; Service Provider Behavior Chain: <break/>{SamplingVerification(PriRA(PubSC(UID, PIN_x, Reason, LIST, SP2ID, Ts1)))}<label>(33)</label></disp-formula></p><p>The SamplingVerification() function will randomly extract the service provider (SP)ID from the LIST parameter and verify the authenticity of the vote by sending data in the following format to the service provider:<disp-formula>PubSPn(UID, PIN_x, Reason, SP2ID, Ts1)<label>(34)</label></disp-formula></p><p>We can describe the process with the following symbolic description:
<disp-formula>Service Provider Behavior Chain &#x02192; SPn: <break/>{PubSPn(UID, PIN_x, Reason, SP2ID, Ts1)}<label>(35)</label></disp-formula></p><p>Step 7: The regulatory agency (RA) will collect the request feedback results from the SamplingVerification() function. If the RA verifies the authenticity of the peer review, the user will be given the Success flag. The specific data format is as follows:<disp-formula>PriRA(PubU(PIN_x, Reason, LIST, SP2ID, Success, Ts5))<label>(36)</label></disp-formula></p><p>We can describe the process with the following symbolic description:<disp-formula>RA &#x02192; User: {PriRA(PubU(PIN_x, Reason, LIST, SP2ID, Success, Ts5))}<label>(37)</label></disp-formula></p><p>Step 8: The regulatory agency (RA) records the UID, LIST, PIN_x, SP2ID, and Ts4 parameters in this application request to the regulatory authority behavior chain in the following format:<disp-formula>PriRA(UID, LIST, PIN_x, SP2ID, Ts4)<label>(38)</label></disp-formula></p><p>We can describe the process with the following symbolic description:
<disp-formula>RA &#x02192; Regulatory Authority Behavior Chain: <break/>{PriRA(UID, LIST, PIN_x, SP2ID, Ts4)}<label>(39)</label></disp-formula></p><p>This means that each ruling process by the regulatory agency will also be auditable by users or service provider entities in the future, effectively preventing regulatory violations.</p><p>Step 9: The user goes offline to the Issuing Center IC and repeats steps 4 to 6 in the digital identity registration stage to create a new category of personal identity information.</p><p>Step 10: After the new category of personal information is updated, the user will return a Success flag to the SP2 that initiated the request. The specific format is as follows:<disp-formula>PriU(PubSP2(LIST, Reason, PIN_x, SP2ID, Success, Ts6))<label>(40)</label></disp-formula></p><p>We can describe the process with the following symbolic description:<disp-formula>User &#x02192; SP2: {PriU(PubSP2(LIST, Reason, PIN_x, SP2ID, Success, Ts6))}<label>(41)</label></disp-formula></p><p>SP2 can then use this new category of personal information according to the steps in the digital identity usage stage.</p><p>In this scenario, any request from a service provider to add a category for sharing personal information will first undergo peer review by other peer service providers, effectively preventing the risk of service providers overreaching for user information. At the same time, regulatory agencies will actively intervene to verify the authenticity and effectiveness of peer review. Evidence of regulatory actions will be retained in the regulatory agency behavior chain for audit by other entities. Thanks to our robust hash chain setup, no plaintext personal data of users is transmitted or shared in this scenario, maintaining the principle of &#x0201c;usable but invisible&#x0201d; data.</p><p>The most significant benefit that this peer review mechanism can offer is the prevention of excessive and inappropriate data requests by a service provider beyond acceptable boundaries. By involving other service providers within the same industry, this mechanism allows for evaluating whether a new category of personal data requested by a specific service provider is necessary. Through this peer review mechanism, all service providers in the industry can benefit. If the data request is deemed reasonable, other service providers can directly request the same data from the user in the future. If the request is deemed unreasonable, the exposure of user data can be reduced through a voting process.</p><p>As shown in <xref rid="sensors-24-08136-f007" ref-type="fig">Figure 7</xref>, for example, suppose a game service provider is offering services to a new user and, by age restrictions, requires the user to provide age verification. If the user has not provided their ID information in their digital identity, they cannot obtain this proof. Suppose this issue is a first-time occurrence in the industry; in that case, the service provider can initiate a request through the peer review mechanism, asking the user to update their digital identity and provide age information. Suppose other service providers in the industry agree that age verification and data request are reasonable; in that case, they will vote in favor of the request, prompting the user to update their identity and provide the relevant zero-knowledge proof of their age to access the service. Subsequently, other service providers in the gaming industry will not need to initiate another peer review for similar requests and can directly ask the user for the data. This is a reasonable example.</p><p>However, after verifying the user&#x02019;s age meets the game&#x02019;s requirements, suppose the current game service provider requests the user to update and provide their job and occupation information for the service, which is clearly an unreasonable data request; when this peer review request is made, most of the service providers in the industry will oppose it, and the user will reject the update and provide the data. This mechanism effectively reduces unnecessary data requests.</p><p>Additionally, we plan to design a credit-scoring system for each entity in practical applications. This score will start from an initial value, influenced by factors such as past peer review participation, multi-party oversight accountability, and fraudulent activities. Each service provider will have its own credit score, and its credit rating will affect the weight of its opinion in the peer review process. Service providers with a low credit score will be required to stop offering services.</p></sec><sec id="sec3dot3dot2-sensors-24-08136"><title>3.3.2. Scenario 2: Specific Category Personal Information Validation Count m Has Decremented to 1</title><p>As mentioned, we utilize a hash chain design to achieve zero-knowledge proof-based sharing of user personal data. In this process, each data-sharing operation requires extracting hash data from the digital identity chain and decrementing the validation count c by 1. When the validation count c is decremented to 1, the hash data extraction operation for this specific category of personal information on the current digital identity chain can no longer provide zero-knowledge proof. Therefore, the user needs to update the personal information of this category in their digital identity. This scenario involves three steps, as shown in <xref rid="sensors-24-08136-f008" ref-type="fig">Figure 8</xref>.</p><p>Step 1: The user visits the Issuing Center (IC) offline, provides personal identification, and the personal information to be updated(PI_x). We can describe the process with the following symbolic description:<disp-formula>User &#x02192; IC: {Physical Identity, PI_x}<label>(42)</label></disp-formula></p><p>Step 2: The Issuing Center (IC) verifies the user&#x02019;s physical identity, generates a new PIV_x using the new random number parameter Nonce and the PI_x provided by the user, and constructs the following format parameters to call the smart contract function Add() to add the new PIV_x to the digital identity chain.
<disp-formula>Add(PriIC(UID, Hash(PubSC(PIV_x), PIN_x, m), Ts), PubSC(PIV_x), PIN_x, m)<label>(43)</label></disp-formula></p><p>We can describe the process with the following symbolic description:<disp-formula>IC &#x02192; Digital Identity Chain: {Add(PriIC(UID, Hash(PubSC(PIV_x), PIN_x, m), Ts), PubSC(PIV_x), PIN_x, m)}<label>(44)</label></disp-formula></p><p>Step 3: The Issuing Center (IC) provides the user with the new random number Nonce generated in Step 2. The user must securely store this random number, which will be used for subsequent verification steps in the digital identity usage stage. We can describe the process with the following symbolic description:<disp-formula>IC &#x02192; User: {Nonce}<label>(45)</label></disp-formula></p><p>In this scenario, users can update the zero-knowledge proof verification count for their personal information while ensuring that no plaintext information is transmitted to the digital identity chain throughout the entire process, thereby maintaining the &#x0201c;usable but invisible&#x0201d; nature of user personal information.</p></sec></sec><sec id="sec3dot4-sensors-24-08136"><title>3.4. Stage 4: Digital Identity Deletion Stage</title><p>In self-sovereign identity, users have complete control over their digital identities. Therefore, users can choose to terminate the sharing of certain personal information at any time and swiftly delete related data through a smart contract function. This stage will involve only one smart contract function, as detailed in <xref rid="sensors-24-08136-t007" ref-type="table">Table 7</xref>.</p><p>This stage will consist of only one step, as illustrated in <xref rid="sensors-24-08136-f009" ref-type="fig">Figure 9</xref>.</p><p>Step 1: As the data sovereign party, the user actively terminates the sharing of certain digital identity information by constructing the following parameters and calling the smart contract function Delete():<disp-formula>Delete(UID, PriU(PIN_x, Ts))<label>(46)</label></disp-formula></p><p>We can describe the process with the following symbolic description:<disp-formula>User &#x02192; Digital Identity Chain: {Delete(UID, PriU(PIN_x, Ts))}<label>(47)</label></disp-formula></p><p>However, as we all know, data on the blockchain cannot be deleted. Our research recommends using the Chameleon hash algorithm to modify the on-chain counter c value to 0 [<xref rid="B36-sensors-24-08136" ref-type="bibr">36</xref>,<xref rid="B37-sensors-24-08136" ref-type="bibr">37</xref>,<xref rid="B38-sensors-24-08136" ref-type="bibr">38</xref>,<xref rid="B39-sensors-24-08136" ref-type="bibr">39</xref>,<xref rid="B42-sensors-24-08136" ref-type="bibr">42</xref>,<xref rid="B43-sensors-24-08136" ref-type="bibr">43</xref>,<xref rid="B44-sensors-24-08136" ref-type="bibr">44</xref>], making the relevant digital identity information unusable. Utilizing the Chameleon hash algorithm, the data remain tamper-proof on the blockchain while allowing the change in specific hash values to ensure that the original information cannot be restored. On the other hand, since the user&#x02019;s on-chain data are encrypted and protected by PubSC. In this way, as long as the counter c value is set to zero, even if malicious actors illegally access the encrypted data on the blockchain, they cannot obtain any useful information.</p><p>Our research focuses on blockchain-based self-sovereign identity generation technology, highlighting several innovative approaches:</p><p>Innovation 1: Zero-knowledge proof for privacy protection</p><p>We propose a zero-knowledge proof (ZKP) technology to address privacy concerns in information sharing under the self-sovereign identity framework. ZKP allows verifiers to confirm the truth of a statement without revealing specific details, ensuring perpetual privacy during multi-party computation [<xref rid="B45-sensors-24-08136" ref-type="bibr">45</xref>,<xref rid="B46-sensors-24-08136" ref-type="bibr">46</xref>,<xref rid="B47-sensors-24-08136" ref-type="bibr">47</xref>,<xref rid="B48-sensors-24-08136" ref-type="bibr">48</xref>,<xref rid="B49-sensors-24-08136" ref-type="bibr">49</xref>]. This approach makes information elements &#x0201c;usable but not visible&#x0201d;, filling critical gaps in privacy protection. Although various attack techniques against hash algorithms exist, the irreversibility of hash algorithms remains trustworthy, provided secure hash functions are chosen [<xref rid="B50-sensors-24-08136" ref-type="bibr">50</xref>,<xref rid="B51-sensors-24-08136" ref-type="bibr">51</xref>,<xref rid="B52-sensors-24-08136" ref-type="bibr">52</xref>,<xref rid="B53-sensors-24-08136" ref-type="bibr">53</xref>,<xref rid="B54-sensors-24-08136" ref-type="bibr">54</xref>].</p><p>Innovation 2: Blockchain-based mutual supervision mechanism</p><p>We introduce a three-party mutual supervision mechanism to oversee interactions in the autonomous identity generation process. Regulatory agencies can effectively monitor behaviors on the blockchain, ensuring transparency and accountability among all parties involved in information sharing. This mechanism curbs dishonest behaviors and reinforces regulatory oversight, enhancing trust in identity transactions.</p><p>Innovation 3: Peer Review Mechanism for Data Request Validation</p><p>We propose a peer review mechanism to mitigate risks associated with excessive data requests. Before requesting new categories of personal information, service providers undergo industry peer review to justify data necessity. Automated through smart contracts, this process includes verification by regulatory authorities to maintain integrity and prevent misuse.</p><p>Compared to existing SSI systems, our solution offers unique advantages in privacy protection, preventing data misuse, multi-party behavioral privacy oversight, and reducing excessive data requests based on innovations. Specifically, unlike Sovrin and ShoCard, our zero-knowledge data-sharing approach eliminates the possibility of users sharing plaintext data. This ensures privacy protection when interacting with current service providers. Additionally, since the shared zero-knowledge data does not contain any user plaintext information, the service provider is prevented from misusing data beyond the scope of this interaction. This addresses the persistent data security issue of service providers &#x0201c;owning the data once and using it repeatedly&#x0201d;, thus strengthening the user&#x02019;s control over their self-sovereign identity. Moreover, our introduced multi-party supervision mechanism ensures that all actions by entities are accurately recorded and audited, significantly reducing the potential for malicious activities by any entity. These descriptions are equally applicable when comparing uPort, Veramo, TCID, DT-SSIM, PT-SSIM, and SISSI.</p><p>INCHAIN and AASSI, on the other hand, enhance the oversight mechanisms, involving one-way regulation from one type of entity to another, such as insurance companies overseeing claim initiators (INCHAIN) or trackers and issuers overseeing users (AASSI). However, one-way regulation cannot prevent global malicious behavior, as the actions of unregulated entities may remain uncontrolled. Our multi-party mutual oversight mechanism addresses this risk. Furthermore, the issues of privacy protection, data misuse prevention, and excessive data requests still persist in INCHAIN and AASSI, making the comparisons mentioned earlier still applicable.</p><p>We have presented the relevant projects in image format to facilitate the comparison. As shown in <xref rid="sensors-24-08136-f010" ref-type="fig">Figure 10</xref>, our innovations and advantages are compared with existing solutions.</p></sec></sec><sec id="sec4-sensors-24-08136"><title>4. Experiments and Analysis</title><sec id="sec4dot1-sensors-24-08136"><title>4.1. Formal Security Verification of Protocols Based on Scyther</title><p>Scyther 1.1.3 is an automated security protocol verification tool released by the CISPA Helmholtz Center for Information Security in Germany [<xref rid="B55-sensors-24-08136" ref-type="bibr">55</xref>,<xref rid="B56-sensors-24-08136" ref-type="bibr">56</xref>,<xref rid="B57-sensors-24-08136" ref-type="bibr">57</xref>]. It is used to identify potential attacks and vulnerabilities in protocols and has been widely used by researchers worldwide to verify various security protocols.</p><p><xref rid="sensors-24-08136-f011" ref-type="fig">Figure 11</xref> presents our research&#x02019;s formal verification results for the digital identity usage stage (<xref rid="sensors-24-08136-f011" ref-type="fig">Figure 11</xref>a) and digital identity update stage (<xref rid="sensors-24-08136-f011" ref-type="fig">Figure 11</xref>b), which were analyzed using Scyther.</p><p>The formal verification methodology of Scyther evaluates the following security properties in our proposed solution:<list list-type="simple"><list-item><p>&#x02713; Confidentiality</p></list-item><list-item><p>&#x02713; Aliveness</p></list-item><list-item><p>&#x02713; Weak Agreement</p></list-item><list-item><p>&#x02713; Non-injective Agreement (Niagree)</p></list-item><list-item><p>&#x02713; Non-synchronization (Nisynch)</p></list-item><list-item><p>&#x02713; State Consistency</p></list-item></list></p><p>Confidentiality effectively prevents information leakage, meaning attackers cannot access sensitive data transmitted within the protocol (such as passwords, keys, session tokens, etc.), thereby protecting user privacy and system security. Aliveness and Weak Agreement ensure that the communicating parties are genuine, trusted entities, preventing impersonation by a man-in-the-middle (MITM) attacker. These properties guarantee that both parties can confirm their participation in the protocol and avoid &#x0201c;communicating&#x0201d; with non-existent entities. Non-injective Agreement (Niagree) ensures that attackers cannot reuse previously valid messages to deceive protocol participants, meaning each communication event is unique and fresh, preventing replay attacks where old transaction data are reused. Non-synchronization (Nisynch) ensures that attackers cannot disrupt protocol logic by altering the message order, such as forging and sending response messages without an actual request. This property protects the multi-step interaction process within the protocol, ensuring that execution steps are not tampered with. Finally, State Consistency ensures that state variables in the protocol (such as session identifiers and key states) are not tampered with or compromised by attackers, preventing session hijacking and impersonation of legitimate users.</p><p>Currently, the preliminary planned communication methods have not shown any detected known risks.</p></sec><sec id="sec4dot2-sensors-24-08136"><title>4.2. The Analysis of Correctness and Interpretation of Experimental Results</title><p>We will address concerns and apprehensions from the perspectives of users, service providers, and regulatory bodies, respectively, and demonstrate, based on the experimental results and research design, that relevant issues will not arise. This ensures that the research design meets these security benchmarks.</p><sec id="sec4dot2dot1-sensors-24-08136"><title>4.2.1. Concerns from the Perspective of Honest Users</title><p>From the user&#x02019;s perspective, they often have the following concerns:<list list-type="order"><list-item><p>Identity Theft or Substitution: Users worry that attackers might steal or replace their authentication credentials, leading to unauthorized access or impersonation.</p></list-item><list-item><p>Data Leakage During Transmission: Users are concerned that personal data transmitted over the network could be intercepted or disclosed, leading to privacy breaches.</p></list-item><list-item><p>Infringement of Data Sovereignty: Users fear losing control over their data through unauthorized access or service providers exerting undue control without consent, such as using personal data on the blockchain without authorization or attempting to use data categories declared as deleted.</p></list-item><list-item><p>Engagement in Malicious Activities: Users worry about unintentionally engaging in malicious activities while using the service, potentially causing harm to others or the system.</p></list-item><list-item><p>Denial of Malicious Behavior: There is concern that dishonest users may deny engaging in malicious activities, making it difficult to hold them accountable for misconduct or security breaches.</p></list-item></list></p></sec><sec id="sec4dot2dot2-sensors-24-08136"><title>4.2.2. Security Analysis of the System for the Users&#x02019; Concerns</title><list list-type="order"><list-item><p>Identity Theft or Substitution.</p></list-item></list><p>If an attacker aims to steal or impersonate an identity, they typically have two common approaches: forging identity credentials or hijacking an existing legitimate user&#x02019;s identity. If the attacker chooses the first option, they will need to construct the necessary forged data to bypass the identity authentication step labeled as Equation (7) in <xref rid="sec3dot2dot1-sensors-24-08136" ref-type="sec">Section 3.2.1</xref>.</p><p>In this authentication step, the legitimate user provides their UID as a digital identity credential and includes a digital signature containing a timestamp and the target service provider&#x02019;s ID as a method for validating their digital identity. All the data are encrypted using the service provider&#x02019;s public key. In this process, if an attacker, named C, aims to forge an identity, C must first perform a man-in-the-middle attack to deceive the user into using the C&#x02019;s public key for encryption. Only then would the attacker have the opportunity to obtain PriU(SPID, Ts1) and replace the UID in a fake message constructed by C. After replacing the UID, the attacker can either attempt a replay attack using the legitimate digital signature in the packet or forge a new digital signature for the attack. We will reason through both methods, assuming the attacker has successfully carried out the man-in-the-middle attack.</p><p>If the attacker opts to replace the UID with a different one, call it UIDX, in a fake message, such as the following:<disp-formula>PubSP(UIDX, PriU(SPID, Ts1))<label>(48)</label></disp-formula></p><p>The UIDX will be used by the service provider to retrieve the user public key from the digital identity chain. But UIDX will not allow the service provider to obtain the correct public key for the user, causing the service provider to fail to verify the digital signature in the data packet, resulting in an authentication failure.</p><p>If the attacker chooses to replace the UID and forge the digital signature, i.e., in a message such as the following:<disp-formula>PubSP(UIDX, PriY(SPID, Ts1))<label>(49)</label></disp-formula></p><p>If the chosen UIDX is valid in the digital identity chain, the private key, PriY, used here should be the related to UIDX, namely PriX, in order to construct a valid digital signature. This is clearly very difficult. If the attacker chooses to forge an invalid UIDX, since the UIDX has not been registered with the IC, the service provider will be unable to retrieve the corresponding public key from the digital identity chain, making it impossible to verify the digital signature.</p><p>Therefore, it would be extremely difficult for the attacker to successfully forge the user&#x02019;s identity. Furthermore, the Scyther analysis results also strongly support the conclusion that the difficulty of carrying out a man-in-the-middle attack is high, ensuring that our solution effectively prevents identity theft or impersonation.</p><list list-type="simple"><list-item><label>2.</label><p>Data Leakage During Transmission.</p></list-item></list><p>For users, the greatest concern during data transmission is the potential leakage of PI_x-related information. Although PI_x is never transmitted or used in plaintext during actual transmission and operation, it can still raise concerns. The online interaction involving PI_x is outlined in the authentication step marked as Equation (17) in <xref rid="sec3dot2dot2-sensors-24-08136" ref-type="sec">Section 3.2.2</xref>.</p><p>We use PIN_id as an example to explore its logical security. In this process, the PIN_id is hashed together with a Nonce multiple times, and the resulting data are then digitally signed by the user along with the current timestamp. Finally, it is encrypted using the service provider&#x02019;s public key. It is important to note that this data transmission process has a logical context, as it represents the third interaction step described in <xref rid="sec3dot2dot2-sensors-24-08136" ref-type="sec">Section 3.2.2</xref>. To perform this interaction, both the user and the service provider must first complete the previous two steps.</p><p>In this context, if an attacker aims to obtain the hash data related to PIN_id, they must first compromise or hijack the current session. If the attacker chooses to break the encryption, they will need to decrypt the information encrypted with the service provider&#x02019;s public key without having access to the service provider&#x02019;s private key, which is practically unfeasible within a reasonable timeframe with current technology. Alternatively, if the attacker opts to hijack the session, they must first establish a valid man-in-the-middle attack channel and complete the previous two interactions to acquire the necessary context for obtaining the data. This requires successfully breaking the logic in our previously mentioned Equation (7), which we have already reasoned to be extremely difficult to accomplish. Therefore, it can be logically proven that the difficulty of user data leakage is high, and the analysis results from Scyther further substantiate our argument.</p><list list-type="simple"><list-item><label>3.</label><p>Infringement of Data Sovereignty.</p></list-item></list><p>In our research design, service providers obtain hashed personal data (PI_x), protected by the public key of a smart contract on the digital identity chain. Security analysis using asymmetric algorithms demonstrates that unauthorized access by service providers is impossible. Even if a service provider attempts to access personal data categories declared as deleted by users, these data, though still existing on the blockchain, remain inaccessible due to the public key of smart contract protection. This ensures users&#x02019; self-sovereignty over their data, meeting the security benchmarks of the research.</p><list list-type="simple"><list-item><label>4.</label><p>Engagement in Malicious Activities.</p></list-item></list><p>When the user interacts with the service provider, the relevant user data are submitted to the User Behavior Chain by both the user and the service provider. If the data from both parties is inconsistent, it will trigger an intervention by the regulatory authority. In the case where a dishonest user or service provider attempts to engage in malicious activities, they would need to find ways to tamper with the data submitted by the other party to the User Behavior Chain. However, due to the immutability of blockchain, they cannot alter the data that has already been recorded on the chain. Therefore, their only option would be to attempt to intercept and modify the process by which the data are submitted to the chain.</p><p>The interaction logic for submitting data to the blockchain is as follows:
<disp-formula>User &#x02192; User Behavior Chain: <break/>{PubRA(UID, PriU(SPID, Success/Fail, NULL, Ts2))}<break/>SP &#x02192; User Behavior Chain: <break/>{PubRA(SPID, PriSP(UID, Success/Fail, NULL, Ts3))}<label>(50)</label></disp-formula></p><p>In this process, dishonest users or service providers would need to forge the other party&#x02019;s digital signature in order to successfully tamper with the data. Clearly, a forged digital signature cannot pass decryption and validation by the regulatory authority using the legitimate public key, which would trigger regulatory review. Furthermore, attempting to forge a valid digital signature without access to the other party&#x02019;s private key is virtually impossible with current technology. This logically demonstrates that, in our proposed solution, it is extremely difficult for either users or service providers to engage in unilateral malicious behavior.</p><list list-type="simple"><list-item><label>5.</label><p>Denial of Malicious Behavior.</p></list-item></list><p>As mentioned earlier, when users utilize the services provided by service providers, their relevant user data are submitted by the service provider to the user identity regulatory chain. Considering the immutable nature of blockchain, users cannot erase or tamper with pertinent information. This implies that users have undeniable accountability for their actions, meeting the security benchmarks of this study.</p></sec><sec id="sec4dot2dot3-sensors-24-08136"><title>4.2.3. Concerns from the Perspective of Service Providers</title><p>From the perspective of service providers, they often have the following concerns:<list list-type="order"><list-item><p>Identity theft or substitution: service providers are worried about unauthorized access to user accounts due to identity theft or substitution, leading to security breaches and misuse of user data.</p></list-item><list-item><p>Fabricated personal data: there is concern that users may submit false personal information, compromising data accuracy and service quality.</p></list-item><list-item><p>Excessive data collection: service providers are cautious about over-collecting user data, potentially infringing privacy rights and violating regulations.</p></list-item><list-item><p>Abuse of user data: service providers fear misuse of collected data, such as unauthorized sales to third parties or usage for purposes unrelated to the service, leading to privacy violations and loss of trust.</p></list-item><list-item><p>Identity fraud: there is a risk of malicious actors impersonating legitimate service providers to access user data or deceive users into providing sensitive information.</p></list-item><list-item><p>Denial of malicious behavior: service providers may deny involvement in malicious activities or responsibility for data breaches, undermining trust and accountability.</p></list-item></list></p></sec><sec id="sec4dot2dot4-sensors-24-08136"><title>4.2.4. Security Analysis of the System for the Providers&#x02019; Concerns</title><p>Based on the experimental results and research design description, we can demonstrate that the concerns will not materialize. This can be substantiated through the following analysis:<list list-type="order"><list-item><p>Identity Theft or Substitution.</p></list-item></list></p><p>When discussing user concerns, we analyzed the risk of identity theft or substitution. By leveraging timestamps, asymmetric encryption algorithms, and Scyther&#x02019;s secure evaluation of all UID-related claims, we can demonstrate that our research scheme mitigates user authentication identity theft or substitution issues. This argument also holds from the service providers&#x02019; perspective, meeting the study&#x02019;s security benchmarks.</p><list list-type="simple"><list-item><label>2.</label><p>Fabricated Personal Data.</p></list-item></list><p>In our research design, since users&#x02019; UID and all personal information are verified offline and stored on the blockchain by the authentication center (IC), and all data on the blockchain include a digital signature from the IC, it implies that user data on the blockchain is trustworthy. Providing fabricated information is highly unlikely unless users can forge the IC&#x02019;s digital signature. Forging a digital signature in an asymmetric cryptographic system is theoretically impossible without a legitimate private key.</p><list list-type="simple"><list-item><label>3.</label><p>Excessive Data Collection.</p></list-item></list><p>Due to the presence of a peer review mechanism, if a service provider wishes to further access specific personal information of a user, and this category of information has not been requested by other service providers, the request must first undergo peer evaluation and voting among industry peers. This will effectively prevent service providers from excessively soliciting unnecessary user information, thus meeting the security benchmarks of the study.</p><list list-type="simple"><list-item><label>4.</label><p>Abuse of User Data.</p></list-item></list><p>Past data misuse often involves service providers obtaining users&#x02019; personal information in plaintext and applying the relevant data outside the scope of authorization without obtaining user consent. In our research, however, since all user personal information is hashed data with random nonce values, the data can only be used for the intended purpose. They cannot be utilized for any other purposes. Additionally, the irreversible nature of the hash function prevents service providers from forging hashes for other purposes. Using the formula below, we can demonstrate the infeasibility of deriving the m-th hash from the (m + 1)-th hash.</p><p>When considering the derivation from the (m + 1)-th hash to the m-th hash, let us assume we have a hash function H, which maps the input x<sub>m+1</sub> and random number Nonce<sub>m+1</sub> to the hash value h<sub>m+1</sub>:<disp-formula>h<sub>m+1</sub> = H(x<sub>m+1</sub>, Nonce<sub>m+1</sub>)<label>(51)</label></disp-formula></p><p>Now, we want to derive the m-th hash h<sub>m</sub> from the (m + 1)-th hash h<sub>m+1</sub>. Due to the irreversibility of the hash function, we cannot directly reverse-engineer the original inputs x<sub>m</sub> and Nonce<sub>m</sub>, meaning we cannot find H<sup>&#x02212;1</sup> (h<sub>m</sub>, Nonce<sub>m</sub>).</p><p>Therefore, the infeasibility of deriving the m-th hash from the (m + 1)-th hash is determined by the one-way nature of the hash function, making it impossible to reverse-engineer through any formula. This also implies that service providers cannot misuse user data, thus meeting the security benchmarks of this study.</p><list list-type="simple"><list-item><label>5.</label><p>Identity Fraud.</p></list-item></list><p>According to our design, if an attacker intends to impersonate a service provider to steal user data, they will need to convince the user that they possess a legitimate service provider identity during the following interactions:
<disp-formula>SP &#x02192; User: {PriSP(PubU(UID, PIN_id, Ts2))}<break/>SP &#x02192; User Behavior Chain: <break/>{PubRA(SPID, PriSP(UID, Success/Fail, PIN_id, Ts5))}<label>(52)</label></disp-formula></p><p>In any of these interaction processes, the attacker would need to successfully forge a digital signature that can be validated by the user or the regulatory authority. However, forging a legitimate digital signature without the other party&#x02019;s private key is difficult to achieve with current technology, thus logically proving that the service provider&#x02019;s identity in our solution is hard to counterfeit.</p><list list-type="simple"><list-item><label>6.</label><p>Denial of Malicious Behavior.</p></list-item></list><p>Like the denial of malicious behavior from the user&#x02019;s perspective, since service providers&#x02019; requests for user data are recorded on the service provider behavior chain, considering the immutable nature of the blockchain, service providers are also unable to deny their actions, ensuring non-repudiation. Thus, this meets the study&#x02019;s security benchmarks.</p></sec><sec id="sec4dot2dot5-sensors-24-08136"><title>4.2.5. Concerns from the Regulatory Authority&#x02019;s Perspective</title><p>From the regulatory authority&#x02019;s perspective, the concerns are as follows:<list list-type="order"><list-item><p>Inability to monitor malicious behavior: regulatory authorities may struggle to effectively monitor and detect malicious activities from both users and service providers, including fraudulent and deceptive practices.</p></list-item><list-item><p>Peer review mechanism failures: concerns arise when service providers collude to manipulate the peer review process, rendering it ineffective in identifying and penalizing unethical behavior.</p></list-item><list-item><p>Fabrication of peer review results: service providers falsifying peer review outcomes can undermine the credibility and reliability of the peer review process, affecting trust in industry self-regulation.</p></list-item><list-item><p>Sensitive data leaks: Regulatory authorities must ensure the confidentiality and security of sensitive information exchanged during communications with users and service providers. Breaches could lead to identity theft, financial fraud, or reputational damage.</p></list-item><list-item><p>Tampering with regulatory data: unauthorized alteration or manipulation of regulatory data can undermine its accuracy and reliability, leading to incorrect regulatory decisions or enforcement actions.</p></list-item><list-item><p>Leakage of regulatory data: If regulatory data contains sensitive information, there is a risk of compromising user or service provider privacy, potentially harming their rights and interests.</p></list-item><list-item><p>Internal malicious behavior: Regulatory authorities must guard against internal misconduct or corruption, as failure to detect such behavior can erode public trust and undermine the authority&#x02019;s effectiveness.</p></list-item></list></p></sec><sec id="sec4dot2dot6-sensors-24-08136"><title>4.2.6. Security Analysis of the System for the Regulator&#x02019;s Concerns</title><p>Based on the experimental results and research design description, we can demonstrate that the concerns will not materialize. This can be substantiated through the following analysis:<list list-type="order"><list-item><p>Inability to Monitor Malicious Behavior.</p></list-item></list></p><p>All actions of users and service providers are comprehensively recorded on the blockchain, providing regulatory authorities with a global perspective to exercise their responsibilities, thus eliminating regulatory blind spots and meeting the study&#x02019;s security benchmarks.</p><list list-type="simple"><list-item><label>2.</label><p>Peer Review Mechanism Failures.</p></list-item></list><p>Regulatory authorities review voting results to prevent collusion attacks. They investigate and confirm that service providers genuinely participated in evaluations independently, ensuring immediate exposure of collusion and meeting the study&#x02019;s security benchmarks.</p><list list-type="simple"><list-item><label>3.</label><p>Fabrication of Peer Review Results.</p></list-item></list><p>Regulatory oversight and the inclusion of digital signatures in each vote prevent the falsification of peer review results. This ensures the integrity of the process and aligns with the study&#x02019;s security benchmarks.</p><list list-type="simple"><list-item><label>4.</label><p>Sensitive Data Leaks.</p></list-item></list><p>Scyther experimental results indicate secure data exchanges between regulatory authorities and users or service providers. Asymmetric encryption ensures that attackers cannot decrypt related ciphertexts, preventing sensitive information leakage and meeting the study&#x02019;s security benchmarks.</p><list list-type="simple"><list-item><label>5.</label><p>Tampering with Regulatory Data.</p></list-item></list><p>All regulatory data are sourced from the blockchain, ensuring data integrity due to the blockchain&#x02019;s immutability. This meets the study&#x02019;s security benchmarks.</p><list list-type="simple"><list-item><label>6.</label><p>Leakage of Regulatory Data.</p></list-item></list><p>Interactions between regulatory authorities, users, and service providers are secure. Regulatory data on the blockchain are encrypted using the regulatory authority&#x02019;s public key, ensuring that only regulatory authorities can access plaintext data. This prevents data leakage and meets the security benchmarks.</p><list list-type="simple"><list-item><label>7.</label><p>Internal Malicious Behavior.</p></list-item></list><p>Regulatory actions are recorded on the blockchain, ensuring non-repudiation. Users and service providers can audit regulatory actions, preventing regulatory authorities from concealing malicious behavior. This meets this study&#x02019;s security benchmarks.</p></sec></sec><sec id="sec4dot3-sensors-24-08136"><title>4.3. Simulation Analysis of Computational Efficiency</title><p>We identified the steps involving asymmetric cryptography for encryption and digital signing to assess the efficiency of the cryptographic algorithms in the research design. We recorded the types and frequencies of cryptographic operations used in each step. The statistical results are presented in <xref rid="sensors-24-08136-t008" ref-type="table">Table 8</xref>.</p><p>Based on these data, we measured the execution time of all encryption and digital signature operations in the online process through simulation tests. These simulations were conducted using test code written in Python 3.9.2 (interpreted language) and C (compiled language), both based on the RSA asymmetric encryption algorithm. The tests involved cryptographic calculations such as encryption and digital signing, with the test data size based on the expected data volume for each step. The tests were conducted under the following conditions, with each test executed 10 times and the average value taken.</p><list list-type="bullet"><list-item><p>Operating System: Debian 5.5.17-1kali1 (21 April 2020) x86_64 GNU/Linux</p></list-item><list-item><p>CPU: AMD Ryzen R5 5600H (configured to four cores and four threads via VMware to simulate limited resources) (Advanced Micro Devices (AMD) based in Santa Clara, CA, USA)</p></list-item><list-item><p>Memory: DDR4 4 GB 2666</p></list-item></list><p>The efficiency test results for the digital identity usage and update stages are shown in <xref rid="sensors-24-08136-f012" ref-type="fig">Figure 12</xref>. While computation times vary due to differences in parameters and data volumes for each step, the overall results demonstrate that even with limited hardware, cryptographic operations in both interpreted and compiled languages maintain acceptable millisecond-level speeds, with compiled languages offering better performance. In real-world scenarios with better hardware, the computational efficiency of this design is expected to meet everyday application requirements.</p></sec></sec><sec sec-type="conclusions" id="sec5-sensors-24-08136"><title>5. Conclusions</title><p>This paper briefly introduces research on blockchain-based peer-supervised self-sovereign identity generation and privacy protection technologies. This study proposes a blockchain-based self-sovereign identity mechanism, innovatively achieving &#x0201c;available but invisible&#x0201d; user digital identity personal data. A multi-party mutual supervision mechanism ensures the security of interactions among data-sharing entities and implements effective peer review controls to address risks of potential data over-retrieval and misuse by service providers.</p><p>In future work, we plan to refine the following details of this solution:</p><p>Precision of biometric matching: Since personal information is stored on-chain in hashed form, the data comparison is also in the form of hashed data, which is suitable for textual data. However, the hashed comparison may fail for biometric data such as fingerprints and irises, which have a range of accuracy. Our theoretical requirement is that the biometric collection method used during digital identity registration matches the one used during digital identity usage with a fixed accuracy rate. However, this theoretical consideration may face limitations, and this will be a focus area for improvement in the future.</p><p>Enhancing SSI interoperability and expanding use cases: Interoperating with other SSI systems remains challenging due to differences in Decentralized Identifier (DID) formats across various blockchains, algorithms, and application scenarios. To address this, we are designing a scalable solution where digital identity authentication and sharing resemble MPLS in computer networks. By adding labels to data packets, different SSI systems can use unique labels, allowing us to process and parse data accordingly for improved interoperability. Additionally, we plan to expand SSI use cases beyond design to practical applications, such as privacy protection against tracking and inference attacks, and offline scenarios like using SSI identities for receiving packages without revealing a user&#x02019;s physical identity.</p><p>Finally, advanced proof of system security features using formal or mathematical methods, automatically or semiautomatically, is also a challenging research realm for designed systems. In <xref rid="sec4-sensors-24-08136" ref-type="sec">Section 4</xref>, we sketched some security features that are intuitively justified but challenging to prove in a customized way using proper tools and mechanisms, like a theorem prover [<xref rid="B58-sensors-24-08136" ref-type="bibr">58</xref>]. These are our future works.</p></sec><sec id="sec6-sensors-24-08136"><title>6. Patents</title><p>Patent No. ZL 2023 1 1600886.9 (CN) has resulted from the research presented in this study.</p></sec></body><back><fn-group><fn><p><bold>Disclaimer/Publisher&#x02019;s Note:</bold> The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.</p></fn></fn-group><notes><title>Author Contributions</title><p>Conceptualization, J.L., Z.L. and Q.L.; formal analysis, J.L. and Z.L.; methodology, J.L., Z.L. and Q.L.; project administration, Z.L.; software, Z.L.; supervision, Z.L. and Q.L.; validation, J.L., Z.L. and Q.L. All authors have read and agreed to the published version of the manuscript.</p></notes><notes><title>Institutional Review Board Statement</title><p>Not applicable.</p></notes><notes><title>Informed Consent Statement</title><p>Not applicable.</p></notes><notes notes-type="data-availability"><title>Data Availability Statement</title><p>Data are contained within the article.</p></notes><notes notes-type="COI-statement"><title>Conflicts of Interest</title><p>The authors declare no conflicts of interest.</p></notes><ref-list><title>References</title><ref id="B1-sensors-24-08136"><label>1.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Liu</surname><given-names>Y.</given-names></name>
<name><surname>Xiao</surname><given-names>D.</given-names></name>
</person-group><article-title>The Data Breach Notification Obligation in Australia and its Enlightenment in China</article-title><source>J. Inf. Resour. Manag.</source><year>2021</year><volume>11</volume><fpage>40</fpage><lpage>49</lpage></element-citation></ref><ref id="B2-sensors-24-08136"><label>2.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Rodrigues</surname><given-names>G.A.P.</given-names></name>
<name><surname>Serrano</surname><given-names>A.L.M.</given-names></name>
<name><surname>Vergara</surname><given-names>G.F.</given-names></name>
<name><surname>Albuquerque</surname><given-names>R.D.O.</given-names></name>
<name><surname>Nze</surname><given-names>G.D.A.</given-names></name>
</person-group><article-title>Impact, Compliance, and Countermeasures in Relation to Data Breaches in Publicly Traded US Companies</article-title><source>Future Internet</source><year>2024</year><volume>16</volume><elocation-id>201</elocation-id><pub-id pub-id-type="doi">10.3390/fi16060201</pub-id></element-citation></ref><ref id="B3-sensors-24-08136"><label>3.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Pimenta Rodrigues</surname><given-names>G.A.</given-names></name>
<name><surname>Marques Serrano</surname><given-names>A.L.</given-names></name>
<name><surname>Lopes Espi&#x000f1;eira Lemos</surname><given-names>A.N.</given-names></name>
<name><surname>Canedo</surname><given-names>E.D.</given-names></name>
<name><surname>Mendon&#x000e7;a</surname><given-names>F.L.L.D.</given-names></name>
<name><surname>de Oliveira Albuquerque</surname><given-names>R.</given-names></name>
<name><surname>Garc&#x000ed;a Villalba</surname><given-names>L.J.</given-names></name>
</person-group><article-title>Understanding Data Breach from a Global Perspective: Incident Visualization and Data Protection Law Review</article-title><source>Data</source><year>2024</year><volume>9</volume><elocation-id>27</elocation-id><pub-id pub-id-type="doi">10.3390/data9020027</pub-id></element-citation></ref><ref id="B4-sensors-24-08136"><label>4.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Ayyagari</surname><given-names>R.</given-names></name>
</person-group><article-title>An exploratory analysis of data breaches from 2005&#x02013;2011: Trends and insights</article-title><source>J. Inf. Priv. Secur.</source><year>2012</year><volume>8</volume><fpage>33</fpage><lpage>56</lpage><pub-id pub-id-type="doi">10.1080/15536548.2012.10845654</pub-id></element-citation></ref><ref id="B5-sensors-24-08136"><label>5.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Gal-Or</surname><given-names>E.</given-names></name>
</person-group><article-title>Information sharing in oligopoly</article-title><source>Econom. J. Econom. Soc.</source><year>1985</year><volume>53</volume><fpage>329</fpage><lpage>343</lpage><pub-id pub-id-type="doi">10.2307/1911239</pub-id></element-citation></ref><ref id="B6-sensors-24-08136"><label>6.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Rannenberg</surname><given-names>K.</given-names></name>
</person-group><source>ISO/IEC 24760-1: A Framework for Identity Management&#x02014;Part 1: Terminology and Concepts</source><publisher-name>International Organization for Standardization</publisher-name><publisher-loc>Geneva, Switzerland</publisher-loc><year>2019</year></element-citation></ref><ref id="B7-sensors-24-08136"><label>7.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<collab>Techopedia</collab>
</person-group><article-title>What is a Digital Identity?</article-title><comment>Available online: <ext-link xlink:href="https://www.techopedia.com/definition/23915/digital-identity" ext-link-type="uri">https://www.techopedia.com/definition/23915/digital-identity</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-12-17">(accessed on 17 December 2024)</date-in-citation></element-citation></ref><ref id="B8-sensors-24-08136"><label>8.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Fang</surname><given-names>J.</given-names></name>
<name><surname>Yan</surname><given-names>C.</given-names></name>
<name><surname>Yan</surname><given-names>C.</given-names></name>
</person-group><article-title>Centralized Identity Authentication Research Based on Management Application Platform</article-title><source>Proceedings of the 2009 First International Conference on Information Science and Engineering</source><conf-loc>Nanjing, China</conf-loc><conf-date>26&#x02013;28 December 2009</conf-date></element-citation></ref><ref id="B9-sensors-24-08136"><label>9.</label><element-citation publication-type="webpage"><article-title>Microsoft Passport: Streamlining Commerce and Communication on the Web</article-title><comment>Available online: <ext-link xlink:href="https://news.microsoft.com/1999/10/11/microsoft-passport-streamlining-commerce-and-communication-on-the-web/" ext-link-type="uri">https://news.microsoft.com/1999/10/11/microsoft-passport-streamlining-commerce-and-communication-on-the-web/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-12-17">(accessed on 17 December 2024)</date-in-citation></element-citation></ref><ref id="B10-sensors-24-08136"><label>10.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Shim</surname><given-names>S.</given-names></name>
<name><surname>Bhalla</surname><given-names>G.</given-names></name>
<name><surname>Pendyala</surname><given-names>V.</given-names></name>
</person-group><article-title>Federated identity management</article-title><source>Computer</source><year>2005</year><volume>38</volume><fpage>120</fpage><lpage>122</lpage><pub-id pub-id-type="doi">10.1109/MC.2005.408</pub-id></element-citation></ref><ref id="B11-sensors-24-08136"><label>11.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>J&#x000f8;sang</surname><given-names>A.</given-names></name>
<name><surname>Pope</surname><given-names>S.</given-names></name>
</person-group><article-title>User Centric Identity Management</article-title><source>Proceedings of the AusCERT Asia Pacific Information Technology Security Conference</source><conf-loc>Gold Coast, Australia</conf-loc><conf-date>22&#x02013;26 May 2005</conf-date></element-citation></ref><ref id="B12-sensors-24-08136"><label>12.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>Recordon</surname><given-names>D.</given-names></name>
<name><surname>Fitzpatrick</surname><given-names>B.</given-names></name>
</person-group><article-title>OpenID Authentication 1.1</article-title><year>2006</year><comment>Available online: <ext-link xlink:href="https://openid.net/specs/openid-authentication-1_1.html" ext-link-type="uri">https://openid.net/specs/openid-authentication-1_1.html</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-12-17">(accessed on 17 December 2024)</date-in-citation></element-citation></ref><ref id="B13-sensors-24-08136"><label>13.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Recordon</surname><given-names>D.</given-names></name>
<name><surname>Reed</surname><given-names>D.</given-names></name>
</person-group><article-title>OpenID 2.0: A platform for user-centric identity management</article-title><source>Proceedings of the Second ACM Workshop on Digital Identity Management</source><conf-loc>Alexandria, VA, USA</conf-loc><conf-date>3 November 2006</conf-date><fpage>11</fpage><lpage>16</lpage></element-citation></ref><ref id="B14-sensors-24-08136"><label>14.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>Sakimura</surname><given-names>N.</given-names></name>
<name><surname>Bradley</surname><given-names>J.</given-names></name>
</person-group><article-title>OpenID Connect Core 1.0</article-title><comment>Available online: <ext-link xlink:href="https://openid.net/specs/openid-connect-core-1_0-final.html" ext-link-type="uri">https://openid.net/specs/openid-connect-core-1_0-final.html</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-12-17">(accessed on 17 December 2024)</date-in-citation></element-citation></ref><ref id="B15-sensors-24-08136"><label>15.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Leiba</surname><given-names>B.</given-names></name>
</person-group><article-title>OAuth Web Authorization Protocol</article-title><source>IEEE Internet Comput.</source><year>2012</year><volume>16</volume><fpage>74</fpage><lpage>77</lpage><pub-id pub-id-type="doi">10.1109/MIC.2012.11</pub-id></element-citation></ref><ref id="B16-sensors-24-08136"><label>16.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Cho</surname><given-names>S.R.</given-names></name>
<name><surname>Choi</surname><given-names>D.S.</given-names></name>
<name><surname>Jin</surname><given-names>S.H.</given-names></name>
<name><surname>Lee</surname><given-names>H.H.</given-names></name>
</person-group><article-title>Passwordless Authentication Technology-FIDO</article-title><source>Electron. Telecommun. Trends</source><year>2014</year><volume>29</volume><fpage>101</fpage><lpage>109</lpage></element-citation></ref><ref id="B17-sensors-24-08136"><label>17.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>M&#x000fc;hle</surname><given-names>A.</given-names></name>
<name><surname>Gr&#x000fc;ner</surname><given-names>A.</given-names></name>
<name><surname>Gayvoronskaya</surname><given-names>T.</given-names></name>
<name><surname>Meinel</surname><given-names>C.</given-names></name>
</person-group><article-title>A survey on essential components of a self-sovereign identity</article-title><source>Comput. Sci. Rev.</source><year>2018</year><volume>30</volume><fpage>80</fpage><lpage>86</lpage><pub-id pub-id-type="doi">10.1016/j.cosrev.2018.10.002</pub-id></element-citation></ref><ref id="B18-sensors-24-08136"><label>18.</label><element-citation publication-type="webpage"><person-group person-group-type="author">
<name><surname>Khovratovich</surname><given-names>D.</given-names></name>
<name><surname>Law</surname><given-names>J.</given-names></name>
</person-group><article-title>Sovrin: Digital Identities in the Blockchain Era</article-title><year>2017</year><comment>Available online: <ext-link xlink:href="https://sovrin.org/wp-content/uploads/AnonCred-RWC.pdf" ext-link-type="uri">https://sovrin.org/wp-content/uploads/AnonCred-RWC.pdf</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-12-17">(accessed on 17 December 2024)</date-in-citation></element-citation></ref><ref id="B19-sensors-24-08136"><label>19.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Naik</surname><given-names>N.</given-names></name>
<name><surname>Jenkins</surname><given-names>P.</given-names></name>
</person-group><article-title>Sovrin network for decentralized digital identity: Analysing a self-sovereign identity system based on distributed ledger technology</article-title><source>Proceedings of the 2021 IEEE International Symposium on Systems Engineering (ISSE)</source><conf-loc>Vienna, Austria</conf-loc><conf-date>13 September 2021&#x02013;13 October 2021</conf-date><fpage>1</fpage><lpage>7</lpage></element-citation></ref><ref id="B20-sensors-24-08136"><label>20.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Windley</surname><given-names>P.</given-names></name>
</person-group><source>How Sovrin Works</source><publisher-name>Windely.com</publisher-name><publisher-loc>Hoboken, NJ, USA</publisher-loc><year>2016</year></element-citation></ref><ref id="B21-sensors-24-08136"><label>21.</label><element-citation publication-type="webpage"><article-title>ShoCard</article-title><comment>Available online: <ext-link xlink:href="https://shocard.com" ext-link-type="uri">https://shocard.com</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-29">(accessed on 29 October 2024)</date-in-citation></element-citation></ref><ref id="B22-sensors-24-08136"><label>22.</label><element-citation publication-type="webpage"><article-title>To the Sovrin Community</article-title><comment>Available online: <ext-link xlink:href="https://us14.campaign-archive.com/?u=b2c2f50b93f0ad7684f55ccde&#x00026;id=97dcc86838" ext-link-type="uri">https://us14.campaign-archive.com/?u=b2c2f50b93f0ad7684f55ccde&#x00026;id=97dcc86838</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-29">(accessed on 29 October 2024)</date-in-citation></element-citation></ref><ref id="B23-sensors-24-08136"><label>23.</label><element-citation publication-type="webpage"><article-title>PingOne Neo</article-title><comment>Available online: <ext-link xlink:href="https://www.pingidentity.com/en/lp/ac/pingone-neo.html" ext-link-type="uri">https://www.pingidentity.com/en/lp/ac/pingone-neo.html</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-29">(accessed on 29 October 2024)</date-in-citation></element-citation></ref><ref id="B24-sensors-24-08136"><label>24.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Naik</surname><given-names>N.</given-names></name>
<name><surname>Jenkins</surname><given-names>P.</given-names></name>
</person-group><article-title>uPort Open-Source Identity Management System: An Assessment of Self-Sovereign Identity and User-Centric Data Platform Built on Blockchain</article-title><source>Proceedings of the 2020 IEEE International Symposium on Systems Engineering (ISSE)</source><conf-loc>Vienna, Austria</conf-loc><conf-date>12 October 2020&#x02013;12 November 2020</conf-date></element-citation></ref><ref id="B25-sensors-24-08136"><label>25.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>El Haddouti</surname><given-names>S.</given-names></name>
<name><surname>El Kettani MD</surname><given-names>E.C.</given-names></name>
</person-group><article-title>Analysis of identity management systems using blockchain technology</article-title><source>Proceedings of the 2019 International Conference on Advanced Communication Technologies and Networking (CommNet)</source><conf-loc>Rabat, Morocco</conf-loc><conf-date>12&#x02013;14 April 2019</conf-date><fpage>1</fpage><lpage>7</lpage></element-citation></ref><ref id="B26-sensors-24-08136"><label>26.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Panait</surname><given-names>A.E.</given-names></name>
<name><surname>Olimid</surname><given-names>R.F.</given-names></name>
<name><surname>Stefanescu</surname><given-names>A.</given-names></name>
</person-group><article-title>Analysis of uPort Open, an identity management blockchain-based solution</article-title><source>International Conference on Trust and Privacy in Digital Business</source><publisher-name>Springer International Publishing</publisher-name><publisher-loc>Cham, Switzerland</publisher-loc><year>2020</year><fpage>3</fpage><lpage>13</lpage></element-citation></ref><ref id="B27-sensors-24-08136"><label>27.</label><element-citation publication-type="webpage"><article-title>Performant and Modular Apis for Verifiable Data and Ssi</article-title><comment>Available online: <ext-link xlink:href="https://veramo.io/" ext-link-type="uri">https://veramo.io/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-10-29">(accessed on 29 October 2024)</date-in-citation></element-citation></ref><ref id="B28-sensors-24-08136"><label>28.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Abid</surname><given-names>A.</given-names></name>
<name><surname>Cheikhrouhou</surname><given-names>S.</given-names></name>
<name><surname>Kallel</surname><given-names>S.</given-names></name>
<name><surname>Jmaiel</surname><given-names>M.</given-names></name>
</person-group><article-title>A blockchain-based self-sovereign identity approach for inter-organizational business processes</article-title><source>Proceedings of the 2022 17th Conference on Computer Science and Intelligence Systems (FedCSIS)</source><conf-loc>Sofia, Bulgaria</conf-loc><conf-date>4&#x02013;7 September 2022</conf-date><fpage>685</fpage><lpage>694</lpage></element-citation></ref><ref id="B29-sensors-24-08136"><label>29.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Cocco</surname><given-names>L.</given-names></name>
<name><surname>Tonelli</surname><given-names>R.</given-names></name>
<name><surname>Marchesi</surname><given-names>M.</given-names></name>
</person-group><article-title>A system proposal for information management in building sector based on BIM, SSI, IoT and blockchain</article-title><source>Future Internet</source><year>2022</year><volume>14</volume><elocation-id>140</elocation-id><pub-id pub-id-type="doi">10.3390/fi14050140</pub-id></element-citation></ref><ref id="B30-sensors-24-08136"><label>30.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Stokkink</surname><given-names>Q.</given-names></name>
<name><surname>Ishmaev</surname><given-names>G.</given-names></name>
<name><surname>Epema</surname><given-names>D.</given-names></name>
<name><surname>Pouwelse</surname><given-names>J.</given-names></name>
</person-group><article-title>A Truly Self-Sovereign Identity System</article-title><source>Proceedings of the 2021 IEEE 46th Conference on Local Computer Networks (LCN)</source><conf-loc>Edmonton, AB, Canada</conf-loc><conf-date>4&#x02013;7 October 2021</conf-date></element-citation></ref><ref id="B31-sensors-24-08136"><label>31.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Samir</surname><given-names>E.</given-names></name>
<name><surname>Wu</surname><given-names>H.</given-names></name>
<name><surname>Azab</surname><given-names>M.</given-names></name>
<name><surname>Xin</surname><given-names>C.S.</given-names></name>
<name><surname>Zhang</surname><given-names>Q.</given-names></name>
</person-group><article-title>DT-SSIM: A Decentralized Trustworthy Self-Sovereign Identity Management Framework</article-title><source>IEEE Internet Things J.</source><year>2022</year><volume>9</volume><fpage>7972</fpage><lpage>7988</lpage><pub-id pub-id-type="doi">10.1109/JIOT.2021.3112537</pub-id></element-citation></ref><ref id="B32-sensors-24-08136"><label>32.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Fathalla</surname><given-names>E.S.</given-names></name>
<name><surname>Azab</surname><given-names>M.</given-names></name>
<name><surname>Xin</surname><given-names>C.</given-names></name>
<name><surname>Wu</surname><given-names>H.</given-names></name>
</person-group><article-title>PT-SSIM: A proactive, trustworthy self-sovereign identity management system</article-title><source>IEEE Internet Things J.</source><year>2023</year><volume>10</volume><fpage>17155</fpage><lpage>17169</lpage><pub-id pub-id-type="doi">10.1109/JIOT.2023.3273988</pub-id></element-citation></ref><ref id="B33-sensors-24-08136"><label>33.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Braun</surname><given-names>C.H.J.</given-names></name>
<name><surname>Papanchev</surname><given-names>V.</given-names></name>
<name><surname>K&#x000e4;fer</surname><given-names>T.</given-names></name>
</person-group><article-title>SISSI: An architecture for semantic interoperable self-sovereign identity-based access control on the web</article-title><source>Proceedings of the ACM Web Conference 2023</source><conf-loc>Austin, TX, USA</conf-loc><conf-date>30 April 2023&#x02013;4 May 2023</conf-date><fpage>3011</fpage><lpage>3021</lpage></element-citation></ref><ref id="B34-sensors-24-08136"><label>34.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Farao</surname><given-names>A.</given-names></name>
<name><surname>Paparis</surname><given-names>G.</given-names></name>
<name><surname>Panda</surname><given-names>S.</given-names></name>
<name><surname>Panaousis</surname><given-names>E.</given-names></name>
<name><surname>Zarras</surname><given-names>A.</given-names></name>
<name><surname>Xenakis</surname><given-names>C.</given-names></name>
</person-group><article-title>INCHAIN: A cyber insurance architecture with smart contracts and self-sovereign identity on top of blockchain</article-title><source>Int. J. Inf. Secur.</source><year>2024</year><volume>23</volume><fpage>347</fpage><lpage>371</lpage><pub-id pub-id-type="doi">10.1007/s10207-023-00741-8</pub-id></element-citation></ref><ref id="B35-sensors-24-08136"><label>35.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Gao</surname><given-names>L.</given-names></name>
<name><surname>Yu</surname><given-names>J.</given-names></name>
<name><surname>Zhang</surname><given-names>J.</given-names></name>
<name><surname>Tang</surname><given-names>Y.</given-names></name>
<name><surname>Wen</surname><given-names>Q.</given-names></name>
</person-group><source>AASSI: A Self-Sovereign Identity Protocol with Anonymity and Accountability</source><publisher-name>IEEE Access</publisher-name><publisher-loc>Piscataway, NJ, USA</publisher-loc><year>2024</year></element-citation></ref><ref id="B36-sensors-24-08136"><label>36.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Krawczyk</surname><given-names>H.</given-names></name>
<name><surname>Rabin</surname><given-names>T.</given-names></name>
</person-group><source>Chameleon Hashing and Signatures</source><publisher-name>Cryptology ePrint Archive</publisher-name><publisher-loc>Carson, NV, USA</publisher-loc><year>1998</year></element-citation></ref><ref id="B37-sensors-24-08136"><label>37.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Chen</surname><given-names>X.</given-names></name>
<name><surname>Zhang</surname><given-names>F.</given-names></name>
<name><surname>Kim</surname><given-names>K.</given-names></name>
</person-group><article-title>Chameleon hashing without key exposure</article-title><source>International Conference on Information Security</source><publisher-name>Springer</publisher-name><publisher-loc>Berlin/Heidelberg, Germany</publisher-loc><year>2004</year><fpage>87</fpage><lpage>98</lpage></element-citation></ref><ref id="B38-sensors-24-08136"><label>38.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Chen</surname><given-names>X.</given-names></name>
<name><surname>Zhang</surname><given-names>F.</given-names></name>
<name><surname>Susilo</surname><given-names>W.</given-names></name>
<name><surname>Tian</surname><given-names>H.</given-names></name>
<name><surname>Li</surname><given-names>J.</given-names></name>
<name><surname>Kim</surname><given-names>K.</given-names></name>
</person-group><article-title>Identity-based chameleon hashing and signatures without key exposure</article-title><source>Inf. Sci.</source><year>2014</year><volume>265</volume><fpage>198</fpage><lpage>210</lpage><pub-id pub-id-type="doi">10.1016/j.ins.2013.12.020</pub-id></element-citation></ref><ref id="B39-sensors-24-08136"><label>39.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Zhang</surname><given-names>Q.</given-names></name>
<name><surname>Zhou</surname><given-names>X.</given-names></name>
<name><surname>Zhong</surname><given-names>H.</given-names></name>
<name><surname>Cui</surname><given-names>J.</given-names></name>
<name><surname>Li</surname><given-names>J.</given-names></name>
<name><surname>He</surname><given-names>D.</given-names></name>
</person-group><article-title>Device-Side Lightweight Mutual Authentication and Key Agreement Scheme based on Chameleon Hashing for Industrial Internet of Things</article-title><source>IEEE Transactions on Information Forensics and Security</source><publisher-name>IEEE</publisher-name><publisher-loc>Piscataway, NJ, USA</publisher-loc><year>2024</year></element-citation></ref><ref id="B40-sensors-24-08136"><label>40.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Androulaki</surname><given-names>E.</given-names></name>
<name><surname>Barger</surname><given-names>A.</given-names></name>
<name><surname>Bortnikov</surname><given-names>V.</given-names></name>
<name><surname>Cachin</surname><given-names>C.</given-names></name>
<name><surname>Christidis</surname><given-names>K.</given-names></name>
<name><surname>De Caro</surname><given-names>A.</given-names></name>
<name><surname>Yellick</surname><given-names>J.</given-names></name>
</person-group><article-title>Hyperledger fabric: A distributed operating system for permissioned blockchains</article-title><source>Proceedings of the Thirteenth EuroSys Conference</source><conf-loc>Porto, Portugal</conf-loc><conf-date>23&#x02013;26 April 2018</conf-date><fpage>1</fpage><lpage>15</lpage></element-citation></ref><ref id="B41-sensors-24-08136"><label>41.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Lin</surname><given-names>I.C.</given-names></name>
<name><surname>Kuo</surname><given-names>C.W.</given-names></name>
</person-group><article-title>Trustworthy Blockchain Oracles for Smart Contracts</article-title><source>2021 International Conference on Security and Information Technologies with AI, Internet Computing and Big-data Applications</source><publisher-name>Springer International Publishing</publisher-name><publisher-loc>Cham, Switzerland</publisher-loc><year>2022</year><fpage>379</fpage><lpage>389</lpage></element-citation></ref><ref id="B42-sensors-24-08136"><label>42.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Tian</surname><given-names>Y.</given-names></name>
<name><surname>Miyaji</surname><given-names>A.</given-names></name>
<name><surname>Matsubara</surname><given-names>K.</given-names></name>
<name><surname>Cui</surname><given-names>H.</given-names></name>
<name><surname>Li</surname><given-names>N.</given-names></name>
</person-group><article-title>Revocable policy-based chameleon hash for blockchain rewriting</article-title><source>Comput. J.</source><year>2023</year><volume>66</volume><fpage>2365</fpage><lpage>2378</lpage><pub-id pub-id-type="doi">10.1093/comjnl/bxac083</pub-id></element-citation></ref><ref id="B43-sensors-24-08136"><label>43.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Khalili</surname><given-names>M.</given-names></name>
<name><surname>Dakhilalian</surname><given-names>M.</given-names></name>
<name><surname>Susilo</surname><given-names>W.</given-names></name>
</person-group><article-title>Efficient chameleon hash functions in the enhanced collision resistant model</article-title><source>Inf. Sci.</source><year>2020</year><volume>510</volume><fpage>155</fpage><lpage>164</lpage><pub-id pub-id-type="doi">10.1016/j.ins.2019.09.001</pub-id></element-citation></ref><ref id="B44-sensors-24-08136"><label>44.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Wang</surname><given-names>Z.</given-names></name>
<name><surname>Lan</surname><given-names>L.</given-names></name>
<name><surname>Yiu</surname><given-names>S.</given-names></name>
</person-group><article-title>Chameleon Hash Based Efficiently Updatable Oblivious Key Management</article-title><source>IEEE Transactions on Services Computing</source><publisher-name>IEEE</publisher-name><publisher-loc>Piscataway, NJ, USA</publisher-loc><year>2023</year></element-citation></ref><ref id="B45-sensors-24-08136"><label>45.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Goldreich</surname><given-names>O.</given-names></name>
<name><surname>Oren</surname><given-names>Y.</given-names></name>
</person-group><article-title>Definitions and properties of zero-knowledge proof systems</article-title><source>J. Cryptol.</source><year>1994</year><volume>7</volume><fpage>1</fpage><lpage>32</lpage><pub-id pub-id-type="doi">10.1007/BF00195207</pub-id></element-citation></ref><ref id="B46-sensors-24-08136"><label>46.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Feige</surname><given-names>U.</given-names></name>
<name><surname>Fiat</surname><given-names>A.</given-names></name>
<name><surname>Shamir</surname><given-names>A.</given-names></name>
</person-group><article-title>Zero-knowledge proofs of identity</article-title><source>J. Cryptol.</source><year>1988</year><volume>1</volume><fpage>77</fpage><lpage>94</lpage><pub-id pub-id-type="doi">10.1007/BF02351717</pub-id></element-citation></ref><ref id="B47-sensors-24-08136"><label>47.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Kurmi</surname><given-names>J.</given-names></name>
<name><surname>Sodhi</surname><given-names>A.</given-names></name>
</person-group><article-title>A Survey of Zero-Knowledge Proof for Authentication</article-title><source>Int. J. Adv. Res. Comput. Sci. Softw. Eng.</source><year>2015</year><volume>5</volume><fpage>494</fpage><lpage>501</lpage></element-citation></ref><ref id="B48-sensors-24-08136"><label>48.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Zhou</surname><given-names>L.</given-names></name>
<name><surname>Diro</surname><given-names>A.</given-names></name>
<name><surname>Saini</surname><given-names>A.</given-names></name>
<name><surname>Kaisar</surname><given-names>S.</given-names></name>
<name><surname>Hiep</surname><given-names>P.C.</given-names></name>
</person-group><article-title>Leveraging zero knowledge proofs for blockchain-based identity sharing: A survey of advancements, challenges and opportunities</article-title><source>J. Inf. Secur. Appl.</source><year>2024</year><volume>80</volume><fpage>103678</fpage><pub-id pub-id-type="doi">10.1016/j.jisa.2023.103678</pub-id></element-citation></ref><ref id="B49-sensors-24-08136"><label>49.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Sun</surname><given-names>X.</given-names></name>
<name><surname>Yu</surname><given-names>F.R.</given-names></name>
<name><surname>Zhang</surname><given-names>P.</given-names></name>
<name><surname>Sun</surname><given-names>Z.</given-names></name>
<name><surname>Xie</surname><given-names>W.</given-names></name>
<name><surname>Peng</surname><given-names>X.</given-names></name>
</person-group><article-title>A survey on zero-knowledge proof in blockchain</article-title><source>IEEE Netw.</source><year>2021</year><volume>35</volume><fpage>198</fpage><lpage>205</lpage><pub-id pub-id-type="doi">10.1109/MNET.011.2000473</pub-id></element-citation></ref><ref id="B50-sensors-24-08136"><label>50.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Sharma</surname><given-names>A.K.</given-names></name>
<name><surname>Mittal</surname><given-names>S.K.</given-names></name>
</person-group><article-title>Cryptography &#x00026; network security hash function applications, attacks and advances: A review</article-title><source>Proceedings of the 2019 Third International Conference on Inventive Systems and Control (ICISC)</source><conf-loc>Coimbatore, India</conf-loc><conf-date>10&#x02013;11 January 2019</conf-date><fpage>177</fpage><lpage>188</lpage></element-citation></ref><ref id="B51-sensors-24-08136"><label>51.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Hasan</surname><given-names>H.A.</given-names></name>
<name><surname>Al-Layla</surname><given-names>H.F.</given-names></name>
<name><surname>Ibraheem</surname><given-names>F.N.</given-names></name>
</person-group><article-title>A review of hash function types and their applications</article-title><source>Wasit J. Comput. Math. Sci.</source><year>2022</year><volume>1</volume><fpage>75</fpage><lpage>88</lpage><pub-id pub-id-type="doi">10.31185/wjcm.52</pub-id></element-citation></ref><ref id="B52-sensors-24-08136"><label>52.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Mittelbach</surname><given-names>A.</given-names></name>
<name><surname>Fischlin</surname><given-names>M.</given-names></name>
</person-group><source>The Theory of Hash Functions and Random Oracles: An Approach to Modern Cryptography</source><publisher-name>Springer Nature</publisher-name><publisher-loc>Cham, Switzerland</publisher-loc><year>2021</year></element-citation></ref><ref id="B53-sensors-24-08136"><label>53.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Scheffler</surname><given-names>S.</given-names></name>
<name><surname>Kulshrestha</surname><given-names>A.</given-names></name>
<name><surname>Mayer</surname><given-names>J.</given-names></name>
</person-group><article-title>Public verification for private hash matching</article-title><source>Proceedings of the 2023 IEEE Symposium on Security and Privacy (SP)</source><conf-loc>San Francisco, CA, USA</conf-loc><conf-date>21&#x02013;25 May 2023</conf-date><fpage>253</fpage><lpage>273</lpage></element-citation></ref><ref id="B54-sensors-24-08136"><label>54.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Mishra</surname><given-names>N.</given-names></name>
<name><surname>Islam</surname><given-names>S.H.</given-names></name>
<name><surname>Zeadally</surname><given-names>S.</given-names></name>
</person-group><article-title>A comprehensive review on collision-resistant hash functions on lattices</article-title><source>J. Inf. Secur. Appl.</source><year>2021</year><volume>58</volume><fpage>102782</fpage><pub-id pub-id-type="doi">10.1016/j.jisa.2021.102782</pub-id></element-citation></ref><ref id="B55-sensors-24-08136"><label>55.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Cremers</surname><given-names>C.J.F.</given-names></name>
</person-group><article-title>Scyther: Semantics and Verification of Security Protocols</article-title><source>Ph.D. Thesis</source><publisher-name>Technische Universiteit Eindhoven</publisher-name><publisher-loc>Eindhoven, The Netherlands</publisher-loc><year>2006</year></element-citation></ref><ref id="B56-sensors-24-08136"><label>56.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Cremers</surname><given-names>C.J.</given-names></name>
</person-group><article-title>The scyther tool: Verification, falsification, and analysis of security protocols: Tool paper</article-title><source>International Conference on Computer Aided Verification</source><publisher-name>Springer</publisher-name><publisher-loc>Berlin/Heidelberg, Germany</publisher-loc><year>2008</year><fpage>414</fpage><lpage>418</lpage></element-citation></ref><ref id="B57-sensors-24-08136"><label>57.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Cremers</surname><given-names>C.J.F.</given-names></name>
</person-group><article-title>Scyther: Unbounded verification of security protocols</article-title><source>Technol. Rep./ETH Zur. Dep. Comput. Sci.</source><year>2011</year><volume>572</volume><pub-id pub-id-type="doi">10.3929/ethz-a-006809966</pub-id></element-citation></ref><ref id="B58-sensors-24-08136"><label>58.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Worrasangasilpa</surname><given-names>K.</given-names></name>
</person-group><source>Formally Verifying the Security Properties of a Proof-of-Stake Blockchain Protocol</source><publisher-name>Apollo&#x02014;University of Cambridge Repository</publisher-name><publisher-loc>Cambridge, UK</publisher-loc><year>2021</year><pub-id pub-id-type="doi">10.17863/CAM.107393</pub-id></element-citation></ref></ref-list></back><floats-group><fig position="float" id="sensors-24-08136-f001"><label>Figure 1</label><caption><p>Interaction steps of digital identity registration stage.</p></caption><graphic xlink:href="sensors-24-08136-g001" position="float"/></fig><fig position="float" id="sensors-24-08136-f002"><label>Figure 2</label><caption><p>User&#x02019;s association with their digital identity (idealized view).</p></caption><graphic xlink:href="sensors-24-08136-g002" position="float"/></fig><fig position="float" id="sensors-24-08136-f003"><label>Figure 3</label><caption><p>The digital identity usage in the sharing-UID-only scenario.</p></caption><graphic xlink:href="sensors-24-08136-g003" position="float"/></fig><fig position="float" id="sensors-24-08136-f004"><label>Figure 4</label><caption><p>The digital identity usage in sharing UID and specific personal identity category information scenario.</p></caption><graphic xlink:href="sensors-24-08136-g004" position="float"/></fig><fig position="float" id="sensors-24-08136-f005"><label>Figure 5</label><caption><p>Examples of the advantages of data sharing using zero-knowledge proof technology.</p></caption><graphic xlink:href="sensors-24-08136-g005" position="float"/></fig><fig position="float" id="sensors-24-08136-f006"><label>Figure 6</label><caption><p>The digital identity update is requesting to add a specific personal identity category information scenario.</p></caption><graphic xlink:href="sensors-24-08136-g006" position="float"/></fig><fig position="float" id="sensors-24-08136-f007"><label>Figure 7</label><caption><p>Example of practical application of the peer review mechanism.</p></caption><graphic xlink:href="sensors-24-08136-g007" position="float"/></fig><fig position="float" id="sensors-24-08136-f008"><label>Figure 8</label><caption><p>Scenario of updating the validation count for a specific category of personal information by the user in the digital identity update stage.</p></caption><graphic xlink:href="sensors-24-08136-g008" position="float"/></fig><fig position="float" id="sensors-24-08136-f009"><label>Figure 9</label><caption><p>Digital identity deletion stage.</p></caption><graphic xlink:href="sensors-24-08136-g009" position="float"/></fig><fig position="float" id="sensors-24-08136-f010"><label>Figure 10</label><caption><p>Comparison of innovations with existing work. &#x0221a; represents full compliance, &#x000d7; represents non-compliance, and P represents partial compliance.</p></caption><graphic xlink:href="sensors-24-08136-g010" position="float"/></fig><fig position="float" id="sensors-24-08136-f011"><label>Figure 11</label><caption><p>(<bold>a</bold>) Protocol security verification results for digital identity usage stage, analyzed using Scyther; (<bold>b</bold>) protocol security verification results for digital identity update stage, analyzed using Scyther.</p></caption><graphic xlink:href="sensors-24-08136-g011" position="float"/></fig><fig position="float" id="sensors-24-08136-f012"><label>Figure 12</label><caption><p>(<bold>a</bold>) Steps with cryptographic operations and their execution time in scenario 1 of the digital identity usage stage; (<bold>b</bold>) steps with cryptographic operations and their execution time in scenario 2 of the digital identity usage stage; (<bold>c</bold>) steps with cryptographic operations and their execution time in scenario 1 of the digital identity update stage. All time units in this Figure are in seconds.</p></caption><graphic xlink:href="sensors-24-08136-g012" position="float"/></fig><table-wrap position="float" id="sensors-24-08136-t001"><object-id pub-id-type="pii">sensors-24-08136-t001_Table 1</object-id><label>Table 1</label><caption><p>Names and descriptions of the entities.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Entity Name</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Description</th></tr></thead><tbody><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">User</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Users are physical entities who register and use digital identities.</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Issuing Center (IC)</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The Issuing Center (IC) is an entity in the digital identity registration stage that is the only entity capable of creating and updating digital identity information. In our research, the Issuing Center (IC) acts as a trusted entity, like a government institution, responsible for verifying users&#x02019; physical identities and creating their digital identities. The IC&#x02019;s digital signature endorses the identity information created. However, the IC does not control any blockchain or the information on the blockchain.</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Service Provider (SP)</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The Service Provider (SP) is an entity that interacts with users for digital identity transactions. It verifies the user&#x02019;s digital identity and provides specific services to the user, during which it requires user data.</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Regulatory Authority (RA)</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The Regulatory Authority (RA) regulates digital identity registration and usage, ensuring compliance and security of the digital identity system.</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-24-08136-t002"><object-id pub-id-type="pii">sensors-24-08136-t002_Table 2</object-id><label>Table 2</label><caption><p>Names and descriptions of the blockchains.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Blockchain Name</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Description</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">Digital Identity Chain</td><td align="left" valign="middle" rowspan="1" colspan="1">The Digital Identity Chain records user digital identity information. In the digital identity registration stage, the user&#x02019;s digital identity information is stored on the Digital Identity Chain.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">User Behavior Chain</td><td align="left" valign="middle" rowspan="1" colspan="1">The User Behavior Chain records user behavior during the digital identity usage stage.</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Regulatory Authority Behavior Chain</td><td align="left" valign="middle" rowspan="1" colspan="1">The Regulatory Authority Behavior Chain records the actions of the Regulatory Authority (RA) during digital identity registration and usage processes.</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Service Provider Behavior Chain</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The Service Provider Behavior Chain records SP behavior during the digital identity usage and update stage.</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-24-08136-t003"><object-id pub-id-type="pii">sensors-24-08136-t003_Table 3</object-id><label>Table 3</label><caption><p>Names and descriptions of the symbols used in <xref rid="sec3-sensors-24-08136" ref-type="sec">Section 3</xref>.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Symbol</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Description</th></tr></thead><tbody><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">PubX</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The public key of a particular entity. For example, PubU represents the user&#x02019;s public key.</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">PriX</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The private key of a particular entity. For example, PubU represents the user&#x02019;s private key.</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">UID</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Stands for User Digital Identity ID. An IC issues it and is unique.</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">SPID</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Stands for Service Provider ID. It is assigned by an IC when the SP is established and is unique.</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">PI_x</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">PI_x represents the detailed content of a specific type of user&#x02019;s personal information. For example, PI_id can represent the user&#x02019;s identity ID details, and PI_phone can represent the user&#x02019;s phone number information.</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">PIN_x</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">PIN_x denotes the name of a specific type of personal information, such as &#x02019;Identity ID&#x02019; for PIN_id and &#x02019;Phone Number&#x02019; for PIN_phone. It categorizes on-chain stored personal information, which remains non-plaintext in this study. Service providers refer to PIN_x when requesting access.</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">PIV_x</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">PIV_x represents Personal Information Verification data, which is the hashed personal information ultimately stored on the blockchain. This ensures privacy while supporting zero-knowledge proof sharing and verification. For example, PIV_id represents the verifiable identity ID data. Each PIV_x is a specially processed data set that allows for m instances of zero-knowledge proof verification.</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">m</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The number of hashes used to create PIV_x represents the number of zero-knowledge proof verifications available on the blockchain.</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">c</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">c is the counter used by the smart contract&#x02019;s Fetch() function, which sets up a separate counter for each type of PIV_x for every user, with each counter initialized to m. The value of c can be stored on-chain and modified using a chameleon hash [<xref rid="B36-sensors-24-08136" ref-type="bibr">36</xref>,<xref rid="B37-sensors-24-08136" ref-type="bibr">37</xref>,<xref rid="B38-sensors-24-08136" ref-type="bibr">38</xref>,<xref rid="B39-sensors-24-08136" ref-type="bibr">39</xref>] or managed as an internal counter within the smart contract&#x02019;s storage.</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Hashx</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The hash operation, where x represents the number of times the hash is applied.</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Nonce</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The random value hashed with PI_x to create PIV_x is given to the user for future zero-knowledge proof verifications and to prevent replay attacks on the blockchain.</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Ts</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Timestamp</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Success/Fail</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Flag for successful or failed operation</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Reason</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The rationale submitted by the service provider in the peer review mechanism for requesting data serves as the basis for the peer review process.</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">LIST</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The collection of Service Provider IDs in the peer review process who approve the current data request.</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-24-08136-t004"><object-id pub-id-type="pii">sensors-24-08136-t004_Table 4</object-id><label>Table 4</label><caption><p>Names and descriptions of the smart contract functions used in the digital identity registration stage.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Smart Contract Function Name</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Description</th></tr></thead><tbody><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Create ()<break/>Input: Accepts one parameter pair consisting of the UID and PubU, both signed using the Issuing Center&#x02019;s (IC) private key.<break/>Output: Return True on success, False on failure.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Create a new user digital identity block and write UID and PriIC (UID, PubU) to the block.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Add()<break/>Input: Accepts four parameters: the UID and timestamp (Ts), along with the combined hash result for PubSC (PIV_x), PIN_x, and m, all signed with the Issuing Center&#x02019;s (IC) private key; the PIV_x set is encrypted with the public key of the smart contract function; the digital identity name (PIN_x); and the number of verifiable attempts (m)&#x0201d;.<break/>Output: Return True on success, False on failure.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Upload the newly created PIV_x to the digital identity chain.</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-24-08136-t005"><object-id pub-id-type="pii">sensors-24-08136-t005_Table 5</object-id><label>Table 5</label><caption><p>Names and descriptions of the smart contract functions used in the digital identity usage stage.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Smart Contract Function Name</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Description</th></tr></thead><tbody><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">GetPubKey()<break/>Input: Accepts one parameter, which is UID.<break/>Output: Return PubU on success, Null on failure</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Find the corresponding PubU on the chain based on the UID and return it as the return value.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Fetch()<break/>Input: Accepts three parameters, namely UID, SPID, and personal information name PIN_x.<break/>Output: If the input SPID is the same as the currently locked SPID of the GetC() function, the value of counter c is determined. If the counter c is greater than 1, PriIC(PriU(Hashc(PI_x&#x000b7;Nonce))) is returned. A null value is returned if c does not exist; if c equals 1, a data update prompt string is returned.<break/>Service is denied if the input SPID is different from the currently locked SPID of the GetC() function or is not locked.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">This function and the GetC() function build a synchronization semaphore with each other. If the GetC() function is not called by the user in advance and locks the specific SPID, the current function will not work. To ensure the consistency of the c value each time data are shared, the user should authorize this sharing. When the SPID is acknowledged, this function uses the UID and PIN_x to locate the block containing the corresponding PIV_x data. The smart contract chain code includes counter c, private key PriSC, and corresponding decryptor. Counter c is initially set to the current m value of PIV_x. Each time the smart contract decrypts PubSC(PriIC(PriU(Hashc(PI_x&#x000b7;Nonce)))) and returns PriIC(PriU(Hashc(PI_x&#x000b7;Nonce))), the counter c decreases by 1. When the counter c decreases to 1 for the current PIV_x, it indicates that all the hash data of the current PIV_x have been used and need to be updated.<break/>The value of c can be stored on-chain and modified through decrementing using a chameleon hash [<xref rid="B36-sensors-24-08136" ref-type="bibr">36</xref>,<xref rid="B37-sensors-24-08136" ref-type="bibr">37</xref>,<xref rid="B38-sensors-24-08136" ref-type="bibr">38</xref>,<xref rid="B39-sensors-24-08136" ref-type="bibr">39</xref>], or it can be managed as an internal counter within the smart contract&#x02019;s own storage.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">GetC()<break/>Input: Accepts two parameters, which are the UID and the SPID, PIN_x, Ts combination signed using the private key PriU corresponding to the UID.<break/>Output: Returns the current remaining number of verifiable times (c) for the user&#x02019;s digital identity PIN_x. At the same time, the current c value is locked, and other service providers other than the input SPID are prohibited from initiating data-sharing requests during this period until the Fetch() function confirms that the current sharing has been completed. Negative constant if PIN_x has not been registered.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">GetC() confirms the current remaining number of verification times c of the user&#x02019;s digital identity PIN_x based on the UID and reserves the current number of verification times c for the SPID in the user&#x02019;s signature. During this period, only the current SPID can initiate a sharing request for PIN_x until Fetch() function is called and confirms that the sharing is completed.</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-24-08136-t006"><object-id pub-id-type="pii">sensors-24-08136-t006_Table 6</object-id><label>Table 6</label><caption><p>Names and descriptions of the smart contract functions used in digital identity update stage.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Smart Contract Function Name</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Description</th></tr></thead><tbody><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Add()</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">As introduced in <xref rid="sensors-24-08136-t004" ref-type="table">Table 4</xref> of the digital identity registration stage</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Request()<break/>Input: Accepts one parameter in the format <break/>PriSP(UID, Reason, PIN_x, Ts).<break/>Output: Returns True on success, False on failure.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">When a service provider needs to request a user to add a new category of personal information, the Request() function is initiated on the service provider behavior chain using the specified input format.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Vote()<break/>Input: Accepts one parameter in the format PriSPn(PubSP(SPnID, UID, Ts)).<break/>Output: Returns True on success, False on failure.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">When the smart contract function Request() is called, the Vote() smart contract function will automatically initiate a peer review process involving other peer service providers (SP1 to SPn) of the service provider that called the Request() function. For those service providers that approve the application, the Vote() function will be called using the specified input format to cast their votes.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">SamplingVerification()<break/>Input: Accepts 1 parameter in the format PriSRA(PubSC(UID, PIN_x, Reason, LIST, SPID, Ts))<break/>Output: A collection of verification results returned by the service provider being randomly checked.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">This function is used by the regulatory agency (RA) to conduct random checks on the service providers who voted in favor of the application to verify whether they actually participated in the vote and approved the application. This function will randomly select some service providers from the LIST that approve the application and ask these service providers to confirm their actual participation in this vote by sending data in the following format: <break/>PubSPn(UID, PIN_x, Reason, SPID, Ts)</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-24-08136-t007"><object-id pub-id-type="pii">sensors-24-08136-t007_Table 7</object-id><label>Table 7</label><caption><p>Names and descriptions of the smart contract functions used in digital identity deletion stage.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Smart Contract Function Name</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Description</th></tr></thead><tbody><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Delete()<break/>Input: Accepts two parameters: the UID and the set of personal information name PIN_x and timestamp signed by the corresponding user&#x02019;s private key.<break/>Output: Returns True on success and False on failure.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">This function confirms PubU based on UID and verifies the private key signature. If the verification passes and the timestamp in the signature is within the valid range, the counter c corresponding to the name PIN_x under the UID is set to 0.</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-24-08136-t008"><object-id pub-id-type="pii">sensors-24-08136-t008_Table 8</object-id><label>Table 8</label><caption><p>Stages involving cryptographic operations and the types and counts of operations.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Stage and Scenario </th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Steps</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Number of Cryptographic Calculations</th></tr></thead><tbody><tr><td rowspan="2" align="center" valign="middle" colspan="1">Scenario 1 of the <break/>Digital Identity Usage Stage</td><td align="center" valign="middle" rowspan="1" colspan="1">Step 1</td><td align="center" valign="middle" rowspan="1" colspan="1">1 E(2 Params) + 1 DS(1 Param)</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Step 4</td><td align="center" valign="middle" rowspan="1" colspan="1">1 E(2 Params) + 1 DS(4 Params)</td></tr><tr><td rowspan="4" align="center" valign="middle" colspan="1">Scenario 2 of the <break/>Digital Identity Usage Stage</td><td align="center" valign="middle" rowspan="1" colspan="1">Step 1</td><td align="center" valign="middle" rowspan="1" colspan="1">1 E(2 Params) + 1 DS(1 Param)</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Step 3</td><td align="center" valign="middle" rowspan="1" colspan="1">1 E(3 Params) + 1 DS(1 Param)</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Step 5</td><td align="center" valign="middle" rowspan="1" colspan="1">1 E(3 Params) + 1 DS(2 Param)</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Step 7</td><td align="center" valign="middle" rowspan="1" colspan="1">1 E(2 Params) + 1 DS(4 Params)</td></tr><tr><td rowspan="8" align="center" valign="middle" style="border-bottom:solid thin" colspan="1">Scenario 1 of the<break/>Digital Identity Update Stage</td><td align="center" valign="middle" rowspan="1" colspan="1">Step 1</td><td align="center" valign="middle" rowspan="1" colspan="1">1 DS(4 Params)</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Step 2</td><td align="center" valign="middle" rowspan="1" colspan="1">1 E(1 Param) + 1 DS(3 Params)</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Step 3</td><td align="center" valign="middle" rowspan="1" colspan="1">1 E(5 Params) + 1 DS(1 Param)</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Step 4</td><td align="center" valign="middle" rowspan="1" colspan="1">1 E(6 Params) + 1 DS(1 Param)</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Step 6</td><td align="center" valign="middle" rowspan="1" colspan="1">1 E(6 Params) + 1 DS(1 Param)</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Step 7</td><td align="center" valign="middle" rowspan="1" colspan="1">1 E(6 Params) + 1 DS(1 Param)</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">Step 8</td><td align="center" valign="middle" rowspan="1" colspan="1">1 DS(5 Params)</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Step 10</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1 E(6 Params) + 1 DS(1 Param)</td></tr></tbody></table><table-wrap-foot><fn><p>E represents encryption operations, DS represents digital signature operations, and Param(s) represents the number of parameters operated on.</p></fn></table-wrap-foot></table-wrap></floats-group></article>