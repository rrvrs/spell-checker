<!DOCTYPE article
PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with MathML3 v1.3 20210610//EN" "JATS-archivearticle1-3-mathml3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.3" xml:lang="en" article-type="research-article"><?properties open_access?><processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats"><restricted-by>pmc</restricted-by></processing-meta><front><journal-meta><journal-id journal-id-type="nlm-ta">PLoS One</journal-id><journal-id journal-id-type="iso-abbrev">PLoS One</journal-id><journal-id journal-id-type="publisher-id">plos</journal-id><journal-title-group><journal-title>PLOS One</journal-title></journal-title-group><issn pub-type="epub">1932-6203</issn><publisher><publisher-name>Public Library of Science</publisher-name><publisher-loc>San Francisco, CA USA</publisher-loc></publisher></journal-meta>
<article-meta><article-id pub-id-type="pmid">40408319</article-id><article-id pub-id-type="pmc">PMC12101679</article-id><article-id pub-id-type="doi">10.1371/journal.pone.0317752</article-id><article-id pub-id-type="publisher-id">PONE-D-24-17662</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Computer and Information Sciences</subject><subj-group><subject>Systems Science</subject><subj-group><subject>Nonlinear Systems</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical Sciences</subject><subj-group><subject>Mathematics</subject><subj-group><subject>Systems Science</subject><subj-group><subject>Nonlinear Systems</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical Sciences</subject><subj-group><subject>Mathematics</subject><subj-group><subject>Differential Equations</subject><subj-group><subject>Partial Differential Equations</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and Analysis Methods</subject><subj-group><subject>Simulation and Modeling</subject></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical Sciences</subject><subj-group><subject>Physics</subject><subj-group><subject>Classical Mechanics</subject><subj-group><subject>Convection</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical Sciences</subject><subj-group><subject>Mathematics</subject><subj-group><subject>Applied Mathematics</subject><subj-group><subject>Algorithms</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and Analysis Methods</subject><subj-group><subject>Simulation and Modeling</subject><subj-group><subject>Algorithms</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical Sciences</subject><subj-group><subject>Mathematics</subject><subj-group><subject>Geometry</subject><subj-group><subject>Parabolas</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical Sciences</subject><subj-group><subject>Mathematics</subject><subj-group><subject>Geometry</subject><subj-group><subject>Tangents</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Social Sciences</subject><subj-group><subject>Linguistics</subject><subj-group><subject>Grammar</subject><subj-group><subject>Syntax</subject></subj-group></subj-group></subj-group></subj-group></article-categories><title-group><article-title>Towards efficient solutions: A novel approach to quadratic nonlinearity in boundary value problems</article-title><alt-title alt-title-type="running-head">Towards efficient solutions of BVPs</alt-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Kouser</surname><given-names>Salima</given-names></name><role content-type="http://credit.niso.org/contributor-roles/methodology/">Methodology</role><role content-type="http://credit.niso.org/contributor-roles/writing-original-draft/">Writing &#x02013; original draft</role><xref rid="aff001" ref-type="aff">
<sup>1</sup>
</xref><xref rid="fn001" ref-type="author-notes">
<sup>&#x02021;</sup>
</xref></contrib><contrib contrib-type="author" corresp="yes"><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0002-7656-0456</contrib-id><name><surname>Ur Rehman</surname><given-names>Shafiq</given-names></name><role content-type="http://credit.niso.org/contributor-roles/conceptualization/">Conceptualization</role><role content-type="http://credit.niso.org/contributor-roles/supervision/">Supervision</role><xref rid="aff001" ref-type="aff">
<sup>1</sup>
</xref><xref rid="fn001" ref-type="author-notes">
<sup>&#x02021;</sup>
</xref><xref rid="cor001" ref-type="corresp">*</xref></contrib><contrib contrib-type="author"><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0002-1678-6584</contrib-id><name><surname>Elmasry</surname><given-names>Yasser</given-names></name><role content-type="http://credit.niso.org/contributor-roles/resources/">Resources</role><role content-type="http://credit.niso.org/contributor-roles/writing-review-editing/">Writing &#x02013; review &#x00026; editing</role><xref rid="aff002" ref-type="aff">
<sup>2</sup>
</xref><xref rid="fn001" ref-type="author-notes">
<sup>&#x02021;</sup>
</xref></contrib><contrib contrib-type="author"><name><surname>Azeem Khan</surname><given-names>Waqar</given-names></name><role content-type="http://credit.niso.org/contributor-roles/resources/">Resources</role><role content-type="http://credit.niso.org/contributor-roles/writing-review-editing/">Writing &#x02013; review &#x00026; editing</role><xref rid="aff003" ref-type="aff">
<sup>3</sup>
</xref><xref rid="fn001" ref-type="author-notes">
<sup>&#x02021;</sup>
</xref></contrib><contrib contrib-type="author"><name><surname>Ahmad</surname><given-names>Fayyaz</given-names></name><role content-type="http://credit.niso.org/contributor-roles/software/">Software</role><role content-type="http://credit.niso.org/contributor-roles/validation/">Validation</role><xref rid="aff004" ref-type="aff">
<sup>4</sup>
</xref><xref rid="fn001" ref-type="author-notes">
<sup>&#x02021;</sup>
</xref></contrib><contrib contrib-type="author"><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0001-6165-4479</contrib-id><name><surname>Khan</surname><given-names>Hamza</given-names></name><role content-type="http://credit.niso.org/contributor-roles/resources/">Resources</role><role content-type="http://credit.niso.org/contributor-roles/writing-review-editing/">Writing &#x02013; review &#x00026; editing</role><xref rid="aff004" ref-type="aff">
<sup>4</sup>
</xref><xref rid="fn001" ref-type="author-notes">
<sup>&#x02021;</sup>
</xref></contrib></contrib-group><aff id="aff001"><label>1</label>
<addr-line>Department of Mathematics, University of Engineering and Technology, Lahore, Pakistan</addr-line></aff><aff id="aff002"><label>2</label>
<addr-line>Department of Mathematics - College of Science - King Khalid University, Abha, Saudi Arabia</addr-line></aff><aff id="aff003"><label>3</label>
<addr-line>Department of Mathematics, Mohi-ud-Din Islamic University, Nerian Sharif, Azad Jammu and Kashmir, Pakistan</addr-line></aff><aff id="aff004"><label>4</label>
<addr-line>Department of Applied Sciences, National Textile University, Faisalabad, Pakistan</addr-line></aff><contrib-group><contrib contrib-type="editor"><name><surname>Omkar Lakshmi Jagan</surname><given-names>B.</given-names></name><role>Editor</role><xref rid="edit1" ref-type="aff"/></contrib></contrib-group><aff id="edit1">
<addr-line>Vignan&#x02019;s Institute of Information Technology, INDIA</addr-line>
</aff><author-notes><corresp id="cor001">* E-mail: <email>srehman@uet.edu.pk</email></corresp><fn fn-type="COI-statement" id="coi001"><p><bold>Competing Interests: </bold>The authors have declared that no competing interests exist.</p></fn><fn id="fn001"><p>&#x02021; SK and SUR contributed equally to conceptualization, analyzing and codding. YE contributed in developing methodology, discussion and research funding. WAK, FA, and HK contributed equally to develop the proofs, analysis and coding.</p></fn></author-notes><pub-date pub-type="epub"><day>23</day><month>5</month><year>2025</year></pub-date><pub-date pub-type="collection"><year>2025</year></pub-date><volume>20</volume><issue>5</issue><elocation-id>e0317752</elocation-id><history><date date-type="received"><day>3</day><month>5</month><year>2024</year></date><date date-type="accepted"><day>5</day><month>1</month><year>2025</year></date></history><permissions><copyright-statement>&#x000a9; 2025 Kouser et al</copyright-statement><copyright-year>2025</copyright-year><copyright-holder>Kouser et al</copyright-holder><license><ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions><self-uri content-type="pdf" xlink:href="pone.0317752.pdf"/><abstract><p>The Newton method is a classical method for solving systems of nonlinear equations and offers quadratic convergence. The order of convergence of the Newton method is optimal as it requires one evaluation for the system of nonlinear equations and the second for the Jacobian. Many boundary value problems in nature have quadratic non-linearity and the corresponding system of nonlinear equations associated with their discrete formulation has constant 2<sup><italic toggle="yes">nd</italic></sup>-order Fr&#x000e9;chet derivatives. We try to get benefit from this information and develop a single-point iterative method to solve such a system of nonlinear equations with quadratic nonlinearity. In our proposed single-point iterative method, we perform one evaluation of a system of nonlinear equations and another for Jacobian. In total, there are two functional evaluations, and we do not count the evaluation of the 2<sup><italic toggle="yes">nd</italic></sup>-order Fr&#x000e9;chet derivative as it is constant in all the iterations of the method. The convergence order (CO) of our proposed method is four. The efficiency index of our method is 4<sup>1/2</sup>&#x02009;=&#x02009;2 which is higher than that of the Newton method 2<sup>1/2</sup>&#x02009;=&#x02009;1.4142. To quantify the functionality of our proposed algorithm, we have performed extensive numerical testing on a collection of test problems with quadratic nonlinearity.</p></abstract><funding-group><award-group id="award001"><funding-source><institution>Deanship of Research and Graduate Studies at King Khalid University for funding this work through Large Research Project </institution>
</funding-source><award-id>RGP2/168/45</award-id><principal-award-recipient>
<contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0002-1678-6584</contrib-id>
<name><surname>Elmasry</surname><given-names>Yasser</given-names></name>
</principal-award-recipient></award-group><funding-statement>This study was funded by the Deanship of Research and Graduate Studies at King Khalid University through Large Research Project: RGP.2/588/45&#x02019; (Awarded to YE).</funding-statement></funding-group><counts><fig-count count="16"/><table-count count="4"/><page-count count="26"/></counts><custom-meta-group><custom-meta id="data-availability"><meta-name>Data Availability</meta-name><meta-value>Maple and Matlab codes of our proposed method are provided in the appendix within the manuscript.</meta-value></custom-meta></custom-meta-group></article-meta><notes><title>Data Availability</title><p>Maple and Matlab codes of our proposed method are provided in the appendix within the manuscript.</p></notes></front><body><sec sec-type="intro" id="sec001"><title>1 Introduction</title><p>The numerical solution of a nonlinear equation in its closed form is not always possible, and hence numerical iterative schemes provide us with an alternative way to find them. The exact method, for instance, the quadratic formula to obtain the roots of a quadratic equation, is an example of the direct method. However, when dealing with a system of nonlinear equations (SNLEs), the situation becomes more complicated in terms of determining the exact empirical formulae. The practical way to find the numerical solution of such SNLEs is through numerical iterative methods. In many ways, these numerical methods differ from exact numerical methods or exact symbolic methods. The iterative methods always require an initial guess to start the iterative procedure, but on the other hand, the exact methods do not require any initial guess. The total number of binary operations can be counted for the exact method, while in the case of iterative methods, we can have an estimate of the computational cost. The iterative methods need some stopping criteria.</p><p>The symbolic exact methods may suffer from numerical instabilities when we substitute numerical values in place of symbols. The stable numerical algorithms avoid numerical instabilities.</p><p>The bisection method, the regula-falsi method, the Newton method [<xref rid="pone.0317752.ref001" ref-type="bibr">1</xref>], and the secant method are all methods for the numerical approximation of nonlinear equations. The bisection and false-position methods are closed-form methods because they require the knowledge of an interval containing the root. On the other hand, the Newton and Secant methods are open methods because we need a single initial guess to start the iterative process. The generalisation of bisection and regula-falsi for the SNLEs is a bit hard and may be possible in some sense. The open methods, for instance, the Newton and Secant methods, are excellent candidates for multidimensional generalization.</p><p>The root(s) of a nonlinear equation or SNLEs can be classified into two categories, namely, simple roots and roots with multiplicity. Let <inline-formula id="pone.0317752.e001"><alternatives><graphic xlink:href="pone.0317752.e001.jpg" id="pone.0317752.e001g" position="anchor"/><mml:math id="M1" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>&#x022ef;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:msup><mml:mo stretchy="false">]</mml:mo><mml:mi>T</mml:mi></mml:msup><mml:mo>&#x02208;</mml:mo><mml:mi>&#x0211d;</mml:mi></mml:mrow></mml:math></alternatives></inline-formula> be a multi-dimensional vector and <inline-formula id="pone.0317752.e002"><alternatives><graphic xlink:href="pone.0317752.e002.jpg" id="pone.0317752.e002g" position="anchor"/><mml:math id="M2" display="inline" overflow="scroll"><mml:mrow><mml:mi>F</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mn mathvariant="bold">0</mml:mn></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>, where <inline-formula id="pone.0317752.e003"><alternatives><graphic xlink:href="pone.0317752.e003.jpg" id="pone.0317752.e003g" position="anchor"/><mml:math id="M3" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>:</mml:mi><mml:mi>D</mml:mi><mml:mo>&#x02282;</mml:mo><mml:msup><mml:mi>&#x0211d;</mml:mi><mml:mi>n</mml:mi></mml:msup><mml:mo>&#x02192;</mml:mo><mml:msup><mml:mi>&#x0211d;</mml:mi><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> represents the SNLEs. We also assume that <inline-formula id="pone.0317752.e004"><alternatives><graphic xlink:href="pone.0317752.e004.jpg" id="pone.0317752.e004g" position="anchor"/><mml:math id="M4" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> is sufficiently smooth, that is, that all of its Fr&#x000e9;chet derivatives exit up to some suitable order. If the limit [<xref rid="pone.0317752.ref002" ref-type="bibr">2</xref>]</p><disp-formula id="pone.0317752.e005">
<alternatives><graphic xlink:href="pone.0317752.e005.jpg" id="pone.0317752.e005g" position="anchor"/><mml:math id="M5" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mstyle displaystyle="true"><mml:munder><mml:mo>lim</mml:mo><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">h</mml:mi></mml:mrow><mml:mo>&#x02192;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:munder></mml:mstyle><mml:mfrac><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">h</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">h</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">A</mml:mi></mml:mrow><mml:mspace width="0.167em"/><mml:mrow><mml:mi mathvariant="bold-italic">h</mml:mi></mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">h</mml:mi></mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.167em"/><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>exits, then the first order Fr&#x000e9;chet derivative <inline-formula id="pone.0317752.e006"><alternatives><graphic xlink:href="pone.0317752.e006.jpg" id="pone.0317752.e006g" position="anchor"/><mml:math id="M6" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">A</mml:mi></mml:mrow><mml:mtext mathvariant="italic">of</mml:mtext><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mtext>exists</mml:mtext><mml:mtext mathvariant="italic">at</mml:mtext><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>. Whereas, the higher-order derivatives are computed by following the recursion</p><disp-formula id="pone.0317752.e007">
<alternatives><graphic xlink:href="pone.0317752.e007.jpg" id="pone.0317752.e007g" position="anchor"/><mml:math id="M7" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>Jcobian</mml:mtext></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><disp-formula id="pone.0317752.e008">
<alternatives><graphic xlink:href="pone.0317752.e008.jpg" id="pone.0317752.e008g" position="anchor"/><mml:math id="M8" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>Jcobian</mml:mtext></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">z</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:mspace width="1em"/><mml:mi>i</mml:mi><mml:mo>&#x02265;</mml:mo><mml:mn>2</mml:mn><mml:mspace width="0.167em"/><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>where <inline-formula id="pone.0317752.e009"><alternatives><graphic xlink:href="pone.0317752.e009.jpg" id="pone.0317752.e009g" position="anchor"/><mml:math id="M9" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> and <inline-formula id="pone.0317752.e010"><alternatives><graphic xlink:href="pone.0317752.e010.jpg" id="pone.0317752.e010g" position="anchor"/><mml:math id="M10" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">z</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> are not the functions of <inline-formula id="pone.0317752.e011"><alternatives><graphic xlink:href="pone.0317752.e011.jpg" id="pone.0317752.e011g" position="anchor"/><mml:math id="M11" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> and</p><disp-formula id="pone.0317752.e012">
<alternatives><graphic xlink:href="pone.0317752.e012.jpg" id="pone.0317752.e012g" position="anchor"/><mml:math id="M12" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>Jacobian</mml:mtext></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>Jacobian</mml:mtext></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>Jacobian</mml:mtext></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>It is worth mentioning that the Fr&#x000e9;chet differentiable function could be linearized in the neighborhood of a give point <inline-formula id="pone.0317752.e013"><alternatives><graphic xlink:href="pone.0317752.e013.jpg" id="pone.0317752.e013g" position="anchor"/><mml:math id="M13" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> if <inline-formula id="pone.0317752.e014"><alternatives><graphic xlink:href="pone.0317752.e014.jpg" id="pone.0317752.e014g" position="anchor"/><mml:math id="M14" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> exists. From the linearization of <inline-formula id="pone.0317752.e015"><alternatives><graphic xlink:href="pone.0317752.e015.jpg" id="pone.0317752.e015g" position="anchor"/><mml:math id="M15" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>, we can derive the Newton method. Before proceeding, we define the various types of roots. A vector <inline-formula id="pone.0317752.e016"><alternatives><graphic xlink:href="pone.0317752.e016.jpg" id="pone.0317752.e016g" position="anchor"/><mml:math id="M16" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> is called the root of <inline-formula id="pone.0317752.e017"><alternatives><graphic xlink:href="pone.0317752.e017.jpg" id="pone.0317752.e017g" position="anchor"/><mml:math id="M17" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mn mathvariant="bold">0</mml:mn></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> if</p><disp-formula id="pone.0317752.e018">
<alternatives><graphic xlink:href="pone.0317752.e018.jpg" id="pone.0317752.e018g" position="anchor"/><mml:math id="M18" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mn mathvariant="bold">0</mml:mn></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>The root <inline-formula id="pone.0317752.e019"><alternatives><graphic xlink:href="pone.0317752.e019.jpg" id="pone.0317752.e019g" position="anchor"/><mml:math id="M19" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> is simple if</p><disp-formula id="pone.0317752.e020">
<alternatives><graphic xlink:href="pone.0317752.e020.jpg" id="pone.0317752.e020g" position="anchor"/><mml:math id="M20" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>det</mml:mtext></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>&#x02260;</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.167em"/><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>that is, if the Jacobian of <inline-formula id="pone.0317752.e021"><alternatives><graphic xlink:href="pone.0317752.e021.jpg" id="pone.0317752.e021g" position="anchor"/><mml:math id="M21" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> at <inline-formula id="pone.0317752.e022"><alternatives><graphic xlink:href="pone.0317752.e022.jpg" id="pone.0317752.e022g" position="anchor"/><mml:math id="M22" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> is non-singular. Otherwise, the root <inline-formula id="pone.0317752.e023"><alternatives><graphic xlink:href="pone.0317752.e023.jpg" id="pone.0317752.e023g" position="anchor"/><mml:math id="M23" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> is not a simple root. In this study, we assume that the root <inline-formula id="pone.0317752.e024"><alternatives><graphic xlink:href="pone.0317752.e024.jpg" id="pone.0317752.e024g" position="anchor"/><mml:math id="M24" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> is a simple root in all cases. Let <inline-formula id="pone.0317752.e025"><alternatives><graphic xlink:href="pone.0317752.e025.jpg" id="pone.0317752.e025g" position="anchor"/><mml:math id="M25" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> be the nth approximation of <inline-formula id="pone.0317752.e026"><alternatives><graphic xlink:href="pone.0317752.e026.jpg" id="pone.0317752.e026g" position="anchor"/><mml:math id="M26" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>, and we want to get the new approximation because it may reduce the norm of SNLEs. If <inline-formula id="pone.0317752.e027"><alternatives><graphic xlink:href="pone.0317752.e027.jpg" id="pone.0317752.e027g" position="anchor"/><mml:math id="M27" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> is the approximation of <inline-formula id="pone.0317752.e028"><alternatives><graphic xlink:href="pone.0317752.e028.jpg" id="pone.0317752.e028g" position="anchor"/><mml:math id="M28" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>, then</p><disp-formula id="pone.0317752.e029">
<alternatives><graphic xlink:href="pone.0317752.e029.jpg" id="pone.0317752.e029g" position="anchor"/><mml:math id="M29" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo>&#x02248;</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mspace width="0.167em"/><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>and we are looking for <inline-formula id="pone.0317752.e030"><alternatives><graphic xlink:href="pone.0317752.e030.jpg" id="pone.0317752.e030g" position="anchor"/><mml:math id="M30" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">h</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>, such that,</p><disp-formula id="pone.0317752.e031">
<alternatives><graphic xlink:href="pone.0317752.e031.jpg" id="pone.0317752.e031g" position="anchor"/><mml:math id="M31" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">h</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mspace width="0.167em"/><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>where <inline-formula id="pone.0317752.e032"><alternatives><graphic xlink:href="pone.0317752.e032.jpg" id="pone.0317752.e032g" position="anchor"/><mml:math id="M32" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">h</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> is a correction vector. As discussed earlier, the Fr&#x000e9;chet differentiability helps in the linear approximation of SNLEs, so we have</p><disp-formula id="pone.0317752.e033">
<alternatives><graphic xlink:href="pone.0317752.e033.jpg" id="pone.0317752.e033g" position="anchor"/><mml:math id="M33" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">h</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mn mathvariant="bold">0</mml:mn></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><disp-formula id="pone.0317752.e034">
<alternatives><graphic xlink:href="pone.0317752.e034.jpg" id="pone.0317752.e034g" position="anchor"/><mml:math id="M34" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">h</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>&#x02248;</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">h</mml:mi></mml:mrow><mml:mspace width="0.167em"/><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><disp-formula id="pone.0317752.e035">
<alternatives><graphic xlink:href="pone.0317752.e035.jpg" id="pone.0317752.e035g" position="anchor"/><mml:math id="M35" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">h</mml:mi></mml:mrow><mml:mspace width="0.167em"/><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>&#x02248;</mml:mo><mml:mrow><mml:mn mathvariant="bold">0</mml:mn></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><disp-formula id="pone.0317752.e036">
<alternatives><graphic xlink:href="pone.0317752.e036.jpg" id="pone.0317752.e036g" position="anchor"/><mml:math id="M36" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">h</mml:mi></mml:mrow><mml:mo>&#x02248;</mml:mo><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mspace width="0.167em"/><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>This yields an approximation of the correction vector <inline-formula id="pone.0317752.e037"><alternatives><graphic xlink:href="pone.0317752.e037.jpg" id="pone.0317752.e037g" position="anchor"/><mml:math id="M37" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">h</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> and a new approximation of <inline-formula id="pone.0317752.e038"><alternatives><graphic xlink:href="pone.0317752.e038.jpg" id="pone.0317752.e038g" position="anchor"/><mml:math id="M38" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula></p><disp-formula id="pone.0317752.e039">
<alternatives><graphic xlink:href="pone.0317752.e039.jpg" id="pone.0317752.e039g" position="anchor"/><mml:math id="M39" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">h</mml:mi></mml:mrow><mml:mo>&#x02248;</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mspace width="0.167em"/><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>It could also be written as</p><disp-formula id="pone.0317752.e040">
<alternatives><graphic xlink:href="pone.0317752.e040.jpg" id="pone.0317752.e040g" position="anchor"/><mml:math id="M40" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mspace width="0.167em"/><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>The above formula is called the Newton method. In practice, we never compute the inverse of the Jacobian matrix; instead, we solve systems of linear equations. The practical way to write the Newton method is</p><disp-formula id="pone.0317752.e041">
<alternatives><graphic xlink:href="pone.0317752.e041.jpg" id="pone.0317752.e041g" position="anchor"/><mml:math id="M41" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>Newton&#x000a0;method</mml:mtext></mml:mstyle><mml:mo>=</mml:mo><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">{</mml:mo><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mi>n</mml:mi><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>th&#x000a0;approximation&#x000a0;to&#x000a0;the&#x000a0;root&#x000a0;</mml:mtext><mml:mtext mathvariant="bold">&#x00251;</mml:mtext></mml:mstyle><mml:mi>}</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">h</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd columnalign="left"><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>solve&#x000a0;the&#x000a0;system&#x000a0;of&#x000a0;linear&#x000a0;equations</mml:mtext></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">h</mml:mi></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>compute&#x000a0;the&#x000a0;(n+1)&#x000a0;th&#x000a0;approximation&#x000a0;of&#x000a0;the&#x000a0;root.&#x000a0;</mml:mtext></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>It&#x02019;s worth noting that the Newton method has two function evaluations <inline-formula id="pone.0317752.e042"><alternatives><graphic xlink:href="pone.0317752.e042.jpg" id="pone.0317752.e042g" position="anchor"/><mml:math id="M42" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>, <inline-formula id="pone.0317752.e043"><alternatives><graphic xlink:href="pone.0317752.e043.jpg" id="pone.0317752.e043g" position="anchor"/><mml:math id="M43" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>, as well as a single system of linear equations solution for a single iteration. The number <italic toggle="yes">m</italic> is the CO of numerical iterative method without memory if</p><disp-formula id="pone.0317752.e044">
<alternatives><graphic xlink:href="pone.0317752.e044.jpg" id="pone.0317752.e044g" position="anchor"/><mml:math id="M44" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>&#x0221d;</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi><mml:mi>m</mml:mi></mml:msubsup><mml:mspace width="0.167em"/><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>where, <inline-formula id="pone.0317752.e045"><alternatives><graphic xlink:href="pone.0317752.e045.jpg" id="pone.0317752.e045g" position="anchor"/><mml:math id="M45" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mspace width="0.167em"/><mml:mrow><mml:mo>&#x02212;</mml:mo></mml:mrow><mml:mspace width="0.167em"/><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> denotes error at the <italic toggle="yes">n</italic>th-step. Since <inline-formula id="pone.0317752.e046"><alternatives><graphic xlink:href="pone.0317752.e046.jpg" id="pone.0317752.e046g" position="anchor"/><mml:math id="M46" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> is unknown to us, it is very difficult to get the exact value of <italic toggle="yes">m</italic> by using the above definition. In practice, we computationally approximate the order of convergence as</p><disp-formula id="pone.0317752.e047">
<alternatives><graphic xlink:href="pone.0317752.e047.jpg" id="pone.0317752.e047g" position="anchor"/><mml:math id="M47" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>COC</mml:mtext></mml:mstyle><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>log</mml:mi><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo>/</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo fence="true" form="postfix" stretchy="true">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mi>log</mml:mi><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo>/</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo fence="true" form="postfix" stretchy="true">)</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>The numerical iterative methods are classified into different classes. We call an iterative method a multi-point method [<xref rid="pone.0317752.ref004" ref-type="bibr">4</xref>, <xref rid="pone.0317752.ref005" ref-type="bibr">5</xref>, <xref rid="pone.0317752.ref008" ref-type="bibr">8</xref>&#x02013;<xref rid="pone.0317752.ref012" ref-type="bibr">12</xref>] if the function and derivative evaluations are performed at different points in a single iteration. If all the functional evaluations are concentrated at a single point, then such a numerical method is called a single-point iterative method. Usually, the higher-order methods are multi-point and the lower order methods are single-point iterative methods. The multi-point methods are more efficient compared to single-point iterative methods when the CO is high. Another classification is single-step and multi-step methods [<xref rid="pone.0317752.ref003" ref-type="bibr">3</xref>, <xref rid="pone.0317752.ref010" ref-type="bibr">10</xref>&#x02013;<xref rid="pone.0317752.ref012" ref-type="bibr">12</xref>]. The computation of the Jacobian can be expensive. To avoid the new computation of Jacobian and its LU-factors, it is desirable to freeze Jacobian in a single iteration and develop a strategy to attain a high CO. A Newton multi-step and multi-point iterative method [<xref rid="pone.0317752.ref003" ref-type="bibr">3</xref>] could be formulated as</p><disp-formula id="pone.0317752.e048">
<alternatives><graphic xlink:href="pone.0317752.e048.jpg" id="pone.0317752.e048g" position="anchor"/><mml:math id="M48" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>Multi-step&#x000a0;and&#x000a0;multi-point&#x000a0;Newton&#x000a0;method</mml:mtext></mml:mstyle><mml:mo>=</mml:mo><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">{</mml:mo><mml:mtable><mml:mtr><mml:mtd columnalign="left"/><mml:mtd columnalign="left"><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mspace width="0.167em"/><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"/><mml:mtd columnalign="left"><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>for&#x000a0;i&#x000a0;from&#x000a0;1&#x000a0;to&#x000a0;s-1&#x000a0;do</mml:mtext></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"/><mml:mtd columnalign="left"><mml:mspace width="*"/><mml:mrow><mml:mn>1.5em</mml:mn></mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mspace width="0.167em"/><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"/><mml:mtd columnalign="left"><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>end&#x000a0;do</mml:mtext></mml:mstyle><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>One can observe that the Jacobian is fixed and only function evaluations are performed. There is a single Jacobian evaluation and <italic toggle="yes">s</italic>-function evaluations. The CO of this method is <inline-formula id="pone.0317752.e049"><alternatives><graphic xlink:href="pone.0317752.e049.jpg" id="pone.0317752.e049g" position="anchor"/><mml:math id="M49" display="inline" overflow="scroll"><mml:mrow><mml:mi>s</mml:mi><mml:mspace width="0.167em"/><mml:mrow><mml:mo>+</mml:mo></mml:mrow><mml:mspace width="0.167em"/><mml:mn>1</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>. In the first step, we have the Newton method, which has a quadratic CO, and for each step of the loop, we increase the previous step order by 1, as the length of the loop is <italic toggle="yes">s</italic>&#x02212;1. As a result, the CO is 2&#x02009;+&#x02009;<italic toggle="yes">s</italic>&#x02212;1&#x02009;=&#x02009;<italic toggle="yes">s</italic>&#x02009;+&#x02009;1. When solving a system of linear equations at each step, it is preferable to find the LU-factors for the frozen Jacobian <inline-formula id="pone.0317752.e050"><alternatives><graphic xlink:href="pone.0317752.e050.jpg" id="pone.0317752.e050g" position="anchor"/><mml:math id="M50" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> if possible. The corresponding lower and upper triangular systems are solved by backward and forward substitutions, which makes the overall computational cost economical.</p><p>In recent years, many researchers have contributed to developing numerical iterative schemes for SNLEs. A parameterized multi-point and multi-step method is proposed in [<xref rid="pone.0317752.ref003" ref-type="bibr">3</xref>]. The authors of [<xref rid="pone.0317752.ref004" ref-type="bibr">4</xref>] constructed a multi-step iterative method using Jacobian information at two different points. The discretization of boundary and initial value problems gave rise to SNLEs, which can be of a special type due to structure differential equations. Some methods in this direction are proposed in [<xref rid="pone.0317752.ref005" ref-type="bibr">5</xref>, <xref rid="pone.0317752.ref006" ref-type="bibr">6</xref>]. For nonlinear equations, the optimality of the CO is well defined for the numerical iterative method, but such a notion is not well defined for the SNLEs. For instance, for a single nonlinear equation, the Newton method has quadratic convergence, and this CO is optimal according to the Kung-Traub&#x02019;s (KT) conjecture [<xref rid="pone.0317752.ref001" ref-type="bibr">1</xref>]. According to the KT conjecture, if a numerical iterative method without memory has <italic toggle="yes">r</italic>-functional evaluations in a single stance of the method, then the optimal CO is</p><disp-formula id="pone.0317752.e051">
<alternatives><graphic xlink:href="pone.0317752.e051.jpg" id="pone.0317752.e051g" position="anchor"/><mml:math id="M51" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>optimal&#x000a0;convergence&#x000a0;order</mml:mtext></mml:mstyle><mml:mo>=</mml:mo><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:mi>r</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>There is no KT-conjecture for iterative methods of solving SNLEs. Generally, if there are two functional evaluations, then the optimal CO is two. Similarly, if there are three functional evaluations, then the optimal order is four. In this context, an optimal order method of order four is proposed. In [<xref rid="pone.0317752.ref011" ref-type="bibr">11</xref>], another multi-step iterative method is proposed.</p><p>The development of numerical methods using a 2<sup><italic toggle="yes">nd</italic></sup>-order Fr&#x000e9;chet derivative is not practical because the computational cost of a 2<sup><italic toggle="yes">nd</italic></sup>-order Fr&#x000e9;chet derivative is very high as it is a tensor of rank three. But it is not the case when we focus on SNLEs associated with boundary value problems (BVPs). Consider a two-point 2<sup><italic toggle="yes">nd</italic></sup>&#x02013;order BVP</p><disp-formula id="pone.0317752.e052">
<alternatives><graphic xlink:href="pone.0317752.e052.jpg" id="pone.0317752.e052g" position="anchor"/><mml:math id="M52" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>y</mml:mi><mml:mi>&#x02033;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mi>x</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>a</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mspace width="0.167em"/><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mspace width="0.167em"/></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>where <inline-formula id="pone.0317752.e053"><alternatives><graphic xlink:href="pone.0317752.e053.jpg" id="pone.0317752.e053g" position="anchor"/><mml:math id="M53" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x000b7;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> is a nonlinear function. After discretization, we get a SNLEs</p><disp-formula id="pone.0317752.e054"><alternatives><graphic xlink:href="pone.0317752.e054.jpg" id="pone.0317752.e054g" position="anchor"/><mml:math id="M54" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">A</mml:mi></mml:mrow><mml:mspace width="0.167em"/><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo>+</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">g</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mn mathvariant="bold">0</mml:mn></mml:mrow><mml:mspace width="0.167em"/><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
<label>(1)</label></disp-formula><p>where <inline-formula id="pone.0317752.e055"><alternatives><graphic xlink:href="pone.0317752.e055.jpg" id="pone.0317752.e055g" position="anchor"/><mml:math id="M55" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo>&#x022ef;</mml:mo><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>, <inline-formula id="pone.0317752.e056"><alternatives><graphic xlink:href="pone.0317752.e056.jpg" id="pone.0317752.e056g" position="anchor"/><mml:math id="M56" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>, and <inline-formula id="pone.0317752.e057"><alternatives><graphic xlink:href="pone.0317752.e057.jpg" id="pone.0317752.e057g" position="anchor"/><mml:math id="M57" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>. Here <inline-formula id="pone.0317752.e058"><alternatives><graphic xlink:href="pone.0317752.e058.jpg" id="pone.0317752.e058g" position="anchor"/><mml:math id="M58" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">A</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> is the functional matrix for the 2<sup><italic toggle="yes">nd</italic></sup> order derivative and <inline-formula id="pone.0317752.e059"><alternatives><graphic xlink:href="pone.0317752.e059.jpg" id="pone.0317752.e059g" position="anchor"/><mml:math id="M59" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>&#x022ef;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> is a partition of the interval <inline-formula id="pone.0317752.e060"><alternatives><graphic xlink:href="pone.0317752.e060.jpg" id="pone.0317752.e060g" position="anchor"/><mml:math id="M60" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> and the order vectors <inline-formula id="pone.0317752.e061"><alternatives><graphic xlink:href="pone.0317752.e061.jpg" id="pone.0317752.e061g" position="anchor"/><mml:math id="M61" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">g</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo>&#x022ef;</mml:mo><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mo stretchy="false">]</mml:mo><mml:mi>T</mml:mi></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> and <inline-formula id="pone.0317752.e062"><alternatives><graphic xlink:href="pone.0317752.e062.jpg" id="pone.0317752.e062g" position="anchor"/><mml:math id="M62" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo>&#x022ef;</mml:mo><mml:mo>,</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mo stretchy="false">]</mml:mo><mml:mi>T</mml:mi></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>. Consider that we have included the boundary conditions in (<xref rid="pone.0317752.e054" ref-type="disp-formula">1</xref>). The Fr&#x000e9;chet derivatives of (<xref rid="pone.0317752.e054" ref-type="disp-formula">1</xref>) can be obtained as</p><disp-formula id="pone.0317752.e063">
<alternatives><graphic xlink:href="pone.0317752.e063.jpg" id="pone.0317752.e063g" position="anchor"/><mml:math id="M63" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">A</mml:mi></mml:mrow><mml:mo>+</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>diag</mml:mtext></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>f</mml:mi><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><disp-formula id="pone.0317752.e064">
<alternatives><graphic xlink:href="pone.0317752.e064.jpg" id="pone.0317752.e064g" position="anchor"/><mml:math id="M64" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02033;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>diag</mml:mtext></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>f</mml:mi><mml:mi>&#x02033;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>where <inline-formula id="pone.0317752.e065"><alternatives><graphic xlink:href="pone.0317752.e065.jpg" id="pone.0317752.e065g" position="anchor"/><mml:math id="M65" display="inline" overflow="scroll"><mml:mrow><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>diag</mml:mtext></mml:mstyle></mml:mrow></mml:math></alternatives></inline-formula> stands for the diagonal matrix. The <inline-formula id="pone.0317752.e066"><alternatives><graphic xlink:href="pone.0317752.e066.jpg" id="pone.0317752.e066g" position="anchor"/><mml:math id="M66" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02033;</mml:mi></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> is a tensor of rank three. To convert it to a tensor of rank one, which is a vector, we need to multiply it by two tensors of rank one, i.e.,</p><disp-formula id="pone.0317752.e067">
<alternatives><graphic xlink:href="pone.0317752.e067.jpg" id="pone.0317752.e067g" position="anchor"/><mml:math id="M67" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02033;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>diag</mml:mtext></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>f</mml:mi><mml:mi>&#x02033;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>&#x02299;</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>matrix</mml:mtext></mml:mstyle><mml:mspace width="0.167em"/><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><disp-formula id="pone.0317752.e068">
<alternatives><graphic xlink:href="pone.0317752.e068.jpg" id="pone.0317752.e068g" position="anchor"/><mml:math id="M68" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02033;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow><mml:mspace width="0.167em"/><mml:mrow><mml:mi mathvariant="bold-italic">z</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:msup><mml:mi>f</mml:mi><mml:mi>&#x02033;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>&#x02299;</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow><mml:mo>&#x02299;</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">z</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>vector</mml:mtext></mml:mstyle><mml:mspace width="0.167em"/><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>where <inline-formula id="pone.0317752.e069"><alternatives><graphic xlink:href="pone.0317752.e069.jpg" id="pone.0317752.e069g" position="anchor"/><mml:math id="M69" display="inline" overflow="scroll"><mml:mrow><mml:mo>&#x02299;</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> is element-wise multiplication operation. We can see that in the case of BVPs, the computation of 2<sup><italic toggle="yes">nd</italic></sup> order Fr&#x000e9;chet derivative could be simple and computationally economical. By getting motivation from the economical perspective of a higher-order Fr&#x000e9;chet derivative (where it is possible) for the discretized BVPs, we propose a single-point numerical iterative method. We concentrate on the case where the underlying nonlinearity is quadratic; for example, our method is valid when <inline-formula id="pone.0317752.e070"><alternatives><graphic xlink:href="pone.0317752.e070.jpg" id="pone.0317752.e070g" position="anchor"/><mml:math id="M70" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> in (<xref rid="pone.0317752.e054" ref-type="disp-formula">1</xref>) is <inline-formula id="pone.0317752.e071"><alternatives><graphic xlink:href="pone.0317752.e071.jpg" id="pone.0317752.e071g" position="anchor"/><mml:math id="M71" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>. Now, we describe our single-point numerical iterative method for SNLEs</p><disp-formula id="pone.0317752.e072">
<alternatives><graphic xlink:href="pone.0317752.e072.jpg" id="pone.0317752.e072g" position="anchor"/><mml:math id="M72" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mn mathvariant="bold">0</mml:mn></mml:mrow></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>under the condition that</p><disp-formula id="pone.0317752.e073">
<alternatives><graphic xlink:href="pone.0317752.e073.jpg" id="pone.0317752.e073g" position="anchor"/><mml:math id="M73" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02033;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>constant&#x000a0;tensor&#x000a0;of&#x000a0;rank&#x000a0;3</mml:mtext></mml:mstyle></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>and</p><disp-formula id="pone.0317752.e074">
<alternatives><graphic xlink:href="pone.0317752.e074.jpg" id="pone.0317752.e074g" position="anchor"/><mml:math id="M74" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>zeros&#x000a0;tensor&#x000a0;of&#x000a0;rank&#x000a0;i+1</mml:mtext></mml:mstyle><mml:mspace width="0.167em"/><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mi>i</mml:mi><mml:mo>&#x02265;</mml:mo><mml:mn>3</mml:mn><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><disp-formula id="pone.0317752.e075"><alternatives><graphic xlink:href="pone.0317752.e075.jpg" id="pone.0317752.e075g" position="anchor"/><mml:math id="M75" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>Proposed&#x000a0;method</mml:mtext></mml:mstyle><mml:mo>=</mml:mo><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">{</mml:mo><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mi>n</mml:mi><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>th&#x000a0;approximation&#x000a0;</mml:mtext></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd columnalign="left"><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>&#x000a0;tensor&#x000a0;of&#x000a0;rank&#x000a0;1</mml:mtext></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mi mathvariant="bold-italic">M</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02033;</mml:mi></mml:msup><mml:mspace width="0.167em"/><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi mathvariant="bold-italic">M</mml:mi></mml:mrow><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>&#x000a0;tensor&#x000a0;of&#x000a0;rank&#x000a0;2</mml:mtext></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">M</mml:mi></mml:mrow><mml:mspace width="0.167em"/><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>&#x000a0;tensor&#x000a0;of&#x000a0;rank&#x000a0;1</mml:mtext></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">M</mml:mi></mml:mrow><mml:mspace width="0.167em"/><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>&#x000a0;tensor&#x000a0;of&#x000a0;rank&#x000a0;1</mml:mtext></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:mspace width="0.167em"/><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:mo>,</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow></mml:math></alternatives>
<label>(2)</label></disp-formula><p><inline-formula id="pone.0317752.e076"><alternatives><graphic xlink:href="pone.0317752.e076.jpg" id="pone.0317752.e076g" position="anchor"/><mml:math id="M76" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02033;</mml:mi></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> is a constant tensor of rank 3 and all higher order tensor of rank <italic toggle="yes">i</italic> are zeros tensors, i.e., <inline-formula id="pone.0317752.e077"><alternatives><graphic xlink:href="pone.0317752.e077.jpg" id="pone.0317752.e077g" position="anchor"/><mml:math id="M77" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mrow><mml:mn mathvariant="bold">0</mml:mn></mml:mrow><mml:mtext mathvariant="italic">~for~</mml:mtext><mml:mi>i</mml:mi><mml:mo>&#x02265;</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>. The CO of our proposed method (<xref rid="pone.0317752.e075" ref-type="disp-formula">2</xref>) is four and the corresponding error equation is</p><disp-formula id="pone.0317752.e078">
<alternatives><graphic xlink:href="pone.0317752.e078.jpg" id="pone.0317752.e078g" position="anchor"/><mml:math id="M78" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>5</mml:mn><mml:mspace width="0.167em"/><mml:msup><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">(</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mspace width="0.167em"/><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02033;</mml:mi></mml:msup></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:mo fence="true" form="postfix" stretchy="true">)</mml:mo></mml:mrow><mml:mn>3</mml:mn></mml:msup><mml:mspace width="0.167em"/><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi><mml:mn>4</mml:mn></mml:msubsup><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>There is one evaluation of SNLEs <inline-formula id="pone.0317752.e079"><alternatives><graphic xlink:href="pone.0317752.e079.jpg" id="pone.0317752.e079g" position="anchor"/><mml:math id="M79" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> and one evaluation of Jacobian <inline-formula id="pone.0317752.e080"><alternatives><graphic xlink:href="pone.0317752.e080.jpg" id="pone.0317752.e080g" position="anchor"/><mml:math id="M80" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>, so in total we have two functional evaluations. We do not count the evaluation of <inline-formula id="pone.0317752.e081"><alternatives><graphic xlink:href="pone.0317752.e081.jpg" id="pone.0317752.e081g" position="anchor"/><mml:math id="M81" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02033;</mml:mi></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> as it is a constant tensor of rank 3. Two matrix-vector multiplications, one scalar-vector multiplication, one LU decomposition of <inline-formula id="pone.0317752.e082"><alternatives><graphic xlink:href="pone.0317752.e082.jpg" id="pone.0317752.e082g" position="anchor"/><mml:math id="M82" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>, and three lower and upper triangular system solutions are available. Whereas the computational cost of <inline-formula id="pone.0317752.e083"><alternatives><graphic xlink:href="pone.0317752.e083.jpg" id="pone.0317752.e083g" position="anchor"/><mml:math id="M83" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">M</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> depends on the structure of quadratic nonlinearity.</p></sec><sec id="sec002"><title>2 Convergence analysis</title><p>For convergence analysis, we define</p><disp-formula id="pone.0317752.e084">
<alternatives><graphic xlink:href="pone.0317752.e084.jpg" id="pone.0317752.e084g" position="anchor"/><mml:math id="M84" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mi>r</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mo>!</mml:mo></mml:mrow></mml:mfrac><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>for <inline-formula id="pone.0317752.e085"><alternatives><graphic xlink:href="pone.0317752.e085.jpg" id="pone.0317752.e085g" position="anchor"/><mml:math id="M85" display="inline" overflow="scroll"><mml:mrow><mml:mi>r</mml:mi><mml:mo>&#x02265;</mml:mo><mml:mn>2</mml:mn><mml:mtext mathvariant="italic">~and~</mml:mtext><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>. Using the Taylor&#x02019;s expansion, we can expand the <inline-formula id="pone.0317752.e086"><alternatives><graphic xlink:href="pone.0317752.e086.jpg" id="pone.0317752.e086g" position="anchor"/><mml:math id="M86" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:mtext>around</mml:mtext><mml:mtext mathvariant="italic">the~</mml:mtext><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula></p><disp-formula id="pone.0317752.e087"><alternatives><graphic xlink:href="pone.0317752.e087.jpg" id="pone.0317752.e087g" position="anchor"/><mml:math id="M87" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mspace width="0.167em"/><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mspace linebreak="newline"/><mml:mo>=</mml:mo><mml:mspace width="0.167em"/><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mspace width="0.167em"/><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02033;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mspace linebreak="newline"/><mml:mo>=</mml:mo><mml:mspace width="0.167em"/><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mspace width="0.167em"/><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02033;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mspace linebreak="newline"/><mml:mo>=</mml:mo><mml:mspace width="0.167em"/><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mspace width="0.167em"/><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02033;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mspace linebreak="newline"/><mml:mo>=</mml:mo><mml:mspace width="0.167em"/><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></alternatives>
<label>(3)</label></disp-formula><p>because <inline-formula id="pone.0317752.e088"><alternatives><graphic xlink:href="pone.0317752.e088.jpg" id="pone.0317752.e088g" position="anchor"/><mml:math id="M88" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> is a root, <inline-formula id="pone.0317752.e089"><alternatives><graphic xlink:href="pone.0317752.e089.jpg" id="pone.0317752.e089g" position="anchor"/><mml:math id="M89" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mn mathvariant="bold">0</mml:mn></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>. The higher derivatives of <inline-formula id="pone.0317752.e090"><alternatives><graphic xlink:href="pone.0317752.e090.jpg" id="pone.0317752.e090g" position="anchor"/><mml:math id="M90" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> are</p><disp-formula id="pone.0317752.e091"><alternatives><graphic xlink:href="pone.0317752.e091.jpg" id="pone.0317752.e091g" position="anchor"/><mml:math id="M91" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn mathvariant="bold">1</mml:mn></mml:mrow><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mspace width="0.167em"/><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:mo>,</mml:mo><mml:mspace linebreak="newline"/><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02033;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mspace width="0.167em"/><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mspace width="0.167em"/><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mspace width="0.167em"/><mml:mo>,</mml:mo><mml:mspace linebreak="newline"/><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mn mathvariant="bold">0</mml:mn></mml:mrow><mml:mspace width="0.167em"/><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mi>i</mml:mi><mml:mo>&#x02265;</mml:mo><mml:mn>3</mml:mn><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></alternatives>
<label>(4)</label></disp-formula><p><bold>Theorem 1.</bold>
<italic toggle="yes">Suppose that <inline-formula id="pone.0317752.e092"><alternatives><graphic xlink:href="pone.0317752.e092.jpg" id="pone.0317752.e092g" position="anchor"/><mml:math id="M92" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> is at least twice Fr&#x000e9;chet differentiable in the nonempty open convex domain <italic toggle="yes">D</italic> and initial guess <inline-formula id="pone.0317752.e093"><alternatives><graphic xlink:href="pone.0317752.e093.jpg" id="pone.0317752.e093g" position="anchor"/><mml:math id="M93" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> is sufficiently close to <inline-formula id="pone.0317752.e094"><alternatives><graphic xlink:href="pone.0317752.e094.jpg" id="pone.0317752.e094g" position="anchor"/><mml:math id="M94" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>. Then, <inline-formula id="pone.0317752.e095"><alternatives><graphic xlink:href="pone.0317752.e095.jpg" id="pone.0317752.e095g" position="anchor"/><mml:math id="M95" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:msub><mml:mo stretchy="false">}</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#x02265;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> converge to <inline-formula id="pone.0317752.e096"><alternatives><graphic xlink:href="pone.0317752.e096.jpg" id="pone.0317752.e096g" position="anchor"/><mml:math id="M96" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> with at least four CO.</italic></p><p><bold>Proof 2.</bold>
<italic toggle="yes">To compute the value of <inline-formula id="pone.0317752.e097"><alternatives><graphic xlink:href="pone.0317752.e097.jpg" id="pone.0317752.e097g" position="anchor"/><mml:math id="M97" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>, we need to compute the Taylor&#x02019;s expansion of <inline-formula id="pone.0317752.e098"><alternatives><graphic xlink:href="pone.0317752.e098.jpg" id="pone.0317752.e098g" position="anchor"/><mml:math id="M98" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x02032;</mml:mi><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> as</italic></p><disp-formula id="pone.0317752.e099"><alternatives><graphic xlink:href="pone.0317752.e099.jpg" id="pone.0317752.e099g" position="anchor"/><mml:math id="M99" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x02032;</mml:mi><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn><mml:mspace width="0.167em"/><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mspace width="0.167em"/><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mo>+</mml:mo><mml:mn>4</mml:mn><mml:mspace width="0.167em"/><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mspace width="0.167em"/><mml:mo>&#x02212;</mml:mo><mml:mn>8</mml:mn><mml:mspace width="0.167em"/><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>2</mml:mn><mml:mn>3</mml:mn></mml:msubsup><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi><mml:mn>3</mml:mn></mml:msubsup><mml:mspace width="0.167em"/><mml:mo>+</mml:mo><mml:mn>16</mml:mn><mml:mspace width="0.167em"/><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>2</mml:mn><mml:mn>4</mml:mn></mml:msubsup><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi><mml:mn>4</mml:mn></mml:msubsup><mml:mspace width="0.167em"/><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>1</mml:mn><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
<label>(5)</label></disp-formula><p>
<italic toggle="yes">The value of <inline-formula id="pone.0317752.e100"><alternatives><graphic xlink:href="pone.0317752.e100.jpg" id="pone.0317752.e100g" position="anchor"/><mml:math id="M100" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> is</italic>
</p><disp-formula id="pone.0317752.e101"><alternatives><graphic xlink:href="pone.0317752.e101.jpg" id="pone.0317752.e101g" position="anchor"/><mml:math id="M101" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mspace width="0.167em"/><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mspace width="0.167em"/><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi><mml:mn>3</mml:mn></mml:msubsup><mml:mspace width="0.167em"/><mml:mo>&#x02212;</mml:mo><mml:mn>4</mml:mn><mml:mspace width="0.167em"/><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>2</mml:mn><mml:mn>3</mml:mn></mml:msubsup><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi><mml:mn>4</mml:mn></mml:msubsup><mml:mspace width="0.167em"/><mml:mo>+</mml:mo><mml:mn>8</mml:mn><mml:mspace width="0.167em"/><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>2</mml:mn><mml:mn>4</mml:mn></mml:msubsup><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi><mml:mn>5</mml:mn></mml:msubsup><mml:mspace width="0.167em"/><mml:mo>+</mml:mo><mml:mn>16</mml:mn><mml:mspace width="0.167em"/><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>2</mml:mn><mml:mn>5</mml:mn></mml:msubsup><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi><mml:mn>6</mml:mn></mml:msubsup><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
<label>(6)</label></disp-formula><p>
<italic toggle="yes">Similarly, the values of <inline-formula id="pone.0317752.e102"><alternatives><graphic xlink:href="pone.0317752.e102.jpg" id="pone.0317752.e102g" position="anchor"/><mml:math id="M102" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mtext mathvariant="italic">~and~</mml:mtext><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> are</italic>
</p><disp-formula id="pone.0317752.e103"><alternatives><graphic xlink:href="pone.0317752.e103.jpg" id="pone.0317752.e103g" position="anchor"/><mml:math id="M103" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mspace width="0.167em"/><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mspace width="0.167em"/><mml:mo>&#x02212;</mml:mo><mml:mn>8</mml:mn><mml:mspace width="0.167em"/><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi><mml:mn>3</mml:mn></mml:msubsup><mml:mspace width="0.167em"/><mml:mo>+</mml:mo><mml:mn>26</mml:mn><mml:mspace width="0.167em"/><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>2</mml:mn><mml:mn>3</mml:mn></mml:msubsup><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi><mml:mn>4</mml:mn></mml:msubsup><mml:mspace width="0.167em"/><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
<label>(7)</label></disp-formula><disp-formula id="pone.0317752.e104"><alternatives><graphic xlink:href="pone.0317752.e104.jpg" id="pone.0317752.e104g" position="anchor"/><mml:math id="M104" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>4</mml:mn><mml:mspace width="0.167em"/><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi><mml:mn>3</mml:mn></mml:msubsup><mml:mspace width="0.167em"/><mml:mo>&#x02212;</mml:mo><mml:mn>28</mml:mn><mml:mspace width="0.167em"/><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>2</mml:mn><mml:mn>3</mml:mn></mml:msubsup><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi><mml:mn>4</mml:mn></mml:msubsup><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
<label>(8)</label></disp-formula><p>
<italic toggle="yes">Substituting these values in</italic>
</p><disp-formula id="pone.0317752.e105">
<alternatives><graphic xlink:href="pone.0317752.e105.jpg" id="pone.0317752.e105g" position="anchor"/><mml:math id="M105" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003d5;</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>
<italic toggle="yes">we get the error equation</italic>
</p><disp-formula id="pone.0317752.e106">
<alternatives><graphic xlink:href="pone.0317752.e106.jpg" id="pone.0317752.e106g" position="anchor"/><mml:math id="M106" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>5</mml:mn><mml:mspace width="0.167em"/><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow><mml:mn>2</mml:mn><mml:mn>3</mml:mn></mml:msubsup><mml:mspace width="0.167em"/><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mi>n</mml:mi><mml:mn>4</mml:mn></mml:msubsup><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>
<italic toggle="yes">Which shows that the CO of our proposed algorithm is four.</italic>
</p></sec><sec id="sec003"><title>3 Numerical simulations</title><p>The implementation of our proposed method requires the discretization of BVPs, and we have adopted the Chebyshev pseudospectral method [<xref rid="pone.0317752.ref007" ref-type="bibr">7</xref>, <xref rid="pone.0317752.ref008" ref-type="bibr">8</xref>] to get the operational matrices for the differentiation of different orders.</p><sec id="sec004"><title>3.1 System of nonlinear equations in 2-D</title><p>To address the correctness of the order of convergence of our proposed algorithm, we solve a set of problems and compute the COC.</p><table-wrap position="anchor" id="pone.0317752.t005"><object-id pub-id-type="doi">10.1371/journal.pone.0317752.t005</object-id><alternatives><graphic xlink:href="pone.0317752.t005" id="pone.0317752.t005g" position="float"/><table frame="hsides" rules="groups"><colgroup span="1"><col align="left" valign="middle" span="1"/><col align="left" valign="middle" span="1"/></colgroup><thead><tr><th align="left" rowspan="1" colspan="1">System of nonlinear equations: 1</th><th align="left" rowspan="1" colspan="1">System of nonlinear equations: 2</th></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">(line-circle)</td><td align="left" rowspan="1" colspan="1">(circle-circle)</td></tr><tr><td align="left" rowspan="1" colspan="1"><inline-formula id="pone.0317752.e107"><alternatives><graphic xlink:href="pone.0317752.e107" id="pone.0317752.e107g" position="anchor"/><mml:math id="M107" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>,</td><td align="left" rowspan="1" colspan="1"><inline-formula id="pone.0317752.e108"><alternatives><graphic xlink:href="pone.0317752.e108" id="pone.0317752.e108g" position="anchor"/><mml:math id="M108" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mn>0.5</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mrow/><mml:mn>2</mml:mn><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mn>0.5</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mrow/><mml:mn>2</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>,</td></tr><tr><td align="left" rowspan="1" colspan="1"><inline-formula id="pone.0317752.e109"><alternatives><graphic xlink:href="pone.0317752.e109" id="pone.0317752.e109g" position="anchor"/><mml:math id="M109" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mn>0.5</mml:mn><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>,</td><td align="left" rowspan="1" colspan="1"><inline-formula id="pone.0317752.e110"><alternatives><graphic xlink:href="pone.0317752.e110" id="pone.0317752.e110g" position="anchor"/><mml:math id="M110" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:mn>1.5</mml:mn><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>,</td></tr></tbody></table><table frame="hsides" rules="groups"><colgroup span="1"><col align="left" valign="middle" span="1"/><col align="left" valign="middle" span="1"/></colgroup><thead><tr><th align="left" rowspan="1" colspan="1">System of nonlinear equations: 3</th><th align="left" rowspan="1" colspan="1">System of nonlinear equations: 4</th></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">(circle-parabola)</td><td align="left" rowspan="1" colspan="1">(circle-hyperbola)</td></tr><tr><td align="left" rowspan="1" colspan="1">
<inline-formula id="pone.0317752.e111">
<alternatives><graphic xlink:href="pone.0317752.e111" id="pone.0317752.e111g" position="anchor"/><mml:math id="M111" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives>
</inline-formula>
</td><td align="left" rowspan="1" colspan="1"><inline-formula id="pone.0317752.e112"><alternatives><graphic xlink:href="pone.0317752.e112" id="pone.0317752.e112g" position="anchor"/><mml:math id="M112" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>,</td></tr><tr><td align="left" rowspan="1" colspan="1">
<inline-formula id="pone.0317752.e113">
<alternatives><graphic xlink:href="pone.0317752.e113" id="pone.0317752.e113g" position="anchor"/><mml:math id="M113" display="inline" overflow="scroll"><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>4</mml:mn><mml:msubsup><mml:mi>x</mml:mi><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo>+</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives>
</inline-formula>
</td><td align="left" rowspan="1" colspan="1"><inline-formula id="pone.0317752.e114"><alternatives><graphic xlink:href="pone.0317752.e114" id="pone.0317752.e114g" position="anchor"/><mml:math id="M114" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>&#x02009;.</td></tr></tbody></table><table frame="hsides" rules="groups"><colgroup span="1"><col align="left" valign="middle" span="1"/><col align="left" valign="middle" span="1"/></colgroup><thead><tr><th align="left" rowspan="1" colspan="1">System of nonlinear equations: 5</th></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">(4-D nonlinear system)</td></tr><tr><td align="left" rowspan="1" colspan="1">
<inline-formula id="pone.0317752.e115">
<alternatives><graphic xlink:href="pone.0317752.e115" id="pone.0317752.e115g" position="anchor"/><mml:math id="M115" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:msub><mml:mi>x</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></alternatives>
</inline-formula>
</td></tr><tr><td align="left" rowspan="1" colspan="1">
<inline-formula id="pone.0317752.e116">
<alternatives><graphic xlink:href="pone.0317752.e116" id="pone.0317752.e116g" position="anchor"/><mml:math id="M116" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi>x</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></alternatives>
</inline-formula>
</td></tr><tr><td align="left" rowspan="1" colspan="1">
<inline-formula id="pone.0317752.e117">
<alternatives><graphic xlink:href="pone.0317752.e117" id="pone.0317752.e117g" position="anchor"/><mml:math id="M117" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></alternatives>
</inline-formula>
</td></tr><tr><td align="left" rowspan="1" colspan="1">
<inline-formula id="pone.0317752.e118">
<alternatives><graphic xlink:href="pone.0317752.e118" id="pone.0317752.e118g" position="anchor"/><mml:math id="M118" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>.</mml:mo><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives>
</inline-formula>
</td></tr></tbody></table></alternatives></table-wrap><p>The aforementioned five systems of nonlinear equations have quadratic nonlinearity. The proposed numerical iterative method is used to solve these five problems. The convergence analysis for multiple geometric configurations commences with distinct initial guesses for each setup. For the line-circle interaction, the initial guess is set at [0.5,2.0], indicating an exploratory starting point in the two-dimensional space. Similarly, the circle-circle system begins with an initial guess of [0.5,0.1], slightly offset within the plane. The circle-parabola configuration introduces a more varied starting position with an initial guess of [&#x02212;0.4,0.4], suggesting a potential intersection or tangent solution. The circle-hyperbola scenario is approached with an initial guess of [1.0,0.4], positioning the search in a region of potential interest. Lastly, the 4-D nonlinear system, which encapsulates a complex dynamic interaction, starts from a multi-dimensional guess of [0.5,0.5,0.5,0.5,], evenly distributing the initial probing across its four dimensions. These initial guesses are pivotal for the iterative methods employed in seeking the solutions, illustrating the tailored approach based on the geometric nature and dimensionality of each system. The computational orders of convergence are reported in <xref rid="pone.0317752.t001" ref-type="table">Table 1</xref>. It is evident that the computational orders of convergence agree with the claimed OC of the proposed numerical iterative method (<xref rid="pone.0317752.e075" ref-type="disp-formula">2</xref>).</p><table-wrap position="float" id="pone.0317752.t001"><object-id pub-id-type="doi">10.1371/journal.pone.0317752.t001</object-id><label>Table 1</label><caption><title>The nonlinear equation system&#x02019;s norms are shown, and the COC is bolded and enclosed in parenthesis.</title></caption><alternatives><graphic xlink:href="pone.0317752.t001" id="pone.0317752.t001g" position="float"/><table frame="hsides" rules="groups"><colgroup span="1"><col align="left" valign="middle" span="1"/><col align="left" valign="middle" span="1"/><col align="left" valign="middle" span="1"/><col align="left" valign="middle" span="1"/><col align="left" valign="middle" span="1"/></colgroup><thead><tr><th align="left" rowspan="1" colspan="1">Line-Circle</th><th align="left" rowspan="1" colspan="1">Circle-Ellipse</th><th align="left" rowspan="1" colspan="1">Circle-Parabola</th><th align="left" rowspan="1" colspan="1">Circle-Hyperbola</th><th align="left" rowspan="1" colspan="1">4-D Nonlinear system</th></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">3.2</td><td align="left" rowspan="1" colspan="1">7.5e1</td><td align="left" rowspan="1" colspan="1">6.8e-1</td><td align="left" rowspan="1" colspan="1">8.4e-1</td><td align="left" rowspan="1" colspan="1">6.2e-1</td></tr><tr><td align="left" rowspan="1" colspan="1">1.7</td><td align="left" rowspan="1" colspan="1">1.1e2</td><td align="left" rowspan="1" colspan="1">1.0</td><td align="left" rowspan="1" colspan="1">2.1e-1</td><td align="left" rowspan="1" colspan="1">1.8e-1</td></tr><tr><td align="left" rowspan="1" colspan="1">4.4e-2 (5.7)</td><td align="left" rowspan="1" colspan="1">1.9e1 (-0.47)</td><td align="left" rowspan="1" colspan="1">1.1e-2 (-11.6)</td><td align="left" rowspan="1" colspan="1">4.1e-4 (4.5)</td><td align="left" rowspan="1" colspan="1">5.4e-5 (6.6)</td></tr><tr><td align="left" rowspan="1" colspan="1">3.8e-7 (3.3)</td><td align="left" rowspan="1" colspan="1">8.0e-1 (1.1)</td><td align="left" rowspan="1" colspan="1">5.2e-9 (3.2)</td><td align="left" rowspan="1" colspan="1">1.8e-14 (3.8)</td><td align="left" rowspan="1" colspan="1">6.5e-19 (3.9)</td></tr><tr><td align="left" rowspan="1" colspan="1">2.6e-27 (3.8)</td><td align="left" rowspan="1" colspan="1">6.1e-3 (1.9)</td><td align="left" rowspan="1" colspan="1">9.9e-35 (4.1)</td><td align="left" rowspan="1" colspan="1">6.7e-56 (4.0)</td><td align="left" rowspan="1" colspan="1">1.4e-74 (4.0)</td></tr><tr><td align="left" rowspan="1" colspan="1">5.0e-108 (4.1)</td><td align="left" rowspan="1" colspan="1">1.1e-10 (3.7)</td><td align="left" rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1"/></tr><tr><td align="left" rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1">1.1e-41 (3.9)</td><td align="left" rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1"/></tr><tr><td align="left" rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1">1.4e-165 (4.1)</td><td align="left" rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1"/></tr></tbody></table></alternatives></table-wrap><p>The numerically computed solutions as follows: For the line-circle configuration, the solution is <italic toggle="yes">x</italic><sub>1</sub>&#x02009;=&#x02009;&#x02212;0.4114 and <italic toggle="yes">x</italic><sub>2</sub>&#x02009;=&#x02009;0.9114. In the case of the circle-circle interaction, the solution is given by <italic toggle="yes">x</italic><sub>1</sub>&#x02009;=&#x02009;&#x02212;0.2071 and <italic toggle="yes">x</italic><sub>2</sub>&#x02009;=&#x02009;1.2071. For the circle-parabola system, the computed values are <italic toggle="yes">x</italic><sub>1</sub>&#x02009;=&#x02009;&#x02212;0.4698 and <italic toggle="yes">x</italic><sub>2</sub>&#x02009;=&#x02009;0.8828. The circle-hyperbola configuration results in <italic toggle="yes">x</italic><sub>1</sub>&#x02009;=&#x02009;1.2247 and <italic toggle="yes">x</italic><sub>2</sub>&#x02009;=&#x02009;0.7071. Finally, the 4-D nonlinear system presents a more complex solution set with <italic toggle="yes">x</italic><sub>1</sub>&#x02009;=&#x02009;0.81650, <italic toggle="yes">x</italic><sub>2</sub>&#x02009;=&#x02009;0.81650, <italic toggle="yes">x</italic><sub>3</sub>&#x02009;=&#x02009;0.81650, and <italic toggle="yes">x</italic><sub>4</sub>&#x02009;=&#x02009;&#x02212;0.40825, illustrating the intricate dynamics involved in higher-dimensional systems.</p><p>One may check the second order Fr&#x000e9;chet derivatives of SNLEs with quadratic nonlinearity is constant. Suppose, if <inline-formula id="pone.0317752.e124"><alternatives><graphic xlink:href="pone.0317752.e124.jpg" id="pone.0317752.e124g" position="anchor"/><mml:math id="M124" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:msup><mml:mo stretchy="false">]</mml:mo><mml:mi>T</mml:mi></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> and <inline-formula id="pone.0317752.e125"><alternatives><graphic xlink:href="pone.0317752.e125.jpg" id="pone.0317752.e125g" position="anchor"/><mml:math id="M125" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:msup><mml:mo stretchy="false">]</mml:mo><mml:mi>T</mml:mi></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> are constant vectors with respect to <inline-formula id="pone.0317752.e126"><alternatives><graphic xlink:href="pone.0317752.e126.jpg" id="pone.0317752.e126g" position="anchor"/><mml:math id="M126" display="inline" overflow="scroll"><mml:mrow><mml:mi>x</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:msup><mml:mo stretchy="false">]</mml:mo><mml:mi>T</mml:mi></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> the second order Fr&#x000e9;chet derivative is</p><disp-formula id="pone.0317752.e127">
<alternatives><graphic xlink:href="pone.0317752.e127.jpg" id="pone.0317752.e127g" position="anchor"/><mml:math id="M127" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mi>&#x02033;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi>v</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">[</mml:mo><mml:mtable><mml:mtr><mml:mtd columnalign="center"><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">(</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow><mml:mo fence="true" form="postfix" stretchy="true">)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">(</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow><mml:mo fence="true" form="postfix" stretchy="true">)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">(</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow><mml:mo fence="true" form="postfix" stretchy="true">)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center"><mml:mi>\noalign</mml:mi><mml:mrow><mml:mi>\medskip</mml:mi></mml:mrow><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">(</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow><mml:mo fence="true" form="postfix" stretchy="true">)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">(</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow><mml:mo fence="true" form="postfix" stretchy="true">)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">(</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow><mml:mo fence="true" form="postfix" stretchy="true">)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center"><mml:mi>\noalign</mml:mi><mml:mrow><mml:mi>\medskip</mml:mi></mml:mrow><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">(</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow><mml:mo fence="true" form="postfix" stretchy="true">)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">(</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow><mml:mo fence="true" form="postfix" stretchy="true">)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">(</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo fence="true" form="postfix" stretchy="true">)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center"><mml:mi>\noalign</mml:mi><mml:mrow><mml:mi>\medskip</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mspace width="0.167em"/><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">(</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow><mml:mo fence="true" form="postfix" stretchy="true">)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">(</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow><mml:mo fence="true" form="postfix" stretchy="true">)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow><mml:mspace width="0.167em"/><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mo fence="true" form="postfix" stretchy="true">]</mml:mo></mml:mrow><mml:mspace width="0.167em"/><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>which is a vector of dimension four.</p><sec id="sec005"><title>3.1.1. Basin of attraction of proposed method.</title><p>We drew the basin of attraction [<xref rid="pone.0317752.ref014" ref-type="bibr">14</xref>&#x02013;<xref rid="pone.0317752.ref018" ref-type="bibr">18</xref>] for solutions of SNLEs, assuming these solutions are simple, in order to investigate the dynamics of our suggested numerical iterative technique. For the basin of attraction, we set the parameters for our proposed method as follows: the number of iterations is ten, and the tolerance for the norm of the difference between the current iteration and the known solution is 0.01. The region for the basin of attraction is defined as <inline-formula id="pone.0317752.e128"><alternatives><graphic xlink:href="pone.0317752.e128.jpg" id="pone.0317752.e128g" position="anchor"/><mml:math id="M128" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mn>1.5</mml:mn><mml:mo>,</mml:mo><mml:mn>1.5</mml:mn><mml:mo stretchy="false">]</mml:mo><mml:mi>&#x000d7;</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mn>1.5</mml:mn><mml:mo>,</mml:mo><mml:mn>1.5</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>. In <xref rid="pone.0317752.g001" ref-type="fig">Fig 1</xref>, a line and circle intersect in a manner that yields two simple solutions. The red and blue colored regions indicate that initial guesses from these areas converge to the solutions. The green-colored region denotes divergence of the iterative method given the parameter settings. Similarly, <xref rid="pone.0317752.g002" ref-type="fig">Figs 2</xref>, <xref rid="pone.0317752.g003" ref-type="fig">3</xref>, and <xref rid="pone.0317752.g004" ref-type="fig">4</xref> show the basin of attraction for circle to circle, circle to parabola, and circle to hyperbola, respectively. The proposed method demonstrates simple dynamics for the given SNLEs. A Matlab implementation is given in Appendix.</p><fig position="float" id="pone.0317752.g001"><object-id pub-id-type="doi">10.1371/journal.pone.0317752.g001</object-id><label>Fig 1</label><caption><title>Dynamics of proposed method when a line and circle intersect, the number of iterations are ten and tolerance is 0.01.</title></caption><graphic xlink:href="pone.0317752.g001" position="float"/></fig><fig position="float" id="pone.0317752.g002"><object-id pub-id-type="doi">10.1371/journal.pone.0317752.g002</object-id><label>Fig 2</label><caption><title>Dynamics of proposed method when a circle and circle intersect, the number of iterations are ten and tolerance is 0.01.</title></caption><graphic xlink:href="pone.0317752.g002" position="float"/></fig><fig position="float" id="pone.0317752.g003"><object-id pub-id-type="doi">10.1371/journal.pone.0317752.g003</object-id><label>Fig 3</label><caption><title>Dynamics of proposed method when a parabola and circle intersect, the number of iterations are ten and tolerance is 0.01.</title></caption><graphic xlink:href="pone.0317752.g003" position="float"/></fig><fig position="float" id="pone.0317752.g004"><object-id pub-id-type="doi">10.1371/journal.pone.0317752.g004</object-id><label>Fig 4</label><caption><title>Dynamics of proposed method when a hyperbola and circle intersect, the number of iterations are ten and tolerance is 0.01.</title></caption><graphic xlink:href="pone.0317752.g004" position="float"/></fig></sec></sec><sec id="sec006"><title>3.2 Nonlinear boundary value problems</title><p>Here, we show that our proposed numerical scheme is applicable to solve SNLEs associated with nonlinear boundary value problems.</p><sec id="sec007"><title>3.2.1 Blasius equation.</title><p>The Blasius equation is a nonlinear BVP with quadratic nonlinearity</p><disp-formula id="pone.0317752.e129">
<alternatives><graphic xlink:href="pone.0317752.e129.jpg" id="pone.0317752.e129g" position="anchor"/><mml:math id="M129" display="block" overflow="scroll"><mml:msup><mml:mi>y</mml:mi><mml:mrow><mml:mo stretchy="false">&#x02034;</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">+</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mi>y</mml:mi><mml:mrow><mml:mo stretchy="false">&#x02033;</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">=</mml:mo><mml:mo stretchy="false"/><mml:mn>0</mml:mn><mml:mo stretchy="false">,</mml:mo><mml:mspace width="1em"/><mml:mo stretchy="false"/><mml:mi>x</mml:mi><mml:mo stretchy="false">&#x003f5;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">,</mml:mo><mml:mo stretchy="false">&#x0221e;)</mml:mo></mml:math></alternatives>
</disp-formula><disp-formula id="pone.0317752.e130">
<alternatives><graphic xlink:href="pone.0317752.e130.jpg" id="pone.0317752.e130g" position="anchor"/><mml:math id="M130" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mtext>under&#x000a0;the&#x000a0;BCs</mml:mtext></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><disp-formula id="pone.0317752.e131">
<alternatives><graphic xlink:href="pone.0317752.e131.jpg" id="pone.0317752.e131g" position="anchor"/><mml:math id="M131" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.167em"/><mml:mo>,</mml:mo><mml:mtext>&#x000a0;</mml:mtext><mml:msup><mml:mi>y</mml:mi><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.167em"/><mml:mo>,</mml:mo><mml:mtext>&#x000a0;</mml:mtext><mml:msup><mml:mi>y</mml:mi><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mo>&#x0221e;</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>The Blasius equation is defined over a semi-infinite interval [0 , &#x0221e;] but it can not simulate the solution over the semi-infinite interval. Assume x <sub>max</sub> is a large enough number to make the solution asymptotic. To solve the Blasius equation numerically, we must discretize the interval [0,x<sub>max</sub>]. If there are <italic toggle="yes">n</italic> grid points, then <inline-formula id="pone.0317752.e135"><alternatives><graphic xlink:href="pone.0317752.e135.jpg" id="pone.0317752.e135g" position="anchor"/><mml:math id="M135" display="inline" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>&#x022ef;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> and <inline-formula id="pone.0317752.e136"><alternatives><graphic xlink:href="pone.0317752.e136.jpg" id="pone.0317752.e136g" position="anchor"/><mml:math id="M136" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:mspace width="0.167em"/><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mspace width="0.167em"/><mml:mrow><mml:mo>+</mml:mo></mml:mrow><mml:mspace width="0.167em"/><mml:mi>cos</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mspace width="0.167em"/><mml:mrow><mml:mo>&#x02212;</mml:mo></mml:mrow><mml:mspace width="0.167em"/><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:mi>&#x003c0;</mml:mi><mml:mspace width="0.167em"/><mml:mo>/</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mspace width="0.167em"/><mml:mrow><mml:mo>&#x02212;</mml:mo></mml:mrow><mml:mspace width="0.167em"/><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> for <inline-formula id="pone.0317752.e137"><alternatives><graphic xlink:href="pone.0317752.e137.jpg" id="pone.0317752.e137g" position="anchor"/><mml:math id="M137" display="inline" overflow="scroll"><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x022ef;</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>. Grid points are not evenly spaced and are denser near the boundaries. The first-order Chebyshev differentiation matrix is <italic toggle="yes">D</italic><sub>1</sub>, and the higher-order differentiation matrix is computed by multiplying <italic toggle="yes">D</italic><sub>1</sub> by <italic toggle="yes">m</italic>, where <italic toggle="yes">m</italic> is the order of differentiation. The rank of <italic toggle="yes">D</italic><sub><italic toggle="yes">j</italic></sub> is <italic toggle="yes">n &#x02212; j</italic> If we denote the <italic toggle="yes">j</italic>th order differentiation matrix by <inline-formula id="pone.0317752.e139"><alternatives><graphic xlink:href="pone.0317752.e139.jpg" id="pone.0317752.e139g" position="anchor"/><mml:math id="M139" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mover><mml:mover><mml:mrow><mml:mi>D</mml:mi><mml:mi>&#x000d7;</mml:mi><mml:mi>D</mml:mi><mml:mi>&#x000d7;</mml:mi><mml:mo>&#x022ef;</mml:mo><mml:mi>&#x000d7;</mml:mi><mml:mi>D</mml:mi></mml:mrow><mml:mo>&#x023de;</mml:mo></mml:mover><mml:mrow><mml:mi>m</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>t</mml:mi><mml:mi>i</mml:mi><mml:mi>m</mml:mi><mml:mi>e</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:mover></mml:mrow></mml:math></alternatives></inline-formula> . The Chebyshev differentiation matrices perform poorly when the order of differentiation is high, but well when the order of differentiation is low. The matrices are full but offer high accuracy in the numerical approximation of derivatives. The discretized form of Blasius equation is</p><disp-formula id="pone.0317752.e140"><alternatives><graphic xlink:href="pone.0317752.e140.jpg" id="pone.0317752.e140g" position="anchor"/><mml:math id="M140" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>F</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x1d432;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>B</mml:mi><mml:mspace width="0.167em"/><mml:mi>&#x1d432;</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mspace width="0.167em"/><mml:mi>&#x1d432;</mml:mi><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:mspace width="0.167em"/><mml:mi>&#x1d432;</mml:mi><mml:mo>&#x02299;</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mi>&#x1d432;</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x1d42a;</mml:mi><mml:mspace width="0.167em"/><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
<label>(9)</label></disp-formula><p>where &#x1d432; is a <italic toggle="yes">n</italic>&#x02013;dimensional vector and y i = y (xi ) for i =1 ,2 , &#x022ef; , n. All matrices <italic toggle="yes">B</italic>, <italic toggle="yes">M</italic><sub>2</sub>, and <italic toggle="yes">M</italic><sub>3</sub> are n &#x000d7;n in size. The operator &#x02299; denotes the element-wise multiplication of vectors. The first, second, and last rows of matrices <italic toggle="yes">M</italic><sub>3</sub> and <italic toggle="yes">M</italic><sub>2</sub> are null. The matrix <italic toggle="yes">B</italic> is a null matrix except for first, second, and third rows. To implement boundary conditions, we create the matrix <italic toggle="yes">B</italic> and the right-hand side vector as</p><disp-formula id="pone.0317752.e147">
<alternatives><graphic xlink:href="pone.0317752.e147.jpg" id="pone.0317752.e147g" position="anchor"/><mml:math id="M147" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><disp-formula id="pone.0317752.e148">
<alternatives><graphic xlink:href="pone.0317752.e148.jpg" id="pone.0317752.e148g" position="anchor"/><mml:math id="M148" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mi>:</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>:</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><disp-formula id="pone.0317752.e149">
<alternatives><graphic xlink:href="pone.0317752.e149.jpg" id="pone.0317752.e149g" position="anchor"/><mml:math id="M149" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>:</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>:</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><disp-formula id="pone.0317752.e150">
<alternatives><graphic xlink:href="pone.0317752.e150.jpg" id="pone.0317752.e150g" position="anchor"/><mml:math id="M150" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mi>;</mml:mi><mml:mspace width="1em"/><mml:mtext>for&#x000a0;condition&#x000a0;y(x1)</mml:mtext><mml:mo>=</mml:mo><mml:mo>0</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><disp-formula id="pone.0317752.e151">
<alternatives><graphic xlink:href="pone.0317752.e151.jpg" id="pone.0317752.e151g" position="anchor"/><mml:math id="M151" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mi>;</mml:mi><mml:mspace width="1em"/><mml:mtext>for&#x000a0;condition&#x000a0;</mml:mtext><mml:mi>y</mml:mi><mml:mo>'(</mml:mo><mml:mi>x_1)=0</mml:mi></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><disp-formula id="pone.0317752.e152">
<alternatives><graphic xlink:href="pone.0317752.e152.jpg" id="pone.0317752.e152g" position="anchor"/><mml:math id="M152" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mi>;</mml:mi><mml:mspace width="1em"/><mml:mtext>for&#x000a0;condition&#x000a0;y'(x_n)=1</mml:mtext><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>and <inline-formula id="pone.0317752.e153"><alternatives><graphic xlink:href="pone.0317752.e153.jpg" id="pone.0317752.e153g" position="anchor"/><mml:math id="M153" display="inline" overflow="scroll"><mml:mrow><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>3</mml:mn><mml:mi>:</mml:mi><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>. In all notations, we adopted the Matlab syntax. The computation of higher-order Fr&#x000e9;chet derivatives is a necessary part of the implementation of numerical algorithms to solve the SNLEs associated with the discretized Blasius equation.</p><disp-formula id="pone.0317752.e154"><alternatives><graphic xlink:href="pone.0317752.e154.jpg" id="pone.0317752.e154g" position="anchor"/><mml:math id="M154" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>F</mml:mi><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x1d432;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>B</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">(</mml:mo><mml:mtext>diag</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mspace width="0.167em"/><mml:mi>&#x1d432;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mtext>diag</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x1d432;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo fence="true" form="postfix" stretchy="true">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></alternatives>
<label>(10)</label></disp-formula><disp-formula id="pone.0317752.e155"><alternatives><graphic xlink:href="pone.0317752.e155.jpg" id="pone.0317752.e155g" position="anchor"/><mml:math id="M155" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>F</mml:mi><mml:mi>&#x02033;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x1d432;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:mrow><mml:msub><mml:mi mathvariant="bold">h</mml:mi><mml:mn mathvariant="bold">1</mml:mn></mml:msub></mml:mrow><mml:mspace width="0.167em"/><mml:mrow><mml:msub><mml:mi mathvariant="bold">h</mml:mi><mml:mn mathvariant="bold">2</mml:mn></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">(</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="bold">h</mml:mi><mml:mn mathvariant="bold">1</mml:mn></mml:msub></mml:mrow><mml:mo>&#x02299;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mspace width="0.167em"/><mml:mrow><mml:msub><mml:mi mathvariant="bold">h</mml:mi><mml:mn mathvariant="bold">2</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="bold">h</mml:mi><mml:mn mathvariant="bold">2</mml:mn></mml:msub></mml:mrow><mml:mo>&#x02299;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mspace width="0.167em"/><mml:mrow><mml:msub><mml:mi mathvariant="bold">h</mml:mi><mml:mn mathvariant="bold">1</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo fence="true" form="postfix" stretchy="true">)</mml:mo></mml:mrow><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
<label>(11)</label></disp-formula><p>The implementation of our proposed algorithm is provided in the Appendix. For the numerical approximation of SNLEs associated with the Blasius equation, we take the zero-vector as an initial guess and perform six iterations. <xref rid="pone.0317752.t002" ref-type="table">Table 2</xref> contains the COC. Our numerical simulations confirm the theoretically claimed CO of our proposed method. The numerical solution of the Blasius equation is plotted along with its derivative in <xref rid="pone.0317752.g005" ref-type="fig">Figs 5</xref> and <xref rid="pone.0317752.g006" ref-type="fig">6</xref>.</p><fig position="float" id="pone.0317752.g005"><object-id pub-id-type="doi">10.1371/journal.pone.0317752.g005</object-id><label>Fig 5</label><caption><title>Numerical solution of Blasius equation.</title></caption><graphic xlink:href="pone.0317752.g005" position="float"/></fig><fig position="float" id="pone.0317752.g006"><object-id pub-id-type="doi">10.1371/journal.pone.0317752.g006</object-id><label>Fig 6</label><caption><title>Derivative of numerical solution of Blasius equation.</title></caption><graphic xlink:href="pone.0317752.g006" position="float"/></fig><table-wrap position="float" id="pone.0317752.t002"><object-id pub-id-type="doi">10.1371/journal.pone.0317752.t002</object-id><label>Table 2</label><caption><title>COC of proposed method (<xref rid="pone.0317752.e075" ref-type="disp-formula">2</xref>) for the numerical solution of Blasius equation.</title></caption><alternatives><graphic xlink:href="pone.0317752.t002" id="pone.0317752.t002g" position="float"/><table frame="hsides" rules="groups"><colgroup span="1"><col align="left" valign="middle" span="1"/><col align="left" valign="middle" span="1"/><col align="left" valign="middle" span="1"/></colgroup><thead><tr><th align="left" rowspan="1" colspan="1">Iteration no.</th><th align="left" rowspan="1" colspan="1">Norm of equations</th><th align="left" rowspan="1" colspan="1">COC</th></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">7.697191099</td><td align="left" rowspan="1" colspan="1">-</td></tr><tr><td align="left" rowspan="1" colspan="1">2</td><td align="left" rowspan="1" colspan="1">0.6413099682</td><td align="left" rowspan="1" colspan="1">-</td></tr><tr><td align="left" rowspan="1" colspan="1">3</td><td align="left" rowspan="1" colspan="1">0.01457586112</td><td align="left" rowspan="1" colspan="1">1.522735257</td></tr><tr><td align="left" rowspan="1" colspan="1">4</td><td align="left" rowspan="1" colspan="1">4.710094110e-8</td><td align="left" rowspan="1" colspan="1">3.340934537</td></tr><tr><td align="left" rowspan="1" colspan="1">5</td><td align="left" rowspan="1" colspan="1">3.332832580e-30</td><td align="left" rowspan="1" colspan="1">4.034203435</td></tr><tr><td align="left" rowspan="1" colspan="1">6</td><td align="left" rowspan="1" colspan="1">4.658910519e-119</td><td align="left" rowspan="1" colspan="1">4.011452022</td></tr></tbody></table></alternatives></table-wrap></sec></sec><sec id="sec008"><title>3.3 Falkner&#x02013;Skan equation</title><p>The Blasius boundary layer problem is generalised in Falkner and Skan&#x02019;s equation [<xref rid="pone.0317752.ref013" ref-type="bibr">13</xref>] by viewing a uniform velocity field <italic toggle="yes">W</italic><sub>0</sub> as being divided by a wedge with an angle &#x003c0; &#x003b2; /2. The Falkner&#x02013;Skan equation is</p><disp-formula id="pone.0317752.e157">
<alternatives><graphic xlink:href="pone.0317752.e157.jpg" id="pone.0317752.e157g" position="anchor"/><mml:math id="M157" display="block" overflow="scroll"><mml:msup><mml:mi>y</mml:mi><mml:mrow><mml:mo stretchy="false">&#x02034;</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">+</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mi>y</mml:mi><mml:mrow><mml:mo stretchy="false">&#x02033;</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">=</mml:mo><mml:mo stretchy="false"/><mml:mn>0</mml:mn><mml:mo stretchy="false">,</mml:mo><mml:mspace width="1em"/><mml:mo stretchy="false"/><mml:mi>x</mml:mi><mml:mo stretchy="false">&#x003f5;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">,</mml:mo><mml:mo stretchy="false">&#x0221e;)</mml:mo></mml:math></alternatives>
</disp-formula><p>under the BCs</p><disp-formula id="pone.0317752.e159">
<alternatives><graphic xlink:href="pone.0317752.e159.jpg" id="pone.0317752.e159g" position="anchor"/><mml:math id="M159" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.167em"/><mml:mo>,</mml:mo><mml:mtext>&#x000a0;</mml:mtext><mml:msup><mml:mi>y</mml:mi><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.167em"/><mml:mo>,</mml:mo><mml:mtext>&#x000a0;</mml:mtext><mml:msup><mml:mi>y</mml:mi><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mo>&#x0221e;</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>where &#x02212;0.090429 &#x02264; &#x003b2; &#x02264;4 /3 is wedge angle. When &#x003b2;=0 the Falkner-Skan equation becomes the Blasius equation. By adopting the notation of Blasius equations, we can write</p><disp-formula id="pone.0317752.e162"><alternatives><graphic xlink:href="pone.0317752.e162.jpg" id="pone.0317752.e162g" position="anchor"/><mml:math id="M162" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>F</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>B</mml:mi><mml:mspace width="0.167em"/><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mspace width="0.167em"/><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo>&#x02299;</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo>+</mml:mo><mml:mi>&#x003b2;</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mi>&#x1d42a;</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn mathvariant="bold">0</mml:mn></mml:mrow><mml:mspace width="0.167em"/><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
<label>(12)</label></disp-formula><p>where B and &#x1d42a; are identical to those used in Blasius equation. The higher-order Fr&#x000e9;chet derivatives can be obtained as</p><disp-formula id="pone.0317752.e164"><alternatives><graphic xlink:href="pone.0317752.e164.jpg" id="pone.0317752.e164g" position="anchor"/><mml:math id="M164" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>F</mml:mi><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>B</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">(</mml:mo><mml:mtext>diag</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mspace width="0.167em"/><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mtext>diag</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo fence="true" form="postfix" stretchy="true">)</mml:mo></mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn><mml:mspace width="0.167em"/><mml:mi>&#x003b2;</mml:mi><mml:mspace width="0.167em"/><mml:mtext>diag</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:msub><mml:mi>D</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></alternatives>
<label>(13)</label></disp-formula><disp-formula id="pone.0317752.e165"><alternatives><graphic xlink:href="pone.0317752.e165.jpg" id="pone.0317752.e165g" position="anchor"/><mml:math id="M165" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>F</mml:mi><mml:mi>&#x02033;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:mrow><mml:msub><mml:mi mathvariant="bold">h</mml:mi><mml:mn mathvariant="bold">1</mml:mn></mml:msub></mml:mrow><mml:mspace width="0.167em"/><mml:mrow><mml:msub><mml:mi mathvariant="bold">h</mml:mi><mml:mn mathvariant="bold">2</mml:mn></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">(</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="bold">h</mml:mi><mml:mn mathvariant="bold">1</mml:mn></mml:msub></mml:mrow><mml:mo>&#x02299;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mspace width="0.167em"/><mml:mrow><mml:msub><mml:mi mathvariant="bold">h</mml:mi><mml:mn mathvariant="bold">2</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="bold">h</mml:mi><mml:mn mathvariant="bold">2</mml:mn></mml:msub></mml:mrow><mml:mo>&#x02299;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mspace width="0.167em"/><mml:mrow><mml:msub><mml:mi mathvariant="bold">h</mml:mi><mml:mn mathvariant="bold">1</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo fence="true" form="postfix" stretchy="true">)</mml:mo></mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn><mml:mspace width="0.167em"/><mml:mi>&#x003b2;</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">h</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>&#x02299;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">h</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
<label>(14)</label></disp-formula><p>We can observe that the 2<sup><italic toggle="yes">nd</italic></sup>-order Fr&#x000e9;chet derivative is symmetric, i.e., F &#x02033; (<bold><italic toggle="yes">y</italic></bold> ) <bold>h1 h2</bold> . The convergence of our proposed method (<xref rid="pone.0317752.e075" ref-type="disp-formula">2</xref>) for the numerical approximation of Falkner-Skan equation is depicted in <xref rid="pone.0317752.g007" ref-type="fig">Figs 7</xref> and <xref rid="pone.0317752.g008" ref-type="fig">8</xref>. Whereas, the COC is shown in <xref rid="pone.0317752.t003" ref-type="table">Table 3</xref>.</p><fig position="float" id="pone.0317752.g007"><object-id pub-id-type="doi">10.1371/journal.pone.0317752.g007</object-id><label>Fig 7</label><caption><title>Numerical solution of Falkner-Skan equation for &#x003b2; =4 /3.</title></caption><graphic xlink:href="pone.0317752.g007" position="float"/></fig><fig position="float" id="pone.0317752.g008"><object-id pub-id-type="doi">10.1371/journal.pone.0317752.g008</object-id><label>Fig 8</label><caption><title>Derivative of numerical solution of Falkner-Skan equation for &#x003b2; =4 /3.</title></caption><graphic xlink:href="pone.0317752.g008" position="float"/></fig><table-wrap position="float" id="pone.0317752.t003"><object-id pub-id-type="doi">10.1371/journal.pone.0317752.t003</object-id><label>Table 3</label><caption><title>COC of proposed method (<xref rid="pone.0317752.e075" ref-type="disp-formula">2</xref>) for the numerical approximation of Falkner-Skan equation (&#x003b2; =4 /3).</title></caption><alternatives><graphic xlink:href="pone.0317752.t003" id="pone.0317752.t003g" position="float"/><table frame="hsides" rules="groups"><colgroup span="1"><col align="left" valign="middle" span="1"/><col align="left" valign="middle" span="1"/><col align="left" valign="middle" span="1"/></colgroup><thead><tr><th align="left" rowspan="1" colspan="1">Iteration no.</th><th align="left" rowspan="1" colspan="1">Norm of equations</th><th align="left" rowspan="1" colspan="1">COC</th></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">1.5e-2</td><td align="left" rowspan="1" colspan="1">-</td></tr><tr><td align="left" rowspan="1" colspan="1">2</td><td align="left" rowspan="1" colspan="1">6.2e-11</td><td align="left" rowspan="1" colspan="1">-</td></tr><tr><td align="left" rowspan="1" colspan="1">3</td><td align="left" rowspan="1" colspan="1">7.3e-44</td><td align="left" rowspan="1" colspan="1">3.9</td></tr><tr><td align="left" rowspan="1" colspan="1">4</td><td align="left" rowspan="1" colspan="1">1.9e-175</td><td align="left" rowspan="1" colspan="1">4.0</td></tr><tr><td align="left" rowspan="1" colspan="1">5</td><td align="left" rowspan="1" colspan="1">1.0e-701</td><td align="left" rowspan="1" colspan="1">4.0</td></tr></tbody></table></alternatives></table-wrap><p>In the coming subsections, we show that our proposed numerical method <xref rid="pone.0317752.e075" ref-type="disp-formula">2</xref> is also applicable to solve the nonlinear problem of quadratic nonlinearity in cosmology and computational fluid dynamics.</p></sec><sec id="sec009"><title>3.4 Lane-Emden equation with index = 2</title><p>The Lane-Emden equation is a dimensionless Poisson&#x02019;s equation for polytropic fluid that is spherically symmetric and self-gravitating under the Newtonian gravitational potential. The Lane-Emden equation is</p><disp-formula id="pone.0317752.e170"><alternatives><graphic xlink:href="pone.0317752.e170.jpg" id="pone.0317752.e170g" position="anchor"/><mml:math id="M170" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>x</mml:mi></mml:mrow></mml:mfrac><mml:mspace width="0.167em"/><mml:mfrac><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>d</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:mfrac><mml:mrow><mml:mo fence="true" form="prefix" stretchy="true">(</mml:mo><mml:msup><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mspace width="0.167em"/><mml:mfrac><mml:mrow><mml:mi>d</mml:mi><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>d</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:mfrac><mml:mo fence="true" form="postfix" stretchy="true">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msup><mml:mi>y</mml:mi><mml:mi>n</mml:mi></mml:msup><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mrow></mml:math></alternatives>
<label>(15)</label></disp-formula><p>under the BCs</p><disp-formula id="pone.0317752.e171">
<alternatives><graphic xlink:href="pone.0317752.e171.jpg" id="pone.0317752.e171g" position="anchor"/><mml:math id="M171" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mspace width="0.167em"/><mml:mo>,</mml:mo><mml:msup><mml:mi>y</mml:mi><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.167em"/><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>where <italic toggle="yes">n</italic> is the index of the Lane-Emden equation. As we are dealing with quadratic nonlinearity, we take <italic toggle="yes">n</italic>&#x02009;=&#x02009;2. Using the numerical iterative method <xref rid="pone.0317752.e075" ref-type="disp-formula">2</xref>, we calculate the numerical solution of the Lane-Emden equation and the results are depicted in <xref rid="pone.0317752.g009" ref-type="fig">Figs 9</xref> and <xref rid="pone.0317752.g010" ref-type="fig">10</xref>. To begin the numerical simulation, the initial guess is y =x, xi &#x02208; [0 , 6], and y (1 ) =1.</p><fig position="float" id="pone.0317752.g009"><object-id pub-id-type="doi">10.1371/journal.pone.0317752.g009</object-id><label>Fig 9</label><caption><title>Numerical solution of Lane-Emden equation for n = 2.</title></caption><graphic xlink:href="pone.0317752.g009" position="float"/></fig><fig position="float" id="pone.0317752.g010"><object-id pub-id-type="doi">10.1371/journal.pone.0317752.g010</object-id><label>Fig 10</label><caption><title>Derivative of numerical solution of Lane-Emden equation for n = 2.</title></caption><graphic xlink:href="pone.0317752.g010" position="float"/></fig></sec><sec id="sec010"><title>3.5 Nano-particles in fluid</title><p>A modelling equation for nono-particles in fluid is as follows</p><disp-formula id="pone.0317752.e177"><alternatives><graphic xlink:href="pone.0317752.e177.jpg" id="pone.0317752.e177g" position="anchor"/><mml:math id="M177" display="block" overflow="scroll"><mml:msup><mml:mi>y</mml:mi><mml:mrow><mml:mo stretchy="false">&#x02034;</mml:mo></mml:mrow></mml:msup><mml:mo>&#x02012;</mml:mo><mml:mi>S</mml:mi><mml:msub><mml:mi>A</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msup><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02012;</mml:mo><mml:mi>&#x003d5;</mml:mi></mml:mrow><mml:mrow><mml:mn>2.5</mml:mn></mml:mrow></mml:msup><mml:mrow><mml:mn>3</mml:mn><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:mn>2</mml:mn><mml:msup><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">&#x02033;</mml:mo></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mi>x</mml:mi><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:mn>2</mml:mn><mml:msup><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">&#x02033;</mml:mo></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">&#x02033;</mml:mo></mml:mrow></mml:msup><mml:msup><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">&#x02033;</mml:mo></mml:mrow></mml:msup><mml:mo>&#x02012;</mml:mo><mml:mi>f</mml:mi><mml:msup><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">&#x02033;</mml:mo></mml:mrow></mml:msup></mml:mrow><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mstyle scriptlevel="0"><mml:mspace width="1em"/></mml:mstyle><mml:mi>x</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo><mml:mo>,</mml:mo></mml:math></alternatives>
<label>(16)</label></disp-formula><p>under the BCs</p><disp-formula id="pone.0317752.e178">
<alternatives><graphic xlink:href="pone.0317752.e178.jpg" id="pone.0317752.e178g" position="anchor"/><mml:math id="M178" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>f</mml:mi><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.167em"/><mml:mo>,</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.167em"/><mml:mo>,</mml:mo><mml:msup><mml:mi>f</mml:mi><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.167em"/><mml:mo>,</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>To simulate the equation (<xref rid="pone.0317752.e177" ref-type="disp-formula">16</xref>), we assume the following values of the related parameters:</p><p><italic toggle="yes">k</italic><sub><italic toggle="yes">s</italic></sub>&#x02009;=&#x02009;401, <italic toggle="yes">k</italic><sub><italic toggle="yes">f</italic></sub>&#x02009;=&#x02009;0.1613, <italic toggle="yes">&#x003c1;<sub>s</sub></italic> = 8933, <italic toggle="yes">&#x003c1;</italic><sub>f</sub> = 997.1, <italic toggle="yes">c</italic><sub><italic toggle="yes">ps</italic></sub>&#x02009;=&#x02009;4179, <italic toggle="yes">S</italic>&#x02009;=&#x02009;1, &#x003d5; = 0.15, <inline-formula id="pone.0317752.e182"><alternatives><graphic xlink:href="pone.0317752.e182.jpg" id="pone.0317752.e182g" position="anchor"/><mml:math id="M182" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003d5;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>&#x003d5;</mml:mi><mml:mspace width="0.167em"/><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#x003c1;</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mi>&#x003c1;</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>. The quadratic nonlinearity in (<xref rid="pone.0317752.e177" ref-type="disp-formula">16</xref>) is <italic toggle="yes">f&#x02032; f&#x02033;</italic> &#x02012;<italic toggle="yes">f f&#x02034;</italic>. The initial guess is a zero vector for the numerical simulation. To compute the numerical solution, the application of our proposed method is depicted in <xref rid="pone.0317752.g011" ref-type="fig">Figs 11</xref> and <xref rid="pone.0317752.g012" ref-type="fig">12</xref>.</p><fig position="float" id="pone.0317752.g011"><object-id pub-id-type="doi">10.1371/journal.pone.0317752.g011</object-id><label>Fig 11</label><caption><title>Numerical solution of nano-particles in fluid.</title></caption><graphic xlink:href="pone.0317752.g011" position="float"/></fig><fig position="float" id="pone.0317752.g012"><object-id pub-id-type="doi">10.1371/journal.pone.0317752.g012</object-id><label>Fig 12</label><caption><title>Derivative of numerical solution of nano-particles in fluid.</title></caption><graphic xlink:href="pone.0317752.g012" position="float"/></fig></sec><sec id="sec011"><title>3.6 Natural convection</title><p>A natural convection phenomena can be modelled as</p><disp-formula id="pone.0317752.e184"><alternatives><graphic xlink:href="pone.0317752.e184.jpg" id="pone.0317752.e184g" position="anchor"/><mml:math id="M184" display="block" overflow="scroll"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003d5;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>&#x003d5;</mml:mi><mml:mspace width="0.167em"/><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#x003c1;</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mi>&#x003c1;</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives>
<label>(17)</label></disp-formula><disp-formula id="pone.0317752.e185"><alternatives><graphic xlink:href="pone.0317752.e185.jpg" id="pone.0317752.e185g" position="anchor"/><mml:math id="M185" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>z</mml:mi><mml:mi>&#x02033;</mml:mi></mml:msup><mml:mo>+</mml:mo><mml:mn>3</mml:mn><mml:mo>/</mml:mo><mml:mn>4</mml:mn><mml:mspace width="0.167em"/><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>Pr</mml:mtext></mml:mstyle><mml:mspace width="0.167em"/><mml:mi>y</mml:mi><mml:mspace width="0.167em"/><mml:msup><mml:mi>z</mml:mi><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.167em"/><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
<label>(18)</label></disp-formula><p>under the BCs</p><disp-formula id="pone.0317752.e186">
<alternatives><graphic xlink:href="pone.0317752.e186.jpg" id="pone.0317752.e186g" position="anchor"/><mml:math id="M186" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.167em"/><mml:mo>,</mml:mo><mml:msup><mml:mi>y</mml:mi><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.167em"/><mml:mo>,</mml:mo><mml:msup><mml:mi>y</mml:mi><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mo>&#x0221e;</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.167em"/><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mspace width="0.167em"/><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>&#x0221e;</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.167em"/><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives>
</disp-formula><p>The term <inline-formula id="pone.0317752.e187"><alternatives><graphic xlink:href="pone.0317752.e187.jpg" id="pone.0317752.e187g" position="anchor"/><mml:math id="M187" display="inline" overflow="scroll"><mml:mrow><mml:mn>3</mml:mn><mml:mo>/</mml:mo><mml:mn>4</mml:mn><mml:mspace width="0.167em"/><mml:mi>y</mml:mi><mml:mspace width="0.167em"/><mml:mi>y</mml:mi><mml:mi>&#x02033;</mml:mi><mml:mspace width="0.167em"/><mml:mrow><mml:mo>&#x02212;</mml:mo></mml:mrow><mml:mspace width="0.167em"/><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>y</mml:mi><mml:mi>&#x02032;</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow/><mml:mn>2</mml:mn><mml:mo>/</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></alternatives></inline-formula> in the preceding equation is quadratically nonlinear. The vector of 1&#x02019;s is taken as an initial guess for the numerical simulations. For Pr&#x02009;=&#x02009;1, the numerical solution for the natural convection problem is plotted in <xref rid="pone.0317752.g013" ref-type="fig">Fig 13</xref> and derivative of numerically computed solution is plotted in <xref rid="pone.0317752.g014" ref-type="fig">Fig 14</xref>.</p><fig position="float" id="pone.0317752.g013"><object-id pub-id-type="doi">10.1371/journal.pone.0317752.g013</object-id><label>Fig 13</label><caption><title>Numerical solution of natural convection (Pr&#x02009;=&#x02009;1).</title></caption><graphic xlink:href="pone.0317752.g013" position="float"/></fig><fig position="float" id="pone.0317752.g014"><object-id pub-id-type="doi">10.1371/journal.pone.0317752.g014</object-id><label>Fig 14</label><caption><title>Derivative of numerical solution of natural convection (Pr&#x02009;=&#x02009;1).</title></caption><graphic xlink:href="pone.0317752.g014" position="float"/></fig></sec><sec id="sec012"><title>3.7 Partial differential equations with quadratic nonlinearity with inclusion of semi-linear terms</title><p>To test the validity of our proposed algorithm to deal with the quadratic nonlinearity for the boundary value problems in 2-D, we consider the following partial differential equation</p><disp-formula id="pone.0317752.e188"><alternatives><graphic xlink:href="pone.0317752.e188.jpg" id="pone.0317752.e188g" position="anchor"/><mml:math id="M188" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi>&#x003b1;</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>&#x003b2;</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>y</mml:mi><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:msup><mml:mi>u</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:mo>,</mml:mo><mml:mspace linebreak="newline"/><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>where&#x000a0;</mml:mtext></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>&#x02208;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mi>&#x000d7;</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>y</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mi>y</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mtext>&#x000a0;with&#x000a0;Dirichlet&#x000a0;boundary&#x000a0;conditions.&#x000a0;</mml:mtext></mml:mstyle></mml:mrow></mml:mrow></mml:mrow></mml:math></alternatives>
<label>(19)</label></disp-formula><p>We assume the solution <inline-formula id="pone.0317752.e189"><alternatives><graphic xlink:href="pone.0317752.e189.jpg" id="pone.0317752.e189g" position="anchor"/><mml:math id="M189" display="inline" overflow="scroll"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>sin</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:mi>sin</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mtext mathvariant="italic">and</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>&#x02208;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mspace width="0.167em"/><mml:mi>&#x003c0;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mrow/><mml:mn>2</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>. One can compute the right hand term <inline-formula id="pone.0317752.e190"><alternatives><graphic xlink:href="pone.0317752.e190.jpg" id="pone.0317752.e190g" position="anchor"/><mml:math id="M190" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>&#x003b2;</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.167em"/><mml:mi>u</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mrow/><mml:mn>2</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>. To perform the simulations, we choose <inline-formula id="pone.0317752.e191"><alternatives><graphic xlink:href="pone.0317752.e191.jpg" id="pone.0317752.e191g" position="anchor"/><mml:math id="M191" display="inline" overflow="scroll"><mml:mrow><mml:mi>&#x003b1;</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>sin</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>+</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mtext mathvariant="italic">~and~</mml:mtext><mml:mi>&#x003b2;</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>cos</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>+</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>. To make comparison of Newton and our propose method, we ran twenty simulations of each method and results are depicted in <xref rid="pone.0317752.t004" ref-type="table">Table 4</xref>. The <xref rid="pone.0317752.t004" ref-type="table">Table 4</xref> shows that our proposed numerical iterative method is <bold>1.7118</bold> times faster than the classical Newton method. The numerically computed solution of 2-D partial differential equation and the absolute errors are shown in <xref rid="pone.0317752.g015" ref-type="fig">Figs 15</xref> and <xref rid="pone.0317752.g016" ref-type="fig">16</xref>, respectively. Matlab code of our proposed method for the solution of partial differential equation is provided in the appendix.</p><fig position="float" id="pone.0317752.g015"><object-id pub-id-type="doi">10.1371/journal.pone.0317752.g015</object-id><label>Fig 15</label><caption><title>Numerically computing solution of 2-D partial differential equation.</title></caption><graphic xlink:href="pone.0317752.g015" position="float"/></fig><fig position="float" id="pone.0317752.g016"><object-id pub-id-type="doi">10.1371/journal.pone.0317752.g016</object-id><label>Fig 16</label><caption><title>Absolute error in the computed solution of 2-D partial differential equation.</title></caption><graphic xlink:href="pone.0317752.g016" position="float"/></fig><table-wrap position="float" id="pone.0317752.t004"><object-id pub-id-type="doi">10.1371/journal.pone.0317752.t004</object-id><label>Table 4</label><caption><title>Average simulation elapsed times for the comparison of Newton and our proposed method.</title></caption><alternatives><graphic xlink:href="pone.0317752.t004" id="pone.0317752.t004g" position="float"/><table frame="hsides" rules="groups"><colgroup span="1"><col align="left" valign="middle" span="1"/><col align="left" valign="middle" span="1"/><col align="left" valign="middle" span="1"/></colgroup><thead><tr><th align="left" rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1">Newton Method</th><th align="left" rowspan="1" colspan="1">Proposed Method</th></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">Problem type</td><td align="left" rowspan="1" colspan="1">2-D Nonlinear boundary value problem</td><td align="left" rowspan="1" colspan="1">same</td></tr><tr><td align="left" rowspan="1" colspan="1">Size of system of nonlinear equations</td><td align="left" rowspan="1" colspan="1">60&#x000d7;60</td><td align="left" rowspan="1" colspan="1">same</td></tr><tr><td align="left" rowspan="1" colspan="1">No. of simulations for time evaluation</td><td align="left" rowspan="1" colspan="1">20</td><td align="left" rowspan="1" colspan="1">same</td></tr><tr><td align="left" rowspan="1" colspan="1">Criteria for the convergence</td><td align="left" rowspan="1" colspan="1">1.0 &#x000d7;10<sup>&#x02212;10</sup></td><td align="left" rowspan="1" colspan="1">same</td></tr><tr><td align="left" rowspan="1" colspan="1">Average simulation elapse time</td><td align="left" rowspan="1" colspan="1">0.59163</td><td align="left" rowspan="1" colspan="1">0.34562</td></tr></tbody></table></alternatives></table-wrap></sec></sec><sec sec-type="conclusions" id="sec013"><title>4 Conclusions</title><p>In the present research, we focused on the BVPs that have quadratic nonlinearity. There is a large class of physics problems that have quadratic nonlinearity by definition. To get the benefit of the quadratic nonlinearity, we developed a single-point numerical iterative method that uses the information of the 2<sup><italic toggle="yes">nd</italic></sup>-order Fr&#x000e9;chet derivative. Our proposed method assumed that the 2<sup><italic toggle="yes">nd</italic></sup>-order Fr&#x000e9;chet derivative should be constant, and hence all the higher-order Fr&#x000e9;chet derivatives are zero tensors. The efficiency index of our method is higher than that of the Newton method because the Newton method attains CO 2 by using two function evaluations, whereas our method attains CO 4 with the same number of function evaluations. The Newton method needs to solve a single system of linear equations, while our method uses three systems of linear equations. To make the proposed method efficient, we calculate the LU factors of the Jacobian and then solve three lower and upper triangular systems. In all test examples, we have proved the validity of our proposed method. In all cases, the COC is almost four, which is aligned with the theoretically approved CO of our proposed method. Our proposed method is not valid when the nonlinearity is not quadratic.</p></sec><sec id="sec014"><title>Appendix</title><p specific-use="line">
<bold>Maple implementation of our proposed method for the Blasius equation.</bold>
</p><p specific-use="line">
<monospace>&#x0003e; restart;</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; Digits := 1000;</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; with(LinearAlgebra);</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; n := 30;</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; n := n - 1;</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; x := Vector(n + 1, i -&#x0003e; cos(1.0*Pi*(i - 1)/n));</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; c1 := Vector(n + 1, 1);</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; c1[1] := 2.0;</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; c1[n + 1] := 2.0;</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; c2 := Vector(n + 1, i -&#x0003e; (-1)^(i - 1));</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; c := Vector(n + 1, i -&#x0003e; c1[i]*c2[i]);</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; X := Matrix(n + 1, n + 1, (j, i) -&#x0003e; x(j));</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; XT := Matrix(n + 1, n + 1, (i, j) -&#x0003e; x(j));</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; dX := X - XT;</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; A := dX + 1.0*IdentityMatrix(n + 1);</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; B := Matrix(n + 1, n + 1, (i, j) -&#x0003e; c(i)/(c(j)*A(i, j)));</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; U := DiagonalMatrix(Vector(n + 1, i -&#x0003e; add(B[i, j],</monospace>
</p><p specific-use="line">
<monospace>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;j::integer = 1 .. n + 1)));</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; M := U - B;</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; x := Vector(n + 1, i -&#x0003e; x[n + 2 - i]);</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; a := 0;</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; b := 11;</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; x := 0.5*&#x02018;+&#x02018; ((b - a)*x, a + b);</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; M1 := 2*M/(b - a);</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; M2 := M1 . M1;</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; M3 := M2 . M1;</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; B := Matrix(n + 1);</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; B[1, 1] := 1;</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; B[2, 1 .. n + 1] := M1[1, 1 .. n + 1];</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; B[n + 1, 1 .. n + 1] := M1[n + 1, 1 .. n + 1];</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; M2[[1, 2, n + 1], 1 .. n + 1] := 0;</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; M3[[1, 2, n + 1], 1 .. n + 1] := 0;</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; Rhs := Vector(n + 1);</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; Rhs[n + 1] := 1;</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; y := Vector(n + 1);</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; iter := 6;</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; normf := Vector(iter + 1);</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; M2y := M2 . y;</monospace>
</p><p specific-use="line">
<monospace>&#x0003e; f := (B . y) + (M3 . y) + 0.5*(y .&#x000a0;&#x000a0;M2y) - Rhs;</monospace>
</p><disp-formula id="pone.0317752.e192">
<graphic xlink:href="pone.0317752.e192.jpg" id="pone.0317752.e192g" position="anchor"/>
</disp-formula><p>
<bold>Matlab implementation of basin of attraction for our proposed method.</bold>
</p><p specific-use="line">
<monospace>clc; clear all; close all;</monospace>
</p><p specific-use="line">
<monospace>% Define the four solutions to the system of equations</monospace>
</p><p specific-use="line">
<monospace>s1 = [-1.224745; -0.707107];</monospace>
</p><p specific-use="line">
<monospace>s2 = [-1.224745; 0.707107];</monospace>
</p><p specific-use="line">
<monospace>s3 = [1.224745; -0.707107];</monospace>
</p><p specific-use="line">
<monospace>s4 = [1.224745; 0.707107];</monospace>
</p><p specific-use="line">
<monospace>% Number of iterations for the proposed method and</monospace>
</p><p specific-use="line">
<monospace>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;tolerance for convergence</monospace>
</p><p specific-use="line">
<monospace>iter = 10;</monospace>
</p><p specific-use="line">
<monospace>tolerance = 0.01;</monospace>
</p><p specific-use="line">
<monospace>% Generate a grid of initial guesses for the proposed method</monospace>
</p><p specific-use="line">
<monospace>x_range = linspace(-1.5, 1.5, 400);</monospace>
</p><p specific-use="line">
<monospace>y_range = linspace(-1.5, 1.5, 400);</monospace>
</p><p specific-use="line">
<monospace>[X, Y] = meshgrid(x_range, y_range);</monospace>
</p><p specific-use="line">
<monospace>% Initialize a matrix to store the convergence status of</monospace>
</p><p specific-use="line">
<monospace>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;each initial guess</monospace>
</p><p specific-use="line">
<monospace>status = zeros(size(X));</monospace>
</p><p specific-use="line">
<monospace>% 0 indicates non-convergence,</monospace>
</p><p specific-use="line">
<monospace>%1-4 indicate convergence to one of the four solutions</monospace>
</p><p specific-use="line">
<monospace>% Loop over all initial guesses</monospace>
</p><p specific-use="line">
<monospace>for ix = 1:numel(X)</monospace>
</p><p specific-use="line">
<monospace>&#x000a0;&#x000a0;&#x000a0;&#x000a0;% Set the current initial guess</monospace>
</p><p specific-use="line">
<monospace>&#x000a0;&#x000a0;&#x000a0;&#x000a0;x = [X(ix); Y(ix)];</monospace>
</p><p specific-use="line">
<monospace>&#x000a0;&#x000a0;&#x000a0;&#x000a0;% Perform the iterative proposed&#x000a0;&#x000a0;method</monospace>
</p><disp-formula id="pone.0317752.e193">
<graphic xlink:href="pone.0317752.e193.jpg" id="pone.0317752.e193g" position="anchor"/>
</disp-formula><p specific-use="line">
<monospace>&#x000a0;&#x000a0;&#x000a0;&#x000a0;% Check for convergence to one of the solutions</monospace>
</p><p specific-use="line">
<monospace>&#x000a0;&#x000a0;&#x000a0;&#x000a0;F = [x(1)^2 + x(2)^2 - 2; x(1)^2 - x(2)^2 - 1];</monospace>
</p><disp-formula id="pone.0317752.e194">
<graphic xlink:href="pone.0317752.e194.jpg" id="pone.0317752.e194g" position="anchor"/>
</disp-formula><p specific-use="line">
<monospace>% Plotting the results</monospace>
</p><p specific-use="line">
<monospace>figure; hold on;</monospace>
</p><p specific-use="line">
<monospace>% Plot points corresponding to each of the four solutions</monospace>
</p><p specific-use="line">
<monospace>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;in different colors</monospace>
</p><p specific-use="line">
<monospace>scatter(X(status == 1), Y(status == 1), 1, &#x02019;r&#x02019;, &#x02019;filled&#x02019;,...</monospace>
</p><p specific-use="line">
<monospace>&#x02019;DisplayName&#x02019;, &#x02019;Solution 1&#x02019;);</monospace>
</p><p specific-use="line">
<monospace>scatter(X(status == 2), Y(status == 2), 1, &#x02019;b&#x02019;, &#x02019;filled&#x02019;,...</monospace>
</p><p specific-use="line">
<monospace>&#x02019;DisplayName&#x02019;, &#x02019;Solution 2&#x02019;);</monospace>
</p><p specific-use="line">
<monospace>scatter(X(status == 3), Y(status == 3), 1, &#x02019;m&#x02019;, &#x02019;filled&#x02019;,...</monospace>
</p><p specific-use="line">
<monospace>&#x02019;DisplayName&#x02019;, &#x02019;Solution 3&#x02019;);</monospace>
</p><p specific-use="line">
<monospace>scatter(X(status == 4), Y(status == 4), 1, &#x02019;c&#x02019;, &#x02019;filled&#x02019;,...</monospace>
</p><p specific-use="line">
<monospace>&#x02019;DisplayName&#x02019;, &#x02019;Solution 4&#x02019;);</monospace>
</p><p specific-use="line">
<monospace>% Plot divergent points with a distinct marker</monospace>
</p><p specific-use="line">
<monospace>scatter(X(status == 0), Y(status == 0), 25, &#x02019;g&#x02019;, &#x02019;filled&#x02019;,...</monospace>
</p><p specific-use="line">
<monospace>&#x02019;DisplayName&#x02019;, &#x02019;Divergence&#x02019;);</monospace>
</p><p specific-use="line">
<monospace>% Draw the circle and hyperbola defined by the system of equations</monospace>
</p><p specific-use="line">
<monospace>fimplicit(@(x,y) x.^2 + y.^2 - 2, [-1.5 1.5 -1.5 1.5],</monospace>
</p><p specific-use="line">
<monospace>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x02019;LineWidth&#x02019;, 2,...</monospace>
</p><p specific-use="line">
<monospace>&#x02019;Color&#x02019;,&#x02019;k&#x02019;, &#x02019;DisplayName&#x02019;, &#x02019;Circle: x^2 + y^2 = 2&#x02019;);</monospace>
</p><p specific-use="line">
<monospace>fimplicit(@(x,y) x.^2 - y.^2 - 1, [-1.5 1.5 -1.5 1.5],</monospace>
</p><p specific-use="line">
<monospace>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x02019;LineWidth&#x02019;, 2,...</monospace>
</p><p specific-use="line">
<monospace>&#x02019;Color&#x02019;,&#x02019;k&#x02019;, &#x02019;DisplayName&#x02019;, &#x02019;Hyperbola: x^2-y^2 = 1&#x02019;);</monospace>
</p><p specific-use="line">
<monospace>% Label axes, show the legend, and set other plot properties</monospace>
</p><p specific-use="line">
<monospace>xlabel(&#x02019;x&#x02019;);</monospace>
</p><p specific-use="line">
<monospace>ylabel(&#x02019;y&#x02019;);</monospace>
</p><p specific-use="line">
<monospace>legend(&#x02019;Location&#x02019;, &#x02019;eastoutside&#x02019;);</monospace>
</p><p specific-use="line">
<monospace>legend show;</monospace>
</p><p specific-use="line">
<monospace>axis equal;</monospace>
</p><p specific-use="line">
<monospace>grid on;</monospace>
</p><p specific-use="line">
<monospace>xlim([-1.5, 1.5]);</monospace>
</p><p specific-use="line">
<monospace>ylim([-1.5, 1.5]);</monospace>
</p><p specific-use="line">
<monospace>hold off;</monospace>
</p><p>
<bold>Matlab implementation of proposed method for solving nonlinear partial differential equation</bold>
</p><p specific-use="line">
<monospace>clc;</monospace>
</p><p specific-use="line">
<monospace>clear all;</monospace>
</p><p specific-use="line">
<monospace>close all;</monospace>
</p><p specific-use="line">
<monospace>format short g</monospace>
</p><p specific-use="line">
<monospace>% Define the partial differential equation</monospace>
</p><p specific-use="line">
<monospace>% alpha(x,y) * u_xx + beta(x,y) * u_yy + u^2 = f(x,y)</monospace>
</p><p specific-use="line">
<monospace>% The exact solution is u(x,y) = sin(x) * sin(y)</monospace>
</p><p specific-use="line">
<monospace>% The function f(x,y) is derived from this exact solution.</monospace>
</p><p specific-use="line">
<monospace>% Define the exact solution function</monospace>
</p><p specific-use="line">
<monospace>u = @(x,y) sin(x).*sin(y);</monospace>
</p><p specific-use="line">
<monospace>% Define coefficient functions alpha(x,y) and beta(x,y)</monospace>
</p><p specific-use="line">
<monospace>alpha = @(x,y) sin(x + y);</monospace>
</p><p specific-use="line">
<monospace>beta&#x000a0;&#x000a0;= @(x,y) cos(x + y);</monospace>
</p><p specific-use="line">
<monospace>% Define the source term f(x,y)</monospace>
</p><p specific-use="line">
<monospace>f = @(x,y)&#x000a0;&#x000a0;-(alpha(x,y) + beta(x,y)) * u(x,y) + u(x,y)^2;</monospace>
</p><p specific-use="line">
<monospace>% Define domain boundaries</monospace>
</p><p specific-use="line">
<monospace>ax = 0; bx = pi;</monospace>
</p><p specific-use="line">
<monospace>ay = 0; by = pi;</monospace>
</p><p specific-use="line">
<monospace>% Define number of grid points in x and y directions</monospace>
</p><p specific-use="line">
<monospace>nx = 60;</monospace>
</p><p specific-use="line">
<monospace>ny = 60;</monospace>
</p><p specific-use="line">
<monospace>% Indexing function to convert 2D index (i, j) to 1D index</monospace>
</p><p specific-use="line">
<monospace>eta = @(i,j) j + (i - 1) * ny;</monospace>
</p><p specific-use="line">
<monospace>% Define grid step sizes in x and y directions</monospace>
</p><p specific-use="line">
<monospace>hx = (bx - ax) / (nx - 1);</monospace>
</p><p specific-use="line">
<monospace>hy = (by - ay) / (ny - 1);</monospace>
</p><p specific-use="line">
<monospace>% Define grid points in x and y</monospace>
</p><p specific-use="line">
<monospace>x = (ax:hx:bx)&#x02019;;</monospace>
</p><p specific-use="line">
<monospace>y = (ay:hy:by)&#x02019;;</monospace>
</p><p specific-use="line">
<monospace>% Initialize matrices and vectors</monospace>
</p><p specific-use="line">
<monospace>n = nx * ny;</monospace>
</p><p specific-use="line">
<monospace>A = zeros(n); % Matrix for linear system</monospace>
</p><p specific-use="line">
<monospace>B = eye(n);&#x000a0;&#x000a0;&#x000a0;% Identity matrix for Newton&#x02019;s method</monospace>
</p><p specific-use="line">
<monospace>fvec = zeros(n, 1); % Source term vector</monospace>
</p><p specific-use="line">
<monospace>umat = zeros(nx, ny); % Initial guess matrix</monospace>
</p><p specific-use="line">
<monospace>% Loop through grid points to build matrix A and vector fvec</monospace>
</p><p specific-use="line">
<monospace>k = 1;</monospace>
</p><p specific-use="line">
<monospace>for i = 1:nx</monospace>
</p><p specific-use="line">
<monospace>for j = 1:ny</monospace>
</p><p specific-use="line">
<monospace>if (i == 1 || i == nx || j == 1 || j == ny)</monospace>
</p><p specific-use="line">
<monospace>% Boundary conditions: Dirichlet boundary conditions</monospace>
</p><p specific-use="line">
<monospace>A(k,k)&#x000a0;&#x000a0;= 1;</monospace>
</p><p specific-use="line">
<monospace>fvec(k) = u(x(i), y(j));</monospace>
</p><p specific-use="line">
<monospace>B(k,k) = 0;</monospace>
</p><p specific-use="line">
<monospace>else</monospace>
</p><p specific-use="line">
<monospace>% Fill matrix A for interior points using finite difference</monospace>
</p><p specific-use="line">
<monospace>A(k, eta(i-1,j)) = alpha(x(i), y(j)) / hx^2;</monospace>
</p><p specific-use="line">
<monospace>A(k, eta(i,j-1)) = beta(x(i), y(j)) / hy^2;</monospace>
</p><p specific-use="line">
<monospace>A(k, eta(i,j))&#x000a0;&#x000a0;&#x000a0;= -2 * (alpha(x(i), y(j)) / hx^2 + beta(x(i),</monospace>
</p><p specific-use="line">
<monospace>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;y(j)) / hy^2);</monospace>
</p><p specific-use="line">
<monospace>A(k, eta(i,j+1)) = beta(x(i), y(j)) / hy^2;</monospace>
</p><p specific-use="line">
<monospace>A(k, eta(i+1,j)) = alpha(x(i), y(j)) / hx^2;</monospace>
</p><p specific-use="line">
<monospace>% Fill the source term vector fvec</monospace>
</p><p specific-use="line">
<monospace>fvec(k) = f(x(i), y(j));</monospace>
</p><p specific-use="line">
<monospace>end</monospace>
</p><p specific-use="line">
<monospace>k = k + 1;</monospace>
</p><p specific-use="line">
<monospace>% Store the exact solution for later comparison</monospace>
</p><p specific-use="line">
<monospace>umat(i,j) = u(x(i), y(j));</monospace>
</p><p specific-use="line">
<monospace>end</monospace>
</p><p specific-use="line">
<monospace>end</monospace>
</p><p specific-use="line">
<monospace>% Remove small values (numerical noise) from A and fvec</monospace>
</p><p specific-use="line">
<monospace>A(abs(A) &#x0003c; 1.e-14) = 0;</monospace>
</p><p specific-use="line">
<monospace>fvec(abs(fvec) &#x0003c; 1.e-14) = 0;</monospace>
</p><p specific-use="line">
<monospace>% Newton&#x02019;s method parameters</monospace>
</p><p specific-use="line">
<monospace>iter = 20;&#x000a0;&#x000a0;&#x000a0;% Maximum number of iterations</monospace>
</p><p specific-use="line">
<monospace>tol = 1.0e-10;&#x000a0;&#x000a0;% Convergence tolerance</monospace>
</p><p specific-use="line">
<monospace>diagB = diag(B); % Diagonal of matrix B</monospace>
</p><p specific-use="line">
<monospace>% Timing setup for performance evaluation</monospace>
</p><p specific-use="line">
<monospace>time = 0;&#x000a0;&#x000a0;% Initialize total time</monospace>
</p><p specific-use="line">
<monospace>REPS = 10;&#x000a0;&#x000a0;% Number of repetitions for averaging time</monospace>
</p><p specific-use="line">
<monospace>% Loop for performance evaluation over multiple runs</monospace>
</p><p specific-use="line">
<monospace>for j = 1:REPS</monospace>
</p><p specific-use="line">
<monospace>tstart = tic;&#x000a0;&#x000a0;% Start timing for this repetition</monospace>
</p><p specific-use="line">
<monospace>U = umat(:); % Initial guess as a vector</monospace>
</p><p specific-use="line">
<monospace>% Newton&#x02019;s method loop</monospace>
</p><p specific-use="line">
<monospace>for i = 1:iter</monospace>
</p><p specific-use="line">
<monospace>% Compute the residual vector F</monospace>
</p><p specific-use="line">
<monospace>F = A * U + diagB .* (U.^2) - fvec;</monospace>
</p><p specific-use="line">
<monospace>norm_F = norm(F); % Compute the norm of the residual</monospace>
</p><p specific-use="line">
<monospace>% Check for convergence</monospace>
</p><p specific-use="line">
<monospace>if (norm_F &#x0003c; tol)</monospace>
</p><p specific-use="line">
<monospace>disp(&#x02019;success&#x02019;);</monospace>
</p><p specific-use="line">
<monospace>iterations = i;</monospace>
</p><p specific-use="line">
<monospace>break;</monospace>
</p><p specific-use="line">
<monospace>end</monospace>
</p><p specific-use="line">
<monospace>% Compute the Jacobian matrix dF</monospace>
</p><p specific-use="line">
<monospace>dF = A + 2 * diag(diagB .* U);</monospace>
</p><p specific-use="line">
<monospace>Z = decomposition(dF, &#x02019;lu&#x02019;);&#x000a0;&#x000a0;% LU decomposition</monospace>
</p><p specific-use="line">
<monospace>% Solve for phi1, phi2, and phi3 using LU decomposition</monospace>
</p><p specific-use="line">
<monospace>phi1 = Z F;</monospace>
</p><p specific-use="line">
<monospace>phi2 = Z (2 * diagB .* (phi1.^2));</monospace>
</p><p specific-use="line">
<monospace>phi3 = Z (2 * diagB .* (phi1 .* phi2));</monospace>
</p><p specific-use="line">
<monospace>% Update the solution vector U</monospace>
</p><p specific-use="line">
<monospace>U = U - phi1 - 0.5 * (phi2 + phi3);</monospace>
</p><p specific-use="line">
<monospace>end</monospace>
</p><p specific-use="line">
<monospace>telapsed = toc(tstart);&#x000a0;&#x000a0;% Time taken for this repetition</monospace>
</p><p specific-use="line">
<monospace>time = time + telapsed;&#x000a0;&#x000a0;% Accumulate total time</monospace>
</p><p specific-use="line">
<monospace>end</monospace>
</p><p specific-use="line">
<monospace>% Compute and display the average time over all repetitions</monospace>
</p><p specific-use="line">
<monospace>average_time = time / REPS;</monospace>
</p><p specific-use="line">
<monospace>disp([&#x02019;Average time: &#x02019;, num2str(average_time)]);</monospace>
</p><p specific-use="line">
<monospace>% Reshape the solution vector U back to a matrix</monospace>
</p><p specific-use="line">
<monospace>W = reshape(U, nx, ny);</monospace>
</p><p specific-use="line">
<monospace>% Plot the approximated solution</monospace>
</p><p specific-use="line">
<monospace>figure</monospace>
</p><p specific-use="line">
<monospace>mesh(x, y, W&#x02019;);</monospace>
</p><p specific-use="line">
<monospace>xlabel(&#x02019;x-values&#x02019;)</monospace>
</p><p specific-use="line">
<monospace>ylabel(&#x02019;y-values&#x02019;)</monospace>
</p><p specific-use="line">
<monospace>zlabel(&#x02019;approximated u(x,y)&#x02019;)</monospace>
</p><p specific-use="line">
<monospace>% Plot the absolute error between the exact and approximated</monospace>
</p><p specific-use="line">
<monospace>&#x000a0;&#x000a0;&#x000a0;&#x000a0;solutions</monospace>
</p><p specific-use="line">
<monospace>figure</monospace>
</p><p specific-use="line">
<monospace>mesh(x, y, abs(umat - W)&#x02019;);</monospace>
</p><p specific-use="line">
<monospace>xlabel(&#x02019;x-values&#x02019;)</monospace>
</p><p specific-use="line">
<monospace>ylabel(&#x02019;y-values&#x02019;)</monospace>
</p><p specific-use="line">
<monospace>zlabel(&#x02019;absolute error&#x02019;)</monospace>
</p></sec></body><back><ref-list><title>References</title><ref id="pone.0317752.ref001"><label>1</label><mixed-citation publication-type="book"><name><surname>Traub</surname><given-names>JF</given-names></name>. <article-title>Iterative methods for the solution of equations</article-title>. <article-title>Prentice-Hall series in automatic computation</article-title>. <publisher-loc>Englewood Cliffs, NJ</publisher-loc>: <publisher-name>Prentice-Hall, Inc.</publisher-name>; <year>1964</year>.</mixed-citation></ref><ref id="pone.0317752.ref002"><label>2</label><mixed-citation publication-type="book"><name><surname>Ortega</surname><given-names>JM</given-names></name>, <name><surname>Rheinboldt</surname><given-names>WC</given-names></name>. <article-title>Iterative solution of nonlinear equations in several variables</article-title>. <publisher-loc>New York, London</publisher-loc>: <publisher-name>Academic Press</publisher-name>; <year>1970</year>.</mixed-citation></ref><ref id="pone.0317752.ref003"><label>3</label><mixed-citation publication-type="journal"><name><surname>Ahmad</surname><given-names>F</given-names></name>, <name><surname>Tohidi</surname><given-names>E</given-names></name>, <name><surname>Carrasco</surname><given-names>JA</given-names></name>. <article-title>A parameterized multi-step Newton method for solving systems of nonlinear equations</article-title>. <source>Numer Algor</source>. <year>2015</year>;<volume>71</volume>(<issue>3</issue>):<fpage>631</fpage>&#x02013;<lpage>53</lpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1007/s11075-015-0013-7</pub-id></mixed-citation></ref><ref id="pone.0317752.ref004"><label>4</label><mixed-citation publication-type="journal"><name><surname>Ahmad</surname><given-names>F</given-names></name>, <name><surname>Tohidi</surname><given-names>E</given-names></name>, <name><surname>Ullah</surname><given-names>MZ</given-names></name>, <name><surname>Carrasco</surname><given-names>JA</given-names></name>. <article-title>Higher order multi-step Jarratt-like method for solving systems of nonlinear equations: application to PDEs and ODEs</article-title>. <source>Comput Math Appl</source>. <year>2015</year>;<volume>70</volume>(<issue>4</issue>):<fpage>624</fpage>&#x02013;<lpage>36</lpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1016/j.camwa.2015.05.012</pub-id></mixed-citation></ref><ref id="pone.0317752.ref005"><label>5</label><mixed-citation publication-type="journal"><name><surname>Qasim</surname><given-names>U</given-names></name>, <name><surname>Ali</surname><given-names>Z</given-names></name>, <name><surname>Ahmad</surname><given-names>F</given-names></name>, <name><surname>Serra-Capizzano</surname><given-names>S</given-names></name>, <name><surname>Zaka Ullah</surname><given-names>M</given-names></name>, <name><surname>Asma</surname><given-names>M</given-names></name>. <article-title>Constructing Frozen Jacobian iterative methods for solving systems of nonlinear equations, associated with ODEs and PDEs using the homotopy method</article-title>. <source>Algorithms</source>. <year>2016</year>;<volume>9</volume>(<issue>1</issue>):<fpage>18</fpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.3390/a9010018</pub-id></mixed-citation></ref><ref id="pone.0317752.ref006"><label>6</label><mixed-citation publication-type="journal"><name><surname>Qasim</surname><given-names>S</given-names></name>, <name><surname>Ali</surname><given-names>Z</given-names></name>, <name><surname>Ahmad</surname><given-names>F</given-names></name>, <name><surname>Serra-Capizzano</surname><given-names>S</given-names></name>, <name><surname>Ullah</surname><given-names>MZ</given-names></name>, <name><surname>Mahmood</surname><given-names>A</given-names></name>. <article-title>Solving systems of nonlinear equations when the nonlinearity is expensive</article-title>. <source>Comput Math Appl</source>. <year>2016</year>;<volume>71</volume>(<issue>7</issue>):<fpage>1464</fpage>&#x02013;<lpage>78</lpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1016/j.camwa.2016.02.018</pub-id></mixed-citation></ref><ref id="pone.0317752.ref007"><label>7</label><mixed-citation publication-type="book"><name><surname>Shen</surname><given-names>J</given-names></name>, <name><surname>Tang</surname><given-names>T</given-names></name>, <name><surname>Wang</surname><given-names>L-L</given-names></name>. <article-title>Spectral methods: algorithms, analysis and applications</article-title>. Springer Series in Computational Mathematics. <publisher-loc>Heidelberg</publisher-loc>: <publisher-name>Springer</publisher-name>; <year>2011</year>.</mixed-citation></ref><ref id="pone.0317752.ref008"><label>8</label><mixed-citation publication-type="book"><name><surname>Szeg&#x000f6;</surname><given-names>G</given-names></name>. <article-title>Orthogonal Polynomials</article-title>. American Mathematical Society Colloquium Publications. <publisher-loc>New York</publisher-loc>: <publisher-name>American Mathematical Society</publisher-name>; <year>1939</year>.</mixed-citation></ref><ref id="pone.0317752.ref009"><label>9</label><mixed-citation publication-type="journal"><name><surname>Soleymani</surname><given-names>F</given-names></name>, <name><surname>Lotfi</surname><given-names>T</given-names></name>, <name><surname>Bakhtiari</surname><given-names>P</given-names></name>. <article-title>A multi-step class of iterative methods for nonlinear systems</article-title>. <source>Optim Lett</source>. <year>2013</year>;<volume>8</volume>(<issue>3</issue>):<fpage>1001</fpage>&#x02013;<lpage>15</lpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1007/s11590-013-0617-6</pub-id></mixed-citation></ref><ref id="pone.0317752.ref010"><label>10</label><mixed-citation publication-type="journal"><name><surname>Ullah</surname><given-names>MZ</given-names></name>, <name><surname>Serra-Capizzano</surname><given-names>S</given-names></name>, <name><surname>Ahmad</surname><given-names>F</given-names></name>. <article-title>An efficient multi-step iterative method for computing the numerical solution of systems of nonlinear equations associated with ODEs</article-title>. <source>Appl Math Comput</source>. <year>2015</year>;<volume>250</volume>:<fpage>249</fpage>&#x02013;<lpage>59</lpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1016/j.amc.2014.10.103</pub-id></mixed-citation></ref><ref id="pone.0317752.ref011"><label>11</label><mixed-citation publication-type="journal"><name><surname>Ullah</surname><given-names>MZ</given-names></name>, <name><surname>Soleymani</surname><given-names>F</given-names></name>, <name><surname>Al-Fhaid</surname><given-names>AS</given-names></name>. <article-title>Numerical solution of nonlinear systems by a general class of iterative methods with application to nonlinear PDEs</article-title>. <source>Numer Algor</source>. <year>2013</year>;<volume>67</volume>(<issue>1</issue>):<fpage>223</fpage>&#x02013;<lpage>42</lpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1007/s11075-013-9784-x</pub-id></mixed-citation></ref><ref id="pone.0317752.ref012"><label>12</label><mixed-citation publication-type="journal"><name><surname>Montazeri</surname><given-names>H</given-names></name>, <name><surname>Soleymani</surname><given-names>F</given-names></name>, <name><surname>Shateyi</surname><given-names>S</given-names></name>, <name><surname>Motsa</surname><given-names>SS</given-names></name>. <article-title>On a new method for computing the numerical solution of systems of nonlinear equations</article-title>. <source>J Appl Math</source>. <year>2012</year>;<volume>2012</volume>(1):751975. <comment>doi: </comment><pub-id pub-id-type="doi">10.1155/2012/751975</pub-id></mixed-citation></ref><ref id="pone.0317752.ref013"><label>13</label><mixed-citation publication-type="other">Falkner VM, Skan SW. Aero. res. coun. rep. and mem. no 1314. <year>1930</year>.</mixed-citation></ref><ref id="pone.0317752.ref014"><label>14</label><mixed-citation publication-type="journal"><name><surname>Ardelean</surname><given-names>G</given-names></name>. <article-title>A comparison between iterative methods by using the basins of attraction</article-title>. <source>Appl Math Comput</source>. <year>2011</year>;<volume>218</volume>(<issue>1</issue>):<fpage>88</fpage>&#x02013;<lpage>95</lpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1016/j.amc.2011.05.055</pub-id></mixed-citation></ref><ref id="pone.0317752.ref015"><label>15</label><mixed-citation publication-type="journal"><name><surname>Bakhtiari</surname><given-names>P</given-names></name>, <name><surname>Cordero</surname><given-names>A</given-names></name>, <name><surname>Lotfi</surname><given-names>T</given-names></name>, <name><surname>Mahdiani</surname><given-names>K</given-names></name>, <name><surname>Torregrosa</surname><given-names>JR</given-names></name>. <article-title>Widening basins of attraction of optimal iterative methods</article-title>. <source>Nonl Dyn</source>. <year>2016</year>;<volume>87</volume>(<issue>2</issue>):<fpage>913</fpage>&#x02013;<lpage>38</lpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1007/s11071-016-3089-2</pub-id></mixed-citation></ref><ref id="pone.0317752.ref016"><label>16</label><mixed-citation publication-type="journal"><name><surname>Geum</surname><given-names>YH</given-names></name>. <article-title>Basins of attraction for optimal third order methods for multiple roots</article-title>. <source>ams</source>. <year>2016</year>;<volume>10</volume>:<fpage>583</fpage>&#x02013;<lpage>90</lpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.12988/ams.2016.6125</pub-id></mixed-citation></ref><ref id="pone.0317752.ref017"><label>17</label><mixed-citation publication-type="journal"><name><surname>Basto</surname><given-names>M</given-names></name>, <name><surname>Basto</surname><given-names>LP</given-names></name>, <name><surname>Semiao</surname><given-names>V</given-names></name>, <name><surname>Calheiros</surname><given-names>FL</given-names></name>. <article-title>Contrasts in the basins of attraction of structurally identical iterative root finding methods</article-title>. <source>Appl Math Comput</source>. <year>2013</year>;<volume>219</volume>(<issue>15</issue>):<fpage>7997</fpage>&#x02013;<lpage>8008</lpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1016/j.amc.2013.02.063</pub-id></mixed-citation></ref><ref id="pone.0317752.ref018"><label>18</label><mixed-citation publication-type="journal"><name><surname>Zotos</surname><given-names>EE</given-names></name>, <name><surname>Suraj</surname><given-names>MS</given-names></name>, <name><surname>Mittal</surname><given-names>A</given-names></name>, <name><surname>Aggarwal</surname><given-names>R</given-names></name>. <article-title>Comparing the geometry of the basins of attraction, the speed and the efficiency of several numerical methods</article-title>. <source>Int J Appl Comput Math</source>. <year>2018</year>;<volume>4</volume>(<issue>4</issue>). <comment>doi: </comment><pub-id pub-id-type="doi">10.1007/s40819-018-0537-3</pub-id></mixed-citation></ref></ref-list></back></article>