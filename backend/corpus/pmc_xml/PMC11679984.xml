<!DOCTYPE article
PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with MathML3 v1.3 20210610//EN" "JATS-archivearticle1-3-mathml3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.3" xml:lang="en" article-type="research-article"><?properties open_access?><processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats"><restricted-by>pmc</restricted-by></processing-meta><front><journal-meta><journal-id journal-id-type="nlm-ta">Sensors (Basel)</journal-id><journal-id journal-id-type="iso-abbrev">Sensors (Basel)</journal-id><journal-id journal-id-type="publisher-id">sensors</journal-id><journal-title-group><journal-title>Sensors (Basel, Switzerland)</journal-title></journal-title-group><issn pub-type="epub">1424-8220</issn><publisher><publisher-name>MDPI</publisher-name></publisher></journal-meta>
<article-meta><article-id pub-id-type="pmc">PMC11679984</article-id><article-id pub-id-type="doi">10.3390/s24248046</article-id><article-id pub-id-type="publisher-id">sensors-24-08046</article-id><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title>Load-Balanced Dynamic SFC Migration Based on Resource Demand Prediction</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Sun</surname><given-names>Tian</given-names></name></contrib><contrib contrib-type="author"><name><surname>Hu</surname><given-names>Hefei</given-names></name><xref rid="c1-sensors-24-08046" ref-type="corresp">*</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0009-0003-6552-6935</contrib-id><name><surname>Zhang</surname><given-names>Sirui</given-names></name></contrib></contrib-group><contrib-group><contrib contrib-type="editor"><name><surname>Mar&#x000ed;n</surname><given-names>Sergio Toral</given-names></name><role>Academic Editor</role></contrib></contrib-group><aff id="af1-sensors-24-08046">School of Information and Communication Engineering, Beijing University of Posts and Telecommunications, Beijing 100876, China; <email>sunttian@bupt.edu.cn</email> (T.S.); <email>siruizhangtj01@gmail.com</email> (S.Z.)</aff><author-notes><corresp id="c1-sensors-24-08046"><label>*</label>Correspondence: <email>huhefei@bupt.edu.cn</email></corresp></author-notes><pub-date pub-type="epub"><day>17</day><month>12</month><year>2024</year></pub-date><pub-date pub-type="collection"><month>12</month><year>2024</year></pub-date><volume>24</volume><issue>24</issue><elocation-id>8046</elocation-id><history><date date-type="received"><day>16</day><month>11</month><year>2024</year></date><date date-type="rev-recd"><day>08</day><month>12</month><year>2024</year></date><date date-type="accepted"><day>16</day><month>12</month><year>2024</year></date></history><permissions><copyright-statement>&#x000a9; 2024 by the authors.</copyright-statement><copyright-year>2024</copyright-year><license><ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>).</license-p></license></permissions><abstract><p>In network function virtualization, the resource demand of network services changes with network traffic. SFC migration has emerged as an effective technique for preserving the quality of service. However, one important problem that has not been addressed in prior studies is how to manage network load while maintaining service-level agreements for time-varying resource demands. Therefore, we propose the Resource Predictive Load Balancing SFC Migration (RP-LBM) algorithm in this paper. The algorithm uses CNN-AT-LSTM to predict VNF resource demands in advance, eliminating the delays associated with dynamic migrations and determining the optimal migration timing. It leverages the PPO algorithm&#x02019;s perceptual capabilities in complex environments to develop SFC migration strategies and ensure network load balancing. Additionally, it reduces the number of subsequent migrations and minimizes the service interruption rate. The simulation results show that the service interruption rate of the RP-LBM algorithm is on average 27.3% lower than that of the passive migration method. The PPO-based migration algorithm has lower SFC migration times and service interruption rates compared to the DQN algorithm, ensuring service continuity with low migration costs.</p></abstract><kwd-group><kwd>network function virtualization</kwd><kwd>service function chaining</kwd><kwd>resource demand prediction</kwd><kwd>network load balancing</kwd><kwd>deep reinforcement learning</kwd></kwd-group><funding-group><award-group><funding-source>National Natural Science Foundations of China</funding-source><award-id>61821001</award-id></award-group><funding-statement>This work was supported in part by the National Natural Science Foundations of China under grant 61821001.</funding-statement></funding-group></article-meta></front><body><sec sec-type="intro" id="sec1-sensors-24-08046"><title>1. Introduction</title><p>In traditional networks, deploying or updating the physical network requires specialized hardware to provide new services. This leads to high purchasing and maintenance costs. Additionally, the system cannot be easily customized or adjusted based on demand. Therefore, Network Function Virtualization (NFV) was developed. NFV aims to implement the functions of traditional network devices through software. It decouples network functions from dedicated hardware and runs them as software on general-purpose servers or in virtualized environments. This approach can significantly reduce operators&#x02019; costs and improve the flexibility and resilience of network service deployment. Network operators can use Service Function Chains (SFCs) to provide customized network services to users. SFC connects Virtualized Network Functions (VNFs). It not only supports the fine-grained and elastic delivery of services in the network but also allows for the modification of service functions and the migration of loads.</p><p>In NFV, operators use Service Function Chains to provide customized network services [<xref rid="B1-sensors-24-08046" ref-type="bibr">1</xref>]. Network efficiency is closely related to the mapping of Virtualized Network Functions and the routing of SFCs. At the same time, as network slicing operates, the traffic arrival of each specific service fluctuates over time. This can lead to a mismatch between SFC resource demand and server resource availability, which negatively affects the quality of service (QoS) and resource utilization [<xref rid="B2-sensors-24-08046" ref-type="bibr">2</xref>]. When a VNF layout and resource allocation strategy cannot meet the current network demands, the NFV Orchestrator (NFVO) reconfigures the SFC. This reconfiguration includes vertical scaling, horizontal scaling, and dynamic migration. Horizontal scaling makes full use of fragmented resources, but it is only possible when there are enough available resources on the server. Dynamic migration is a flexible solution during overload conditions, but it also incurs overhead.</p><p>Due to the dynamic changes in traffic, edge computing networks often experience overloaded nodes. This leads to increased computation delays and sometimes service interruptions. To maintain normal SFC services, SFC migration must be performed. Additionally, network load balancing should be ensured. Network load balancing allows the network system to adapt more easily to dynamic changes in traffic [<xref rid="B3-sensors-24-08046" ref-type="bibr">3</xref>]. By introducing load balancing for time-varying network traffic, the network becomes more robust after VNF migration and promotes long-term resource optimization.</p><p>Based on the above background, we focus on the problem of SFC dynamic migration for network load balancing in edge computing environments where resources are scarce and highly dynamic. We use machine learning algorithms to predict VNF resource demands, which helps us anticipate changes in network node resource allocation. With the prediction results, we proactively determine the appropriate time for migration and identify the VNFs to migrate from overloaded nodes. We also use deep reinforcement learning algorithms to better understand complex environments and select target nodes for migration. This approach ensures network load balancing, reduces the number of future migrations, and minimizes the impact of unnecessary migrations.</p><p>In view of the above problems, the main contributions of this paper are as follows:<list list-type="order"><list-item><p>Considering the real SFC request scenario, we use a time-varying traffic dataset. We apply a CNN-AT-LSTM model to predict the short-term resource demands of VNFs. Using these predictions, we can proactively migrate VNFs in advance within a certain time frame.</p></list-item><list-item><p>Considering that dynamic changes in traffic may lead to frequent VNF migration and uneven use of network resources, we introduce a load-balancing model to maintain network stability.</p></list-item><list-item><p>In response to the multi-dimensionality and complexity of the VNF migration remapping problem caused by the dynamic network environment, we propose a DRL algorithm based on Proximal Policy Optimization (PPO) to enhance the effectiveness of VNF migration decisions.</p></list-item></list></p></sec><sec id="sec2-sensors-24-08046"><title>2. Related Work</title><p>Within the framework of Network Function Virtualization, researchers from around the world have conducted many studies on the dynamic migration of Service Function Chains and have achieved significant results. One major challenge in dynamic migration is how to allocate resources for SFCs as their resource demands change and the duration that SFCs remain in the network is uncertain. Recent research typically takes one or more factors related to migration costs as optimization objectives and proposes corresponding migration decision algorithms.</p><p>For instance, the authors of [<xref rid="B4-sensors-24-08046" ref-type="bibr">4</xref>] proposed a migration algorithm based on Deep Q-Networks (DQNs). Their goal was to minimize end-to-end latency and address service interruptions caused by overloaded nodes, link failures, and VNF instance failures. The authors of [<xref rid="B5-sensors-24-08046" ref-type="bibr">5</xref>] introduced a framework that uses Convolutional Neural Networks (CNNs) and Artificial Neural Networks (ANNs) to determine the optimal migration paths for VNFs. Their aim was to minimize migration time and cost. This solution analyzes network conditions, workload patterns, and resource availability to achieve dynamic and efficient VNF relocation, which significantly improves network performance and reliability. Additionally, the authors of [<xref rid="B6-sensors-24-08046" ref-type="bibr">6</xref>] presented a scalable cluster-based VNF migration algorithm. This algorithm is designed to minimize the total embedding cost while meeting the latency requirements between VNFs. It performs better than existing methods in terms of embedding costs and has a much shorter execution time compared to brute-force search methods.</p><p>However, the methods mentioned above only trigger migrations after changes occur in network traffic or after network node or link failures. These are forms of reactive migration and cannot proactively handle sudden changes in resource demand. Currently, to solve reactive migration, researchers are trying to predict resource demands in advance. In [<xref rid="B7-sensors-24-08046" ref-type="bibr">7</xref>], the authors proposed a CAT-LSTM model to predict the resource demands of VNFs using SFC data. They improved accuracy by using aspect embedding and attention mechanisms. Similarly, the authors of [<xref rid="B8-sensors-24-08046" ref-type="bibr">8</xref>] introduced a Graph Neural Network (GNN) model based on the graph features. This model accurately predicts VNF resource demands by identifying multidimensional dependencies within SFC graph structures. Although studies in [<xref rid="B7-sensors-24-08046" ref-type="bibr">7</xref>,<xref rid="B8-sensors-24-08046" ref-type="bibr">8</xref>] have made progress in prediction, they do not deeply explore how to effectively use these predictions to optimize resource allocation.</p><p>Moreover, existing research primarily focuses on optimizing objectives such as reducing latency and migration costs. However, merely minimizing energy consumption or overhead may lead to uneven utilization of network resources, and future dynamic traffic changes could result in frequent VNF migrations. Additionally, in edge computing networks where resources are relatively scarce and highly dynamic, greater emphasis should be placed on the distribution and utilization efficiency of resources to ensure network load balancing.</p><p>Current studies have demonstrated the advantages of ensuring network load balancing in enhancing network performance. For example, the authors of [<xref rid="B9-sensors-24-08046" ref-type="bibr">9</xref>] proposed a load-balanced Virtual Network Embedding algorithm based on deep reinforcement learning for regional satellite networks. The algorithm divides the satellite network into multiple mapping regions and deploys Virtual Network Requests only in the region with the lowest load. It simultaneously considers topology dynamics and resource loads, effectively improving acceptance rates while also enhancing resource utilization. Similarly, the authors of [<xref rid="B10-sensors-24-08046" ref-type="bibr">10</xref>] introduced a task scheduling algorithm considering load balancing issues in cloud computing environments. The proposed BCSV algorithm achieves better results in terms of completion time, load balancing, and resource utilization compared to previous algorithms, even in heterogeneous environments. This improvement enhances the overall performance of cloud computing networks.</p><p>In summary, we use high-precision predictions to anticipate SFC resource demands in advance and determine the appropriate timing for migration. We introduce a load-balancing model to ensure efficient use of resources, reduce the frequency of VNF migrations in the network, and avoid potential issues caused by uneven resource usage. Additionally, we design a deep reinforcement learning algorithm to proactively make migration decisions for SFCs on overloaded nodes, preventing the degradation or even interruption of network service quality.</p></sec><sec id="sec3-sensors-24-08046"><title>3. System Model and Problem Description</title><p>In this section, we define the network model, describe the SFC and VNF, and then propose the VNF migration problem and the network load balancing model.</p><sec id="sec3dot1-sensors-24-08046"><title>3.1. Network Model</title><p>We consider an NFV network architecture with three layers as depicted in [<xref rid="B11-sensors-24-08046" ref-type="bibr">11</xref>]. As shown in <xref rid="sensors-24-08046-f001" ref-type="fig">Figure 1</xref>, physical nodes are connected by links in the physical layer. VNFs are instantiated on physical nodes that supply the necessary resources in the VNF layer. The various NF types that comprise the SFC are deployed on matching VNF types at the application layer.</p><p>The physical network is modeled as a fully connected undirected graph <inline-formula><mml:math id="mm1" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mi>V</mml:mi><mml:mi>s</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>E</mml:mi><mml:mi>s</mml:mi></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm2" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>V</mml:mi><mml:mi>s</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> is the set of underlying nodes and <inline-formula><mml:math id="mm3" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>E</mml:mi><mml:mi>s</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> is the set of physical links between nodes. The underlying nodes have a set of resource types to support VNFs, such as CPU, memory, and cores. Here, <inline-formula><mml:math id="mm4" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>C</mml:mi><mml:mi>i</mml:mi><mml:mi>S</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> represents the maximum CPU resource capacity of the <inline-formula><mml:math id="mm5" overflow="scroll"><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:math></inline-formula>-th node <inline-formula><mml:math id="mm6" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>V</mml:mi><mml:mi>S</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, where each unit of CPU resource represents the resources required to process a data packet. The memory resource capacity of the <inline-formula><mml:math id="mm7" overflow="scroll"><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:math></inline-formula>-th node is <inline-formula><mml:math id="mm8" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>M</mml:mi><mml:mi>i</mml:mi><mml:mi>S</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, represented in available megabytes. The underlying link directly connecting nodes <inline-formula><mml:math id="mm9" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm10" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mi>s</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> is represented as <inline-formula><mml:math id="mm11" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mi>S</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>E</mml:mi><mml:mi>s</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, the physical link bandwidth is <inline-formula><mml:math id="mm12" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msubsup><mml:mi>W</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mi>S</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, and the link delay is represented as <inline-formula><mml:math id="mm13" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>L</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mi>S</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></sec><sec id="sec3dot2-sensors-24-08046"><title>3.2. SFC and VNF</title><p>The VNF type set is represented as <inline-formula><mml:math id="mm14" overflow="scroll"><mml:mrow><mml:mi>F</mml:mi></mml:mrow></mml:math></inline-formula>, and the CPU and memory resources consumed by the server to instantiate a VNF <inline-formula><mml:math id="mm15" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, denoted as <inline-formula><mml:math id="mm16" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>&#x000a0;</mml:mo><mml:msup><mml:mi>v</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, are <inline-formula><mml:math id="mm17" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>c</mml:mi><mml:mi>f</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm18" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>m</mml:mi><mml:mi>f</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, respectively. A physical node can instantiate one or more types of VNFs, and each type of VNF can support the deployment of multiple virtual network function instances.</p><p>The SFC set is represented as <inline-formula><mml:math id="mm19" overflow="scroll"><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:math></inline-formula>, and each request <inline-formula><mml:math id="mm20" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mi>f</mml:mi><mml:msup><mml:mi>c</mml:mi><mml:mi>j</mml:mi></mml:msup><mml:mo>&#x02208;</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> can be represented as <inline-formula><mml:math id="mm21" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mi>f</mml:mi><mml:msup><mml:mi>c</mml:mi><mml:mi>j</mml:mi></mml:msup><mml:mo>=</mml:mo><mml:mo>&#x02329;</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>o</mml:mi><mml:mi>u</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>E</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msub><mml:mi>l</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&#x0232a;</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm22" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm23" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>o</mml:mi><mml:mi>u</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> represent the entrance and exit network elements, respectively; <inline-formula><mml:math id="mm24" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>V</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> represents a set of ordered NF request sets, the set of VNF types that the traffic passes through in order; <inline-formula><mml:math id="mm25" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>E</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> represents the logical link set, connecting the VNFs between the entrance and exit network element nodes; and <inline-formula><mml:math id="mm26" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>l</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> represents the permissible end-to-end delay of the request. The CPU resource demand and memory resource demand of the <inline-formula><mml:math id="mm27" overflow="scroll"><mml:mrow><mml:mi>u</mml:mi></mml:mrow></mml:math></inline-formula>-th NF <inline-formula><mml:math id="mm28" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> of <inline-formula><mml:math id="mm29" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mi>f</mml:mi><mml:msup><mml:mi>c</mml:mi><mml:mi>j</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> are <inline-formula><mml:math id="mm30" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>c</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm31" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>m</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, respectively. The traffic segment <inline-formula><mml:math id="mm32" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> of <inline-formula><mml:math id="mm33" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mi>f</mml:mi><mml:msup><mml:mi>c</mml:mi><mml:mi>j</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> is represented as the logical link <inline-formula><mml:math id="mm34" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>E</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, and the bandwidth demand of the logical link is <inline-formula><mml:math id="mm35" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>b</mml:mi><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>The decision variable <inline-formula><mml:math id="mm36" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> specifies the types of NFs in the SFC. If the <inline-formula><mml:math id="mm37" overflow="scroll"><mml:mrow><mml:mi>u</mml:mi></mml:mrow></mml:math></inline-formula>-th virtual node <inline-formula><mml:math id="mm38" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> of <inline-formula><mml:math id="mm39" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mi>f</mml:mi><mml:msup><mml:mi>c</mml:mi><mml:mi>j</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> is of type <inline-formula><mml:math id="mm40" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:math></inline-formula>, then <inline-formula><mml:math id="mm41" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> equals 1:<disp-formula id="FD1-sensors-24-08046"><label>(1)</label><mml:math id="mm42" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x02003;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi><mml:mi>f</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>o</mml:mi><mml:mi>f</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>t</mml:mi><mml:mi>y</mml:mi><mml:mi>p</mml:mi><mml:mi>e</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>o</mml:mi><mml:mi>f</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>f</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>w</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>It is stipulated that the entrance and exit network element nodes do not have a type; that is, <inline-formula><mml:math id="mm43" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> is always equal to 0. When the decision variable <inline-formula><mml:math id="mm44" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>&#x003b7;</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> equals 1, it indicates that the <inline-formula><mml:math id="mm45" overflow="scroll"><mml:mrow><mml:mi>u</mml:mi></mml:mrow></mml:math></inline-formula>-th virtual node <inline-formula><mml:math id="mm46" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> of <inline-formula><mml:math id="mm47" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mi>f</mml:mi><mml:msup><mml:mi>c</mml:mi><mml:mi>j</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> is deployed on the physical node <inline-formula><mml:math id="mm48" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>V</mml:mi><mml:mi>S</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>:<disp-formula id="FD2-sensors-24-08046"><label>(2)</label><mml:math id="mm49" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>&#x003b7;</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x02003;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi><mml:mi>f</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mi>e</mml:mi><mml:mi>d</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>t</mml:mi><mml:mi>o</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo>&#x000a0;</mml:mo><mml:mi>d</mml:mi><mml:mi>u</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>w</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>When the decision variable <inline-formula><mml:math id="mm50" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>&#x003c4;</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>q</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> equals 1, it indicates that the traffic segment <inline-formula><mml:math id="mm51" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>E</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> of <inline-formula><mml:math id="mm52" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mi>f</mml:mi><mml:msup><mml:mi>c</mml:mi><mml:mi>j</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> flows through the physical link <inline-formula><mml:math id="mm53" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>q</mml:mi></mml:mrow><mml:mi>S</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>E</mml:mi><mml:mi>S</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, which can be represented as follows:<disp-formula id="FD3-sensors-24-08046"><label>(3)</label><mml:math id="mm54" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>&#x003c4;</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>q</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02003;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi><mml:mi>f</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>p</mml:mi><mml:mi>p</mml:mi><mml:mi>e</mml:mi><mml:mi>d</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>t</mml:mi><mml:mi>o</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>q</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msubsup><mml:mo>&#x000a0;</mml:mo><mml:mi>d</mml:mi><mml:mi>u</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>w</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>If an NF of type <inline-formula><mml:math id="mm55" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> is mapped to <inline-formula><mml:math id="mm56" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>V</mml:mi><mml:mi>S</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, then a VNF of type <inline-formula><mml:math id="mm57" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:math></inline-formula> must also be instantiated on node <inline-formula><mml:math id="mm58" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>. Here we define the state variable <inline-formula><mml:math id="mm59" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>&#x003b2;</mml:mi><mml:mi>f</mml:mi><mml:mi>i</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, which equals 1 if there is a VNF of type <inline-formula><mml:math id="mm60" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> on the physical node <inline-formula><mml:math id="mm61" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>V</mml:mi><mml:mi>S</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>:<disp-formula id="FD4-sensors-24-08046"><label>(4)</label><mml:math id="mm62" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>&#x003b2;</mml:mi><mml:mi>f</mml:mi><mml:mi>i</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02003;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi><mml:mi>f</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>a</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>V</mml:mi><mml:mi>N</mml:mi><mml:mi>F</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>o</mml:mi><mml:mi>f</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>t</mml:mi><mml:mi>y</mml:mi><mml:mi>p</mml:mi><mml:mi>e</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>f</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>a</mml:mi><mml:mi>s</mml:mi><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi><mml:mi>n</mml:mi><mml:mi>e</mml:mi><mml:mi>d</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mn>0</mml:mn><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>w</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD5-sensors-24-08046"><label>(5)</label><mml:math id="mm63" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>&#x003b2;</mml:mi><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mo>&#x000a0;</mml:mo><mml:mi>if</mml:mi><mml:mo>&#x000a0;</mml:mo></mml:mrow><mml:munder><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>s</mml:mi><mml:mi>f</mml:mi><mml:msup><mml:mi>c</mml:mi><mml:mi>j</mml:mi></mml:msup><mml:mo>&#x02208;</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:munder><mml:msubsup><mml:mi>&#x003b7;</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msubsup><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msubsup><mml:mo>&#x02265;</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>V</mml:mi><mml:mi>S</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>f</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>F</mml:mi><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>Due to dynamic traffic changes, the relationship between the inflow bandwidth and resource demand of <inline-formula><mml:math id="mm64" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> at time <inline-formula><mml:math id="mm65" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:math></inline-formula> can be expressed as follows:<disp-formula id="FD6-sensors-24-08046"><label>(6)</label><mml:math id="mm66" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>c</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>b</mml:mi><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:munder><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>f</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:munder><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msubsup><mml:mo>&#x000a0;</mml:mo><mml:msubsup><mml:mrow><mml:mi>coeff</mml:mi></mml:mrow><mml:mi>c</mml:mi><mml:mi>f</mml:mi></mml:msubsup><mml:mo>&#x02003;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD7-sensors-24-08046"><label>(7)</label><mml:math id="mm67" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>m</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>b</mml:mi><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:munder><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>f</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:munder><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msubsup><mml:mo>&#x000a0;</mml:mo><mml:msubsup><mml:mrow><mml:mi>coeff</mml:mi></mml:mrow><mml:mi>m</mml:mi><mml:mi>f</mml:mi></mml:msubsup><mml:mo>&#x02003;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm68" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi><mml:msubsup><mml:mi>f</mml:mi><mml:mi>c</mml:mi><mml:mi>f</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm69" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi><mml:msubsup><mml:mi>f</mml:mi><mml:mi>m</mml:mi><mml:mi>f</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> represent the CPU resource coefficient and memory resource coefficient, respectively, of the VNF of type <inline-formula><mml:math id="mm70" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. The data flow may be amplified or reduced (such as firewalls and intrusion defense will reduce traffic) when passing through each NF, causing the required bandwidth to change. The relationship between the inflow bandwidth of an NF <inline-formula><mml:math id="mm71" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and the required bandwidth of the logical link connected to it is
<disp-formula id="FD8-sensors-24-08046"><label>(8)</label><mml:math id="mm72" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>b</mml:mi><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>b</mml:mi><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:munder><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>f</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:munder><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msubsup><mml:mo>&#x000a0;</mml:mo><mml:msup><mml:mrow><mml:mi>ratio</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msup><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm73" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>k</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>u</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>v</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> are a set of ordered NFs, and <inline-formula><mml:math id="mm74" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>ratio</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> is the bandwidth scaling factor for VNF of type <inline-formula><mml:math id="mm75" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>To describe the migration process, here we define variables related to server status and VNF migration. When <inline-formula><mml:math id="mm76" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi mathvariant="sans-serif">&#x003be;</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mi>t</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> equals 1, it indicates that the virtual node <inline-formula><mml:math id="mm77" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> needs to perform migration in the <inline-formula><mml:math id="mm78" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:math></inline-formula> period.</p><p>We define a set of variables related to resource prediction. Resource data can be CPU, disk, memory, or other system resource usage, such as the number of processes, OS load, etc. For simplicity, this paper considers predicting CPU and memory data. <inline-formula><mml:math id="mm79" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>c</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mi>n</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> represents the CPU resource demand of <inline-formula><mml:math id="mm80" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> in the <inline-formula><mml:math id="mm81" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> period obtained through prediction; <inline-formula><mml:math id="mm82" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>m</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mi>n</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> represents the memory resource demand of <inline-formula><mml:math id="mm83" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> in the <inline-formula><mml:math id="mm84" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> period obtained through prediction.</p><p><inline-formula><mml:math id="mm85" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>o</mml:mi><mml:mi>v</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> represents the overload threshold of the underlying server.</p><p>The above variables satisfy the following constraint conditions: each virtual network function of the service function chain should be deployed on a physical node, which is unique, and can be represented as follows:<disp-formula id="FD9-sensors-24-08046"><label>(9)</label><mml:math id="mm86" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:munder><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>V</mml:mi><mml:mi>s</mml:mi></mml:msup></mml:mrow></mml:munder><mml:msubsup><mml:mi>&#x003b7;</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>s</mml:mi><mml:mi>f</mml:mi><mml:msup><mml:mi>c</mml:mi><mml:mi>j</mml:mi></mml:msup><mml:mo>&#x02208;</mml:mo><mml:mi>S</mml:mi><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>Each virtual link needs to be mapped onto a physical link. Since the virtual link may span nodes,
<disp-formula id="FD10-sensors-24-08046"><label>(10)</label><mml:math id="mm87" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:munder><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>q</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>E</mml:mi><mml:mi>s</mml:mi></mml:msup></mml:mrow></mml:munder><mml:msubsup><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02265;</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>s</mml:mi><mml:mi>f</mml:mi><mml:msup><mml:mi>c</mml:mi><mml:mi>j</mml:mi></mml:msup><mml:mo>&#x02208;</mml:mo><mml:mi>S</mml:mi><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>E</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>The constraints on CPU and memory resources of the underlying network nodes are respectively satisfied:<disp-formula id="FD11-sensors-24-08046"><label>(11)</label><mml:math id="mm88" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:munder><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>f</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:munder><mml:msubsup><mml:mi mathvariant="sans-serif">&#x003b2;</mml:mi><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msubsup><mml:msup><mml:mi>c</mml:mi><mml:mi>f</mml:mi></mml:msup><mml:mo>+</mml:mo><mml:munder><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>s</mml:mi><mml:mi>f</mml:mi><mml:msup><mml:mi>c</mml:mi><mml:mi>j</mml:mi></mml:msup><mml:mo>&#x02208;</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:munder><mml:msubsup><mml:mi mathvariant="sans-serif">&#x003b7;</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msubsup><mml:msubsup><mml:mi>c</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x02264;</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mi>i</mml:mi><mml:mi>S</mml:mi></mml:msubsup><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>V</mml:mi><mml:mi>S</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD12-sensors-24-08046"><label>(12)</label><mml:math id="mm89" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:munder><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>f</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:munder><mml:msubsup><mml:mi mathvariant="sans-serif">&#x003b2;</mml:mi><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msubsup><mml:msup><mml:mi>m</mml:mi><mml:mi>f</mml:mi></mml:msup><mml:mo>+</mml:mo><mml:munder><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>s</mml:mi><mml:mi>f</mml:mi><mml:msup><mml:mi>c</mml:mi><mml:mi>j</mml:mi></mml:msup><mml:mo>&#x02208;</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:munder><mml:msubsup><mml:mi mathvariant="sans-serif">&#x003b7;</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msubsup><mml:msubsup><mml:mi>m</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x02264;</mml:mo><mml:msubsup><mml:mi>M</mml:mi><mml:mi>i</mml:mi><mml:mi>S</mml:mi></mml:msubsup><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>V</mml:mi><mml:mi>S</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>The underlying link bandwidth constraint is satisfied:<disp-formula id="FD13-sensors-24-08046"><label>(13)</label><mml:math id="mm90" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:munder><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>s</mml:mi><mml:mi>f</mml:mi><mml:msup><mml:mi>c</mml:mi><mml:mi>j</mml:mi></mml:msup><mml:mo>&#x02208;</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>E</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:munder><mml:msubsup><mml:mi>&#x003c4;</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msubsup><mml:mi>b</mml:mi><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x02264;</mml:mo><mml:mi>B</mml:mi><mml:msubsup><mml:mi>W</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>q</mml:mi></mml:mrow><mml:mi>S</mml:mi></mml:msubsup><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>q</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>E</mml:mi><mml:mi>S</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>The service function chain delay limit is satisfied:<disp-formula id="FD14-sensors-24-08046"><label>(14)</label><mml:math id="mm91" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:munder><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>E</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:munder><mml:munder><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>q</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>E</mml:mi><mml:mi>s</mml:mi></mml:msup></mml:mrow></mml:munder><mml:msubsup><mml:mi>&#x003c4;</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msubsup><mml:msubsup><mml:mi>L</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>q</mml:mi></mml:mrow><mml:mi>S</mml:mi></mml:msubsup><mml:mo>&#x02264;</mml:mo><mml:msub><mml:mi>l</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&#x02003;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>s</mml:mi><mml:mi>f</mml:mi><mml:msup><mml:mi>c</mml:mi><mml:mi>j</mml:mi></mml:msup><mml:mo>&#x02208;</mml:mo><mml:mi>S</mml:mi><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>Every pair of connected VNFs <inline-formula><mml:math id="mm92" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> satisfies traffic conservation. Given a logical link <inline-formula><mml:math id="mm93" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>E</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and underlying nodes <inline-formula><mml:math id="mm94" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>&#x02200;</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>V</mml:mi><mml:mi>S</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>,
<disp-formula id="FD15-sensors-24-08046"><label>(15)</label><mml:math id="mm95" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:munder><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:msubsup><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>q</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="sans-serif">&#x003a9;</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msup><mml:mfenced separators="|"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced></mml:mrow></mml:munder><mml:mrow><mml:msubsup><mml:mrow><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>q</mml:mi><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mrow><mml:munder><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:msubsup><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>q</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="sans-serif">&#x003a9;</mml:mi></mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo></mml:mrow></mml:msup><mml:mfenced separators="|"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced></mml:mrow></mml:munder><mml:mrow><mml:msubsup><mml:mrow><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mfenced open="{" close="" separators="|"><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msubsup><mml:mrow><mml:mi mathvariant="sans-serif">&#x003b7;</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="sans-serif">&#x003b7;</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mo>&#x02032;</mml:mo></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02003;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:msubsup><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mo>&#x02032;</mml:mo></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:msubsup><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:mo>{</mml:mo><mml:msubsup><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>o</mml:mi><mml:mi>u</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msubsup><mml:mo>}</mml:mo><mml:mo>,</mml:mo><mml:mo>&#x02009;</mml:mo><mml:msubsup><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>o</mml:mi><mml:mi>u</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mo>&#x02009;</mml:mo><mml:msubsup><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:msubsup><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:mo>{</mml:mo><mml:msubsup><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msubsup><mml:mo>}</mml:mo><mml:mo>,</mml:mo><mml:mo>&#x02009;</mml:mo><mml:msubsup><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mo>&#x02009;</mml:mo><mml:msubsup><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>w</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm96" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi mathvariant="sans-serif">&#x003a9;</mml:mi><mml:mo>+</mml:mo></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>p</mml:mi><mml:mi>s</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm97" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi mathvariant="sans-serif">&#x003a9;</mml:mi><mml:mo>&#x02212;</mml:mo></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>p</mml:mi><mml:mi>s</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> represent the upstream and downstream node sets of <italic toggle="yes">v</italic><italic toggle="yes">p</italic><italic toggle="yes">s</italic>, respectively.</p><p>The migration of the virtual node <inline-formula><mml:math id="mm98" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> is represented by the following constraint condition. If the underlying node mapped by <inline-formula><mml:math id="mm99" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> is different before and after the traffic change, then <inline-formula><mml:math id="mm100" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> is migrated:<disp-formula id="FD16-sensors-24-08046"><label>(16)</label><mml:math id="mm101" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi mathvariant="sans-serif">&#x003be;</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mi>t</mml:mi></mml:msubsup><mml:mo>&#x02265;</mml:mo><mml:msubsup><mml:mi mathvariant="sans-serif">&#x003b7;</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi mathvariant="sans-serif">&#x003b7;</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02003;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>F</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>s</mml:mi><mml:mi>f</mml:mi><mml:msup><mml:mi>c</mml:mi><mml:mi>j</mml:mi></mml:msup><mml:mo>&#x02208;</mml:mo><mml:mi>S</mml:mi><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>V</mml:mi><mml:mi>S</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:mrow></mml:math></disp-formula></p></sec><sec id="sec3dot3-sensors-24-08046"><title>3.3. Load Balancing Model</title><p>The network system can more readily adjust to the dynamic fluctuations in network traffic because of network load balancing [<xref rid="B3-sensors-24-08046" ref-type="bibr">3</xref>]. Load balancing is implemented for time-varying network traffic in order to improve network resilience following VNF migration and encourage long-term resource optimization.</p><p>The system&#x02019;s efficiency in terms of load balancing is assessed using the change in resources. The average resource usage rate of physical nodes is directly correlated with the variance of system resources [<xref rid="B12-sensors-24-08046" ref-type="bibr">12</xref>]. The load on physical node m may change as a result of VNF j being moved from physical node n to physical node m during the VNF migration process.</p><p>At this time, the load on physical node m can be represented as follows:<disp-formula id="FD17-sensors-24-08046"><label>(17)</label><mml:math id="mm102" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>L</mml:mi><mml:mi>m</mml:mi><mml:mrow><mml:mi>cpu</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>j</mml:mi><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>N</mml:mi><mml:mi>i</mml:mi><mml:mi>v</mml:mi></mml:msubsup></mml:mrow></mml:munder><mml:msubsup><mml:mi>x</mml:mi><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x000b7;</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD18-sensors-24-08046"><label>(18)</label><mml:math id="mm103" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>L</mml:mi><mml:mi>m</mml:mi><mml:mrow><mml:mi>mem</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>j</mml:mi><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>N</mml:mi><mml:mi>i</mml:mi><mml:mi>v</mml:mi></mml:msubsup></mml:mrow></mml:munder><mml:msubsup><mml:mi>x</mml:mi><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x000b7;</mml:mo><mml:msubsup><mml:mi>M</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula>
where the CPU and memory resource loads of physical node m are denoted by <inline-formula><mml:math id="mm104" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>L</mml:mi><mml:mi>m</mml:mi><mml:mrow><mml:mi>cpu</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm105" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>L</mml:mi><mml:mi>m</mml:mi><mml:mrow><mml:mi>mem</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, respectively. To determine overall load balancing, the variation in resources on a single physical node m is insufficient. Based on variations in system resources, the load-balancing capability of the system can be assessed. Consequently, the mean CPU and memory load values at time <inline-formula><mml:math id="mm106" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:math></inline-formula> are:<disp-formula id="FD19-sensors-24-08046"><label>(19)</label><mml:math id="mm107" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>L</mml:mi><mml:mrow><mml:mi>mean</mml:mi></mml:mrow><mml:mrow><mml:mi>cpu</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:msub><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>N</mml:mi><mml:mi>P</mml:mi></mml:msup></mml:mrow></mml:msub><mml:msubsup><mml:mi>L</mml:mi><mml:mi>m</mml:mi><mml:mrow><mml:mi>cpu</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>/</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:msup><mml:mi>N</mml:mi><mml:mi>P</mml:mi></mml:msup></mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD20-sensors-24-08046"><label>(20)</label><mml:math id="mm108" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>L</mml:mi><mml:mrow><mml:mi>mean</mml:mi></mml:mrow><mml:mrow><mml:mi>mem</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:msub><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>N</mml:mi><mml:mi>P</mml:mi></mml:msup></mml:mrow></mml:msub><mml:msubsup><mml:mi>L</mml:mi><mml:mi>m</mml:mi><mml:mrow><mml:mi>mem</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>/</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:msup><mml:mi>N</mml:mi><mml:mi>P</mml:mi></mml:msup></mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm109" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm110" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> represent the physical node <inline-formula><mml:math id="mm111" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:math></inline-formula>&#x02019;s CPU and memory resource capacity, respectively. The network&#x02019;s variations in CPU and memory resources are stated as follows:<disp-formula id="FD21-sensors-24-08046"><label>(21)</label><mml:math id="mm112" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>L</mml:mi><mml:mrow><mml:mi>var</mml:mi></mml:mrow><mml:mrow><mml:mi>cpu</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:msub><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>N</mml:mi><mml:mi>P</mml:mi></mml:msup></mml:mrow></mml:msub><mml:msup><mml:mrow><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msubsup><mml:mi>L</mml:mi><mml:mi>m</mml:mi><mml:mrow><mml:mi>cpu</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>L</mml:mi><mml:mrow><mml:mi>mean</mml:mi></mml:mrow><mml:mrow><mml:mi>cpu</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:msup><mml:mi>N</mml:mi><mml:mi>P</mml:mi></mml:msup></mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD22-sensors-24-08046"><label>(22)</label><mml:math id="mm113" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>L</mml:mi><mml:mrow><mml:mi>var</mml:mi></mml:mrow><mml:mrow><mml:mi>mem</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:msub><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>N</mml:mi><mml:mi>P</mml:mi></mml:msup></mml:mrow></mml:msub><mml:msup><mml:mrow><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msubsup><mml:mi>L</mml:mi><mml:mi>m</mml:mi><mml:mrow><mml:mi>mem</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>L</mml:mi><mml:mrow><mml:mi>mean</mml:mi></mml:mrow><mml:mrow><mml:mi>mem</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:msup><mml:mi>N</mml:mi><mml:mi>P</mml:mi></mml:msup></mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>We employ the percentage of resource consumption as the measurement unit when assessing a network system&#x02019;s load balancing to make sure that storage and processing resources are quantified in the same unit. Consequently, the weighted sum of the variations of computing and storage resources can be used to determine the load-balancing capability <inline-formula><mml:math id="mm114" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>total</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> of the network system, which is expressed as follows:<disp-formula id="FD23-sensors-24-08046"><label>(23)</label><mml:math id="mm115" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>total</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>&#x003c9;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msubsup><mml:mi>L</mml:mi><mml:mrow><mml:mi>var</mml:mi></mml:mrow><mml:mrow><mml:mi>cpu</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>&#x003c9;</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:msubsup><mml:mi>L</mml:mi><mml:mrow><mml:mi>var</mml:mi></mml:mrow><mml:mrow><mml:mi>mem</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
where the weight factors for the impact of storage and computing resources on network load balancing are denoted by <inline-formula><mml:math id="mm116" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003c9;</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm117" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003c9;</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, respectively. Both resources are assumed to have the same effect on the network in this paper, with <inline-formula><mml:math id="mm118" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003c9;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>&#x003c9;</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>Thus, minimizing the variation in computing and storage resources is the system&#x02019;s optimal goal, as indicated by
<disp-formula id="FD24-sensors-24-08046"><label>(24)</label><mml:math id="mm119" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>total</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p></sec></sec><sec id="sec4-sensors-24-08046"><title>4. Algorithm Design</title><p>Liu et al. [<xref rid="B13-sensors-24-08046" ref-type="bibr">13</xref>] demonstrated that the VNF migration problem is NP-hard, since the significant scale of the network, the diversity of the network service flow, and the variability of the network environment make the VNF placement decision space high-dimensional and difficult.</p><p>Therefore, this section proposes a Resource Predictive Load Balancing SFC Migration Algorithm (RP-LBM) to address the aforementioned issue. The overall architecture of the algorithm is shown in <xref rid="sensors-24-08046-f002" ref-type="fig">Figure 2</xref>. The resource monitoring module obtains the dynamic resource utilization of the physical network. The Long Short-Term Memory (LSTM) model uses historical resource demand data to predict the NF resource demand at a future time. The resource prediction result is input into the migration decision module. For the SFC deployed on the node that is expected to be overloaded, the Proximal Policy Optimization algorithm is used to obtain the migration strategy. This strategy includes determining the migration path and VNF embedding nodes, ensuring that the service is not interrupted, and minimizing resource variance.</p><sec id="sec4dot1-sensors-24-08046"><title>4.1. LSTM-Based Resource Demand Prediction Algorithm</title><p>Traffic variations in network environments are typically highly real-time and dynamic. Short-term forecasting can promptly reflect and quickly capture these changes. Deep learning models possess rapid learning and adaptation capabilities, enabling them to accurately complete prediction tasks and capture real-time traffic fluctuations within a short time frame. Therefore, we have adopted an integrated algorithm that combines Convolutional Neural Networks, Long Short-Term Memory networks, and attention mechanisms to accurately predict the resource demands of VNF [<xref rid="B14-sensors-24-08046" ref-type="bibr">14</xref>].</p><p>First, the CNN module is used to extract key features from the historical data of VNF resource usage. CNNs excel at identifying local patterns and spatiotemporal features in data, and are able to generate high-quality feature representations. The convolutional layer scans the VNF resource usage time series data with multiple convolutional kernels. This captures different types of local patterns, such as peaks and regular changes in resource usage. As a result, it generates a rich set of feature maps that clearly show the underlying structure of VNF resource usage.</p><p>Next, the features extracted by the CNN are passed to the LSTM network. LSTM has powerful sequence processing capabilities, which can capture the time dependencies and long-term patterns in the use of VNF resources. This helps the model learn the connections between different time steps. LSTM processes the feature sequences and captures the dynamic information of resource demands change over time by maintaining hidden states and memory cells. LSTM can identify trend changes and cyclical fluctuations in resource use.</p><p>To further improve the model&#x02019;s prediction capability, we integrate an attention mechanism into the LSTM network. The attention mechanism can assign different weights to each time step. This highlights the most important historical information for the current prediction. <xref rid="sensors-24-08046-f003" ref-type="fig">Figure 3</xref> shows a flowchart of how the attention mechanism is integrated with the LSTM network. The workflow of the attention mechanism is as follows:</p><p>At each time step <inline-formula><mml:math id="mm120" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:math></inline-formula>, the attention mechanism calculates the attention weights based on the hidden state of the current LSTM <inline-formula><mml:math id="mm121" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and the hidden state of all previous time steps <inline-formula><mml:math id="mm122" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003b1;</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm123" overflow="scroll"><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:math></inline-formula> takes all previous time steps. Attention weights are calculated by a scoring function that measures the relevance of each hidden state <inline-formula><mml:math id="mm124" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> to the current prediction task <inline-formula><mml:math id="mm125" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:math></inline-formula>:<disp-formula id="FD25-sensors-24-08046"><label>(25)</label><mml:math id="mm126" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>s</mml:mi><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:msub><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mo>&#x022ba;</mml:mo></mml:mrow></mml:msubsup><mml:msub><mml:mrow><mml:mi>W</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD26-sensors-24-08046"><label>(26)</label><mml:math id="mm127" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">x</mml:mi><mml:mi mathvariant="normal">p</mml:mi><mml:mo>&#x02061;</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msubsup><mml:mo stretchy="false">&#x02211;</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">x</mml:mi><mml:mi mathvariant="normal">p</mml:mi><mml:mo>&#x02061;</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm128" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>W</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is a learnable weight matrix, and the softmax function ensures that the attention weights <inline-formula><mml:math id="mm129" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003b1;</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> are 1 on all <inline-formula><mml:math id="mm130" overflow="scroll"><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:math></inline-formula>.</p><p>Then, the attention weight <inline-formula><mml:math id="mm131" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003b1;</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is used to perform a weighted sum of the hidden states to generate a context vector <inline-formula><mml:math id="mm132" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>:</p><p>Finally, the context vector <inline-formula><mml:math id="mm133" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is <inline-formula><mml:math id="mm134" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> connected to the current hidden state, and the final resource demand forecast <inline-formula><mml:math id="mm135" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is generated through the fully connected layer:<disp-formula id="FD27-sensors-24-08046"><label>(27)</label><mml:math id="mm136" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>s</mml:mi><mml:mi>o</mml:mi><mml:mi>f</mml:mi><mml:mi>t</mml:mi><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:msub><mml:mrow><mml:mi>W</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi></mml:mrow></mml:msub><mml:mfenced open="[" close="]" separators="|"><mml:mrow><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>;</mml:mo><mml:msub><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm137" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>W</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm138" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>b</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> are the weight matrix and bias term of the fully connected layer, respectively.</p><p>Through this hybrid model combining CNN, LSTM, and attention mechanisms, the paper achieves precise predictions of future VNF resource demands, providing a reliable basis for SFC migration.</p></sec><sec id="sec4dot2-sensors-24-08046"><title>4.2. PPO-Based SFC Migration Algorithm</title><p>In the study of VNF migration problems, traditional heuristic algorithms are widely used in practical scenarios due to their simplicity and low computational complexity. However, in high-dimensional and complex decision spaces, these algorithms tend to get stuck in local optima. This limits the overall effectiveness of migration strategy optimization.</p><p>Deep reinforcement learning (DRL) algorithms, with their self-learning capabilities and extensive data analysis power, can explore a more comprehensive strategy space in high-dimensional decision environments. This allows DRL algorithms to find superior migration strategies compared to heuristic algorithms in complex and dynamic network environments. Although training deep neural networks requires significant computational resources and time, they offer notable advantages in decision accuracy and migration strategy optimization for complex networks involving numerous network nodes, links, and service functions [<xref rid="B4-sensors-24-08046" ref-type="bibr">4</xref>]. Additionally, the use of experience replay and parallel training techniques can improve training efficiency and reduce resource consumption.</p><p>Therefore, we propose a DRL algorithm based on Proximal Policy Optimization to solve the VNF migration problem. This algorithm converts the optimization objectives into a Markov Decision Process (MDP) and then uses the PPO algorithm to solve the MDP model, obtaining a near-optimal solution.</p><sec id="sec4dot2dot1-sensors-24-08046"><title>4.2.1. MDP Model</title><p>As part of dynamic optimization, we take into account reducing the variance of network resources following VNF migration under time-varying traffic. Since the state space, action space, state transition probability, and reward function are represented by the four-element tuple <inline-formula><mml:math id="mm139" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>&#x000a0;</mml:mo><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>,</mml:mo><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi><mml:mo>,</mml:mo><mml:mi>R</mml:mi><mml:mo>)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> respectively, the optimization aim is changed into a Discrete Time Markov Decision Process (DTMDP).</p><p>The network&#x02019;s state space at time <inline-formula><mml:math id="mm140" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:math></inline-formula> is represented by the state space <inline-formula><mml:math id="mm141" overflow="scroll"><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm142" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mi mathvariant="sans-serif">&#x003c8;</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi mathvariant="sans-serif">&#x003be;</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>C</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>M</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#x02208;</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm143" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>&#x003c8;</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> denotes the state space of the physical node and <inline-formula><mml:math id="mm144" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>&#x003be;</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> denotes the state space of the physical link, respectively, as follows:<disp-formula id="FD28-sensors-24-08046"><label>(28)</label><mml:math id="mm145" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="sans-serif">&#x003c8;</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="sans-serif">&#x003c6;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003c6;</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003c6;</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>n</mml:mi><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>N</mml:mi><mml:mi>p</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD29-sensors-24-08046"><label>(29)</label><mml:math id="mm146" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="sans-serif">&#x003be;</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="script">S</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">S</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">S</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>N</mml:mi><mml:mi>p</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:msub><mml:mi>l</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi>L</mml:mi><mml:mi>p</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>The state space of the CPU and the memory resource requirements of VNF are represented by <inline-formula><mml:math id="mm147" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>C</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm148" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>M</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, respectively. These demand data reflect the anticipated outcome of VNF&#x02019;s resource needs. The two resource requirements&#x02019; state spaces can be shown as follows:<disp-formula id="FD30-sensors-24-08046"><label>(30)</label><mml:math id="mm149" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>C</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>v</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mi>v</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>F</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>N</mml:mi><mml:mi>i</mml:mi><mml:mi>v</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD31-sensors-24-08046"><label>(31)</label><mml:math id="mm150" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>M</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msubsup><mml:mi>M</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>v</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msubsup><mml:mi>M</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mi>v</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>M</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>F</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>N</mml:mi><mml:mi>i</mml:mi><mml:mi>v</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>The set of mapping activities that VNF can perform is denoted by action space A. The mapping action space of VNF can now be expressed as follows:<disp-formula id="FD32-sensors-24-08046"><label>(32)</label><mml:math id="mm151" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#x02003;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>F</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>&#x02208;</mml:mo><mml:msubsup><mml:mi>N</mml:mi><mml:mi>i</mml:mi><mml:mi>v</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mi>a</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x02208;</mml:mo><mml:mi>A</mml:mi></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm152" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> is the mapping action that the <inline-formula><mml:math id="mm153" overflow="scroll"><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:math></inline-formula>-th VNF on SFC <inline-formula><mml:math id="mm154" overflow="scroll"><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:math></inline-formula> may perform. This includes the selection scheme of the physical node mapping variable <inline-formula><mml:math id="mm155" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and the virtual link mapping variable <inline-formula><mml:math id="mm156" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>The transition probability <inline-formula><mml:math id="mm157" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:math></inline-formula>, which can be expressed as <inline-formula><mml:math id="mm158" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>s</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi>s</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>a</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, is the probability of moving to the next state <inline-formula><mml:math id="mm159" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> following an action <inline-formula><mml:math id="mm160" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x02208;</mml:mo><mml:mi>a</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> in the current state <inline-formula><mml:math id="mm161" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x02208;</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>The network creates a mapping strategy <inline-formula><mml:math id="mm162" overflow="scroll"><mml:mrow><mml:mi>&#x003c0;</mml:mi></mml:mrow></mml:math></inline-formula> when it performs action <inline-formula><mml:math id="mm163" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> under state <inline-formula><mml:math id="mm164" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. The optimization aims states that an instantaneous reward <inline-formula><mml:math id="mm165" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> can be obtained if the mapping approach <inline-formula><mml:math id="mm166" overflow="scroll"><mml:mrow><mml:mi>&#x003c0;</mml:mi></mml:mrow></mml:math></inline-formula> fulfills system restrictions.
<disp-formula id="FD33-sensors-24-08046"><label>(33)</label><mml:math id="mm167" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>total</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>The network uses the value function <inline-formula><mml:math id="mm168" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>V</mml:mi><mml:mi>&#x003c0;</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> to assess the quality of the current VNF mapping strategy <inline-formula><mml:math id="mm169" overflow="scroll"><mml:mrow><mml:mi>&#x003c0;</mml:mi></mml:mrow></mml:math></inline-formula> at this precise instant. <inline-formula><mml:math id="mm170" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>V</mml:mi><mml:mi>&#x003c0;</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> can be represented as follows:<disp-formula id="FD34-sensors-24-08046"><label>(34)</label><mml:math id="mm171" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:msup><mml:mi>V</mml:mi><mml:mi mathvariant="sans-serif">&#x003c0;</mml:mi></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>s</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>a</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mi>E</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>R</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>s</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>a</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mo>=</mml:mo><mml:mi>E</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>r</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>&#x003b3;</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mo>&#x022ef;</mml:mo><mml:mi>s</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>a</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mo>=</mml:mo><mml:mi>E</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>r</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>&#x003b3;</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:msup><mml:mi>V</mml:mi><mml:mi>&#x003c0;</mml:mi></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>s</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>a</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi>s</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>a</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:math></disp-formula>
where the importance of future rewards in relation to present rewards is represented by the discount factor, <inline-formula><mml:math id="mm172" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003b3;</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mo>&#x02208;</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. The optimal strategy for VNF migration can be expressed as follows:<disp-formula id="FD35-sensors-24-08046"><label>(35)</label><mml:math id="mm173" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi mathvariant="sans-serif">&#x003c0;</mml:mi><mml:mo>&#x02217;</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:mi>arg</mml:mi><mml:munder><mml:mrow><mml:mi>max</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:munder><mml:msup><mml:mi>V</mml:mi><mml:mi mathvariant="sans-serif">&#x003c0;</mml:mi></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>a</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x02003;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>a</mml:mi></mml:mrow></mml:mrow></mml:math></disp-formula></p></sec><sec id="sec4dot2dot2-sensors-24-08046"><title>4.2.2. Proximal Policy Optimization Algorithm</title><p>Proximal Policy Optimization is a widely used policy optimization algorithm in reinforcement learning. PPO aims to stabilize the training process and reduce fluctuations and uncertainties during policy updates by limiting the difference between new and old policies [<xref rid="B15-sensors-24-08046" ref-type="bibr">15</xref>]. PPO is mainly implemented through the following key steps.</p><p>First, it interacts with the environment using the current policy to collect a batch of trajectory data, including states <inline-formula><mml:math id="mm174" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, actions <inline-formula><mml:math id="mm175" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, rewards <inline-formula><mml:math id="mm176" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and next states <inline-formula><mml:math id="mm177" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. To improve sample efficiency, data are usually collected simultaneously in multiple parallel environments. These data are used for subsequent updates of the policy and value function.</p><p>Next, the Generalized Advantage Estimation (GAE) method is used to estimate the advantage function <inline-formula><mml:math id="mm178" overflow="scroll"><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="true">^</mml:mo></mml:mover></mml:mrow></mml:mrow></mml:math></inline-formula>. The advantage function measures the superiority of a particular action relative to the average policy:<disp-formula id="FD36-sensors-24-08046"><label>(36)</label><mml:math id="mm179" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="true">^</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:msub><mml:mi>&#x003b4;</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>&#x003b3;</mml:mi><mml:mi>&#x003bb;</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>&#x003b4;</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>&#x003b3;</mml:mi><mml:mi>&#x003bb;</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mi>T</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msub><mml:mi>&#x003b4;</mml:mi><mml:mrow><mml:mi>T</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm180" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003b4;</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mi>&#x003b3;</mml:mi><mml:mi>V</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mi>V</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm181" overflow="scroll"><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow></mml:math></inline-formula> is the discount factor, and <inline-formula><mml:math id="mm182" overflow="scroll"><mml:mrow><mml:mi>&#x003bb;</mml:mi></mml:mrow></mml:math></inline-formula> is the GAE decay parameter.</p><p>Next, for each sample point, the probabilities of selecting action <inline-formula><mml:math id="mm183" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> under state <inline-formula><mml:math id="mm184" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> for both the new and old policies, <inline-formula><mml:math id="mm185" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003c0;</mml:mi><mml:mrow><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mrow><mml:mi>old</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm186" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003c0;</mml:mi><mml:mi>&#x003b8;</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, are calculated. The probability ratio <inline-formula><mml:math id="mm187" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> indicates the relative change between the new and old policies. A ratio greater than 1 indicates that the new policy is more inclined to choose action <inline-formula><mml:math id="mm188" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in this state, while a ratio less than 1 indicates the opposite:<disp-formula id="FD37-sensors-24-08046"><label>(37)</label><mml:math id="mm189" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>&#x003c0;</mml:mi><mml:mi>&#x003b8;</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>/</mml:mo><mml:msub><mml:mi>&#x003c0;</mml:mi><mml:mrow><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mrow><mml:mi>old</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>To limit the extent of policy updates and avoid <inline-formula><mml:math id="mm190" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> being too large or too small, PPO introduces a clipping operation. The clipped objective function is defined as follows:<disp-formula id="FD38-sensors-24-08046"><label>(38)</label><mml:math id="mm191" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>L</mml:mi><mml:mrow><mml:mi>CLIP</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="sans-serif">&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>min</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="sans-serif">&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mover accent="true"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="true">^</mml:mo></mml:mover><mml:mo>,</mml:mo><mml:mrow><mml:mo>&#x000a0;</mml:mo><mml:mi>clip</mml:mi></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="sans-serif">&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003f5;</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>&#x003f5;</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mover accent="true"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="true">^</mml:mo></mml:mover></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm192" overflow="scroll"><mml:mrow><mml:mi>&#x003f5;</mml:mi></mml:mrow></mml:math></inline-formula> is a small positive number, typically between 0.1 and 0.3. The clipping operation constrains <inline-formula><mml:math id="mm193" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> within the range <inline-formula><mml:math id="mm194" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003f5;</mml:mi><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>&#x003f5;</mml:mi></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, preventing excessive policy updates that lead to unstable training.</p><p>In addition, PPO uses mean squared error to minimize the difference between the value function and the target value:<disp-formula id="FD39-sensors-24-08046"><label>(39)</label><mml:math id="mm195" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>L</mml:mi><mml:mrow><mml:mi>VF</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="sans-serif">&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mi mathvariant="sans-serif">&#x003b8;</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mi>t</mml:mi><mml:mrow><mml:mi>target</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>The value function <inline-formula><mml:math id="mm196" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mi mathvariant="sans-serif">&#x003b8;</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> estimates the expected return after executing the policy in state <inline-formula><mml:math id="mm197" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, while the target value <inline-formula><mml:math id="mm198" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>V</mml:mi><mml:mi>t</mml:mi><mml:mrow><mml:mi>target</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> estimates the actual return, which can be calculated using Monte Carlo or temporal difference methods.</p><p>To encourage exploration and prevent premature convergence to local optima, an entropy regularization term is added. The entropy regularization term rewards policies with higher entropy, i.e., more random policies, which helps ensure adequate exploration during the early stages of training:<disp-formula id="FD40-sensors-24-08046"><label>(40)</label><mml:math id="mm199" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi>&#x003c0;</mml:mi><mml:mi>&#x003b8;</mml:mi></mml:msub></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mo>&#x02212;</mml:mo><mml:munder><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>&#x02211;</mml:mo></mml:mstyle><mml:mi>a</mml:mi></mml:munder><mml:msub><mml:mi>&#x003c0;</mml:mi><mml:mi>&#x003b8;</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>a</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi>log</mml:mi><mml:msub><mml:mi>&#x003c0;</mml:mi><mml:mi>&#x003b8;</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>a</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>Combining these components, the total loss function <inline-formula><mml:math id="mm200" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> is defined as follows:<disp-formula id="FD41-sensors-24-08046"><label>(41)</label><mml:math id="mm201" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mi>L</mml:mi><mml:mrow><mml:mi>CLIP</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msup><mml:mi>L</mml:mi><mml:mrow><mml:mi>VF</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>&#x003c0;</mml:mi><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm202" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm203" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> are weights used to balance the importance of policy loss, value function loss, and the entropy regularization term.</p><p>To optimize the total loss function <inline-formula><mml:math id="mm204" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, PPO typically uses stochastic gradient descent algorithms (such as the Adam optimizer) for parameter updates.</p><p>First, based on the current batch of sample data, calculate the gradients of the total loss function <inline-formula><mml:math id="mm205" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> with respect to the policy parameters and value function parameters, <inline-formula><mml:math id="mm206" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mo>&#x02207;</mml:mo><mml:mrow><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm207" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mo>&#x02207;</mml:mo><mml:mrow><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. Use the Adam optimizer to update the parameters based on the computed gradient information:<disp-formula id="FD42-sensors-24-08046"><label>(42)</label><mml:math id="mm208" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mo>&#x02207;</mml:mo><mml:mrow><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>&#x003b8;</mml:mi><mml:mo>&#x02190;</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:msqrt><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:msqrt><mml:mo>+</mml:mo><mml:mi>&#x003f5;</mml:mi></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm209" overflow="scroll"><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow></mml:math></inline-formula> is the learning rate; <inline-formula><mml:math id="mm210" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm211" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> are the first- and second-moment estimates of the gradient, respectively; and <inline-formula><mml:math id="mm212" overflow="scroll"><mml:mrow><mml:mi>&#x003f5;</mml:mi></mml:mrow></mml:math></inline-formula> is a small constant to prevent division by zero.</p><p>The policy parameters <inline-formula><mml:math id="mm213" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> aim to maximize policy rewards by minimizing the negative terms in the loss function:<disp-formula id="FD43-sensors-24-08046"><label>(43)</label><mml:math id="mm214" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo>&#x02190;</mml:mo><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:msub><mml:mo>&#x02207;</mml:mo><mml:mrow><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mi>L</mml:mi><mml:mrow><mml:mi>CLIP</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:msub><mml:mi>&#x003c0;</mml:mi><mml:mi>&#x003b8;</mml:mi></mml:msub></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>The value function parameters <inline-formula><mml:math id="mm215" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> aim to minimize the value function loss <inline-formula><mml:math id="mm216" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>L</mml:mi><mml:mrow><mml:mi>VF</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>:<disp-formula id="FD44-sensors-24-08046"><label>(44)</label><mml:math id="mm217" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo>&#x02190;</mml:mo><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:msub><mml:mo>&#x02207;</mml:mo><mml:mrow><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:msub><mml:msup><mml:mi>L</mml:mi><mml:mrow><mml:mi>VF</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>Through these steps, PPO effectively balances exploration and exploitation during policy optimization, stabilizes the training process, and enhances sample efficiency.</p></sec></sec><sec id="sec4dot3-sensors-24-08046"><title>4.3. Resource Predictive Load Balancing SFC Migration Algorithm</title><p>The pseudocode for the RP-LBM algorithm is shown in Algorithm 1. RP-LBM uses predicted future resource demands and the physical network graph as inputs to generate the SFC mapping strategy <inline-formula><mml:math id="mm218" overflow="scroll"><mml:mrow><mml:mi>&#x003c0;</mml:mi></mml:mrow></mml:math></inline-formula> (Lines 1&#x02013;2). First, it calculates the resource utilization <inline-formula><mml:math id="mm219" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003b7;</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> for each physical node based on the prediction results (Line 3). If <inline-formula><mml:math id="mm220" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003b7;</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> exceeds the set threshold <inline-formula><mml:math id="mm221" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>o</mml:mi><mml:mi>v</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> (Line 4), it selects an SFC to migrate on that node (Line 5) and it initializes the policy parameters <inline-formula><mml:math id="mm222" overflow="scroll"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, the maximum number of iterations <inline-formula><mml:math id="mm223" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>K</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and other relevant parameters (Line 6). In the main loop (Lines 7&#x02013;19), it selects mapping actions <inline-formula><mml:math id="mm224" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> from the policy <inline-formula><mml:math id="mm225" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>&#x003c0;</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msubsup><mml:mi>&#x003b8;</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, executes the action to obtain an immediate reward <italic toggle="yes">r</italic><inline-formula><mml:math id="mm226" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, and transitions to a new state <italic toggle="yes">s</italic><inline-formula><mml:math id="mm227" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, while calculating the advantage function <inline-formula><mml:math id="mm228" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>A</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. If constraints are not satisfied, it sets the immediate reward <italic toggle="yes">r</italic>(<italic toggle="yes">t)</italic> = <inline-formula><mml:math id="mm229" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mi>&#x003b5;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and reselects actions. Then, it computes the clipped surrogate objective for Proximal Policy Optimization and updates the policy parameters <inline-formula><mml:math id="mm230" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> using gradient ascent and the value function parameters <inline-formula><mml:math id="mm231" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> using gradient descent. If the resource utilization does not exceed the threshold, no action is taken (Line 20).
<array><tbody><tr><td colspan="2" align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1"><bold>Algorithm 1</bold> Resource Predictive Load Balancing SFC Migration Algorithm (RP-LBM)</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">1</td><td align="left" valign="middle" rowspan="1" colspan="1"><bold>Input:</bold> Prediction result <inline-formula><mml:math id="mm232" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>c</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mi>n</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:msubsup><mml:mi>m</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mi>n</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>;</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> Physical network diagram <inline-formula><mml:math id="mm233" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mi>V</mml:mi><mml:mi>s</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>E</mml:mi><mml:mi>s</mml:mi></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>; SFC network diagram <inline-formula><mml:math id="mm234" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>G</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>V</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:msubsup><mml:mi>E</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula></td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">2</td><td align="left" valign="middle" rowspan="1" colspan="1"><bold>Output:</bold> SFC mapping strategy <inline-formula><mml:math id="mm235" overflow="scroll"><mml:mrow><mml:mi>&#x003c0;</mml:mi></mml:mrow></mml:math></inline-formula>;</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">3</td><td align="left" valign="middle" rowspan="1" colspan="1">Calculate the resource utilization <inline-formula><mml:math id="mm236" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003b7;</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> of each physical node according to the prediction result;</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">4</td><td align="left" valign="middle" rowspan="1" colspan="1">if <inline-formula><mml:math id="mm237" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003b7;</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02265;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>o</mml:mi><mml:mi>v</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> then</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">5</td><td align="left" valign="middle" rowspan="1" colspan="1">&#x02003;&#x02003;Select an SFC to migrate on that node;</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">6</td><td align="left" valign="middle" rowspan="1" colspan="1">&#x02003;&#x02003;Initialize <inline-formula><mml:math id="mm238" overflow="scroll"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>K</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, M, (<inline-formula><mml:math id="mm239" overflow="scroll"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#x003b5;</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:msub><mml:mi>&#x003b5;</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>);</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">7</td><td align="left" valign="middle" rowspan="1" colspan="1">&#x02003;&#x02003;<bold>for</bold> episode = 1, &#x02026;, M <bold>do</bold></td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">8</td><td align="left" valign="middle" rowspan="1" colspan="1">&#x02003;&#x02003;&#x02003;&#x02003;Select mapping actions <inline-formula><mml:math id="mm240" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> from the strategies <inline-formula><mml:math id="mm241" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>&#x003c0;</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msubsup><mml:mi>&#x003b8;</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>;</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">9</td><td align="left" valign="middle" rowspan="1" colspan="1">&#x02003;&#x02003;&#x02003;&#x02003;<bold>if</bold> constraints are satisfied then</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">10</td><td align="left" valign="middle" rowspan="1" colspan="1">&#x02003;&#x02003;&#x02003;&#x02003;&#x02003;&#x02003;Execute the action <inline-formula><mml:math id="mm242" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, get the instantaneous reward</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">11</td><td align="left" valign="middle" rowspan="1" colspan="1">&#x02003;&#x02003;&#x02003;&#x02003;&#x02003;&#x02003;<italic toggle="yes">r</italic><inline-formula><mml:math id="mm243" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and transfer it to the state <italic toggle="yes">s</italic><inline-formula><mml:math id="mm244" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>;</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">12</td><td align="left" valign="middle" rowspan="1" colspan="1">&#x02003;&#x02003;&#x02003;&#x02003;&#x02003;&#x02003;Obtain the advantage function <inline-formula><mml:math id="mm245" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>A</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>;</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">13</td><td align="left" valign="middle" rowspan="1" colspan="1">&#x02003;&#x02003;&#x02003;&#x02003;<bold>else</bold></td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">14</td><td align="left" valign="middle" rowspan="1" colspan="1">&#x02003;&#x02003;&#x02003;&#x02003;Set instantaneous reward <italic toggle="yes">r(t</italic>) = <inline-formula><mml:math id="mm246" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mi>&#x003b5;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, and re-select the action <inline-formula><mml:math id="mm247" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> from the policy network;</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">15</td><td align="left" valign="middle" rowspan="1" colspan="1">&#x02003;&#x02003;&#x02003;&#x02003;<bold>end if</bold></td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">16</td><td align="left" valign="middle" rowspan="1" colspan="1">&#x02003;&#x02003;&#x02003;&#x02003;Compute the clipped surrogate objective for PPO</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">17</td><td align="left" valign="middle" rowspan="1" colspan="1">&#x02003;&#x02003;&#x02003;&#x02003;Update the policy parameters <inline-formula><mml:math id="mm248" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> using gradient ascent</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">18</td><td align="left" valign="middle" rowspan="1" colspan="1">&#x02003;&#x02003;&#x02003;&#x02003;Update the value function parameters <inline-formula><mml:math id="mm249" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> using gradient descent</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">19</td><td align="left" valign="middle" rowspan="1" colspan="1">&#x02003;&#x02003;<bold>end for</bold></td></tr><tr><td align="left" valign="top" style="border-bottom:solid thin" rowspan="1" colspan="1">20</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>end if</bold></td></tr></tbody></array></p></sec></sec><sec id="sec5-sensors-24-08046"><title>5. Performance Evaluation</title><sec id="sec5dot1-sensors-24-08046"><title>5.1. Simulation Setup</title><p>In order to evaluate the effectiveness of the above algorithm, we conducted simulations using the SFC simulation platform SFCSim [<xref rid="B16-sensors-24-08046" ref-type="bibr">16</xref>] using the Python environment and tested the program on a cellular network topology.</p><p><xref rid="sensors-24-08046-f004" ref-type="fig">Figure 4</xref> depicts the physical network, which consists of 42 links and 19 physical nodes. The server&#x02019;s CPU and memory resources are set to roughly <inline-formula><mml:math id="mm250" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mn>250</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mn>300</mml:mn><mml:mo>)</mml:mo><mml:mrow><mml:mo>&#x000a0;</mml:mo><mml:mi>MIPS</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm251" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mn>600</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mn>1000</mml:mn><mml:mo>)</mml:mo><mml:mrow><mml:mo>&#x000a0;</mml:mo><mml:mi>GB</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, respectively, uniformly divided [<xref rid="B17-sensors-24-08046" ref-type="bibr">17</xref>]. The link delay is uniformly distributed in units of <inline-formula><mml:math id="mm252" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mn>4</mml:mn><mml:mo>)</mml:mo><mml:mrow><mml:mo>&#x000a0;</mml:mo><mml:mi>ms</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, and we have set the link bandwidth capacity to 500 Mbps. The node overload threshold is 0.7.</p><p>We consider eight types of VNFs. Each SFC chooses a subset of VNFs at random, and the length of each SFC is randomly selected from two to five. The entrance and exit are chosen at random from <inline-formula><mml:math id="mm253" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>V</mml:mi><mml:mi>S</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>. The bandwidth factor ratios of the various VNF variants are chosen from 0.5, 1, and 1.5.</p><p>The CPU coefficient <inline-formula><mml:math id="mm254" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi><mml:msubsup><mml:mi>f</mml:mi><mml:mi>c</mml:mi><mml:mi>f</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and memory coefficient <inline-formula><mml:math id="mm255" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi><mml:msubsup><mml:mi>f</mml:mi><mml:mi>m</mml:mi><mml:mi>f</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> of different types of VNFs are uniformly distributed in (0.1, 0.2). The maximum delay of the SFC is 30 ms. We set the network to have 20 paths in a 24-hour period using the Clearwater VNF Dataset&#x02019;s traffic dataset [<xref rid="B18-sensors-24-08046" ref-type="bibr">18</xref>].</p></sec><sec id="sec5dot2-sensors-24-08046"><title>5.2. Simulation Result and Analysis</title><p>In this paper, the following metrics are used to evaluate the performance of the algorithm under three conditions of sufficient resources, moderate resources, and scarce resources: node resource variance, total network migration times, average variance of network node resources, and service interruption rate, i.e., the ratio of interruption time to the SFC lifecycle.</p><p>Firstly, the performance of three algorithms in predicting the resource demand of each network function in the prediction network was compared: LSTM, CNN-AT-LSTM, and LSTM&#x02013;encoder&#x02013;decoder. The results of model training are shown in <xref rid="sensors-24-08046-t001" ref-type="table">Table 1</xref>. It can be seen that the mean square error (MSE) and root mean square error (RMSE) between the predicted values and the actual values of the CNN-AT-LSTM model are the smallest, indicating that this model has the highest prediction accuracy.</p><p>To intuitively demonstrate the predictive capabilities of the models, we chose LSTM and CNN-AT-LSTM as examples. We compared the CPU demand predictions for a single VNF with the actual values. The detailed comparison results are presented in <xref rid="sensors-24-08046-f005" ref-type="fig">Figure 5</xref>, which includes annotations for &#x0201c;Level Shift&#x0201d; and &#x0201c;Change Point.&#x0201d; During times when the data experienced significant level shifts, CNN-AT-LSTM quickly adjusted its predictions and closely followed the changes in the actual values. In contrast, the LSTM model showed some delay. At data change points, the prediction errors of CNN-AT-LSTM were much smaller than those of the LSTM model. This highlights CNN-AT-LSTM&#x02019;s ability to capture rapid dynamic changes more effectively. The results indicate that the attention mechanism in CNN-AT-LSTM allows it to focus on important time steps within the input sequence. This is especially useful during pattern shifts and data change points. As a result, CNN-AT-LSTM improves overall prediction accuracy and response speed. In summary, CNN-AT-LSTM offers higher prediction precision and reliability when dealing with the dynamic fluctuations of network resource demands. It is better equipped to handle severe and sudden variations in resource requirements compared to the LSTM model.</p><p>The resource demand prediction results serve as input for the RP-LBM. RP-LBM can identify potential overload nodes in advance and develop corresponding migration strategies. <xref rid="sensors-24-08046-f006" ref-type="fig">Figure 6</xref> and <xref rid="sensors-24-08046-f007" ref-type="fig">Figure 7</xref> illustrate the changes in network resource variance under three different resource states: (a) sufficient resources, (b) moderate resources, and (c) scarce resources. The figure also compares the average node resource variance under these different conditions. In each scenario, we use different deep reinforcement learning algorithms, namely DQN and PPO, to create migration strategies. We compare these strategies with situations where no pre-migration is performed. The reward functions of the DQN and PPO algorithms are based on the network system&#x02019;s load-balancing capability. This design causes the algorithms to prefer migration strategies that minimize network resource variance. Consequently, both algorithms maintain a lower variance in network resource usage and support the network&#x02019;s load-balancing state. In contrast, the no-migration strategy uses the shortest path algorithm to deploy SFC but does not optimize network node resource usage. This approach results in unbalanced network resource utilization and fails to manage resource allocation effectively. As a result, the overall performance and stability of the system may be negatively affected.</p><p>We also compare the total number of network SFC migrations and the SFC service interruption rates when using different algorithms, as shown in <xref rid="sensors-24-08046-f008" ref-type="fig">Figure 8</xref> and <xref rid="sensors-24-08046-f009" ref-type="fig">Figure 9</xref>. The analysis shows that, across all three resource states, the RP-LBM-PPO algorithm always results in fewer SFC migrations than the RP-LBM-DQN algorithm. Additionally, when resources are sufficient or moderate, the PPO algorithm performs similarly to the DQN algorithm in terms of service interruption rates. This indicates that the PPO algorithm can maintain lower service interruption rates with less migration overhead. <xref rid="sensors-24-08046-f005" ref-type="fig">Figure 5</xref> shows that resource demand has periodic fluctuations and sudden data surges. Throughout the traffic variations, the RP-LBM algorithm consistently maintains the service interruption rate low. This demonstrates the algorithm&#x02019;s capability to quickly ensure service quality during traffic bursts. By rapidly adjusting resource allocation, the algorithm effectively maintains service continuity. These results further validate the superior performance of the RP-LBM-PPO algorithm in dynamic environments.</p><p>In contrast, the strategy that does not use pre-migration can only respond passively to changes in resource demand. This approach cannot develop a migration plan in advance and results in the highest service interruption rate. This finding highlights the importance of predicting resource demand and planning ahead to improve network stability and reduce the risk of interruptions. Combined with <xref rid="sensors-24-08046-f007" ref-type="fig">Figure 7</xref>, it can be known that when the network resource variance is small, resource utilization is more balanced. Balanced resource utilization directly impacts the overall performance and efficiency of the network. The PPO and DQN algorithms maintain lower levels of network resource variance through effective load-balancing strategies. In this way, these algorithms achieve more balanced resource allocation and reduce the service interruption rate.</p><p>However, when resources are scarce, the number of migrations using the DQN algorithm increases significantly. This leads to a sharp rise in the service interruption rate, which is 7.6% higher than that of the PPO algorithm. In a resource-scarce environment, the DQN algorithm tends to frequently adjust network configurations to balance the load. These excessive migration operations increase the system&#x02019;s overhead and complexity, resulting in a higher service interruption rate. The PPO algorithm, on the other hand, uses a more stable policy optimization method. This approach allows the PPO algorithm to adjust policies more effectively under resource constraints, reducing unnecessary migration times. The policy update mechanism of PPO ensures the continuity and stability of network services with only small policy changes. Therefore, in situations where resources are limited, the PPO algorithm demonstrates greater efficiency and stability. It reduces the number of migrations while maintaining a low service interruption rate. This performance indicates that the PPO algorithm has better robustness and adaptability in complex network environments.</p></sec></sec><sec sec-type="conclusions" id="sec6-sensors-24-08046"><title>6. Conclusions</title><sec id="sec6dot1-sensors-24-08046"><title>6.1. Summary of the Performance</title><p>To address the issue of the service QoS degradation or interruptions caused by dynamic changes in resource demand within edge computing environments, we conducted an in-depth study on the dynamic migration problem of SFCs where resources are scarce and constantly changing. The focus is on optimizing network performance through load balancing. We used the CNN-AT-LSTM machine learning model to predict the resource demands of VNFs. This approach allows us to anticipate changes in network node resource allocation and proactively develop migration strategies based on these predictions. By determining which VNFs to migrate from overloaded nodes, we ensure efficient resource management. We integrated the Proximal Policy Optimization deep reinforcement learning algorithm into our prediction model. This combination enables the system to detect changes in complex environments and select appropriate target nodes for migration. It also achieves network load balance, reduces the number of subsequent migrations, and minimizes the impact of unnecessary migrations.</p><p>The experimental results demonstrate that the RP-LBM-PPO algorithm outperforms the RP-LBM-DQN algorithm in both the number of migrations and the service interruption rate. When resources are sufficient or moderate, the PPO algorithm maintains a low service interruption rate with minimal migration overhead. However, in resource-scarce conditions, the DQN algorithm significantly increases the number of migrations and the service interruption rate due to frequent adjustments. In contrast, the PPO algorithm effectively reduces these negative impacts through stable policy optimization. These findings indicate that the PPO algorithm offers better efficiency and stability, making it more robust and adaptable in complex network environments.</p></sec><sec id="sec6dot2-sensors-24-08046"><title>6.2. Potential Future Research Directions</title><p>We assume that the lifecycle of SFC is infinite and do not consider how dynamic arrivals affect network load, migration operations, and service interruption rates. Additionally, the single-objective optimization algorithm we used focuses solely on minimizing the variance of system computation and storage resources to balance the network load. Although reducing the number of migrations and controlling service interruption rates have significantly improved the efficiency and stability of network resource management, we have not specifically modeled or deeply analyzed the time costs and resource overhead of migration operations. Future research should address SFCs with dynamic lifecycles and develop detailed models for migration costs and energy consumption [<xref rid="B19-sensors-24-08046" ref-type="bibr">19</xref>]. Furthermore, it should explore multi-objective optimization methods to achieve a comprehensive optimization of resource utilization efficiency, service quality, and energy consumption.</p></sec></sec></body><back><ack><title>Acknowledgments</title><p>The authors gratefully acknowledge the informative comments and suggestions of the reviewers, which have improved both the content and presentation.</p></ack><fn-group><fn><p><bold>Disclaimer/Publisher&#x02019;s Note:</bold> The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.</p></fn></fn-group><notes><title>Author Contributions</title><p>T.S., H.H., and S.Z. conceived of the idea, designed and performed the evaluation, analyzed the results, drafted the initial manuscript, and revised the final manuscript. All authors have read and agreed to the published version of the manuscript.</p></notes><notes notes-type="data-availability"><title>Data Availability Statement</title><p>The original contributions presented in this study are included in the article. Further inquiries can be directed to the corresponding author.</p></notes><notes notes-type="COI-statement"><title>Conflicts of Interest</title><p>The authors declare no conflicts of interest.</p></notes><ref-list><title>References</title><ref id="B1-sensors-24-08046"><label>1.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Bhamare</surname><given-names>D.</given-names></name>
<name><surname>Jain</surname><given-names>R.</given-names></name>
<name><surname>Samaka</surname><given-names>M.</given-names></name>
<name><surname>Erbad</surname><given-names>A.</given-names></name>
</person-group><article-title>A Survey on Service Function Chaining</article-title><source>J. Netw. Comput. Appl.</source><year>2016</year><volume>75</volume><fpage>138</fpage><lpage>155</lpage><pub-id pub-id-type="doi">10.1016/j.jnca.2016.09.001</pub-id></element-citation></ref><ref id="B2-sensors-24-08046"><label>2.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Qu</surname><given-names>K.</given-names></name>
<name><surname>Zhuang</surname><given-names>W.</given-names></name>
<name><surname>Shen</surname><given-names>X.</given-names></name>
<name><surname>Li</surname><given-names>X.</given-names></name>
<name><surname>Rao</surname><given-names>J.</given-names></name>
</person-group><article-title>Dynamic Resource Scaling for VNF over Nonstationary Traffic: A Learning Approach</article-title><source>IEEE Trans. Cogn. Commun. Netw.</source><year>2020</year><volume>7</volume><fpage>648</fpage><lpage>662</lpage><pub-id pub-id-type="doi">10.1109/TCCN.2020.3018157</pub-id></element-citation></ref><ref id="B3-sensors-24-08046"><label>3.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Guo</surname><given-names>Z.</given-names></name>
<name><surname>Xu</surname><given-names>Y.</given-names></name>
<name><surname>Liu</surname><given-names>Y.F.</given-names></name>
<name><surname>Liu</surname><given-names>S.</given-names></name>
<name><surname>Chao</surname><given-names>H.J.</given-names></name>
<name><surname>Zhang</surname><given-names>Z.-L.</given-names></name>
<name><surname>Xia</surname><given-names>Y.</given-names></name>
</person-group><article-title>AggreFlow: Achieving Power Efficiency, Load Balancing, and Quality of Service in Data Center Networks</article-title><source>IEEE/ACM Trans. Netw.</source><year>2020</year><volume>29</volume><fpage>17</fpage><lpage>33</lpage><pub-id pub-id-type="doi">10.1109/TNET.2020.3026015</pub-id></element-citation></ref><ref id="B4-sensors-24-08046"><label>4.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Liu</surname><given-names>H.</given-names></name>
<name><surname>Chen</surname><given-names>J.</given-names></name>
<name><surname>Chen</surname><given-names>J.</given-names></name>
<name><surname>Cheng</surname><given-names>X.</given-names></name>
<name><surname>Guo</surname><given-names>K.</given-names></name>
<name><surname>Qin</surname><given-names>Y.</given-names></name>
</person-group><article-title>A Deep Q-Learning Based VNF Migration Strategy for Elastic Control in SDN/NFV Network</article-title><source>Proceedings of the 2021 International Conference on Wireless Communications and Smart Grid (ICWCSG)</source><conf-loc>Hangzhou, China</conf-loc><conf-date>26&#x02013;28 November 2021</conf-date><fpage>217</fpage><lpage>223</lpage></element-citation></ref><ref id="B5-sensors-24-08046"><label>5.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Tanuboddi</surname><given-names>B.R.</given-names></name>
<name><surname>Gad</surname><given-names>G.</given-names></name>
<name><surname>Fadlullah</surname><given-names>Z.M.</given-names></name>
<name><surname>Fouda</surname><given-names>M.M.</given-names></name>
</person-group><article-title>Optimizing VNF Migration in B5G Core Networks: A Machine Learning Approach</article-title><source>Proceedings of the 2024 International Conference on Smart Applications, Communications and Networking (SmartNets)</source><conf-loc>Harrisonburg, VA, USA</conf-loc><conf-date>28&#x02013;30 May 2024</conf-date><fpage>1</fpage><lpage>5</lpage></element-citation></ref><ref id="B6-sensors-24-08046"><label>6.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Afrasiabi</surname><given-names>S.N.</given-names></name>
<name><surname>Ebrahimzadeh</surname><given-names>A.</given-names></name>
<name><surname>Promwongsa</surname><given-names>N.</given-names></name>
<name><surname>Mouradian</surname><given-names>C.</given-names></name>
<name><surname>Li</surname><given-names>W.</given-names></name>
<name><surname>Recse</surname><given-names>&#x000c1;.</given-names></name>
<name><surname>Szab&#x000f3;</surname><given-names>R.</given-names></name>
<name><surname>Glitho</surname><given-names>R.H.</given-names></name>
</person-group><article-title>Cost-Efficient Cluster Migration of VNFs for Service Function Chain Embedding</article-title><source>IEEE Trans. Netw. Serv. Manag.</source><year>2024</year><volume>21</volume><fpage>979</fpage><lpage>993</lpage><pub-id pub-id-type="doi">10.1109/TNSM.2023.3287757</pub-id></element-citation></ref><ref id="B7-sensors-24-08046"><label>7.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Kim</surname><given-names>H.G.</given-names></name>
<name><surname>Lee</surname><given-names>D.Y.</given-names></name>
<name><surname>Jeong</surname><given-names>S.Y.</given-names></name>
<name><surname>Choi</surname><given-names>H.</given-names></name>
<name><surname>Yoo</surname><given-names>J.H.</given-names></name>
<name><surname>Hong</surname><given-names>J.W.</given-names></name>
</person-group><article-title>Machine Learning-Based Method for Prediction of Virtual Network Function Resource Demands</article-title><source>Proceedings of the 2019 IEEE Conference on Network Softwarization (NetSoft)</source><conf-loc>Paris, France</conf-loc><conf-date>24&#x02013;28 June 2019</conf-date><fpage>405</fpage><lpage>413</lpage></element-citation></ref><ref id="B8-sensors-24-08046"><label>8.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Bellili</surname><given-names>A.</given-names></name>
<name><surname>Kara</surname><given-names>N.</given-names></name>
</person-group><article-title>A Graphical Deep Learning Technique-Based VNF Dependencies for Multi Resource Requirements Prediction in Virtualized Environments</article-title><source>Computing</source><year>2024</year><volume>106</volume><fpage>449</fpage><lpage>473</lpage><pub-id pub-id-type="doi">10.1007/s00607-023-01225-2</pub-id></element-citation></ref><ref id="B9-sensors-24-08046"><label>9.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Zhu</surname><given-names>R.</given-names></name>
<name><surname>Li</surname><given-names>G.</given-names></name>
<name><surname>Zhang</surname><given-names>Y.</given-names></name>
<name><surname>Fang</surname><given-names>Z.</given-names></name>
<name><surname>Wang</surname><given-names>J.</given-names></name>
</person-group><article-title>Load-Balanced Virtual Network Embedding Based on Deep Reinforcement Learning for 6G Regional Satellite Networks</article-title><source>IEEE Trans. Veh. Technol.</source><year>2023</year><volume>72</volume><fpage>14631</fpage><lpage>14644</lpage><pub-id pub-id-type="doi">10.1109/TVT.2023.3279625</pub-id></element-citation></ref><ref id="B10-sensors-24-08046"><label>10.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Chiang</surname><given-names>M.L.</given-names></name>
<name><surname>Hsieh</surname><given-names>H.C.</given-names></name>
<name><surname>Cheng</surname><given-names>Y.H.</given-names></name>
<name><surname>Lin</surname><given-names>W.L.</given-names></name>
<name><surname>Zeng</surname><given-names>B.H.</given-names></name>
</person-group><article-title>Improvement of Tasks Scheduling Algorithm Based on Load Balancing Candidate Method under Cloud Computing Environment</article-title><source>Expert Syst. Appl.</source><year>2023</year><volume>212</volume><fpage>118714</fpage><pub-id pub-id-type="doi">10.1016/j.eswa.2022.118714</pub-id></element-citation></ref><ref id="B11-sensors-24-08046"><label>11.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Wen</surname><given-names>T.</given-names></name>
<name><surname>Yu</surname><given-names>H.</given-names></name>
<name><surname>Sun</surname><given-names>G.</given-names></name>
<name><surname>Liu</surname><given-names>L.</given-names></name>
</person-group><article-title>Network function consolidation in service function chaining orchestration</article-title><source>Proceedings of the IEEE International Conference on Communications (ICC)</source><conf-loc>Kuala Lumpur, Malaysia</conf-loc><conf-date>22&#x02013;27 May 2016</conf-date><fpage>1</fpage><lpage>6</lpage></element-citation></ref><ref id="B12-sensors-24-08046"><label>12.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Li</surname><given-names>B.</given-names></name>
<name><surname>Cheng</surname><given-names>B.</given-names></name>
<name><surname>Liu</surname><given-names>X.</given-names></name>
<name><surname>Wang</surname><given-names>M.</given-names></name>
<name><surname>Yue</surname><given-names>Y.</given-names></name>
<name><surname>Chen</surname><given-names>J.</given-names></name>
</person-group><article-title>Joint Resource Optimization and Delay-Aware Virtual Network Function Migration in Data Center Networks</article-title><source>IEEE Trans. Netw. Serv. Manag.</source><year>2021</year><volume>18</volume><fpage>2960</fpage><lpage>2974</lpage><pub-id pub-id-type="doi">10.1109/TNSM.2021.3067883</pub-id></element-citation></ref><ref id="B13-sensors-24-08046"><label>13.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Liu</surname><given-names>Y.</given-names></name>
<name><surname>Lu</surname><given-names>Y.</given-names></name>
<name><surname>Li</surname><given-names>X.</given-names></name>
<name><surname>Yao</surname><given-names>Z.</given-names></name>
<name><surname>Zhao</surname><given-names>D.</given-names></name>
</person-group><article-title>On Dynamic Service Function Chain Reconfiguration in IoT Networks</article-title><source>IEEE Internet Things J.</source><year>2020</year><volume>7</volume><fpage>10969</fpage><lpage>10984</lpage><pub-id pub-id-type="doi">10.1109/JIOT.2020.2991753</pub-id></element-citation></ref><ref id="B14-sensors-24-08046"><label>14.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Wan</surname><given-names>A.</given-names></name>
<name><surname>Chang</surname><given-names>Q.</given-names></name>
<name><surname>Khalil</surname><given-names>A.B.</given-names></name>
<name><surname>He</surname><given-names>J.</given-names></name>
</person-group><article-title>Short-Term Power Load Forecasting for Combined Heat and Power Using CNN-LSTM Enhanced by Attention Mechanism</article-title><source>Energy</source><year>2023</year><volume>282</volume><fpage>128274</fpage><pub-id pub-id-type="doi">10.1016/j.energy.2023.128274</pub-id></element-citation></ref><ref id="B15-sensors-24-08046"><label>15.</label><element-citation publication-type="confproc"><person-group person-group-type="author">
<name><surname>Wang</surname><given-names>Z.</given-names></name>
<name><surname>Yan</surname><given-names>H.</given-names></name>
<name><surname>Wei</surname><given-names>C.</given-names></name>
<name><surname>Wang</surname><given-names>J.</given-names></name>
<name><surname>Bo</surname><given-names>S.</given-names></name>
<name><surname>Xiao</surname><given-names>M.</given-names></name>
</person-group><article-title>Research on Autonomous Driving Decision-Making Strategies Based Deep Reinforcement Learning</article-title><source>Proceedings of the 4th International Conference on Internet of Things and Machine Learning</source><conf-loc>Nanchang, China</conf-loc><conf-date>9&#x02013;11 August 2024</conf-date></element-citation></ref><ref id="B16-sensors-24-08046"><label>16.</label><element-citation publication-type="webpage"><article-title>SFCSim Simulation Platform</article-title><comment>Available online: <ext-link xlink:href="https://pypi.org/project/sfcsim/" ext-link-type="uri">https://pypi.org/project/sfcsim/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2021-01-05">(accessed on 5 January 2021)</date-in-citation></element-citation></ref><ref id="B17-sensors-24-08046"><label>17.</label><element-citation publication-type="journal"><person-group person-group-type="author">
<name><surname>Tang</surname><given-names>L.</given-names></name>
<name><surname>He</surname><given-names>L.</given-names></name>
<name><surname>Tan</surname><given-names>Q.</given-names></name>
<name><surname>Chen</surname><given-names>Q.</given-names></name>
</person-group><article-title>Virtual Network Function Migration Optimization Algorithm Based on Deep Deterministic Policy Gradient</article-title><source>J. Electron. Inf. Technol.</source><year>2021</year><volume>43</volume><fpage>404</fpage><lpage>411</lpage></element-citation></ref><ref id="B18-sensors-24-08046"><label>18.</label><element-citation publication-type="webpage"><article-title>VNFDataset: Virtual IP Multimedia IP System</article-title><comment>Available online: <ext-link xlink:href="https://www.kaggle.com/imenbenyahia/clearwatervnf-virtual-ip-multimedia-ip-system" ext-link-type="uri">https://www.kaggle.com/imenbenyahia/clearwatervnf-virtual-ip-multimedia-ip-system</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2021-01-30">(accessed on 30 January 2021)</date-in-citation></element-citation></ref><ref id="B19-sensors-24-08046"><label>19.</label><element-citation publication-type="book"><person-group person-group-type="author">
<name><surname>Xu</surname><given-names>L.</given-names></name>
</person-group><article-title>Research on Key Technologies of Service Function Chain Orchestration Optimization for Mobile Scenarios</article-title><source>Ph.D. Dissertation</source><publisher-name>Beijing University of Posts and Telecommunications</publisher-name><publisher-loc>Beijing, China</publisher-loc><year>2023</year></element-citation></ref></ref-list></back><floats-group><fig position="float" id="sensors-24-08046-f001"><label>Figure 1</label><caption><p>SFC mapping architecture.</p></caption><graphic xlink:href="sensors-24-08046-g001" position="float"/></fig><fig position="float" id="sensors-24-08046-f002"><label>Figure 2</label><caption><p>Overall framework of the RP-LBM.</p></caption><graphic xlink:href="sensors-24-08046-g002" position="float"/></fig><fig position="float" id="sensors-24-08046-f003"><label>Figure 3</label><caption><p>An LSTM model with attention.</p></caption><graphic xlink:href="sensors-24-08046-g003" position="float"/></fig><fig position="float" id="sensors-24-08046-f004"><label>Figure 4</label><caption><p>Cellular network topology.</p></caption><graphic xlink:href="sensors-24-08046-g004" position="float"/></fig><fig position="float" id="sensors-24-08046-f005"><label>Figure 5</label><caption><p>Comparison of model-predicted values and actual values.</p></caption><graphic xlink:href="sensors-24-08046-g005" position="float"/></fig><fig position="float" id="sensors-24-08046-f006"><label>Figure 6</label><caption><p>Comparison of network node resource variance when different algorithms are used under different resource conditions: (<bold>a</bold>) when resources are sufficient; (<bold>b</bold>) when resources are moderate; (<bold>c</bold>) when resources are scarce.</p></caption><graphic xlink:href="sensors-24-08046-g006a" position="float"/><graphic xlink:href="sensors-24-08046-g006b" position="float"/></fig><fig position="float" id="sensors-24-08046-f007"><label>Figure 7</label><caption><p>Comparison of average node resource variance under different resource conditions.</p></caption><graphic xlink:href="sensors-24-08046-g007" position="float"/></fig><fig position="float" id="sensors-24-08046-f008"><label>Figure 8</label><caption><p>Comparison of total number of SFC migrations between RP-LBM-PPO and RP-LBM-DQN under different resource conditions.</p></caption><graphic xlink:href="sensors-24-08046-g008" position="float"/></fig><fig position="float" id="sensors-24-08046-f009"><label>Figure 9</label><caption><p>Comparison of service interruption rate between RP-LBM-PPO and RP-LBM-DQN under different resource conditions.</p></caption><graphic xlink:href="sensors-24-08046-g009" position="float"/></fig><table-wrap position="float" id="sensors-24-08046-t001"><object-id pub-id-type="pii">sensors-24-08046-t001_Table 1</object-id><label>Table 1</label><caption><p>Comparison of average results on all VNFs in SFCs between LSTM, CNN-AT-LSTM, and LSTM&#x02013;encoder&#x02013;decoder.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Metric</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">LSTM</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">CNN-AT-LSTM</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">LSTM&#x02013;Encoder&#x02013;Decoder</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">MSE</td><td align="center" valign="middle" rowspan="1" colspan="1">21.973</td><td align="center" valign="middle" rowspan="1" colspan="1">15.579</td><td align="center" valign="middle" rowspan="1" colspan="1">19.653</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">RMSE</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">4.688</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">3.947</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">4.433</td></tr></tbody></table></table-wrap></floats-group></article>